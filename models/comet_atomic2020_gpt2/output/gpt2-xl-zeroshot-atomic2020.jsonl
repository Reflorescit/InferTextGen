{"generation": ["a number of purposes, including:\n\nA"], "references": ["hold the swing", "put around it", "lock up a vicious pet.", "make spooky noises in a haunted house", "attach the mooring", "lock the bike", "lock up the bike while they look around", "hold something on the wall", "to chain bicycle to the bicycle rack", "take with them", "decorate the house", "hold down a garage door without locks.", "take off", "keep pick-pockets from stealing their wallet", "pull the car", "hold their spectacles on their neck", "hold the key", "catch pants on", "connect the truck and the car", "lock it up", "hook it up too", "tug on a truck"], "input": {"head": "chain", "relation": "ObjectUse", "prompt": "a chain can be used for"}}
{"generation": ["this"], "references": ["glue onto a hat as a fashionable accessory", "burn down a house", "turn the temperature up", "replace a broken radio dial", "turn the heat off", "use as a timer", "pre-heat the over before cooking", "adjust temperature", "warm up a home", "to get something done real quick"], "input": {"head": "oven dial", "relation": "ObjectUse", "prompt": "an oven dial can be used for"}}
{"generation": ["a variety of purposes"], "references": ["make sure a cat doesn't run away", "hold an iguana", "teach proper technique to vets", "Pack things in it", "Hold the door open", "carry cat on plane"], "input": {"head": "cat carrier", "relation": "ObjectUse", "prompt": "a cat carrier can be used for"}}
{"generation": ["the same purpose"], "references": ["teach math", "fill out accountant information", "communicate with a kid", "type a phone number", "press the husband's number with", "use as prop in a movie", "make coded messages", "key in digits", "punch in the number"], "input": {"head": "number pad", "relation": "ObjectUse", "prompt": "a number pad can be used for"}}
{"generation": ["a variety of tasks, including:\n\nThe"], "references": ["pack up", "protect head and body", "protect against injury", "invent new mechanics", "protect from injury", "protect against parents wrath", "keep jewlery separate", "protect yourself", "prevent injury and bites", "protect body", "prevent stings", "use for protection", "protect hands", "protect body from injury", "prepare the baby to go home", "keep yourself dry", "as stencil", "protect from bullets", "wear to the gym", "Keep body safe", "protect self from injuries", "fix a clock", "protect self from injury", "load into car", "display team colors", "climb safely", "protect body in case of accident"], "input": {"head": "gear", "relation": "ObjectUse", "prompt": "a gear can be used for"}}
{"generation": ["this purpose"], "references": ["get letters in", "accept donations", "sending signal to mailman", "Receive the letter in", "get an invitation from", "receiving mail", "having as milestone", "send letters", "collecting junk mail", "curbside decoration", "get the invite", "pull the letter out", "receive invitations", "check for mail", "check their mail", "people to post letters into", "receive the invitations", "get the letter", "bills", "protecting mail", "send the mail", "check if there is any mail today", "receiving local newspaper", "open and get the envelopes", "sending letters", "receiving packages from usps", "have the letter delivered through", "put mail in", "Receive the item", "receive the item in the mail", "Receive letter in", "get mail in", "postman to put leters ino", "get the mail out of", "get mail", "go to", "receive camera after delivery", "receive support", "surrounding with growing flowers", "receiving email", "mail the answer", "have the mail put in", "inside to separate mail", "receiving snail mail", "receiving bills", "receive bills and letters in", "sending packages", "receive deliveries", "receive small packages in", "recieving mail", "get a letter from", "open for a letter", "receive letters", "mix sangria in", "birdhouse", "send bills", "put the flag up", "send letter via usps", "sending mail", "receive card", "get correspondence", "open and check to see if they got mail", "retrieve the invitation", "open to get the letter", "receive the package", "receive a card", "mail", "put the notice in", "mail a change of address", "receive invitation", "put their package in", "take out aggression", "receive the mail", "recieve the diploma in the mail", "mailman to deliver mail", "receiving posted mail", "Place award in", "communication", "receiving letters", "retrieve mail with", "storing mail", "plant flowers in", "letters", "Receive shipment with", "send draft to publisher", "receive the letter", "have correspondence delivered to", "posting letters"], "input": {"head": "mailbox", "relation": "ObjectUse", "prompt": "a mailbox can be used for"}}
{"generation": ["a variety of purposes, including the production of a"], "references": ["do things automatically", "do chores", "vacuum carpet", "work for"], "input": {"head": "automaton", "relation": "ObjectUse", "prompt": "an automaton can be used for"}}
{"generation": ["a variety of purposes"], "references": ["stack under a table leg to prevent it from wobbling", "compare car models", "put the magazines out to make it look like you know cars", "find out what cars are new", "Use the paper to start a bonfire", "research cars", "fan oneself when it's hot", "look at car ads", "shop around for what you want", "remove pages and use as wrapping paper", "cut out pictures to pull on a wall"], "input": {"head": "car magazines", "relation": "ObjectUse", "prompt": "a car magazines can be used for"}}
{"generation": ["the development of a new generation of drugs that target"], "references": ["have a clear path", "lie down and rest on", "go for a hike", "skip around", "ride the bike on", "make your yard look nice", "run a sprint", "find the way", "walk through the woods", "have a picnic on", "pick flowers"], "input": {"head": "pathway", "relation": "ObjectUse", "prompt": "a pathway can be used for"}}
{"generation": ["this purpose"], "references": ["tell someone they are being sued", "find a potential witness for a trial", "stalk someone", "track a person", "serve divorce papers", "surprise someone", "rob someone", "serve court papers", "find lost people", "exchange paperwork"], "input": {"head": "process server", "relation": "ObjectUse", "prompt": "a process server can be used for"}}
{"generation": ["this purpose"], "references": ["centralizing controls", "maintaining control", "control nuclear plant", "managing network", "centralizing efforts", "overseeing production", "mainframe computers", "managing airspace around airport", "make tv show", "checking up on people", "bringing together resources", "monitoring events", "center of communication", "measuring output", "operate factory", "maintaining quality", "control complex machinery"], "input": {"head": "control room", "relation": "ObjectUse", "prompt": "a control room can be used for"}}
{"generation": ["this recipe"], "references": ["hold, before they drop it"], "input": {"head": "bowl of ice cream", "relation": "ObjectUse", "prompt": "a bowl of ice cream can be used for"}}
{"generation": ["this purpose"], "references": ["scare off birds", "humming", "play tune", "playing music", "annoy people", "play in a band", "pass time", "driving people crazy with noise", "produce musical sound", "joining band", "playing blues", "collect for a musical themed party", "make music", "practice making music on", "celebrate", "solace on lonesome trail", "humor", "play music", "creating music", "picking up girls", "entertainment", "relaxation", "entertain friends at the campfire", "annoy somoene", "play music or make noise", "blow into", "playing tune", "play in stage", "making music", "perfecting skill", "stir a pot of soup", "throw at someone"], "input": {"head": "harmonica", "relation": "ObjectUse", "prompt": "a harmonica can be used for"}}
{"generation": ["a variety of purposes, including:\n\nA"], "references": ["displaying items for sale", "hold display", "showing cars", "displaying new model cars", "sell cars", "displaying award winning animals", "displaying furniture", "displaying designer creations", "show what is for sale", "displaying samples to order from", "display products for sale", "displaying new cars at dealership", "displaying items", "displaying things", "displaying new cars", "display nice cars", "showing cabinetry", "salespeople to work within", "new cars", "displaying commodities", "displaying specialty items", "display clothing", "displaying textiles", "show off granite", "show off goods", "display Christmas items in December", "showing appliances", "advertise cars in", "sell airplane seats to airlines", "have an art gallery", "promote products", "displaying cars", "selling merchandise", "allow customers to pick what they want", "present product", "show off what they have created", "displaying accesories", "displaying object", "displaying fabric"], "input": {"head": "showroom", "relation": "ObjectUse", "prompt": "a showroom can be used for"}}
{"generation": ["this purpose"], "references": ["keep track of information in a checkbook.", "break open for the ink", "sign legal documents", "to sign the agreement", "write out a will", "sign a check", "Write out lists", "take notes with", "communicate ideas", "sign a contract", "play with the ink", "use to estimate measurement if you don't have a ruler", "fill out an application", "Give as gift", "poke a hole in a paper to put in a binder", "write out a grocery list", "write information", "stab someone with"], "input": {"head": "ball point pen", "relation": "ObjectUse", "prompt": "a ball point pen can be used for"}}
{"generation": ["the same purpose"], "references": ["buy for stamp collection", "buying stamps", "insure packages", "count postals", "estimate postage", "buy stamps", "buy postage", "send packages"], "input": {"head": "postal counter", "relation": "ObjectUse", "prompt": "a postal counter can be used for"}}
{"generation": ["a long time"], "references": ["sell", "throw out the window", "smoke while gaming", "gather the tobacco and use as chewing tobacco", "smoke at a party", "kill you slowly", "pass around for smoking", "fill up a small hole", "to get that nicotine fix in"], "input": {"head": "bunch of cigarettes", "relation": "ObjectUse", "prompt": "a bunch of cigarettes can be used for"}}
{"generation": ["the purchase of a ticket"], "references": ["get a complimentary gift", "feel like part of the club", "validate contest entry", "fulfill requirements", "to participate in the event", "collect money", "get into an event", "keep out the riff-raff", "pay to have fun", "start a fund raiser", "pay to get into a museum", "pay for a ticket"], "input": {"head": "entry fee", "relation": "ObjectUse", "prompt": "an entry fee can be used for"}}
{"generation": ["a variety of purposes"], "references": ["store rubbish", "wash before going to bed", "gross out your roommate", "attract bugs", "Feed the dogs", "throw away because they're too lazy to clean it", "through in trash", "Make a fly trap", "plant flowers in", "hide from parents"], "input": {"head": "dirty bowls", "relation": "ObjectUse", "prompt": "a dirty bowls can be used for"}}
{"generation": ["a variety of purposes, including:\n\n\u2022"], "references": ["relax in chair", "watch a documentary", "display picture", "project the show", "watch cartoons", "see lottery numbers", "use for viewing", "run the console", "watch while eating", "show the game", "watch the radar", "check winning numbers", "watch the lottery on tv", "watch wrestling", "play it from", "watch shows on", "display sports", "watch a film", "watch media streaming", "watch movies", "display the show", "watch show", "look at", "have played the system", "view the picture", "find nothing to watch on", "play video games", "watch programs", "watch results on", "watch from", "watch sexy movies", "play the movie on", "broadcast the show", "Use as a decoration", "watch video on", "see the game on", "Engage in screentime", "see the game", "light up the room", "turn on", "watch because they can't do anything else with this hangover", "tune into the daily program", "show the action", "watch the nightly news", "pair with remote", "watch in the background", "watch sports", "see shows on", "sell to the person", "watch the movie on", "consume media", "project experience", "view shows", "get tornado warning", "view the films", "watch the films", "put the show on", "watch dr phil", "see the program", "view it on", "watch the news on", "stream online", "watch a show", "display the movie", "see the channel", "project app", "see the films on", "show film on", "use as a plant stand", "watch the game on", "view the program", "see the action", "use as a boat anchor", "watch baseball", "watch a movie together", "project entertainment", "project film", "watch in the cabin", "watch on", "watch shows", "watch media coverage of the trial", "watch a movie", "turn off", "watch local news on", "watch the movies with", "display film", "project movie", "project the games onto", "have a means of watching football", "consume the content", "view a show on", "display the movies", "view the game", "watch shows,etc", "watch the news", "play the movie", "watch the show", "watch movie", "have something to break", "play the film on", "entertain themselves during the day", "watch the numbers", "show what they could be watching", "listen to speech", "watch video", "look at channels", "watch movie on", "switch on with the controller", "output the game", "see the gameplay on"], "input": {"head": "television", "relation": "ObjectUse", "prompt": "a television can be used for"}}
{"generation": ["the production of a wide variety of products, including"], "references": ["build a hotel", "recycle for cash", "do the tests with", "hang clothes on to dry", "make drugs", "help", "hang clothing", "make a lot of noise", "failing dangerously", "lose a finger", "gauge all the numbers", "work", "print a newspaper", "perform", "function", "put food on to eat", "cut the grass"], "input": {"head": "machinery", "relation": "ObjectUse", "prompt": "a machinery can be used for"}}
{"generation": ["this purpose"], "references": ["click on objects online", "double click", "control moves", "move around with", "click loading buttons", "navigate the internet", "navigate on", "select the video", "click on the next link", "click the item", "interact with data", "swing it around as a weapon", "navigate the screen", "interface with computer", "move to the next line", "scroll through results", "click the play button", "to use the computer", "give a massage", "remove wrinkles from clothing", "control computer", "move clicker and click buttons", "to navigate page", "direct the information", "navigate laptop", "click on information", "click on the webpage", "make scrolling easier", "move around screen", "click on the link", "click on searches", "click refresh", "click on preferences", "click on items", "submit message on PersonX's account", "click on icons", "navigate computer", "place on something to keep it in place", "click things", "move cursor and click buttons", "scroll through site", "navigate through websites", "use with computer", "click on results", "click on sites", "choose a gift", "scroll around with", "click on video", "click around", "click on the search bar and web pages", "to click on link", "move the cursor", "move", "click on videos", "click on the information online", "control where the cursor goes", "use as a hand workout", "click on submit button", "move cursor", "scroll on page", "computer input", "navigate the webpage", "click on the search results", "click through websites", "clear the transaction", "click buttons", "use as a paperweight", "click search results", "select the address", "move around the screen", "select picture", "make selections", "navigate the computer", "move around", "click buy or sell buttons", "click on selections", "surfing", "click with", "navigate sites", "navigate around", "point and click the button", "click on things", "click on links", "click on search results", "click on the button", "operate", "click on buttons", "click on the searches", "point to the information", "work on the computer"], "input": {"head": "mouse", "relation": "ObjectUse", "prompt": "a mouse can be used for"}}
{"generation": ["this purpose"], "references": ["sit in and talk", "confess one's sins", "hook up with boys at church", "eat in peace", "take a nap", "pray in quietly", "record new songs", "speak with the priest", "hide in for some privacy", "confess your sins", "sleep in", "talk to friend"], "input": {"head": "confessional booth", "relation": "ObjectUse", "prompt": "a confessional booth can be used for"}}
{"generation": ["a variety of purposes, including:\n\n\u2022"], "references": ["use to alert people of wrecks", "drive safely", "warn someone of danger", "see at night", "have sex in the grass at night.", "light up a landing pad", "light up a dark place at night for parties", "find something in the dark.", "navigate through a cave"], "input": {"head": "hedlights", "relation": "ObjectUse", "prompt": "a hedlights can be used for"}}
{"generation": ["a variety of purposes, including:\n\nG"], "references": ["hit golf ball", "hit a ball", "provide protection", "check out the quality", "use as a mirror", "hit the target", "use as a fake sword in a fight", "use as defend tool", "lean against wall", "swing", "use as cavaletti", "hit someone over the head with", "meet others who also like golf", "hit the ball with", "hit a person", "play golf", "hit golf balls"], "input": {"head": "golf club", "relation": "ObjectUse", "prompt": "a golf club can be used for"}}
{"generation": ["a variety of purposes"], "references": ["put toys away", "keep toys in", "store toys that aren't being used", "hold toys when not in use", "use as a photo prop", "put garden materials in", "place jewelry in", "keep the floor picked up", "hold tools on the porch", "eat out of", "keep stuffed animals in", "use as a pet bed"], "input": {"head": "toy box", "relation": "ObjectUse", "prompt": "a toy box can be used for"}}
{"generation": ["a variety of purposes, including nuclear weapons"], "references": ["make nuclear weapons"], "input": {"head": "plutonium", "relation": "ObjectUse", "prompt": "a plutonium can be used for"}}
{"generation": ["a variety of purposes"], "references": ["get on the bus", "wonder where the bus is", "make a paper football", "start a small fire", "patch a hole in a backpack", "go to a friends house", "go pay bills", "pick food from between teeth", "show proof of payment", "go to work", "lose somewhere inconvenient"], "input": {"head": "buss pass", "relation": "ObjectUse", "prompt": "a buss pass can be used for"}}
{"generation": ["a variety of purposes"], "references": ["open drawer", "pick up the basket", "hold onto", "turn open door", "hold on", "affect door", "grab and open door", "open the door", "open the vehicle's door", "carry purse", "pull a door open", "make easier to carry", "grab and pull", "open up the door", "grab the wooden entry", "carry object", "to grab on to", "open the door with", "holding onto", "move a wheelbarrow", "carrying things", "grasping things", "hold tool", "pull a drawer", "turn and pull", "turn lock", "gripping", "to turn the faucet on", "try to open", "carry or push basket", "practice using tools", "hold the cup while drinking", "turn on water", "pick up", "pulling", "open the door the appliance", "shut the door", "Turn to open", "hit someone with", "yank on", "pull it", "pick up groceries", "open the fridge", "open fridge door", "start the water", "carry the container", "open door of aircraft", "pull on the fence", "hold the kite", "see better", "turn and regulate the mixtures", "carry", "turn with their hand", "carry around container", "opening door", "pull on", "turn to off", "manipulate", "pull door open", "hold weapon with hands", "hold the bag", "attach to a skateboard", "Open fridge door", "switch direction", "Open car door", "control the door", "carry container", "open door", "hang on to", "turn on a light", "turn the door knob with", "pull door open to see interior shelves", "bring out water", "lift objects items or things", "open door and eexit", "Close cabinet with", "put in motion", "push the cart", "lower bucket", "something to pull open", "help hold telescope", "lifting", "hang onto", "hold on to", "grip tool"], "input": {"head": "handle", "relation": "ObjectUse", "prompt": "a handle can be used for"}}
{"generation": ["a variety of purposes, including:\n\n\u2022"], "references": ["driving on", "driving somewhere", "driving", "cars", "hitchhiking", "travel from city to city", "drive on", "travel in car", "driving quickly", "travelling", "travelling long distance", "driving car on", "driving fast", "toll booths"], "input": {"head": "state highway", "relation": "ObjectUse", "prompt": "a state highway can be used for"}}
{"generation": ["a variety of purposes, including a home, a"], "references": ["upscale living", "government", "people to live in", "sex in city", "living in", "partying", "decorating", "living close to neighbors", "live in", "throw party"], "input": {"head": "townhouse", "relation": "ObjectUse", "prompt": "a townhouse can be used for"}}
{"generation": ["a variety of purposes"], "references": ["children", "making snowman", "having little snow battle", "building snowmen", "cold climates", "clean the windshield on the car", "removal", "keep drinks cold", "making snow angels", "arrives with storm", "cover ground", "play in", "shoveling", "making snowmen", "form the product", "use as body", "build an igloo", "weather", "building snowmans", "christmas", "use as material", "create snow angels", "build snowman", "shovelling", "build a snow fort", "collect on the ground", "falls around christmas", "build really neat fort", "melt into water", "beautiful vistas", "shovel up", "create snow cones", "make the snowballs"], "input": {"head": "snow", "relation": "ObjectUse", "prompt": "a snow can be used for"}}
{"generation": ["a variety of purposes"], "references": ["stomp into juice", "use as snacks", "alleviate constipation", "put in smoothies", "revitalize energy", "maintain diet", "paint a still life", "munch on", "lose weight", "throw at people"], "input": {"head": "health fruits", "relation": "ObjectUse", "prompt": "a health fruits can be used for"}}
{"generation": ["this purpose"], "references": ["practice in front of", "see how the item looks", "see themselves in", "groom themselves", "look in while giving self pep talks", "see the outfit", "see reflection", "show PersonY their work", "spectator", "check blind spots", "see what is behind the car", "look at herself in the dress", "see what the boots look like", "show PersonY end results", "show personY", "observe their form", "watch how it's going", "rehearse their speech in front of", "see behind", "try on the jacket and make sure it looks good", "see how the clothing fits", "examine fit", "watch while practicing", "start a fire", "check for vehicles", "covertly check their teeth for food particles before smiling and flirting with PersonX", "get ready", "watch the hairdresser work", "break and use as a weapon", "look at self", "checking make up", "see their teeth", "examine dress", "look at the clothes", "check themselves out", "see hair", "seeing reflection", "see themselves while they brush", "take a look", "practice yelling", "see how shirt looks on", "check the shirt fit", "apply product perfectly", "to see behind yourself", "evaluate their reflection", "look at sweater", "check for traffic", "check blindspot", "check if they look good", "look into and say motivational phrases", "reapply makeup", "tie their bowtie", "see the look", "apply make up", "inspect the haircut", "look at hair", "check out how their hair looks", "see what's happening", "check themself out", "check the progress", "admire self in", "see how frames look", "see how it looks", "avoid moving head and body", "look at how they look on feet", "check face and body", "looking at yourself", "watch the movements in", "look at people in eyes", "practice in front of while standing next to each other", "accurately perform placement", "practice what he is going to say to her when he calls", "reflecting light", "reflect light.", "see how they look this time", "see PersonX's self", "examine fit of clothes", "see themselves", "Watch themselves", "check their appearance", "check if it looks good", "look into while applying cosmetics", "try on the helmet", "see how different frames look", "see how they look", "see how look", "see PersonX's image", "practice with", "see where PersonX is cutting", "look at yourself", "make sure it looks good", "check self out in", "focus sunlight", "look at their new style", "see what the clothes look like", "check out PersonX's butt", "reflect images", "reflect", "check and see if anyone is watching", "see how they're doing", "seeing reflected image", "to see themselves", "see where the other competitors are", "look at self while talking", "try on", "see blind spots", "check how she looks", "see how the fit of new clothing is", "show their clients how they look", "check reflection", "see what they look like when wearing them", "check fit of item before purchase", "see what is happening", "check the finished look", "see where to cut", "watch reflection", "help with the picture", "see other vehicles behind them", "watch himself", "see what they are doing", "see the results", "look at the finished product", "look at themselves", "look at their body", "fix makeup", "smile at", "check appearance", "see the hair from all angles", "check blindspots", "check how they look", "look at pants", "look into", "make sure they look ok", "show them the finished work", "ensure the lotion's rubbed in", "see back of head", "look at dress", "watch how they're doing", "see how it turned out", "try on new outfits", "check how it looks", "write a note on", "look into and feel ashamed", "looking behind", "check back and sides for traffic", "try on outfits in front of", "reflection", "look into to see how his hair looks", "see their reflection", "see how outfit looks", "admire or check themselves", "show PersonY", "see around the corner.", "see what they're doing", "look at the earrings", "look groomed", "look at fit of coat", "practice expressions", "look at face", "see yourself", "look at reflection", "see the results of applying makeup", "see what he looks like", "see how they did", "see what their performance look like", "watch what he looks like", "show the person", "light reflection", "check back and sides for safety", "look in", "send semaphore"], "input": {"head": "mirror", "relation": "ObjectUse", "prompt": "a mirror can be used for"}}
{"generation": ["surveillance"], "references": ["make a movie", "review his practice sessions", "make a speech", "have an excuse to ask people stupid questions when you point it at them.", "tape the performance", "video the rainbows", "record video", "spy on someone", "so baby walking", "place on your desk face up to record the history of the ceiling", "use as evidence"], "input": {"head": "video camera", "relation": "ObjectUse", "prompt": "a video camera can be used for"}}
{"generation": ["a man's pleasure, but not vice versa"], "references": ["make things smell nice", "mow the lawn", "make a wife", "cook dinner", "sweep the driveway", "nurture children", "run a company", "take on a date", "clean up a house", "stands close to him in the busy coffee shop"], "input": {"head": "woman", "relation": "ObjectUse", "prompt": "a woman can be used for"}}
{"generation": ["a variety of purposes"], "references": ["tie up the shoulder straps and use it as a bag for carrying produce", "hold up pants as a belt", "wear to a funeral", "wear as a mask", "hang on the windows as a blackout curtain", "Wear with boots", "advertise anti-dandruff shampoo", "have clothing on", "make a Halloween costume", "wear to look somber", "wear to the funeral", "dress appropriately", "Wear to funeral"], "input": {"head": "black dress", "relation": "ObjectUse", "prompt": "a black dress can be used for"}}
{"generation": ["this recipe"], "references": ["add to salad", "make decorations", "play marbles", "juggle", "add to pasta", "poison an evil monkey", "spread on toast", "set out for thanksgiving", "extract oil for cooking", "put in last"], "input": {"head": "olive", "relation": "ObjectUse", "prompt": "an olive can be used for"}}
{"generation": ["a variety of purposes, including:\n\n\u2022"], "references": ["check online banking accounts", "log into", "put harmful viruses on someone's phone", "edit photos on a phone", "play games on their phone", "Watch videos", "track usage", "hide adware", "Play games", "play games", "track people"], "input": {"head": "apps", "relation": "ObjectUse", "prompt": "an apps can be used for"}}
{"generation": ["the same purpose"], "references": ["cause boredom"], "input": {"head": "comfort", "relation": "ObjectUse", "prompt": "a comfort can be used for"}}
{"generation": ["the treatment of a variety of diseases"], "references": ["work on car", "fight off an attacker", "carve a pumpkin", "clean under one's finger nails.", "operate on a toy doll", "help change a tire.", "make surgical incisions", "help diagnose patients", "treat sick people", "operate on patients", "help patients"], "input": {"head": "medical tools", "relation": "ObjectUse", "prompt": "a medical tools can be used for"}}
{"generation": ["a variety of conditions, including:\n\nPain"], "references": ["calm down", "fix headache", "keep from going insane", "crush up and get high", "sell to someone", "cure pain", "get a good sleep", "clear up hangover", "get rid of pain", "help with the pain", "zone out for the day", "reduce aches"], "input": {"head": "pain pill", "relation": "ObjectUse", "prompt": "a pain pill can be used for"}}
{"generation": ["a variety of purposes, including:\n\nTo"], "references": ["put on head", "calm a toothache", "put on a swollen knee", "keep the beers cold.", "crush up for a drink", "cool down a beer", "put on a sore muscle", "hold Ziploc of frozen water", "keep lunch cold", "keep cool on a hot day", "break up to put in drink."], "input": {"head": "ice-pack", "relation": "ObjectUse", "prompt": "an ice-pack can be used for"}}
{"generation": ["a variety of purposes, including:\n\nA"], "references": ["gathering long hair into bun", "storing clothes"], "input": {"head": "chiffonier", "relation": "ObjectUse", "prompt": "a chiffonier can be used for"}}
{"generation": ["this purpose"], "references": ["make happy"], "input": {"head": "letter from old friend", "relation": "ObjectUse", "prompt": "a letter from old friend can be used for"}}
{"generation": ["this purpose"], "references": ["attach frame to wall", "attach the frame to", "clean under fingernails", "hang it from", "put a hole in a tin can", "drive into a wall", "pop tires", "hold the masterpiece", "hold things together", "pain person", "hang the art on wall", "hold the neccesary products", "attach image to wall", "use a a knife", "hold the picture frame", "put a picture up", "fastening two objects together", "affix the piece to", "poke the bicycle", "put in wal to get the hook to hook on it", "to  hang artwork", "scratch the paint off of a can", "hit with the hammer", "pierce ears", "hang from", "hang the frame", "cause puncture wound", "hang the picture on", "hang the frame on", "hang board", "hang the drawing on", "nail things to other things", "connect wood together", "hang the painting on", "scratching", "hang on", "hang the art on the wall", "hammer into the wall", "attach frame to surface", "hang picture on"], "input": {"head": "nail", "relation": "ObjectUse", "prompt": "a nail can be used for"}}
{"generation": ["a variety of purposes"], "references": ["save for a special purpose.", "keep money in", "store the currency", "hide their money from others", "put their money", "put extra cash", "put their paychecks into", "use for target practice", "store money", "break open for change", "hold coins", "add coins to", "break open to get to their savings", "hold money", "store a college fund", "hide secret stash money", "to put coinage in", "keep papers from flying away", "put coins in"], "input": {"head": "piggy bank", "relation": "ObjectUse", "prompt": "a piggy bank can be used for"}}
{"generation": ["the same purpose"], "references": ["find phone number", "signify acceptance of employement", "let persony  get together", "mail letter", "use as a job reference", "sign for house", "get in touch with someone on the phone", "converse with someone", "place in one's eye", "see better", "send bill", "put into the eye to improve vision", "help you move apartments"], "input": {"head": "contact", "relation": "ObjectUse", "prompt": "a contact can be used for"}}
{"generation": ["this recipe"], "references": ["grate zest into a vinaigrette", "add a fresh look to a room", "extract juice from", "squeeze for the juice", "add flavor to food", "stop pepper spray", "make lemonade", "freeze into ice cubes", "squeeze into a cup", "squeeze into someones eyes while attacking them", "extract juice", "ground up skin for dessert", "squeeze into the pitcher", "press for juice", "use as a projectile in a catapult"], "input": {"head": "lemons", "relation": "ObjectUse", "prompt": "a lemons can be used for"}}
{"generation": ["a variety of purposes, including cooking, cleaning,"], "references": ["cook the dish in", "wake someone up", "heat the food", "stack up in the cabinet", "cook with", "Make food with", "put ingredients in", "hold the plants", "plant seeds", "boil the water", "make other items", "store change", "make music", "cook food in", "boil water", "create meal", "prepare the food", "cook in", "cook the food", "hang on a rack", "to cook meal", "boil the vegetables", "carry water", "boil things in", "play drums with", "cook the food in", "combine ingredients in", "heat food up", "hold the food", "cook PersonY", "make diner"], "input": {"head": "pots", "relation": "ObjectUse", "prompt": "a pots can be used for"}}
{"generation": ["a variety of activities, including sitting, standing,"], "references": ["protect your posture", "humans comfort", "provide a comfortable seat", "work long hours", "give as a christmas present", "be healthier", "comfortable", "impress someone you like", "sit at desk", "sitting in", "comfort", "work at computer", "look like you're all modern and cool", "cure muscle soreness", "avoid back pain", "sitting comfortably", "sit comfortable", "sit comfortably"], "input": {"head": "ergonomic chair", "relation": "ObjectUse", "prompt": "an ergonomic chair can be used for"}}
{"generation": ["a variety of purposes"], "references": ["wear on hands", "make a scarf out of", "add another element to a Halloween costume", "keep from getting cold", "put gifts in", "keep warm in cooler weather", "look sexy", "rob a bank", "tie to other stockings as a rope", "pull on his feet", "wear on his feet", "wear for later time"], "input": {"head": "stockings", "relation": "ObjectUse", "prompt": "a stockings can be used for"}}
{"generation": ["the same purpose"], "references": ["see on either side of the car", "see cars behind you", "turn into a vanity mirror", "affix to a window to see new angles", "parallel park", "install next to your computer so you can see what's behind you", "glue in multiples as a collage", "see while hauling objects", "apply lipstick", "comb your hair", "adjust to their preferred setting", "view vehicles behind you"], "input": {"head": "side mirrors", "relation": "ObjectUse", "prompt": "a side mirrors can be used for"}}
{"generation": ["a variety of purposes, including:\n\nInv"], "references": ["provide details of gathering", "use to write a note", "invite people", "save the date", "tie to a bycycle to create an engine noise", "build a card tower with", "shred when the wedding is canceled", "send in the mail", "send for a wedding"], "input": {"head": "invitation cards", "relation": "ObjectUse", "prompt": "an invitation cards can be used for"}}
{"generation": ["cooking"], "references": ["cook stew in", "put ingredients into to make the spell work", "put Halloween candy in", "Keep craft items together", "prepare a large meal", "pot a plant in", "make potions in", "make spells in", "Store change", "make soup in", "boil stuff"], "input": {"head": "cauldron", "relation": "ObjectUse", "prompt": "a cauldron can be used for"}}
{"generation": ["this recipe"], "references": ["fan smoke out of the kitchen", "put the dough on", "put over a pan as a lid", "bake clay crafts", "make a rectangular pizza", "bake bread", "place dough on", "make a square pizza"], "input": {"head": "cookie sheet", "relation": "ObjectUse", "prompt": "a cookie sheet can be used for"}}
{"generation": ["the purpose of healing, and where the doctor can"], "references": ["work surgery"], "input": {"head": "place where doctor", "relation": "ObjectUse", "prompt": "a place where doctor can be used for"}}
{"generation": ["a variety of purposes, including space travel, space"], "references": ["dress for space", "breathe in space", "design a newer style", "provide oxygen and protection", "wear in the space craft", "wear for halloween", "breathe on the moon", "hide from the sun", "scare someone with", "wear in space", "protect PersonX from gravitational changes"], "input": {"head": "space suit", "relation": "ObjectUse", "prompt": "a space suit can be used for"}}
{"generation": ["this recipe"], "references": ["bribe the child to do your homeowork", "sweeten coffee", "pretend play tea", "put in tea", "sweeten tea", "eat as food.", "use as part of an art project", "put LSD on it.", "treat the animal", "place on head"], "input": {"head": "sugar cube", "relation": "ObjectUse", "prompt": "a sugar cube can be used for"}}
{"generation": ["the same purpose"], "references": ["put on head", "to quit smoking", "hold poster on a wall", "chewing", "chew instead of smoking", "plug a hole in a wall.", "hold up a poster.", "help with cravings", "to deal with anxiety", "chew for distraction", "chew and blow bubbles", "freshen breath before moving in", "chew on", "stick to walls", "keep busy when they crave a drink", "clean teeth", "chew", "chew on during cravngs"], "input": {"head": "gum", "relation": "ObjectUse", "prompt": "a gum can be used for"}}
{"generation": ["a variety of purposes"], "references": ["cooking pigs", "eat food", "eating barbecue meals out", "dining", "feed family", "meeting with people", "getting messy fingers", "eating out", "fullfilling hunger", "ribs", "eating ribs", "have dinner", "getting barbecue food", "good grilled food"], "input": {"head": "barbecue restaurant", "relation": "ObjectUse", "prompt": "a barbecue restaurant can be used for"}}
{"generation": ["good"], "references": ["cost money", "learning", "anger person", "result in catastrophy"], "input": {"head": "mistake", "relation": "ObjectUse", "prompt": "a mistake can be used for"}}
{"generation": ["the following:\n\nThe application form can be"], "references": ["help make fire", "put in for a new car", "get an answer", "get a job", "submit for entry", "apply for a credit card", "communicate information", "apply for job", "submit to clerk", "apply for a puppy", "fan"], "input": {"head": "application forms", "relation": "ObjectUse", "prompt": "an application forms can be used for"}}
{"generation": ["this recipe"], "references": ["get drunk with", "as a solvent", "get drunk off of", "add to spaghetti sauce", "drink from a glass", "drink with lunch", "cook with", "to start fire", "disinfect a wound"], "input": {"head": "red wine", "relation": "ObjectUse", "prompt": "a red wine can be used for"}}
{"generation": ["the same purpose"], "references": ["submit for admission"], "input": {"head": "transcript copies", "relation": "ObjectUse", "prompt": "a transcript copies can be used for"}}
{"generation": ["any color you want"], "references": ["accessorize halloween costume", "avoid recognition on the run", "keep the theme of the room", "do a craft project", "create a painting", "create tie dye shirt", "paint eggs", "make a picture", "cover up grey hair", "change her hair"], "input": {"head": "color kit", "relation": "ObjectUse", "prompt": "a color kit can be used for"}}
{"generation": ["this purpose"], "references": ["curse people who come across it", "use for grave etchings", "write on", "hold a cellar door down.", "show respect to dead person", "remember someone", "make a spooky landscape", "use as a flat surface for crafts.", "deface a dead person", "show year of birth", "put flowers on"], "input": {"head": "gravestone", "relation": "ObjectUse", "prompt": "a gravestone can be used for"}}
{"generation": ["a variety of purposes"], "references": ["lock up", "stand in while there is a earthquake", "design a picnic table", "nail against window during a hurricane", "walk throug", "gain access to space", "wear over their nose and mouth", "walk through", "ride like a surfboard", "decorate their house", "make a yard sale table"], "input": {"head": "doors", "relation": "ObjectUse", "prompt": "a doors can be used for"}}
{"generation": ["the same purpose"], "references": ["return the wrongly delivered goods", "get the package to the correct place", "rewrite something on", "use as a post it note", "Make sure a parcel reaches its destination", "post into an art collage", "tell Post Office where to send", "put on letter"], "input": {"head": "address label", "relation": "ObjectUse", "prompt": "an address label can be used for"}}
{"generation": ["a variety of purposes, including paying for a meal"], "references": ["roll joint", "tipping taxi driver", "use at a strip club", "paying for things", "money", "buy food", "spending", "roll a cigarette", "tipping bellboy", "buying", "paying debts", "buying stuff", "cash", "tipping waitress", "paying for goods", "tipping maid", "payment", "tip waiter", "stick into a stripper's clothing", "pay for candy", "start fire", "betting", "snort drugs", "loosing tooth", "tipping skycap", "buy coke", "light on fire", "pay", "paying with cash"], "input": {"head": "dollar bill", "relation": "ObjectUse", "prompt": "a dollar bill can be used for"}}
{"generation": ["a variety of recipes, including pesto, pest"], "references": ["use because the recipe calls for it", "make the spice rack contents complete", "decorate food", "sprinkle in the dirt to deter bugs", "make some tea", "place on pizza", "make the pizza better", "Decorate Italian Christmas balls", "season lasagna", "put in a bag to sell like weed", "Cause someone to sneeze", "cut some marijuana", "add flavor"], "input": {"head": "oregano", "relation": "ObjectUse", "prompt": "an oregano can be used for"}}
{"generation": ["heating the water"], "references": ["workplace school or church", "radiate energy", "cooking food", "cooking", "cook hamburger", "providing warmth", "make home comfortable", "warm object", "providing heat", "warmth", "keeping house warm", "keeping planet warm", "energy", "providing heat to environment", "melting ice", "cook", "greenhouse", "thawing", "relaxing muscles", "keep warm", "warming up", "home"], "input": {"head": "heat source", "relation": "ObjectUse", "prompt": "a heat source can be used for"}}
{"generation": ["the same purpose"], "references": ["protect shoes"], "input": {"head": "sockes", "relation": "ObjectUse", "prompt": "a sockes can be used for"}}
{"generation": ["a variety of purposes"], "references": ["resell on American Book Exchange", "teach a class", "learn the subject", "look up homework", "study before redoing the exam", "weight down a picnic blanket corner on a windy day", "highlight with a marker", "sell to students", "balance atop one's head to improve posture", "learn a new skill", "learn items in a class or course", "learn the material", "take to tutoring"], "input": {"head": "course book", "relation": "ObjectUse", "prompt": "a course book can be used for"}}
{"generation": ["a variety of purposes, including sedation, to"], "references": ["overdose", "kidnap someone with", "take down a charging animal", "sell on the black market", "take to fall asleep", "give to an animal", "abduct someone", "make someone sleepy", "quiet a prisoner", "shoot wild dog"], "input": {"head": "tranquilizer", "relation": "ObjectUse", "prompt": "a tranquilizer can be used for"}}
{"generation": ["a variety of purposes"], "references": ["push around the isles", "remove dvd from", "hold the clothes", "hold the groceries", "put necessities in", "put ingredients in", "keep it all in", "push out to truck", "drive on the course", "put supplies in", "carry groceries in", "follow horse", "carry it home", "put things in", "carry bucket", "place any sale items into", "put tent in", "carry the fabric to the register", "carry personY's luggage", "hold items to get", "put the items in", "push PersonY's groceries out to their car for them", "hold the food", "transport any items they want to buy", "put items from store in", "get to the hole", "drive around", "carry food to the car", "carry the bags out to the vehicle", "put the food inside", "put things into", "move boxes", "put the dresses in", "carry wood", "hold grocery items", "hold item", "put in the items", "move items", "use as a pet stroller", "put purchases in", "fill with groceries", "carry belongings", "carry television out of store", "put their items in", "hold the product", "carry the food in", "put the cake on", "have in case of finding something", "contain the items", "hold items", "store fabric in", "carry items", "bring out the groceries with", "carry sugar", "fix the arrangement", "carry them inside", "hold all the items until they're purchased", "carry the big items", "push a child around", "transport things", "put food while shopping", "hold the goods until checkout", "put purchase in", "put groceries in", "put their purchases in", "ride around course", "place food in at the store", "store their items in", "put the food in", "put the groceries in", "put stuff into", "fill with needed ingredients", "wheel items elsewhere", "collect the products", "put boxes on", "carry purchases", "store items", "hold the items", "carry their goods to checkout", "carry the item", "hold all the items", "drive on course", "move furniture", "place items", "put a baby to sleep in", "put items on", "place the groceries", "put the plants into", "easily transport things", "put away", "carry the food", "put dvd into", "push around", "put stuff in", "bring the items to the checkout", "follow the path", "carry desired things to checkout", "plant flowers in", "hold the bags", "carry food", "put items in", "Push around the store", "put the beer in", "load bags into", "carry purchases to the register"], "input": {"head": "cart", "relation": "ObjectUse", "prompt": "a cart can be used for"}}
{"generation": ["a variety of purposes"], "references": ["write down music", "write notes", "soak up a water spill", "memorize songs", "learn the music", "find a sheet", "have songs to practice", "to know what to play", "learn the chords", "practice drills", "start a fire"], "input": {"head": "music books", "relation": "ObjectUse", "prompt": "a music books can be used for"}}
{"generation": ["a variety of purposes"], "references": ["hit with", "release stress", "punch an object", "strike and punch", "take out frustration", "release adrenaline", "keep your cats warm", "add weight to anything that needs weight", "dress up as a person to scare the neighbors", "use as a fishing lure weight for sharks", "put in bed under the covers so you can sneak out and no one knows", "sleep with on a lonely night", "kick at with their foot", "use for punching", "practice moves on"], "input": {"head": "punching bag", "relation": "ObjectUse", "prompt": "a punching bag can be used for"}}
{"generation": ["the same purpose"], "references": ["dial the number", "type words", "trigger a bomb", "secure the safe", "dial number on", "text PersonY back", "dial the number into", "put the password in", "dial 911", "type the text with", "encrypt secret information", "entertain toddler", "call the doctor", "enter the number"], "input": {"head": "keypad", "relation": "ObjectUse", "prompt": "a keypad can be used for"}}
{"generation": ["the same purpose"], "references": ["store cds", "make a cd case pen holder", "keep CD's in", "hold a DVD", "hold doll shoes", "turn into a decoration", "protect the disc from scratches", "make into a fish tank", "carry their purchases home", "file paperwork"], "input": {"head": "cd holder", "relation": "ObjectUse", "prompt": "a cd holder can be used for"}}
{"generation": ["a learner's permit for a motor vehicle,"], "references": ["warn the other drivers of", "fold into a square and prop up a wobbly table", "bribe a teenager with", "fold into a paper airplane", "steal a car", "scare your parents with", "operate a vehicle", "take your siblings out for ice cream", "tattoo people as an apprentice", "have permission to practice driving"], "input": {"head": "learner's permit", "relation": "ObjectUse", "prompt": "a learner's permit can be used for"}}
{"generation": ["the following purposes:\n\nTo determine the number"], "references": ["suss out the opposition", "to roll call", "check them off as they enter", "tot up how much money will come in", "join the boot camp", "make sure the game can start", "take attendance", "tear up for confetti", "start the event", "start a fire"], "input": {"head": "list of participants", "relation": "ObjectUse", "prompt": "a list of participants can be used for"}}
{"generation": ["a variety of tasks, from keeping track of time"], "references": ["tell time", "verify the time", "see the time", "give the time of day", "use as an eyepatch", "check what time lunch is", "check the clock", "ensure they do not overstay", "see the hands", "Know the current hour", "Check the time", "keep an eye on time", "monitor length of the break taken by PersonY", "put on their wrist", "follow the time", "check the time", "keep track of time", "tell how much time they have to complete the report", "check that the store is still open", "check time", "make a determination", "hide in bag", "finish the test on time", "show the time", "play games on", "get there on time", "see the hour and minute", "see how late it is", "time how long it takes", "know what time it is", "verify what the current hour is", "cut out cookie dough", "know the exact time", "control their thermostat", "monitor the time", "make sure they're on time", "keep hearbeat", "be stylish", "see what time it is", "put the watchband on", "count the steps", "have PersonX take", "wear on their arm", "see how long it is taking", "keep eye on the time", "make sure they get there on time", "know the time", "see that it is time to go", "attach the band to", "keep the time", "see when it is"], "input": {"head": "watch", "relation": "ObjectUse", "prompt": "a watch can be used for"}}
{"generation": ["washing clothes"], "references": ["washing dishes and cutlery"], "input": {"head": "dsihwasher", "relation": "ObjectUse", "prompt": "a dsihwasher can be used for"}}
{"generation": ["this purpose"], "references": ["show pictures to", "find a number", "tell others what I had for dinner", "find old college friends", "add to a birthday invite list", "snoop on others", "keep in contact with family", "find a date", "delete", "post news", "collect friends on"], "input": {"head": "facebook friends list", "relation": "ObjectUse", "prompt": "a facebook friends list can be used for"}}
{"generation": ["a job interview"], "references": ["pressure your boss into giving you a raise", "brag about their skills", "obtain a job", "wipe up a spill with", "show off feats", "get a job with", "fan themselves with", "frame for posterity", "start a fire"], "input": {"head": "good resume", "relation": "ObjectUse", "prompt": "a good resume can be used for"}}
{"generation": ["this purpose"], "references": ["race", "nap in on break", "sit at a desk", "sit in front of the computer", "have a spinning contest", "sit in at meetings", "sit comfortably", "spin in circle", "be productive when working", "Conduct meetings on"], "input": {"head": "offive chair", "relation": "ObjectUse", "prompt": "an offive chair can be used for"}}
{"generation": ["crafting"], "references": ["test out in a store", "look nice in your home", "choose from", "stay looking professional", "sell at a discount", "buy to get a discount over the unused furniture", "take a nap on in the store while their spouse shops", "entice people into a store", "show a sample", "make the furniture look nice"], "input": {"head": "displayed furniture", "relation": "ObjectUse", "prompt": "a displayed furniture can be used for"}}
{"generation": ["a variety of purposes"], "references": ["fine foods", "icky foods", "specialty cookware items", "special kitchen utensils to purchase", "specialty food items", "purchasing exotic foods", "buy weird food", "buying imported foods", "patrons with plenty of money", "customers who knowlegeable about cooking", "hard to find foods"], "input": {"head": "gourmet shop", "relation": "ObjectUse", "prompt": "a gourmet shop can be used for"}}
{"generation": ["a variety of purposes, including to transport goods,"], "references": ["driving on", "collecting money from drivers", "driving", "pay as go", "paying for construction", "traveling on", "getting taxes", "travel quickly", "travel on"], "input": {"head": "toll road", "relation": "ObjectUse", "prompt": "a toll road can be used for"}}
{"generation": ["this"], "references": ["be able to store notes"], "input": {"head": "windows app", "relation": "ObjectUse", "prompt": "a windows app can be used for"}}
{"generation": ["this purpose"], "references": ["be sneaky", "decorate a haunted house for Halloween", "use as nail polish", "camoflage metal for a night battle", "outline a cartoon", "darken the walls on a room", "write protests", "cover windows", "create a night scene", "reflect heat", "paint over the windows to keep out sunlight"], "input": {"head": "black paint", "relation": "ObjectUse", "prompt": "a black paint can be used for"}}
{"generation": ["a variety of purposes"], "references": ["educate oneself", "Write good jokes in", "teach children with", "Make it look like youre writing notes in school.", "print worksheets", "pull content for today's lesson from", "read in spare time", "teach someone music", "practice instruments"], "input": {"head": "lessonbook", "relation": "ObjectUse", "prompt": "a lessonbook can be used for"}}
{"generation": ["this purpose"], "references": ["mailing packages", "buying stamps", "recieving letters", "mail letter", "mailing parcels", "receive letter", "receiving packages", "recieving packages", "process letters", "sending packages", "mailing letters", "receiving letters", "transmitting letters all over world", "post letter", "storing mail", "sending letters", "sorting of parcels for delivery", "mail letters"], "input": {"head": "post office", "relation": "ObjectUse", "prompt": "a post office can be used for"}}
{"generation": ["this purpose"], "references": ["smash it on a surface", "take temperatures", "class up a dinner party", "stir the mixture together", "stir the liquids to mix up", "prepare cocktails", "keep in the ground", "not contaminate the mixture", "murder an enemy", "dance at a club"], "input": {"head": "glass stick", "relation": "ObjectUse", "prompt": "a glass stick can be used for"}}
{"generation": ["a variety of activities"], "references": ["smash bugs", "hike a trail", "wear while working out at the gym", "prop open a door", "run track", "protect your feet", "hide money", "throw at an annoying person", "keep feet from hurting while playing sports"], "input": {"head": "gym shoes", "relation": "ObjectUse", "prompt": "a gym shoes can be used for"}}
{"generation": ["this recipe"], "references": ["fill a vase", "sprinkle on someone's head", "add to coffee", "put into their own container", "sweeten tea", "place on the table for guests", "snort like cocaine", "contain measured amounts of sugar", "sprinkle on berries", "balance a wobbly table"], "input": {"head": "sugar packets", "relation": "ObjectUse", "prompt": "a sugar packets can be used for"}}
{"generation": ["the same purpose"], "references": ["charge buyer", "sing and dance for customers", "gain information", "take the money for the helmet", "purchase the tent from", "help customers shoplift items", "return products to", "take the money", "sell the apple", "sell the guitar", "accept funds", "sell computer to customer", "locate a store item", "rent the boat from", "process with purchase", "check a price"], "input": {"head": "cashier", "relation": "ObjectUse", "prompt": "a cashier can be used for"}}
{"generation": ["a variety of purposes"], "references": ["illuminate what is in front", "use as a spotlight", "do yardwork after dark", "light up house", "use as a Christmas light", "change colors to use as Christmas decorations", "scare away burglers", "expose thieves", "be able to see when walking up sidewalk at night", "see outside at night"], "input": {"head": "flood lights", "relation": "ObjectUse", "prompt": "a flood lights can be used for"}}
{"generation": ["a variety of purposes"], "references": ["see the words", "to see what you're doing", "watch what they're doing", "to see the action", "see video content on", "see the graphics on", "show slides or videos", "see what's happening", "show photo to friend", "watch film", "present ideas on", "see the film on", "edit music on", "read the text from", "to sift sand", "display the film", "display the message", "watch shows on", "see the error message", "view pictures", "view their account to delete it", "display the show", "look at", "swing open", "learn something new on", "watch a sermon on", "see the lyrics to a song", "to sift flour", "watch the movie on", "put on a window and keep bugs out", "look at subject", "see the content", "show the paintings"], "input": {"head": "screen", "relation": "ObjectUse", "prompt": "a screen can be used for"}}
{"generation": ["a variety of purposes, including:\n\nTo"], "references": ["list objectives", "prove who he is", "transfer power of attorney", "make a paper boat", "get a loan", "show evidence", "add numbers to", "tape to a door", "write a signature on", "storing information", "show record of another puchasing the vechile", "burn for heat", "to line a birdcage", "wrap meat from the butcher", "prove citizenship", "to hold over his head in the rain to keep the rain off", "look over and sign", "give notice of firing"], "input": {"head": "document", "relation": "ObjectUse", "prompt": "a document can be used for"}}
{"generation": ["a variety of purposes, including:\n\nA"], "references": ["cover body", "be identified as a prisioner", "use while cleaning", "wear while in jail", "wear as a costume", "pull a fast one on the local library", "have clothes", "wear as a costume at a Halloween party", "make your son wear when he is in a time out", "wear as a costume.", "burn after you're released", "take away ones sense of self"], "input": {"head": "prison uniform", "relation": "ObjectUse", "prompt": "a prison uniform can be used for"}}
{"generation": ["a variety of purposes, including:\n\nA"], "references": ["make pants out of", "make shoes", "create a craft", "make a dress", "slap with hand", "use for an art project", "make material with", "use as an upholstery item", "be warm in", "protect a cell phone", "cushion for protection"], "input": {"head": "leather", "relation": "ObjectUse", "prompt": "a leather can be used for"}}
{"generation": ["a variety of purposes"], "references": ["to love", "be next to", "fake a phone call", "talk to", "ride on a bicycle built for two", "excuse themselves out of an awkward conversation", "get married to", "have someone to make dinner", "help do volunteer work at Convoy of Hope", "give the ring to", "take on a date", "care for", "hang out with"], "input": {"head": "girlfriend", "relation": "ObjectUse", "prompt": "a girlfriend can be used for"}}
{"generation": ["a good cause"], "references": ["destroy trust", "protect identity", "close chapter on good will", "reveal more than truth", "wedge between friends", "getting want", "getting out of trouble", "hurt reputation"], "input": {"head": "lie", "relation": "ObjectUse", "prompt": "a lie can be used for"}}
{"generation": ["a variety of purposes"], "references": ["get free concert tickets", "complete an outfit", "wear to concerts", "tell people you went to a concert", "show your support", "get attention", "to show support for your team", "clean the car with", "bunch up to use as a pillow", "wear at a concert", "show your favorites", "have for memorabilia", "Wear to game"], "input": {"head": "fan clothing", "relation": "ObjectUse", "prompt": "a fan clothing can be used for"}}
{"generation": ["this recipe"], "references": ["put onto the meals", "make pepper spray", "squirt in the eye of an attaching person", "put in glove box", "add flavor to a dish", "Flavor food", "place on a chair for a prank", "spray into an intruders eye", "mix together and create a new sauce"], "input": {"head": "sauce packets", "relation": "ObjectUse", "prompt": "a sauce packets can be used for"}}
{"generation": ["storage"], "references": ["house arcade machines", "keep slave", "hide in during a tornado", "hold the family during wartime", "develop photographs", "make your art", "get into", "use as storage", "play instruments", "hide things in", "keep a hostage in", "keep wine celler", "go in during a tornado."], "input": {"head": "underground room", "relation": "ObjectUse", "prompt": "an underground room can be used for"}}
{"generation": ["the same purpose"], "references": ["take money from bank", "case jewelry store"], "input": {"head": "theif", "relation": "ObjectUse", "prompt": "a theif can be used for"}}
{"generation": ["a variety of purposes, including:\n\nTo"], "references": ["mail a contact.", "hide something important", "protect documents", "hide bribe money", "keep ribbons in", "keep documents together", "mail to someone", "keep pictures in", "store pokemon cards"], "input": {"head": "manilenvelope", "relation": "ObjectUse", "prompt": "a manilenvelope can be used for"}}
{"generation": ["the same purpose"], "references": ["put some spare change in", "put keys in", "cut out into a scarf", "hold your wallet", "put wallet in", "hide items", "make into a purse", "keep hands warm", "keep a frog warm", "carry something small"], "input": {"head": "pocekts", "relation": "ObjectUse", "prompt": "a pocekts can be used for"}}
{"generation": ["a few hours, but it's not a good"], "references": ["sleep on time", "sexually assault someone", "rest well on a long flight", "swallow whole", "slip into someone's food", "sell online", "cure insomnia", "mix with alcohol and overdose", "sleep quicker"], "input": {"head": "sleeping pill", "relation": "ObjectUse", "prompt": "a sleeping pill can be used for"}}
{"generation": ["a variety of purposes, from making a simple Bloody"], "references": ["fit in with others", "use as a prop in a play", "look fancy", "to use as rinse", "guzzle all night", "to socialize", "to bathe in", "drink himself into a stupor", "share with people", "get a buzz", "swig while dancing", "look sophisticated", "give to the wrong people"], "input": {"head": "cocktails", "relation": "ObjectUse", "prompt": "a cocktails can be used for"}}
{"generation": ["a variety of purposes"], "references": ["scare people at haunted attractions", "make halloween decorations on porch", "put on a play", "scare away thieves", "have fun at a party", "look at", "look nice on Halloween", "dress up for costume party"], "input": {"head": "witch dress", "relation": "ObjectUse", "prompt": "a witch dress can be used for"}}
{"generation": ["a variety of purposes"], "references": ["explain the play", "take from", "get autographed by players and sell on Ebay", "wear in the wrong end to start a fight", "show team spirit", "wave around during the game", "give to the fans", "use in a costume"], "input": {"head": "football strips", "relation": "ObjectUse", "prompt": "a football strips can be used for"}}
{"generation": ["this purpose"], "references": ["spray water", "collect liquid", "water the plant", "deliver the water", "spray the water", "get water from", "have something to use to water", "wet the ground", "spray the truck with", "To spray", "feed the garden", "fill the receptacle", "get the water from", "fill the can", "spray on the fire", "spray the grass", "coil up into a creative outdoor basket", "use as a climbing rope", "direct the hydration", "connect device to water source", "rinse off fruit", "water the area", "spray the car", "spray water on them", "dispense moisture", "fill it with water", "water the flowers", "Spray plants with", "water the plants", "move the water", "get liquid from", "water the plants with", "put inside", "attach to the spigot", "spray on flowers", "try to put the fire out", "drain a fish tank", "aim at plants", "wash the space", "water lawns", "draw liquid", "jump rope with", "hook up paint gun", "drownd out the fire", "spray out water", "to water the seeds", "give the seeds water", "add water", "put out fire", "get the water or the plants", "hook up to the faucet", "siphon gasoline", "deliver liquid to the plants", "fill the pool", "rope off a yard to keep people off of the lawn.", "rinse off floor", "secure furniture while moving", "transport the water", "take up", "spray water from", "fill up the bucket"], "input": {"head": "hose", "relation": "ObjectUse", "prompt": "a hose can be used for"}}
{"generation": ["the treatment of a variety of skin conditions, including"], "references": ["etch glass", "destroy tissue", "etch metal", "charge mind", "ruin many things", "burn skin", "burn flesh"], "input": {"head": "acid", "relation": "ObjectUse", "prompt": "an acid can be used for"}}
{"generation": ["the base of the cup"], "references": ["bonding", "lubricate", "making computer chips", "permanence", "lubricants", "entertainment", "varnishes", "augment breast size", "adhering", "glue", "lubrication of materials"], "input": {"head": "silicone", "relation": "ObjectUse", "prompt": "a silicone can be used for"}}
{"generation": ["the final assembly of the puzzle"], "references": ["push into place to complete it"], "input": {"head": "final piece of the jigsaw", "relation": "ObjectUse", "prompt": "a final piece of the jigsaw can be used for"}}
{"generation": ["a variety of purposes, including:\n\nW"], "references": ["make teddy bears"], "input": {"head": "mohair", "relation": "ObjectUse", "prompt": "a mohair can be used for"}}
{"generation": ["a variety of purposes, including as a substitute for"], "references": ["make a shake", "give to the monkey", "eating", "add to a hat to make a costume", "eat by itself", "give to a monkey", "add to the concotion", "make up part of a healthy smoothy", "eat on cereal", "throw peel on floor", "throw at a naughty child", "add to make a facemask"], "input": {"head": "banana", "relation": "ObjectUse", "prompt": "a banana can be used for"}}
{"generation": ["the same purpose"], "references": ["start business"], "input": {"head": "amanda", "relation": "ObjectUse", "prompt": "an amanda can be used for"}}
{"generation": ["a variety of purposes, including:\n\nThe"], "references": ["find a job", "ask around", "watch tv shows on", "connect to the internet", "create a work crew", "sign in", "to watch the nightly news", "obtain references", "connect with people", "join to meet people"], "input": {"head": "network", "relation": "ObjectUse", "prompt": "a network can be used for"}}
{"generation": ["storing the liquid"], "references": ["make spaghetti sauce", "keep salad dressing in", "look nice on the counter", "fill with little fairy lights and hang from the trees in your back yard.", "put alcohol and the chopped off head of snake that attacked you.", "be a planter", "use as a pencil/pen holder", "store their weed", "use for crafts", "crush a bug", "mix some fruit juice"], "input": {"head": "glass container", "relation": "ObjectUse", "prompt": "a glass container can be used for"}}
{"generation": ["a variety of purposes"], "references": ["study in", "have the party in", "paint", "shoot the horror movie in", "house homeless", "get peace and quiet", "house prisoners", "hide books", "house college student", "live while in school", "study"], "input": {"head": "dorm room", "relation": "ObjectUse", "prompt": "a dorm room can be used for"}}
{"generation": ["the treatment of a variety of conditions, including:"], "references": ["stay hydrated"], "input": {"head": "iv fluid", "relation": "ObjectUse", "prompt": "an iv fluid can be used for"}}
{"generation": ["a variety of purposes"], "references": ["entertain small children", "relax when there is nothing to do", "storyboard live action sequences", "have fun on the weekends", "be entertained by", "make porn", "let kids watch.", "make a caricature of someone", "make propaganda"], "input": {"head": "cartoon", "relation": "ObjectUse", "prompt": "a cartoon can be used for"}}
{"generation": ["a variety of purposes, including:\n\nTo"], "references": ["give a dog a treat", "eat", "cover in frosting", "give to a cop", "eat for breakfast.", "to snack on.", "hold in finger to eat", "bribe someone", "give to friend", "bring to work"], "input": {"head": "donut", "relation": "ObjectUse", "prompt": "a donut can be used for"}}
{"generation": ["this purpose"], "references": ["buy a home", "help find a house", "get a job", "complain about", "advertise a house", "sell your house", "get ideas for making a house more presentable", "meet a date"], "input": {"head": "realty agency", "relation": "ObjectUse", "prompt": "a realty agency can be used for"}}
{"generation": ["this purpose"], "references": ["look at reflection", "open the door to the area", "Open bedroom door", "door knob", "hang a shirt", "unlock a house", "opening door", "quietly lock", "lock the house", "wipe snot", "trick someone", "turn to shut a door", "spy through a keyhole", "lock a door"], "input": {"head": "door knob", "relation": "ObjectUse", "prompt": "a door knob can be used for"}}
{"generation": ["a variety of activities, including:\n\n-"], "references": ["talk with when stranded on an island", "hit over the net", "playing volleyball", "play dodgeball", "hit an enemy", "play the game with", "throw at the annoying person", "hide and spoil the game", "dominate the game", "hit accross the net", "play a game of soccer", "practice the game", "spike the ball", "Win the title"], "input": {"head": "volleyball", "relation": "ObjectUse", "prompt": "a volleyball can be used for"}}
{"generation": ["the purpose of marriage, but not for the purpose"], "references": ["cuddle with", "provide support", "help do chores", "answer phone to avoid relatives", "have children with", "make dinner", "have as a business partner", "fold clothes", "kiss and love", "borrow clothes to cross dress"], "input": {"head": "wife", "relation": "ObjectUse", "prompt": "a wife can be used for"}}
{"generation": ["a variety of purposes, including to:"], "references": ["prove they're credit-worthy", "fill out application", "use to get approved for a loan", "log-in to a website", "apply for a job", "get stolen", "blackmail someone with", "secure passage", "claim social security benefits", "switch identities at a border", "sell to a data collection firm", "steal to take on someones identity", "To prove your identity when getting a new job."], "input": {"head": "personal information", "relation": "ObjectUse", "prompt": "a personal information can be used for"}}
{"generation": ["a variety of purposes"], "references": ["store papers in", "Eat for breakfast", "put in cookies", "use as percussion", "make treats", "display on a store shelf", "read the back", "make marshmallow treats with", "take the cereal from", "eat as a snack"], "input": {"head": "box of cereal", "relation": "ObjectUse", "prompt": "a box of cereal can be used for"}}
{"generation": ["a variety of purposes, including:\n\nTo"], "references": ["carrying travel papers", "carrying passport", "keeping passport safe", "hold papers", "keep passport in", "protecting passport", "keeping passport clean"], "input": {"head": "passport case", "relation": "ObjectUse", "prompt": "a passport case can be used for"}}
{"generation": ["the purpose of determining the identity of a person,"], "references": ["take lessons", "carrying out computer tasks", "solve problems people cannot", "teach how to hack", "decipher a code", "program a robot", "sell in a yardsale", "solve a problem", "teach children math skills", "play a game"], "input": {"head": "computer program", "relation": "ObjectUse", "prompt": "a computer program can be used for"}}
{"generation": ["a variety of purposes, including:\n\nTo"], "references": ["communicate wrongdoing", "overturn", "stand by your beliefs", "give a sermon", "To enhance a lie", "convince another person", "determine guilt", "show your faith", "be determined", "to be sentenced"], "input": {"head": "conviction", "relation": "ObjectUse", "prompt": "a conviction can be used for"}}
{"generation": ["a variety of purposes"], "references": ["order a pizza", "use as a 3 way to talk to many at the same time", "call for help", "make a prank call", "lift one's spirits", "hear the good news", "call a computer to do things for you", "contact a loved one", "call emergency services", "near conclusion", "cost lot of money"], "input": {"head": "phone call", "relation": "ObjectUse", "prompt": "a phone call can be used for"}}
{"generation": ["a variety of purposes, including decoration, decoration,"], "references": ["catch a rabbit/ rabbit bait", "give to their date", "boil and make tea", "make yard pretty", "give to mom on mother's day", "give PersonY when asking", "as part of clown costume", "rub on head to see if someone likes butter", "help personY notice them", "take a snapshot", "buy from a vendor to give to PersonY", "wear in hair", "give to a date", "smell a fragrance"], "input": {"head": "flower", "relation": "ObjectUse", "prompt": "a flower can be used for"}}
{"generation": ["a variety of purposes"], "references": ["hold telephone wires together", "hold the braids", "make into artwork", "put hair into a ponytail", "keep hair out of face", "use as bracelet", "style hair", "tie the braids", "make a necklace", "tie up hair", "keep it out of the eyes", "keep the hair together", "keep pant zippers up", "make tie dye shirts", "substitute for rubber bands"], "input": {"head": "hair ties", "relation": "ObjectUse", "prompt": "a hair ties can be used for"}}
{"generation": ["a variety of purposes, including hair styling, hair"], "references": ["having hair styled", "get new hair style", "having nails manicured", "get a shave", "earning living", "host a birthday party", "having hair permed", "getting manicure", "do hair", "hide from an angry spouse", "hair styling", "have a wine and cheese tasting", "start a business", "exchange information with intelligent people", "getting pedicure", "get nails done", "manicures", "shampoos", "Find hair dresser", "getting perm", "having hair colored", "treat yourself", "fingernail painting", "sell pop-up items", "get hair done", "having hair cut", "gather cut hair for a wig", "getting hair colored", "meet with your book club", "hair cutting", "makeovers", "getting haircut"], "input": {"head": "salon", "relation": "ObjectUse", "prompt": "a salon can be used for"}}
{"generation": ["the same purpose"], "references": ["learn about up and comers", "select an applicant", "send thank you cards to", "cast a vote", "see who is best", "make prank calls to", "see who is to blackmail", "evaluate options", "find a date", "pick a leader", "vote", "compare atributes"], "input": {"head": "list of candidates", "relation": "ObjectUse", "prompt": "a list of candidates can be used for"}}
{"generation": ["this recipe"], "references": ["give a toast", "allow to turn to vinegar", "put on the red to stop staining", "serve to guests", "drink in a glass", "serve at wedding", "uncork in the middle of the street", "get drunk quickly", "pour on a cloth", "drink", "serve at a party"], "input": {"head": "white wine", "relation": "ObjectUse", "prompt": "a white wine can be used for"}}
{"generation": ["a great dinner"], "references": ["ordering food to take out", "eating spanish food", "eating", "spanish food", "eating spanish foods", "meeting other people", "supply food", "getting heartburn", "traditional spanish food", "big cities", "obtaining nourishment", "eating spanish meals", "get to eat", "selling ethnic food", "social interactions", "taking women out", "enjoying spanish foods", "eat spanish food", "enjoying foreign cuisine", "serving food", "spending money", "hearing spanish music", "meeting people who speak spanish", "having meal", "spicy food", "tacos", "having fun", "listening to spanish music"], "input": {"head": "spanish restaurant", "relation": "ObjectUse", "prompt": "a spanish restaurant can be used for"}}
{"generation": ["a variety of purposes"], "references": ["wear at the fashion show", "wear to work", "perform in", "hang in the display", "keep them warm like a blanket", "dress up a pet dog", "wear to prom", "hold over their head like an umbrella to keep them dry in the rain", "wear at funeral", "buy for prom"], "input": {"head": "beautiful dress", "relation": "ObjectUse", "prompt": "a beautiful dress can be used for"}}
{"generation": ["this purpose"], "references": ["wipe down a surface", "keep track of the students", "keep notes on participation", "start a fire", "keep different types of records", "soak up a liquid", "keep records of classes", "doodle cartoons", "burn as fuel", "notate the data", "keep attendance", "roll tobacco"], "input": {"head": "roll book", "relation": "ObjectUse", "prompt": "a roll book can be used for"}}
{"generation": ["the same purpose"], "references": ["place in a dogs bed so it does not itch", "wear on a date", "look nice at work", "to look snazzy", "wipe down a car", "wear in public", "protect inside shirt", "raise as a flag", "war to a work event", "stuff into a wall and use as insulation"], "input": {"head": "formal shirt", "relation": "ObjectUse", "prompt": "a formal shirt can be used for"}}
{"generation": ["the following purposes:\n\nTo display the score"], "references": ["see the score", "count down as a timer", "send a message", "display the score", "throw things at", "keep score", "take pics of", "use as a table", "display as art"], "input": {"head": "scoreboard", "relation": "ObjectUse", "prompt": "a scoreboard can be used for"}}
{"generation": ["a variety of purposes"], "references": ["become a coach", "write names in the dirt", "run around the bases", "create a team", "sit on in the dirt", "walk a dog", "play baseball", "play a game", "run laps"], "input": {"head": "baseball diamond", "relation": "ObjectUse", "prompt": "a baseball diamond can be used for"}}
{"generation": ["the top of the cake"], "references": ["cover cardboard cake display", "write scary messages on mirrors for Hallowe'en parties", "write on a birthday cake", "fill donuts", "paint your face in your team colors, yummy.", "decorate a cake", "decorate a treat", "use as a prop; like guts!", "frost cupcakes with", "put on my body for my lover to lick off", "see the design", "write words on a cake"], "input": {"head": "colored frosting", "relation": "ObjectUse", "prompt": "a colored frosting can be used for"}}
{"generation": ["this purpose"], "references": ["research ancestry", "display so people think you're smart", "find out about people", "put down in a bibliography", "sit a child on to reach the table", "research movies", "look over for reference", "start a fire", "research for an essay", "read so you can pretend to be busy", "read about past events", "identify what is seen", "put in the library", "learn information"], "input": {"head": "encyclopedia", "relation": "ObjectUse", "prompt": "an encyclopedia can be used for"}}
{"generation": ["a variety of applications"], "references": ["wash clothing", "put it into the wash", "wash them before wearing", "wash the clothing", "use as a chair", "bleach shoes.", "tiedye outfits.", "clean clothes", "ensure clothes are clean before packing", "clean dirty items", "clean the clothes", "put the shirt in", "use as a large doorstop", "store items in the home", "lay on for massage", "put the clothing in", "put pots and pans in", "do laundry"], "input": {"head": "washer", "relation": "ObjectUse", "prompt": "a washer can be used for"}}
{"generation": ["the same purpose"], "references": ["be a political rival", "play cards against", "beat in chess", "compete against", "play against", "to talk with", "teach PersonX", "play football against", "find common ground"], "input": {"head": "opponent", "relation": "ObjectUse", "prompt": "an opponent can be used for"}}
{"generation": ["this purpose"], "references": ["grind lemons to make the room smell nice", "get rid of the body parts with", "fix when it breaks down because the kids put the wrong stuff in it", "chop off someone's hand", "pretend to be a monster growl", "flush the cake away", "keep the drain clear", "keep pipes from clogging", "dispose of leftovers", "toss it down the drain", "grind up bones", "cover the sound of a burp", "suffocate an enemy when their tie gets caught"], "input": {"head": "garbage disposal", "relation": "ObjectUse", "prompt": "a garbage disposal can be used for"}}
{"generation": ["a variety of purposes"], "references": ["game of chess", "chess games", "playing chess", "offensive strategy", "sacrificing", "moving around", "defensive strategy", "defensive strategy in chess", "game playing", "helping to win game", "limiting opponent", "play chess", "blocking", "play world's greatest game", "capture opponent's piece", "attack via pawn storm", "attacking other pawns", "cat toy"], "input": {"head": "chess pawn", "relation": "ObjectUse", "prompt": "a chess pawn can be used for"}}
{"generation": ["this"], "references": ["stab an intruder in your house", "cut watermelon", "apply paint to wall", "stab someone", "Cut the cake", "serve cake with", "scrape off icing", "cut up cardboard to recycle", "stir batter", "cut the cake up with", "remove slice from full cake"], "input": {"head": "cake knife", "relation": "ObjectUse", "prompt": "a cake knife can be used for"}}
{"generation": ["a variety of purposes"], "references": ["hang yourself", "save someone stuck in a tunnel", "climb a mountain", "play tag of war", "play tug of war", "make lots of knots", "secure the rock", "create holder", "play a game of tug of war", "tow a boat in", "pull a car"], "input": {"head": "long rope", "relation": "ObjectUse", "prompt": "a long rope can be used for"}}
{"generation": ["a variety of purposes, including:\n\nA"], "references": ["buying gas", "stock the beverages", "work for your money", "meet with their co-workers", "fill up the tank of a car with gas", "to fuel a car", "gas up your car", "have a photoshoot", "buy snacks", "use the bathroom", "buy the gas", "get gas for the car"], "input": {"head": "gas station", "relation": "ObjectUse", "prompt": "a gas station can be used for"}}
{"generation": ["the same purpose"], "references": ["move a video game character", "pause the game", "scroll through options", "manipulate the characters", "reset the console", "hammer in nails", "work the game", "play games", "trick someone to think you have video games", "use as a paper weight", "play a video game", "study electronics", "move characters", "control", "interact with the screen"], "input": {"head": "controllers", "relation": "ObjectUse", "prompt": "a controllers can be used for"}}
{"generation": ["this purpose"], "references": ["put pictures in", "burn after a break-up", "decorate for a family reunion", "collect visual memories of people", "put news clippings in", "fill with pictures and give as a gift", "put the thief's picture in with all the other thieves", "feel nostalgic", "comfort PersonX with", "use as decor for a party", "store coupons", "view embarrassing family photos from the past.", "find the picture"], "input": {"head": "photo album", "relation": "ObjectUse", "prompt": "a photo album can be used for"}}
{"generation": ["any purpose, including the purchase of a home"], "references": ["pay down payment"], "input": {"head": "fund", "relation": "ObjectUse", "prompt": "a fund can be used for"}}
{"generation": ["a variety of purposes"], "references": ["put on head", "conceal part of a house being renovated", "keep warm with", "cover the hot tub", "keep out rain", "keep the boat safe in winter", "cover the new car", "put on a bed", "keep the plants from freezing", "wear over swimwear", "put on bed", "drape on furniture"], "input": {"head": "covering", "relation": "ObjectUse", "prompt": "a covering can be used for"}}
{"generation": ["a variety of purposes"], "references": ["playing hide and seek", "have workshop", "protection from tornadoes", "storage of produce", "storing items", "access to circuits", "access to heating unit", "providing shelter", "store old boxes", "storing things", "access to plumbing", "store wine", "store things"], "input": {"head": "basement", "relation": "ObjectUse", "prompt": "a basement can be used for"}}
{"generation": ["a variety of purposes"], "references": ["To wear when cooking", "tie off a wound to slow bleeding", "keep from getting stains on  dress", "sew into curtains", "wear as a dress", "wear while catering", "keep clothes clean", "protect their clothing", "ties around head as a makeshift bonnet", "Wear when grilling", "make sure hot foods don't burn you"], "input": {"head": "aprons", "relation": "ObjectUse", "prompt": "an aprons can be used for"}}
{"generation": ["the same purpose"], "references": ["clean water", "filter water", "hold the grounds", "keep out toxins", "block out harsh light", "hide pimples in pictures", "make some sunglasses", "decorate your window", "breath clean air", "stop themselves saying something they should not", "make the actress look more prettier than she really is", "smoke from"], "input": {"head": "filters", "relation": "ObjectUse", "prompt": "a filters can be used for"}}
{"generation": ["the same purpose"], "references": ["abide by the law", "rip up into small pieces to use as confetti", "use when declaring Mturk income...", "fill out incorrectly to save money", "use to start a fire", "file taxes", "prepay your taxes", "use to fan themselves with", "shred and use to stuff a pillow"], "input": {"head": "w-9", "relation": "ObjectUse", "prompt": "a w-9 can be used for"}}
{"generation": ["a variety of purposes, including a garden, a"], "references": ["plant flowers", "architectural enhancement", "impressing guests", "expressing creativity", "improving personal environment", "entertaining friends", "decoration", "enter yard", "adding attractiveness to home", "planting things in", "expressing individuality", "own pleasure"], "input": {"head": "front garden", "relation": "ObjectUse", "prompt": "a front garden can be used for"}}
{"generation": ["a variety of purposes"], "references": ["have a business meeting", "eat out", "food", "drinking marguerita drinks", "meeting latin women", "eat with family", "eating tacos", "make yourself get gas", "trying different", "eating mexican cuisine", "go to and get food and the margaritas", "eating polenta", "drinking tequila", "have all you can eat tacos", "eat at", "ordering spicy food", "eating chilli con carne", "celebrate a birthday", "try to get heartburn", "providing mexicans with rest room", "drink tequila", "enjoy a night out", "host a party", "eating fajitas", "eating nachos", "atmosphere", "have fajitas", "go on a date night", "lspaeking spanish", "figure out how to make your own", "eat tacos"], "input": {"head": "mexican restaurant", "relation": "ObjectUse", "prompt": "a mexican restaurant can be used for"}}
{"generation": ["a variety of purposes"], "references": ["enjoy evening outdoors", "yell at neighbor", "viewing resting or eating at", "keeping from falling"], "input": {"head": "balcony", "relation": "ObjectUse", "prompt": "a balcony can be used for"}}
{"generation": ["the treatment of a variety of skin conditions, including"], "references": ["stop heart arrhythmia"], "input": {"head": "lidocaine", "relation": "ObjectUse", "prompt": "a lidocaine can be used for"}}
{"generation": ["a variety of tasks, including breaking down doors,"], "references": ["hurt someone", "tap the nail with", "split lumber", "remove nail", "use as a caulking gun", "pull out a nail", "hit the bad guy", "build the fence", "murder someone", "measure on the fly", "hold something down with", "break ice"], "input": {"head": "clawhammer", "relation": "ObjectUse", "prompt": "a clawhammer can be used for"}}
{"generation": ["cooking, but it is not recommended for boiling water"], "references": ["hold placed over fire", "make stew", "steam open an envelope", "put water in", "make water hot", "boiling water", "boil water in", "fill cup with hot water", "boil the water", "making tea", "boil water for tea", "cook soup", "boil water", "heating water", "boil up for tea", "use as a prop", "prepare tea", "store items in", "take off of the burner", "heat water", "hold", "wash hands", "water", "carry water", "boil potpurri to scent the house", "add more water to the cup", "hold liquid", "create a meal", "heat water over fire", "boil it", "heat the liquid", "make kettle corn", "boil"], "input": {"head": "kettle", "relation": "ObjectUse", "prompt": "a kettle can be used for"}}
{"generation": ["this purpose"], "references": ["put into the car", "place under furniture for easier moving", "pour the coffee grounds into", "clean mirrors", "scrub a mirror", "trap grounded beans", "keep the water clean", "insert into window frame", "clean liquid", "hold the coffee grounds", "sew into skirt", "change and make a fresh pot", "remove the grounds", "make the photo look good", "strain the beans", "fill with grounds", "clean windows", "for crafting paper flowers", "clean the water", "put in the machine"], "input": {"head": "filter", "relation": "ObjectUse", "prompt": "a filter can be used for"}}
{"generation": ["carrying a large amount of items"], "references": ["plant flowers", "moving heavy loads", "carry manure away from barn", "put dirt in", "put rocks and unwanted sod in", "move wood", "move dirt", "carry heavy items", "move rocks around", "Gather limb", "have a race in", "Carry bricks to a new area", "carry firewood", "transport the stumps with", "run over someone with", "put the dirt in", "clean a horse stall", "give someone a ride in"], "input": {"head": "wheelbarrow", "relation": "ObjectUse", "prompt": "a wheelbarrow can be used for"}}
{"generation": ["a variety of purposes"], "references": ["greeting people", "scheduling appointments", "secretary", "registration", "journal arrivals", "information", "meeting visitors to company", "controlling access to person", "politely stopping salespeople", "routing telephone calls", "answering incoming calls", "answer incoming calls", "providing information to visitors"], "input": {"head": "reception desk", "relation": "ObjectUse", "prompt": "a reception desk can be used for"}}
{"generation": ["a lot of things, but it's not a"], "references": ["be on the honor roll", "go to law school", "get scholarships", "show off to friends", "bargain for discounts at restaurants", "to get into a good school", "be able to play sports", "pass the class", "get in a good college", "be a teacher", "make a's", "earn rewards from parents", "exchange for ice cream", "try to get to college", "appeal to higher institutions", "get on the honor roll"], "input": {"head": "good grades", "relation": "ObjectUse", "prompt": "a good grades can be used for"}}
{"generation": ["walking, running, or even hiking"], "references": ["look cute", "exercise", "wear during the walk", "walk in", "walk with", "jog in", "protect the feet", "walk to the park", "go on a hike", "keep feet comfortable", "throw at president", "wear proper footwear", "get to the park", "protect their feet", "be comfortable", "walk home", "keep their feet comfortable", "get to the shop to buy the skateboard", "go for a walk", "wear while strolling", "get some exercise", "travel to the house", "match exercise pants"], "input": {"head": "walking shoes", "relation": "ObjectUse", "prompt": "a walking shoes can be used for"}}
{"generation": ["a vehicle that is not registered in the state of"], "references": ["hang on a Christmas tree.", "learn how to drive for real", "be able to prove your age", "be able to practice driving", "cut cucumber with", "fold up and put under a wobbly table leg to level it.", "learn to drive on real roads", "pretend it's a credit card", "get a good picture to show everyone"], "input": {"head": "drivers permit", "relation": "ObjectUse", "prompt": "a drivers permit can be used for"}}
{"generation": ["the same purpose"], "references": ["create web pages", "help to sell items", "remember your lines for the commercial", "know what to say when playing a role in a play of film", "tell someone a pitch over the phone", "get medicine from the pharmacy", "make it easier to complet work on mturk.", "use in programming"], "input": {"head": "scripts", "relation": "ObjectUse", "prompt": "a scripts can be used for"}}
{"generation": ["a variety of purposes"], "references": ["close others outside", "open the door to get in the garage", "get to car", "break into someone's house", "get inside the house", "throw at someone to hurt them", "throw as a weapon", "weight down other objects", "use to move items"], "input": {"head": "garage opener", "relation": "ObjectUse", "prompt": "a garage opener can be used for"}}
{"generation": ["good, but it can also be used for evil"], "references": ["idiots"], "input": {"head": "stupidity", "relation": "ObjectUse", "prompt": "a stupidity can be used for"}}
{"generation": ["good or evil"], "references": ["confuse", "separate people", "motivate", "stop people", "change people greatly", "cause stress", "serve obedience", "force people to hide"], "input": {"head": "fear", "relation": "ObjectUse", "prompt": "a fear can be used for"}}
{"generation": ["a variety of purposes"], "references": ["lock your car", "get in a car quickly", "pry open a beer bottle", "push start your vehicle", "hold up the leg of an uneven table", "unlock a car trunk", "open the car door", "build a robot", "teach a lesson about technology", "unlock trunk"], "input": {"head": "car fob", "relation": "ObjectUse", "prompt": "a car fob can be used for"}}
{"generation": ["this purpose"], "references": ["put with undergarments for future dirty ones", "pick up after the poodle", "put the body in", "remove the drink from", "keep head dry", "dispose of remains", "dispose of the evidence", "keep feet dry", "carry items", "fill with cubes from the freezer", "prevent pregnancy", "keep shoes dry", "put the evidence into", "carry the purchase home in", "collect the items", "pick up excrement", "clean up the poop", "carry the frisbee out of the store in", "take items out of the store", "carry the items home in", "put purchase in", "wrap up fresh vegetables in", "hold the uneaten food", "hold fruit", "hold the trash", "catch vomit", "line the can", "crochet into mats", "store used tissues", "carry it out in", "Put toiletries into", "hyperventilate into", "collect cans", "put the wares in", "pick up the fecal matter with"], "input": {"head": "plastic bag", "relation": "ObjectUse", "prompt": "a plastic bag can be used for"}}
{"generation": ["a variety of events, including weddings, parties,"], "references": ["flirt with new people", "teach a class", "throw confetti", "sell drinks on", "show your moves", "start a brawl", "step onto", "teach dance", "put tables on", "perform gymnastics", "dance with the bride", "dance on"], "input": {"head": "dance floor", "relation": "ObjectUse", "prompt": "a dance floor can be used for"}}
{"generation": ["the same purpose"], "references": ["Keep hands clean", "put in your lap", "wrap a gift", "keep crumbs off their lap", "carry plates", "light a fire with.", "decorate their head", "make beautiful origami shapes with.", "wipe their mouths with", "fashion a shirt", "bring drinks on"], "input": {"head": "serviette", "relation": "ObjectUse", "prompt": "a serviette can be used for"}}
{"generation": ["this purpose"], "references": ["write their name", "use to write", "to use to record what is needed to buy", "write the order down", "write down the number", "to write down the answers", "write down the words", "write information down", "fill the report card in", "sign the letter"], "input": {"head": "pen or pencil", "relation": "ObjectUse", "prompt": "a pen or pencil can be used for"}}
{"generation": ["the treatment of a variety of conditions, including:"], "references": ["get out of doing", "avoid social obligation", "avoid work", "subject one to much pain", "go to doctor", "rest", "sinning", "cause runny noses"], "input": {"head": "illness", "relation": "ObjectUse", "prompt": "an illness can be used for"}}
{"generation": ["this purpose"], "references": ["clean the dishes with.", "wash the dog", "remove eye make up", "clean out the ears", "wash away makeup", "remove dirt from your face", "wash your face clean", "clean shoes with.", "remove dirt and oil", "be healthy", "prevent acne"], "input": {"head": "face cleaner", "relation": "ObjectUse", "prompt": "a face cleaner can be used for"}}
{"generation": ["this"], "references": ["pluck the strings", "peel a label", "clean under my nails with", "scratch your head", "As a bookmark", "trace for a craft", "pluck at strings", "strum strings", "play guitar", "decorate a scrapbook", "scrape a vegetable", "play the guitar", "As a weapon to slice someone with", "make it sound good", "use in a game of POGS", "to use as a mini frizbee"], "input": {"head": "guitar pick", "relation": "ObjectUse", "prompt": "a guitar pick can be used for"}}
{"generation": ["a variety of purposes, including a ritual offering,"], "references": ["give as a trophy", "present to a king", "drink the blood of a sacrifice", "make friends", "show status", "reflect light as a signal", "make a new game", "get locked up", "put the drink in"], "input": {"head": "chalice", "relation": "ObjectUse", "prompt": "a chalice can be used for"}}
{"generation": ["a variety of activities, including hiking, biking,"], "references": ["wear while riding the horse", "stop mud from getting on your boots", "keep feet safe on a horse", "donate to charity", "protect feet", "protect feet and legs", "use as a door stop", "ride motorcycle safely", "put on feet", "control riding", "hit someone", "wear while on the horse", "keep mud off your feet", "be comfortable in"], "input": {"head": "riding boots", "relation": "ObjectUse", "prompt": "a riding boots can be used for"}}
{"generation": ["garden, or a cabbage in a pot in a"], "references": ["supermarket", "freezer", "market", "plate", "grocery store"], "input": {"head": "cabbage", "relation": "AtLocation", "prompt": "You are likely to find a cabbage in a"}}
{"generation": ["drawer or a box in a closet"], "references": ["purse"], "input": {"head": "handkerchief", "relation": "AtLocation", "prompt": "You are likely to find a handkerchief in a"}}
{"generation": ["church or a churchyard, or a church or"], "references": ["theatre", "butt", "opera house", "hollywood bowl", "auditorium", "severance hall in cleveland", "orchestra cherry", "opera", "concert theater", "concert hall"], "input": {"head": "orchestra pit", "relation": "AtLocation", "prompt": "You are likely to find an orchestra pit in a"}}
{"generation": ["gym, a bodybuilder in a gym, a"], "references": ["gym"], "input": {"head": "body builder", "relation": "AtLocation", "prompt": "You are likely to find a body builder in a"}}
{"generation": ["kitchen, bathroom, or laundry room"], "references": ["house", "office", "dwelling", "cold places", "automobile", "someplace cold", "public building", "pocket at football game", "garage", "electrical goods store", "home"], "input": {"head": "heater", "relation": "AtLocation", "prompt": "You are likely to find a heater in a"}}
{"generation": ["library, in a book, or in a book"], "references": ["library"], "input": {"head": "library card", "relation": "AtLocation", "prompt": "You are likely to find a library card in a"}}
{"generation": ["city or town that is not in your home state"], "references": ["bus stop"], "input": {"head": "advertisement billboard", "relation": "AtLocation", "prompt": "You are likely to find an advertisement billboard in a"}}
{"generation": ["harbor, or a boat in a river, or"], "references": ["lake", "harbor", "garage", "river", "body of water", "ocean", "bay", "water"], "input": {"head": "boat", "relation": "AtLocation", "prompt": "You are likely to find a boat in a"}}
{"generation": ["vagina"], "references": ["lover's mouth", "pair of pants", "lover's anus", "shorts"], "input": {"head": "penis", "relation": "AtLocation", "prompt": "You are likely to find a penis in a"}}
{"generation": ["state that has a high percentage of its population that"], "references": ["netherlands", "belmopan", "hague", "belize"], "input": {"head": "senate", "relation": "AtLocation", "prompt": "You are likely to find a senate in a"}}
{"generation": ["bar or club"], "references": ["hockey game"], "input": {"head": "fight", "relation": "AtLocation", "prompt": "You are likely to find a fight in a"}}
{"generation": ["american english school"], "references": ["united states"], "input": {"head": "american english", "relation": "AtLocation", "prompt": "You are likely to find an american english in an"}}
{"generation": ["house or apartment that is not well-ventilated"], "references": ["closet"], "input": {"head": "closet floor", "relation": "AtLocation", "prompt": "You are likely to find a closet floor in a"}}
{"generation": ["library or bookstore that is not available on the Internet"], "references": ["television"], "input": {"head": "television program", "relation": "AtLocation", "prompt": "You are likely to find a television program in a"}}
{"generation": ["person's heart for the Lord, and a love"], "references": ["church"], "input": {"head": "reverence", "relation": "AtLocation", "prompt": "You are likely to find a reverence in a"}}
{"generation": ["lot of people who are not in the business of"], "references": ["war zone"], "input": {"head": "hostility", "relation": "AtLocation", "prompt": "You are likely to find a hostility in a"}}
{"generation": ["bottle of nail polish remover"], "references": ["finger", "board"], "input": {"head": "nail", "relation": "AtLocation", "prompt": "You are likely to find a nail in a"}}
{"generation": ["area with a lot of light pollution"], "references": ["outside", "painting", "heavens", "day", "planet", "atmosphere", "planetarium", "looking up", "photo", "pre schoolers painting", "place on earth", "air", "outdoors"], "input": {"head": "sky", "relation": "AtLocation", "prompt": "You are likely to find a sky in an"}}
{"generation": ["variety of ways"], "references": ["corner of two streets"], "input": {"head": "choice of direction", "relation": "AtLocation", "prompt": "You are likely to find a choice of direction in a"}}
{"generation": ["league that is not in the top 10% of"], "references": ["hockey game", "soccer game"], "input": {"head": "goalie", "relation": "AtLocation", "prompt": "You are likely to find a goalie in a"}}
{"generation": ["city"], "references": ["train station"], "input": {"head": "train or homeless", "relation": "AtLocation", "prompt": "You are likely to find a train or homeless in a"}}
{"generation": ["area where there is no light source"], "references": ["opera"], "input": {"head": "spot light", "relation": "AtLocation", "prompt": "You are likely to find a spot light in an"}}
{"generation": ["city, or a large open space, or a"], "references": ["movie house", "outside", "park", "greece"], "input": {"head": "amphitheatre", "relation": "AtLocation", "prompt": "You are likely to find an amphitheatre in a"}}
{"generation": ["area that is not listed in the table below"], "references": ["earth", "ore", "michigan", "multivitamin"], "input": {"head": "mineral", "relation": "AtLocation", "prompt": "You are likely to find a mineral in an"}}
{"generation": ["chest in the basement of the house"], "references": ["desk", "friend's house"], "input": {"head": "diary", "relation": "AtLocation", "prompt": "You are likely to find a diary in a"}}
{"generation": ["box of tissues, a box of tissues in a"], "references": ["space"], "input": {"head": "vaccum", "relation": "AtLocation", "prompt": "You are likely to find a vaccum in a"}}
{"generation": ["Indian restaurant"], "references": ["oven"], "input": {"head": "roast dinner", "relation": "AtLocation", "prompt": "You are likely to find a roast dinner in an"}}
{"generation": ["drawer or under a bed"], "references": ["bed"], "input": {"head": "slipper", "relation": "AtLocation", "prompt": "You are likely to find a slipper in a"}}
{"generation": ["store that is not working"], "references": ["gym"], "input": {"head": "card swipe", "relation": "AtLocation", "prompt": "You are likely to find a card swipe in a"}}
{"generation": ["place where you are not familiar with the local customs"], "references": ["war", "roadblock"], "input": {"head": "danger", "relation": "AtLocation", "prompt": "You are likely to find a danger in a"}}
{"generation": ["park or a forest"], "references": ["top of mountain"], "input": {"head": "scenic view", "relation": "AtLocation", "prompt": "You are likely to find a scenic view in a"}}
{"generation": ["hospital or clinic"], "references": ["hospital"], "input": {"head": "emergency care", "relation": "AtLocation", "prompt": "You are likely to find an emergency care in a"}}
{"generation": ["bar or a restaurant"], "references": ["friend's wedding", "wedding"], "input": {"head": "best man", "relation": "AtLocation", "prompt": "You are likely to find a best man in a"}}
{"generation": ["car, but you may not find a car"], "references": ["car"], "input": {"head": "car key", "relation": "AtLocation", "prompt": "You are likely to find a car key in a"}}
{"generation": ["museum or a museum shop"], "references": ["suface of moon"], "input": {"head": "lunar module", "relation": "AtLocation", "prompt": "You are likely to find a lunar module in a"}}
{"generation": ["old house, or a basement in a new house"], "references": ["office building", "building", "closet", "own house", "church", "cellar", "canada", "home"], "input": {"head": "basement", "relation": "AtLocation", "prompt": "You are likely to find a basement in an"}}
{"generation": ["field"], "references": ["roadblock"], "input": {"head": "orange cone", "relation": "AtLocation", "prompt": "You are likely to find an orange cone in a"}}
{"generation": ["pharmacy"], "references": ["sock drawer", "suitcase"], "input": {"head": "prescription medication", "relation": "AtLocation", "prompt": "You are likely to find a prescription medication in a"}}
{"generation": ["box of chocolates"], "references": ["disneyland"], "input": {"head": "minnie mouse", "relation": "AtLocation", "prompt": "You are likely to find a minnie mouse in a"}}
{"generation": ["forest, or a cave, or a cave-"], "references": ["basement"], "input": {"head": "storehouse", "relation": "AtLocation", "prompt": "You are likely to find a storehouse in a"}}
{"generation": ["park or a city park"], "references": ["carnival", "fairgrounds"], "input": {"head": "ferris wheel", "relation": "AtLocation", "prompt": "You are likely to find a ferris wheel in a"}}
{"generation": ["church or a piano in a school"], "references": ["mercury"], "input": {"head": "beethoven", "relation": "AtLocation", "prompt": "You are likely to find a beethoven in a"}}
{"generation": ["park or a park bench"], "references": ["lawn"], "input": {"head": "croquet game", "relation": "AtLocation", "prompt": "You are likely to find a croquet game in a"}}
{"generation": ["drawer or in a box somewhere"], "references": ["sidewalk"], "input": {"head": "old gum", "relation": "AtLocation", "prompt": "You are likely to find an old gum in a"}}
{"generation": ["city or town that has a good reputation for quality"], "references": ["mall", "town", "strip mall"], "input": {"head": "hairdressing salon", "relation": "AtLocation", "prompt": "You are likely to find a hairdressing salon in a"}}
{"generation": ["area that is not a part of the ocean"], "references": ["earth", "east", "southern hemisphere", "asia", "india", "near india"], "input": {"head": "indian ocean", "relation": "AtLocation", "prompt": "You are likely to find an indian ocean in an"}}
{"generation": ["city or town near you"], "references": ["new york city", "jewish neighborhood", "seattle", "city", "new york", "big city", "jewish neighborhoods", "jerusalem"], "input": {"head": "kosher restaurant", "relation": "AtLocation", "prompt": "You are likely to find a kosher restaurant in a"}}
{"generation": ["restaurant or a restaurant in a restaurant"], "references": ["park", "lawn"], "input": {"head": "gras", "relation": "AtLocation", "prompt": "You are likely to find a gras in a"}}
{"generation": ["small town, or a restaurant in a big city"], "references": ["california", "rice", "nice part of town", "texas", "large city", "new york", "most cities", "spain", "place where spanish people live"], "input": {"head": "spanish restaurant", "relation": "AtLocation", "prompt": "You are likely to find a spanish restaurant in a"}}
{"generation": ["old book, or a magic in a piece of"], "references": ["air", "coven"], "input": {"head": "magic", "relation": "AtLocation", "prompt": "You are likely to find a magic in an"}}
{"generation": ["pub or a matchmaking lobby"], "references": ["sporting event"], "input": {"head": "scoreboard", "relation": "AtLocation", "prompt": "You are likely to find a scoreboard in a"}}
{"generation": ["city, or a sewer in a town"], "references": ["street"], "input": {"head": "sewer", "relation": "AtLocation", "prompt": "You are likely to find a sewer in a"}}
{"generation": ["bottle"], "references": ["nose"], "input": {"head": "snot", "relation": "AtLocation", "prompt": "You are likely to find a snot in a"}}
{"generation": ["area where there are no other sharks"], "references": ["ocean"], "input": {"head": "whale shark", "relation": "AtLocation", "prompt": "You are likely to find a whale shark in an"}}
{"generation": ["supermarket or a shop"], "references": ["desk"], "input": {"head": "waste bin", "relation": "AtLocation", "prompt": "You are likely to find a waste bin in a"}}
{"generation": ["local library or bookstore"], "references": ["post office", "supply room"], "input": {"head": "post binder", "relation": "AtLocation", "prompt": "You are likely to find a post binder in a"}}
{"generation": ["food product if it is contaminated with the bacteria"], "references": ["colon"], "input": {"head": "escherichia coli", "relation": "AtLocation", "prompt": "You are likely to find an escherichia coli in a"}}
{"generation": ["family album, or a photograph of a family member"], "references": ["relatives house"], "input": {"head": "family photograph", "relation": "AtLocation", "prompt": "You are likely to find a family photograph in a"}}
{"generation": ["gutter"], "references": ["roof", "street"], "input": {"head": "gutter", "relation": "AtLocation", "prompt": "You are likely to find a gutter in a"}}
{"generation": ["book, magazine, or other publication"], "references": ["gallery opening"], "input": {"head": "new artwork", "relation": "AtLocation", "prompt": "You are likely to find a new artwork in a"}}
{"generation": ["museum or a museum shop"], "references": ["gallery opening", "museum"], "input": {"head": "curator", "relation": "AtLocation", "prompt": "You are likely to find a curator in a"}}
{"generation": ["park, or in a public place, who is"], "references": ["demonstration"], "input": {"head": "protestor", "relation": "AtLocation", "prompt": "You are likely to find a protestor in a"}}
{"generation": ["crowd of people"], "references": ["plane"], "input": {"head": "terrorist", "relation": "AtLocation", "prompt": "You are likely to find a terrorist in a"}}
{"generation": ["variety of sizes and shapes"], "references": ["house", "ebay", "storage room", "mall", "bedroom", "walmart"], "input": {"head": "storage furniture", "relation": "AtLocation", "prompt": "You are likely to find a storage furniture in a"}}
{"generation": ["shop or a shop window"], "references": ["desktop", "office", "hospital", "friend's house", "telephone booth", "hotel", "every u.s", "end of line", "party", "phone booth", "desk"], "input": {"head": "telephone", "relation": "AtLocation", "prompt": "You are likely to find a telephone in a"}}
{"generation": ["shop or a garage"], "references": ["dining room"], "input": {"head": "gate leg table", "relation": "AtLocation", "prompt": "You are likely to find a gate leg table in a"}}
{"generation": ["store that is not marked with a price tag"], "references": ["supermarket"], "input": {"head": "cart", "relation": "AtLocation", "prompt": "You are likely to find a cart in a"}}
{"generation": ["space station, and you will be exposed to it"], "references": ["space"], "input": {"head": "cosmic radiation", "relation": "AtLocation", "prompt": "You are likely to find a cosmic radiation in a"}}
{"generation": ["drawer or a box in your home"], "references": ["pocket", "purse", "bank", "wallet"], "input": {"head": "dollar bill", "relation": "AtLocation", "prompt": "You are likely to find a dollar bill in a"}}
{"generation": ["file that looks like this:\n\n#!/"], "references": ["surveyor's kit", "guitar", "atom", "junk drawer", "peice of clothing", "kite", "quark", "spool", "bird's nest"], "input": {"head": "string", "relation": "AtLocation", "prompt": "You are likely to find a string in a"}}
{"generation": ["car that is not in good condition"], "references": ["car"], "input": {"head": "brake", "relation": "AtLocation", "prompt": "You are likely to find a brake in a"}}
{"generation": ["few days"], "references": ["freeway"], "input": {"head": "heavy traffic", "relation": "AtLocation", "prompt": "You are likely to find a heavy traffic in a"}}
{"generation": ["open field, or a butterfly in a flowerpot"], "references": ["air", "meadow"], "input": {"head": "butterfly", "relation": "AtLocation", "prompt": "You are likely to find a butterfly in an"}}
{"generation": ["store or restaurant"], "references": ["pantry"], "input": {"head": "perserves", "relation": "AtLocation", "prompt": "You are likely to find a perserves in a"}}
{"generation": ["supermarket that is not suitable for vegans"], "references": ["backpack"], "input": {"head": "snack food", "relation": "AtLocation", "prompt": "You are likely to find a snack food in a"}}
{"generation": ["neighborhood that is not the most desirable"], "references": ["subdivision", "new york city", "brooklyn", "new york", "ring"], "input": {"head": "brownstone", "relation": "AtLocation", "prompt": "You are likely to find a brownstone in a"}}
{"generation": ["computer that is not compatible with your motherboard"], "references": ["computer", "motherboard"], "input": {"head": "cpu", "relation": "AtLocation", "prompt": "You are likely to find a cpu in a"}}
{"generation": ["large, open space"], "references": ["table"], "input": {"head": "place setting", "relation": "AtLocation", "prompt": "You are likely to find a place setting in a"}}
{"generation": ["lot of the comments"], "references": ["fraternity house"], "input": {"head": "rampant stupidity", "relation": "AtLocation", "prompt": "You are likely to find a rampant stupidity in a"}}
{"generation": ["stallion stallion stallion stallion stallion"], "references": ["field"], "input": {"head": "stallion", "relation": "AtLocation", "prompt": "You are likely to find a stallion in a"}}
{"generation": ["field, or a ball in a pond, or"], "references": ["beach"], "input": {"head": "volley ball", "relation": "AtLocation", "prompt": "You are likely to find a volley ball in a"}}
{"generation": ["state of great discontent"], "references": ["country"], "input": {"head": "populace", "relation": "AtLocation", "prompt": "You are likely to find a populace in a"}}
{"generation": ["wine shop"], "references": ["jar"], "input": {"head": "fig and lemon conserve", "relation": "AtLocation", "prompt": "You are likely to find a fig and lemon conserve in a"}}
{"generation": ["drawer or desk drawer"], "references": ["table"], "input": {"head": "pen or pencil", "relation": "AtLocation", "prompt": "You are likely to find a pen or pencil in a"}}
{"generation": ["office, a shop, or a restaurant"], "references": ["office", "mail room of business", "mail room"], "input": {"head": "postal counter", "relation": "AtLocation", "prompt": "You are likely to find a postal counter in an"}}
{"generation": ["museum or a military museum"], "references": ["suface of moon", "moon"], "input": {"head": "american flag", "relation": "AtLocation", "prompt": "You are likely to find an american flag in a"}}
{"generation": ["variety of sizes, shapes, and colors"], "references": ["medicine chest"], "input": {"head": "ginseng", "relation": "AtLocation", "prompt": "You are likely to find a ginseng in a"}}
{"generation": ["bar or restaurant"], "references": ["bar", "neighbor's house", "homeless shelter", "prison", "bridge", "park"], "input": {"head": "alcoholic", "relation": "AtLocation", "prompt": "You are likely to find an alcoholic in a"}}
{"generation": ["a number of different types of people, including the"], "references": ["people"], "input": {"head": "congregation", "relation": "MadeUpOf", "prompt": "a congregation contains"}}
{"generation": ["a reference to the event's target"], "references": ["beginning", "end"], "input": {"head": "event", "relation": "MadeUpOf", "prompt": "an event contains"}}
{"generation": ["a lot of energy"], "references": ["tip off", "half", "basketball play", "rebound", "basketball shot"], "input": {"head": "basketball", "relation": "MadeUpOf", "prompt": "a basketball contains"}}
{"generation": ["a lot of magic"], "references": ["illusion"], "input": {"head": "magic", "relation": "MadeUpOf", "prompt": "a magic contains"}}
{"generation": ["a single parent, a single child, and a"], "references": ["aunt", "brother", "cousin", "grandfather", "neice", "genus", "uncle", "nephew", "grandmother", "relatives", "mother in law", "father in law", "everybody", "grandma", "child", "every grandfather"], "input": {"head": "family", "relation": "MadeUpOf", "prompt": "a family contains"}}
{"generation": ["a ratchet that can be used to tighten or"], "references": ["ratchet wheel", "pawl"], "input": {"head": "ratchet", "relation": "MadeUpOf", "prompt": "a ratchet contains"}}
{"generation": ["a lot of sugar, but it's not a"], "references": ["sugar"], "input": {"head": "juice", "relation": "MadeUpOf", "prompt": "a juice contains"}}
{"generation": ["a battery, a motor, and a gearbox"], "references": ["bicycle seat", "sprocket", "coaster brake", "handlebar", "metal", "kickstand", "pedal", "mudguard", "wheel", "bicycle wheel", "bicycle chain", "chain"], "input": {"head": "bicycle", "relation": "MadeUpOf", "prompt": "a bicycle contains"}}
{"generation": ["a single-channel amplifier and a single-channel"], "references": ["antenna", "radio chassis"], "input": {"head": "receiver", "relation": "MadeUpOf", "prompt": "a receiver contains"}}
{"generation": ["a number of members who are not elected by the"], "references": ["100 members"], "input": {"head": "senate", "relation": "MadeUpOf", "prompt": "a senate contains"}}
{"generation": ["a number of species that are not only capable of"], "references": ["dog"], "input": {"head": "animal kingdom", "relation": "MadeUpOf", "prompt": "an animal kingdom contains"}}
{"generation": ["a small, round, black, egg-shaped"], "references": ["rocker"], "input": {"head": "cradle", "relation": "MadeUpOf", "prompt": "a cradle contains"}}
{"generation": ["a variety of tools and materials to help you get"], "references": ["wrench"], "input": {"head": "tool kit", "relation": "MadeUpOf", "prompt": "a tool kit contains"}}
{"generation": ["a number of different types of materials, including concrete"], "references": ["plumbing", "painting"], "input": {"head": "construction", "relation": "MadeUpOf", "prompt": "a construction contains"}}
{"generation": ["a ball, a ball field is a ball field"], "references": ["box", "outfield", "baseball diamond"], "input": {"head": "ball field", "relation": "MadeUpOf", "prompt": "a ball field contains"}}
{"generation": ["a large number of golf balls"], "references": ["golf club head"], "input": {"head": "golf club", "relation": "MadeUpOf", "prompt": "a golf club contains"}}
{"generation": ["a high percentage of nickel, which is a very"], "references": ["at least one metal"], "input": {"head": "alloy", "relation": "MadeUpOf", "prompt": "an alloy contains"}}
{"generation": ["a dye that is a mixture of two or more"], "references": ["chromophore"], "input": {"head": "dye", "relation": "MadeUpOf", "prompt": "a dye contains"}}
{"generation": ["a small amount of the chemical, which is used"], "references": ["root", "cuticle", "head", "half moon", "shank", "nailhead", "clinch", "keratin", "matrix"], "input": {"head": "nail", "relation": "MadeUpOf", "prompt": "a nail contains"}}
{"generation": ["a very good player, but he's not a"], "references": ["no legs"], "input": {"head": "eel", "relation": "HasProperty", "prompt": "eel is"}}
{"generation": ["that the new version of the game is now available"], "references": ["source"], "input": {"head": "all news", "relation": "HasProperty", "prompt": "all news is"}}
{"generation": ["a very powerful tool for women"], "references": ["very pleasurable", "necessary for mental health"], "input": {"head": "orgasm", "relation": "HasProperty", "prompt": "orgasm is"}}
{"generation": ["a citizen of the United States"], "references": ["responsible for paying state taxes"], "input": {"head": "citizen", "relation": "HasProperty", "prompt": "citizen is"}}
{"generation": ["a project that is not yet complete"], "references": ["interesting"], "input": {"head": "project", "relation": "HasProperty", "prompt": "project is"}}
{"generation": ["a member of the Italian national team and has been"], "references": ["played outside"], "input": {"head": "bocci", "relation": "HasProperty", "prompt": "bocci is"}}
{"generation": ["a great source of protein, fiber, and vitamins"], "references": ["made from soybeans", "used in soups", "very nourishing"], "input": {"head": "tofu", "relation": "HasProperty", "prompt": "tofu is"}}
{"generation": ["a very good example of this"], "references": ["whiskers", "short lifespan"], "input": {"head": "mouse", "relation": "HasProperty", "prompt": "mouse is"}}
{"generation": ["a free, open-source, cross-platform"], "references": ["very useful to openmind", "useful to openmind"], "input": {"head": "lexicon", "relation": "HasProperty", "prompt": "lexicon is"}}
{"generation": ["a very popular fruit in the Philippines"], "references": ["peel", "yellow", "found in store", "eaten", "good to eat"], "input": {"head": "banana", "relation": "HasProperty", "prompt": "banana is"}}
{"generation": ["a key component of the cell wall of plants and"], "references": ["soluble in carbon disulphide"], "input": {"head": "phosphorus", "relation": "HasProperty", "prompt": "phosphorus is"}}
{"generation": ["a great way to get a great deal on a"], "references": ["said to created from chaos"], "input": {"head": "order", "relation": "HasProperty", "prompt": "order is"}}
{"generation": ["a very common and common-sense thing to do"], "references": ["inserted into vagina"], "input": {"head": "penis", "relation": "HasProperty", "prompt": "penis is"}}
{"generation": ["a good place to start"], "references": ["four right angles", "four equal sides", "four corners", "four sides"], "input": {"head": "square", "relation": "HasProperty", "prompt": "square is"}}
{"generation": ["a great way to start your day"], "references": ["pit"], "input": {"head": "peach", "relation": "HasProperty", "prompt": "peach is"}}
{"generation": ["a great place to stay if you're looking for"], "references": ["rather large house"], "input": {"head": "townhouse", "relation": "HasProperty", "prompt": "townhouse is"}}
{"generation": ["a great place to go for a nice meal"], "references": ["good food"], "input": {"head": "spanish restaurant", "relation": "HasProperty", "prompt": "spanish restaurant is"}}
{"generation": ["a very complex system, and it's not just"], "references": ["planets"], "input": {"head": "solar system", "relation": "HasProperty", "prompt": "solar system is"}}
{"generation": ["a great way to get a little extra heat in"], "references": ["chimney"], "input": {"head": "fireplace", "relation": "HasProperty", "prompt": "fireplace is"}}
{"generation": ["a natural sweetener that is used in many foods"], "references": ["sticky", "sweet taste"], "input": {"head": "syrup", "relation": "HasProperty", "prompt": "syrup is"}}
{"generation": ["a very good place to start"], "references": ["one", "dark", "filled with air"], "input": {"head": "hole", "relation": "HasProperty", "prompt": "hole is"}}
{"generation": ["expected to vote on the bill on Thursday"], "references": ["made up of people", "more than one person"], "input": {"head": "committee", "relation": "HasProperty", "prompt": "committee is"}}
{"generation": ["a traditional Norwegian dish made from a type of fish"], "references": ["horrible"], "input": {"head": "lutefisk", "relation": "HasProperty", "prompt": "lutefisk is"}}
{"generation": ["a crime"], "references": ["illegal", "wrong"], "input": {"head": "murder", "relation": "HasProperty", "prompt": "murder is"}}
{"generation": ["be a good thing"], "references": ["party member", "become communist", "empower community"], "input": {"head": "socialist", "relation": "CapableOf", "prompt": "socialist can"}}
{"generation": ["be seen in the video, which was posted on"], "references": ["fire gun", "drive car"], "input": {"head": "police man", "relation": "CapableOf", "prompt": "police man can"}}
{"generation": ["'t afford to pay for a license to fish in"], "references": ["catch large tunafish"], "input": {"head": "deep sea fisherman", "relation": "CapableOf", "prompt": "deep sea fisherman can"}}
{"generation": ["be found in the following locations:\n\nIn"], "references": ["fast for long time", "fast for days"], "input": {"head": "yogi", "relation": "CapableOf", "prompt": "yogi can"}}
{"generation": ["'t help but be impressed by the sheer size of"], "references": ["listen to mockingbird sing"], "input": {"head": "bird lover", "relation": "CapableOf", "prompt": "bird lover can"}}
{"generation": ["be found in the basement of the building"], "references": ["cut stone"], "input": {"head": "stonemason", "relation": "CapableOf", "prompt": "stonemason can"}}
{"generation": ["be used to make a character more or less likely"], "references": ["sell broken goods"], "input": {"head": "shyster", "relation": "CapableOf", "prompt": "shyster can"}}
{"generation": ["be a bit of a pain"], "references": ["listen to music"], "input": {"head": "audiophile", "relation": "CapableOf", "prompt": "audiophile can"}}
{"generation": ["'t be a real detective"], "references": ["trip up cunning adversary"], "input": {"head": "good fictional detective", "relation": "CapableOf", "prompt": "good fictional detective can"}}
{"generation": ["be a very valuable asset to a team"], "references": ["letter name on door", "letter sign"], "input": {"head": "signmaker", "relation": "CapableOf", "prompt": "signmaker can"}}
{"generation": ["be found at: http://www"], "references": ["represent in lawsuit", "state case", "right wrong", "prove case", "put clients mind at ease"], "input": {"head": "attorney", "relation": "CapableOf", "prompt": "attorney can"}}
{"generation": ["be a great asset to your business"], "references": ["call by nickname"], "input": {"head": "close friend", "relation": "CapableOf", "prompt": "close friend can"}}
{"generation": ["be used to make a lot of things"], "references": ["charging into battle", "free damsel in distress", "company lord", "fence during duel", "ride horse", "storm castle"], "input": {"head": "knight", "relation": "CapableOf", "prompt": "knight can"}}
{"generation": ["be a very difficult thing to deal with"], "references": ["care for elderly parents"], "input": {"head": "adult child", "relation": "CapableOf", "prompt": "adult child can"}}
{"generation": ["be done in a slow cooker"], "references": ["cut zucchini"], "input": {"head": "prep cook", "relation": "CapableOf", "prompt": "prep cook can"}}
{"generation": ["be a very rewarding experience"], "references": ["create statues", "form piece of art", "produce statue"], "input": {"head": "sculptor", "relation": "CapableOf", "prompt": "sculptor can"}}
{"generation": ["be a very good thing"], "references": ["travel to europe"], "input": {"head": "mormon", "relation": "CapableOf", "prompt": "mormon can"}}
{"generation": ["be a great companion for a child"], "references": ["learn new tricks"], "input": {"head": "old dog", "relation": "CapableOf", "prompt": "old dog can"}}
{"generation": ["be used to buy items from the merchant"], "references": ["sell goods", "selling things to people", "selling things", "sell things", "selling", "get paid", "shop for", "exchange money for goods", "carry credit", "buying and selling goods", "trading goods", "obtaining merchandise", "ship order", "selling products", "distributing products", "offer deal"], "input": {"head": "merchant", "relation": "CapableOf", "prompt": "merchant can"}}
{"generation": ["be a hero, and the world is full of"], "references": ["hope for peace"], "input": {"head": "each person in world", "relation": "CapableOf", "prompt": "each person in world can"}}
{"generation": ["be found in the following locations:\n\nThe"], "references": ["beginning school"], "input": {"head": "kindergartener", "relation": "CapableOf", "prompt": "kindergartener can"}}
{"generation": ["be a person who is not a victim of domestic"], "references": ["wall off feelings"], "input": {"head": "hurt person", "relation": "CapableOf", "prompt": "hurt person can"}}
{"generation": ["do it)\n\n- The ability to use"], "references": ["set record"], "input": {"head": "with enough practice person", "relation": "CapableOf", "prompt": "with enough practice person can"}}
{"generation": ["be a woman, a man, a trans person"], "references": ["turn heads"], "input": {"head": "supermodel", "relation": "CapableOf", "prompt": "supermodel can"}}
{"generation": ["be used to kill the enemy leader"], "references": ["prepare hit list"], "input": {"head": "assassin", "relation": "CapableOf", "prompt": "assassin can"}}
{"generation": ["be a good thing"], "references": ["agitate", "carry banner"], "input": {"head": "anarchist", "relation": "CapableOf", "prompt": "anarchist can"}}
{"generation": ["be found here"], "references": ["go unanswered"], "input": {"head": "cry for help", "relation": "CapableOf", "prompt": "cry for help can"}}
{"generation": ["'t be a liability"], "references": ["clear crease", "head ball"], "input": {"head": "goalie", "relation": "CapableOf", "prompt": "goalie can"}}
{"generation": ["be found in the following places:\n\nThe"], "references": ["air grievences"], "input": {"head": "malcontent", "relation": "CapableOf", "prompt": "malcontent can"}}
{"generation": ["be a very useful skill for a player"], "references": ["shore up bridge"], "input": {"head": "mechanical engineer", "relation": "CapableOf", "prompt": "mechanical engineer can"}}
{"generation": ["be used to send a message to a recipient"], "references": ["keep gift", "receive gift", "thank gift giver", "except gift", "reply to e mail", "thank giver"], "input": {"head": "recipient", "relation": "CapableOf", "prompt": "recipient can"}}
{"generation": ["to kill as many people as possible, and that"], "references": ["violence"], "input": {"head": "terrorist", "relation": "Desires", "prompt": "a terrorist desires"}}
{"generation": ["to be a bigot"], "references": ["advice"], "input": {"head": "bigot", "relation": "NotDesires", "prompt": "a bigot does not desire"}}
{"generation": ["it was just a bunch of people who were interested"], "references": ["PersonX researches an article about current events"], "input": {"head": "PersonX covers every aspect", "relation": "isAfter", "prompt": "PersonX covers every aspect. Before that,"}}
{"generation": ["he wants to go to the beach"], "references": ["PersonX sees a flyer for a festival"], "input": {"head": "PersonX wants to go", "relation": "isAfter", "prompt": "PersonX wants to go. Before that,"}}
{"generation": ["he was a teacher"], "references": ["PersonX is unemployed"], "input": {"head": "PersonX finds another job", "relation": "isAfter", "prompt": "PersonX finds another job. Before that,"}}
{"generation": ["he's been a member of the team that won"], "references": ["PersonX is driving a fast car"], "input": {"head": "PersonX blows through town", "relation": "isAfter", "prompt": "PersonX blows through town. Before that,"}}
{"generation": ["it was a horse"], "references": ["PersonX needs a new hobby"], "input": {"head": "PersonX rids horses", "relation": "isAfter", "prompt": "PersonX rids horses. Before that,"}}
{"generation": ["he was a very good player, but he was"], "references": ["PersonX attends game night", "PersonX plays a game of dominoes", "PersonX plays a game of poker"], "input": {"head": "PersonX loses easily", "relation": "isAfter", "prompt": "PersonX loses easily. Before that,"}}
{"generation": ["the only way to know if someone was a good"], "references": ["PersonX hits PersonY with their car"], "input": {"head": "PersonX affects PersonY's lives", "relation": "isAfter", "prompt": "PersonX affects PersonY's lives. Before that,"}}
{"generation": ["PersonX is not dead"], "references": ["PersonX fights PersonY on the bridge"], "input": {"head": "PersonX puts PersonY to death", "relation": "isAfter", "prompt": "PersonX puts PersonY to death. Before that,"}}
{"generation": ["he was a very good player, but he was"], "references": ["PersonX bought instruments to practice with"], "input": {"head": "PersonX practices very hard", "relation": "isAfter", "prompt": "PersonX practices very hard. Before that,"}}
{"generation": ["the player had to go through a series of dialog"], "references": ["PersonX sees a fight break out"], "input": {"head": "PersonX handles the situation", "relation": "isAfter", "prompt": "PersonX handles the situation. Before that,"}}
{"generation": ["he was a rapper"], "references": ["PersonX raps every day"], "input": {"head": "PersonX wants to be a rapper", "relation": "isAfter", "prompt": "PersonX wants to be a rapper. Before that,"}}
{"generation": ["he's got to get to the door"], "references": ["PersonX puts on his shoes"], "input": {"head": "PersonX moves toward the door", "relation": "isAfter", "prompt": "PersonX moves toward the door. Before that,"}}
{"generation": ["PersonX's book is empty"], "references": ["PersonX shamelessly plugs their book at a funeral", "PersonX reads on the train"], "input": {"head": "PersonX leaves PersonX's book", "relation": "isAfter", "prompt": "PersonX leaves PersonX's book. Before that,"}}
{"generation": ["they had been sitting in the same position, but"], "references": ["PersonX sits in PersonY's seat"], "input": {"head": "PersonX leans back in PersonY's seat", "relation": "isAfter", "prompt": "PersonX leans back in PersonY's seat. Before that,"}}
{"generation": ["he has to get to the airport"], "references": ["PersonX finishes drinking at a bar", "PersonX was drunk"], "input": {"head": "PersonX decides to drive home", "relation": "isAfter", "prompt": "PersonX decides to drive home. Before that,"}}
{"generation": ["the winner of the \"Best of the Best\""], "references": ["PersonX enters a competition"], "input": {"head": "PersonX wins the prize", "relation": "isAfter", "prompt": "PersonX wins the prize. Before that,"}}
{"generation": ["he wore it in the first episode of the series"], "references": ["PersonX bought a new shirt", "PersonX has a favorite hat", "PersonX buys a new necklace"], "input": {"head": "PersonX wears it everywhere", "relation": "isAfter", "prompt": "PersonX wears it everywhere. Before that,"}}
{"generation": ["I had to take a test on the subject"], "references": ["PersonX takes a college course", "PersonX struggles in class", "PersonX enrolls in class"], "input": {"head": "PersonX studies for an exam", "relation": "isAfter", "prompt": "PersonX studies for an exam. Before that,"}}
{"generation": ["we have a new episode of the podcast, and"], "references": ["PersonX watches the ball drop"], "input": {"head": "PersonX celebrates the new year", "relation": "isAfter", "prompt": "PersonX celebrates the new year. Before that,"}}
{"generation": ["the milk gets the man"], "references": ["PersonX goes to the grocery store for cereal and milk"], "input": {"head": "PersonX gets the milk", "relation": "isAfter", "prompt": "PersonX gets the milk. Before that,"}}
{"generation": ["it's the first in line"], "references": ["PersonX runs to the front", "PersonX gets to the coffee shop early", "PersonX plans to get concert tickets"], "input": {"head": "PersonX is first in line", "relation": "isAfter", "prompt": "PersonX is first in line. Before that,"}}
{"generation": ["he has to get a date with the girl he"], "references": ["PersonX is interested in someone"], "input": {"head": "PersonX agrees to a date", "relation": "isAfter", "prompt": "PersonX agrees to a date. Before that,"}}
{"generation": ["we have to create a PersonX and PersonY"], "references": ["PersonX starts a group"], "input": {"head": "PersonX forms PersonY association", "relation": "isAfter", "prompt": "PersonX forms PersonY association. Before that,"}}
{"generation": ["PersonX had been in a relationship with PersonY"], "references": ["PersonX gets a call from PersonX's mother"], "input": {"head": "PersonX visits PersonX's mother", "relation": "isAfter", "prompt": "PersonX visits PersonX's mother. Before that,"}}
{"generation": ["PersonX conducts PersonY analysis"], "references": ["PersonX grabs the data print out"], "input": {"head": "PersonX conducts PersonY analysis", "relation": "isAfter", "prompt": "PersonX conducts PersonY analysis. Before that,"}}
{"generation": ["I had a friend who was a bit of a"], "references": ["PersonX feels tied down and wants more freedom", "PersonX has cheated on their boyfriend", "PersonX goes on a date with someone"], "input": {"head": "PersonX dumps by PersonX's boyfriend", "relation": "isAfter", "prompt": "PersonX dumps by PersonX's boyfriend. Before that,"}}
{"generation": ["he has to get a dog"], "references": ["PersonX wants a companion"], "input": {"head": "PersonX decides to get a dog", "relation": "isAfter", "prompt": "PersonX decides to get a dog. Before that,"}}
{"generation": ["he was a regular guy who was just trying to"], "references": ["PersonX goes to the night club downtown"], "input": {"head": "PersonX dances all night", "relation": "isAfter", "prompt": "PersonX dances all night. Before that,"}}
{"generation": ["he was a regular guy who was just trying to"], "references": ["PersonX goes on vacation", "PersonX visits their psychotherapist"], "input": {"head": "PersonX has never been happier", "relation": "isAfter", "prompt": "PersonX has never been happier. Before that,"}}
{"generation": ["PersonX had a wallet with a balance of 0"], "references": ["PersonX goes to the store"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "isAfter", "prompt": "PersonX loses PersonY's wallet. Before that,"}}
{"generation": ["he was a professional wrestler"], "references": ["PersonX books an adventure trip in colorado"], "input": {"head": "PersonX goes white water rafting", "relation": "isAfter", "prompt": "PersonX goes white water rafting. Before that,"}}
{"generation": ["he was a normal guy"], "references": ["PersonX is wheeled into the operating room"], "input": {"head": "PersonX gets plastic surgery", "relation": "isAfter", "prompt": "PersonX gets plastic surgery. Before that,"}}
{"generation": ["the student must pass the exam on the first try"], "references": ["PersonX studies all night long"], "input": {"head": "PersonX passes the exam", "relation": "isAfter", "prompt": "PersonX passes the exam. Before that,"}}
{"generation": ["he was just a little scared"], "references": ["PersonX reads a book on how to ride their bikes safely"], "input": {"head": "PersonX is no longer scared", "relation": "isAfter", "prompt": "PersonX is no longer scared. Before that,"}}
{"generation": ["the mailbox is empty"], "references": ["PersonX sees the mailman leave his porch"], "input": {"head": "PersonX checks PersonX's mailbox", "relation": "isAfter", "prompt": "PersonX checks PersonX's mailbox. Before that,"}}
{"generation": ["he wants to learn a new language"], "references": ["PersonX buys tickets for a european vacation"], "input": {"head": "PersonX wants to learn a new language", "relation": "isAfter", "prompt": "PersonX wants to learn a new language. Before that,"}}
{"generation": ["he was a student at the University of California,"], "references": ["PersonX goes to the market"], "input": {"head": "PersonX buys dog food", "relation": "isAfter", "prompt": "PersonX buys dog food. Before that,"}}
{"generation": ["the only way to get a hat was to get"], "references": ["PersonX gives a rousing speech"], "input": {"head": "PersonX throws PersonX's hat in the ring", "relation": "isAfter", "prompt": "PersonX throws PersonX's hat in the ring. Before that,"}}
{"generation": ["the game would crash when you tried to use the"], "references": ["PersonX notices the sink is leaking"], "input": {"head": "PersonX fixes the issue", "relation": "isAfter", "prompt": "PersonX fixes the issue. Before that,"}}
{"generation": ["it was the only game I played"], "references": ["PersonX wants to save up for a new car"], "input": {"head": "PersonX saves for years", "relation": "isAfter", "prompt": "PersonX saves for years. Before that,"}}
{"generation": ["he was a member of the team that won the"], "references": ["PersonX directs a movie"], "input": {"head": "PersonX wins several awards", "relation": "isAfter", "prompt": "PersonX wins several awards. Before that,"}}
{"generation": ["he was a normal kid"], "references": ["PersonX studies harder"], "input": {"head": "PersonX does better in school", "relation": "isAfter", "prompt": "PersonX does better in school. Before that,"}}
{"generation": ["he was a member of the \"Black Knights\","], "references": ["PersonX onx lights a cigarette"], "input": {"head": "PersonX blows smoke", "relation": "isAfter", "prompt": "PersonX blows smoke. Before that,"}}
{"generation": ["he had been in the middle of a conversation with"], "references": ["PersonX hears there is an emergency at work"], "input": {"head": "PersonX quickly called", "relation": "isAfter", "prompt": "PersonX quickly called. Before that,"}}
{"generation": ["you can use the same account for both PersonX"], "references": ["PersonX is not the best hacker"], "input": {"head": "PersonX gives you PersonY account", "relation": "isAfter", "prompt": "PersonX gives you PersonY account. Before that,"}}
{"generation": ["he was a professional wrestler"], "references": ["PersonX goes to the theatre"], "input": {"head": "PersonX watches scary movies", "relation": "isAfter", "prompt": "PersonX watches scary movies. Before that,"}}
{"generation": ["you can order a single item from the store"], "references": ["PersonX reads the menu of cheesecakes"], "input": {"head": "PersonX orders one", "relation": "isAfter", "prompt": "PersonX orders one. Before that,"}}
{"generation": ["it was just a bunch of people who were trying"], "references": ["PersonX knows it's PersonY's birthday", "PersonX starts dating someone new"], "input": {"head": "PersonX makes PersonY feel good", "relation": "isAfter", "prompt": "PersonX makes PersonY feel good. Before that,"}}
{"generation": ["PersonX has to kill PersonY"], "references": ["PersonX swears revenge on PersonY", "PersonX finds out PersonY is a thief", "PersonX grabs a knife"], "input": {"head": "PersonX goes to kill PersonY", "relation": "isAfter", "prompt": "PersonX goes to kill PersonY. Before that,"}}
{"generation": ["PersonX finds the person who killed his daughter"], "references": ["PersonX is shouting their daughter's name", "PersonX goes to the school"], "input": {"head": "PersonX finds PersonX's daughter", "relation": "isAfter", "prompt": "PersonX finds PersonX's daughter. Before that,"}}
{"generation": ["it was a little lighter and a little more compact"], "references": ["PersonX climbs the hill"], "input": {"head": "PersonX seems larger and heavier at that elevation", "relation": "isAfter", "prompt": "PersonX seems larger and heavier at that elevation. Before that,"}}
{"generation": ["PersonX is fired from PersonX's job"], "references": ["PersonX smokes marijuana"], "input": {"head": "PersonX is fired from PersonX's job", "relation": "isAfter", "prompt": "PersonX is fired from PersonX's job. Before that,"}}
{"generation": ["PersonX asks PersonY's doctor"], "references": ["PersonX wonders what a strange lump is"], "input": {"head": "PersonX asks PersonX's doctor", "relation": "isAfter", "prompt": "PersonX asks PersonX's doctor. Before that,"}}
{"generation": ["PersonX was in the middle of a conversation with"], "references": ["PersonX learns PersonY is ill"], "input": {"head": "PersonX gives PersonY leave", "relation": "isAfter", "prompt": "PersonX gives PersonY leave. Before that,"}}
{"generation": ["PersonX had to find PersonY's location"], "references": ["PersonX looks for a gift for PersonY"], "input": {"head": "PersonX finds what PersonY wanted", "relation": "isAfter", "prompt": "PersonX finds what PersonY wanted. Before that,"}}
{"generation": ["PersonX is knocked over by PersonY"], "references": ["PersonX balances on a beam"], "input": {"head": "PersonX knocks PersonX over with a feather", "relation": "isAfter", "prompt": "PersonX knocks PersonX over with a feather. Before that,"}}
{"generation": ["he had been in the hospital for a week"], "references": ["PersonX sees a car accident happen", "PersonX sees PersonY in a seizure", "PersonX witnesses a car accident"], "input": {"head": "PersonX calls the ambulance", "relation": "isAfter", "prompt": "PersonX calls the ambulance. Before that,"}}
{"generation": ["he was a fan of the show \"The Simpsons"], "references": ["PersonX gets up early", "PersonX leaves work early"], "input": {"head": "PersonX watches cartoons", "relation": "isAfter", "prompt": "PersonX watches cartoons. Before that,"}}
{"generation": ["he was wearing a white shirt and a black tie"], "references": ["PersonX jumps out of the shower"], "input": {"head": "PersonX grabs a towel", "relation": "isAfter", "prompt": "PersonX grabs a towel. Before that,"}}
{"generation": ["he wants to run a marathon"], "references": ["PersonX starts to run", "PersonX runs a mile", "PersonX starts running daily"], "input": {"head": "PersonX wants to run a marathon", "relation": "isAfter", "prompt": "PersonX wants to run a marathon. Before that,"}}
{"generation": ["PersonX is a simple wrapper around PersonX"], "references": ["PersonX learns to crawl", "PersonX gets on her feet"], "input": {"head": "PersonX takes PersonX's first steps", "relation": "isAfter", "prompt": "PersonX takes PersonX's first steps. Before that,"}}
{"generation": ["he was a musician"], "references": ["PersonX turns on PersonX's radio"], "input": {"head": "PersonX listens to music", "relation": "isAfter", "prompt": "PersonX listens to music. Before that,"}}
{"generation": ["he was a high school student"], "references": ["PersonX trains for a marathon"], "input": {"head": "PersonX runs a marathon", "relation": "isAfter", "prompt": "PersonX runs a marathon. Before that,"}}
{"generation": ["he was a member of the group \"The Young"], "references": ["PersonX saw PersonY fall down"], "input": {"head": "PersonX makes jokes", "relation": "isAfter", "prompt": "PersonX makes jokes. Before that,"}}
{"generation": ["he was a member of the \"Boys of"], "references": ["PersonX pours a pitcher of water"], "input": {"head": "PersonX spills water on the floor", "relation": "isAfter", "prompt": "PersonX spills water on the floor. Before that,"}}
{"generation": ["I was a bit of a pessimist"], "references": ["PersonX lost their keys"], "input": {"head": "PersonX feels hopeless", "relation": "isAfter", "prompt": "PersonX feels hopeless. Before that,"}}
{"generation": ["he meets the love of his life"], "references": ["PersonX goes on a dating site"], "input": {"head": "PersonX meets the love of PersonX's life", "relation": "isAfter", "prompt": "PersonX meets the love of PersonX's life. Before that,"}}
{"generation": ["PersonX was the only one who could see Person"], "references": ["PersonX attacks PersonY with great arguments"], "input": {"head": "PersonX sends PersonY over the edge", "relation": "isAfter", "prompt": "PersonX sends PersonY over the edge. Before that,"}}
{"generation": ["PersonX had to pay PersonY's one"], "references": ["PersonX sees that PersonY wants a cupcake"], "input": {"head": "PersonX buys PersonY's one", "relation": "isAfter", "prompt": "PersonX buys PersonY's one. Before that,"}}
{"generation": ["though, he's got to get his hands on"], "references": ["PersonX watches figure skating"], "input": {"head": "PersonX wants to give it a try", "relation": "isAfter", "prompt": "PersonX wants to give it a try. Before that,"}}
{"generation": ["PersonX was a cat"], "references": ["PersonX goes to the pet store"], "input": {"head": "PersonX has a cat named PersonY", "relation": "isAfter", "prompt": "PersonX has a cat named PersonY. Before that,"}}
{"generation": ["the only way to get a child to pay for"], "references": ["PersonX talks to PersonY's kids"], "input": {"head": "PersonX fees PersonY's kids", "relation": "isAfter", "prompt": "PersonX fees PersonY's kids. Before that,"}}
{"generation": ["PersonX was behind PersonY"], "references": ["PersonX chases PersonY in a high speed chase"], "input": {"head": "PersonX closes behind PersonY", "relation": "isAfter", "prompt": "PersonX closes behind PersonY. Before that,"}}
{"generation": ["he was a member of the gym"], "references": ["PersonX draws up a healthy living plan"], "input": {"head": "PersonX joins a gym", "relation": "isAfter", "prompt": "PersonX joins a gym. Before that,"}}
{"generation": ["he was a member of the team that won the"], "references": ["PersonX regularly arrives late to work"], "input": {"head": "PersonX gets the sack", "relation": "isAfter", "prompt": "PersonX gets the sack. Before that,"}}
{"generation": ["the only thing that could be said about the game"], "references": ["PersonX went outside during the summer"], "input": {"head": "PersonX feels the heat", "relation": "isAfter", "prompt": "PersonX feels the heat. Before that,"}}
{"generation": ["PersonX was the same as PersonY"], "references": ["PersonX donates money to PersonY"], "input": {"head": "PersonX changes PersonY life", "relation": "isAfter", "prompt": "PersonX changes PersonY life. Before that,"}}
{"generation": ["it was just a bunch of people who were interested"], "references": ["PersonX broke their laptop", "PersonX just woke up"], "input": {"head": "PersonX needs something", "relation": "isAfter", "prompt": "PersonX needs something. Before that,"}}
{"generation": ["he was a little boy who was born with a"], "references": ["PersonX falls off a bridge"], "input": {"head": "PersonX holds on for dear life", "relation": "isAfter", "prompt": "PersonX holds on for dear life. Before that,"}}
{"generation": ["it was a bunch of people who were trying to"], "references": ["PersonX buys a model car"], "input": {"head": "PersonX puts it together", "relation": "isAfter", "prompt": "PersonX puts it together. Before that,"}}
{"generation": ["he was a very calm person"], "references": ["PersonX walks onto the stage"], "input": {"head": "PersonX gets very nervous", "relation": "isAfter", "prompt": "PersonX gets very nervous. Before that,"}}
{"generation": ["he was a member of the team that won the"], "references": ["PersonX finishes university"], "input": {"head": "PersonX moves home", "relation": "isAfter", "prompt": "PersonX moves home. Before that,"}}
{"generation": ["he was a bit nervous"], "references": ["PersonX drinks calming tea before a date"], "input": {"head": "PersonX is still nervous", "relation": "isAfter", "prompt": "PersonX is still nervous. Before that,"}}
{"generation": ["it was PersonY"], "references": ["PersonX checks the weather outside"], "input": {"head": "PersonX covers PersonX's head", "relation": "isAfter", "prompt": "PersonX covers PersonX's head. Before that,"}}
{"generation": ["he was a member of the \"Boys of"], "references": ["PersonX makes a funny joke"], "input": {"head": "PersonX laughs PersonY's asses off", "relation": "isAfter", "prompt": "PersonX laughs PersonY's asses off. Before that,"}}
{"generation": ["PersonX had a birthday"], "references": ["PersonX gets really busy at work"], "input": {"head": "PersonX forgets PersonY's birthday", "relation": "isAfter", "prompt": "PersonX forgets PersonY's birthday. Before that,"}}
{"generation": ["PersonX was in the air, and PersonY"], "references": ["PersonX gives PersonY a pile driver in the ring", "PersonX smashes PersonY's head into the wall", "PersonX crashes the car"], "input": {"head": "PersonX breaks PersonY neck", "relation": "isAfter", "prompt": "PersonX breaks PersonY neck. Before that,"}}
{"generation": ["he has a conversation with his mother"], "references": ["PersonX drives a car to the office"], "input": {"head": "PersonX goes to a doctor 's appointment", "relation": "isAfter", "prompt": "PersonX goes to a doctor 's appointment. Before that,"}}
{"generation": ["the person was scheduled to be in the office at"], "references": ["PersonX can't make the appointment today"], "input": {"head": "PersonX reschedules PersonY's appointment", "relation": "isAfter", "prompt": "PersonX reschedules PersonY's appointment. Before that,"}}
{"generation": ["PersonX is a citizen of the country"], "references": ["PersonX enlists in the military"], "input": {"head": "PersonX dies for PersonX's country", "relation": "isAfter", "prompt": "PersonX dies for PersonX's country. Before that,"}}
{"generation": ["he was a professional athlete"], "references": ["PersonX likes to go outside"], "input": {"head": "PersonX walks barefoot", "relation": "isAfter", "prompt": "PersonX walks barefoot. Before that,"}}
{"generation": ["PersonY is planning to get married"], "references": ["PersonX is hired by PersonY"], "input": {"head": "PersonX is planning PersonY's wedding", "relation": "isAfter", "prompt": "PersonX is planning PersonY's wedding. Before that,"}}
{"generation": ["he was a member of the team that created the"], "references": ["PersonX applies for different positions at a company"], "input": {"head": "PersonX gets work", "relation": "isAfter", "prompt": "PersonX gets work. Before that,"}}
{"generation": ["PersonX has to get to the top of the"], "references": ["PersonX writes in their journal that they made the right decisions"], "input": {"head": "PersonX pursues PersonX's course", "relation": "isAfter", "prompt": "PersonX pursues PersonX's course. Before that,"}}
{"generation": ["PersonX was a homeless person"], "references": ["PersonX notices the dog is still in the burning house"], "input": {"head": "PersonX rescues PersonX's dog", "relation": "isAfter", "prompt": "PersonX rescues PersonX's dog. Before that,"}}
{"generation": ["PersonX was the only one"], "references": ["PersonX asks if PersonY would like to hang out"], "input": {"head": "PersonX keeps PersonY around", "relation": "isAfter", "prompt": "PersonX keeps PersonY around. Before that,"}}
{"generation": ["PersonX had to get to the car, and"], "references": ["PersonX gets their towline out"], "input": {"head": "PersonX pulls PersonY's car", "relation": "isAfter", "prompt": "PersonX pulls PersonY's car. Before that,"}}
{"generation": ["PersonX was a news aggregator"], "references": ["PersonX hears news"], "input": {"head": "PersonX brings PersonY news", "relation": "isAfter", "prompt": "PersonX brings PersonY news. Before that,"}}
{"generation": ["he was a member of the group \"The New"], "references": ["PersonX buys bubbles"], "input": {"head": "PersonX blows bubbles", "relation": "isAfter", "prompt": "PersonX blows bubbles. Before that,"}}
{"generation": ["the company had been working on a new version of"], "references": ["PersonX applies to four colleges and is accepted at all of them"], "input": {"head": "PersonX announces PersonX's decision", "relation": "isAfter", "prompt": "PersonX announces PersonX's decision. Before that,"}}
{"generation": ["he was a good friend of mine"], "references": ["PersonX trains as a boxer"], "input": {"head": "PersonX always fought", "relation": "isAfter", "prompt": "PersonX always fought. Before that,"}}
{"generation": ["PersonX asks PersonY to speak"], "references": ["PersonX is at a wedding", "PersonX sees PersonY with their hand in the air", "PersonX plugs in the microphone"], "input": {"head": "PersonX asks PersonY to speak", "relation": "isAfter", "prompt": "PersonX asks PersonY to speak. Before that,"}}
{"generation": ["he was a student at the University of California,"], "references": ["PersonX gets their paycheck"], "input": {"head": "PersonX drops money off at home", "relation": "isAfter", "prompt": "PersonX drops money off at home. Before that,"}}
{"generation": ["PersonX's lance was broken by the enemy"], "references": ["PersonX practices fencing"], "input": {"head": "PersonX breaks PersonX's lance", "relation": "isAfter", "prompt": "PersonX breaks PersonX's lance. Before that,"}}
{"generation": ["he was a good guy"], "references": ["PersonX attempts bungy jumping"], "input": {"head": "PersonX gets hurt", "relation": "isAfter", "prompt": "PersonX gets hurt. Before that,"}}
{"generation": ["it was just a matter of how hard the person"], "references": ["PersonX raises hand"], "input": {"head": "PersonX hits PersonY hard", "relation": "isAfter", "prompt": "PersonX hits PersonY hard. Before that,"}}
{"generation": ["PersonX has to find PersonY's chair"], "references": ["PersonX invites PersonY to video games"], "input": {"head": "PersonX finds PersonY another chair", "relation": "isAfter", "prompt": "PersonX finds PersonY another chair. Before that,"}}
{"generation": ["PersonX is in the middle of a fight with"], "references": ["PersonX sees PersonY drowning"], "input": {"head": "PersonX pulls PersonY to safety", "relation": "isAfter", "prompt": "PersonX pulls PersonY to safety. Before that,"}}
{"generation": ["he was a car salesman"], "references": ["PersonX setup a garage sale"], "input": {"head": "PersonX has a garage sale", "relation": "isAfter", "prompt": "PersonX has a garage sale. Before that,"}}
{"generation": ["he was a good guy"], "references": ["PersonX wants to make the sale"], "input": {"head": "PersonX pulls the wool over PersonY's eyes", "relation": "isAfter", "prompt": "PersonX pulls the wool over PersonY's eyes. Before that,"}}
{"generation": ["he was a man who was a hero"], "references": ["PersonX turns 98 year old"], "input": {"head": "PersonX dies peacefully", "relation": "isAfter", "prompt": "PersonX dies peacefully. Before that,"}}
{"generation": ["he was a member of the \"Crazy Kids"], "references": ["PersonX buys a tent"], "input": {"head": "PersonX is camping in the woods", "relation": "isAfter", "prompt": "PersonX is camping in the woods. Before that,"}}
{"generation": ["he was a normal human"], "references": ["PersonX chokes on the candy"], "input": {"head": "PersonX goes blue", "relation": "isAfter", "prompt": "PersonX goes blue. Before that,"}}
{"generation": ["he was a good friend of the protagonist"], "references": ["PersonX had a shower", "PersonX walks outside in the cold without a jacket", "PersonX didn't wash hands"], "input": {"head": "PersonX falls ill", "relation": "isAfter", "prompt": "PersonX falls ill. Before that,"}}
{"generation": ["PersonX was the temperature of PersonY"], "references": ["PersonX saw that PersonY was coughing"], "input": {"head": "PersonX takes PersonY's temperature", "relation": "isAfter", "prompt": "PersonX takes PersonY's temperature. Before that,"}}
{"generation": ["he was a man who was a bit of a"], "references": ["PersonX goes to a restaurant"], "input": {"head": "PersonX meets PersonX's husband", "relation": "isAfter", "prompt": "PersonX meets PersonX's husband. Before that,"}}
{"generation": ["PersonX called PersonY"], "references": ["PersonX got bad news from the doctor"], "input": {"head": "PersonX calls PersonY this morning", "relation": "isAfter", "prompt": "PersonX calls PersonY this morning. Before that,"}}
{"generation": ["PersonX finds PersonX's shoes"], "references": ["PersonX looks for PersonX's shoes"], "input": {"head": "PersonX finds PersonX's shoes", "relation": "isAfter", "prompt": "PersonX finds PersonX's shoes. Before that,"}}
{"generation": ["he's been sleeping for a while"], "references": ["PersonX wakes up early", "PersonX suddenly woke up", "PersonX wakes up to drink water"], "input": {"head": "PersonX falls back asleep", "relation": "isAfter", "prompt": "PersonX falls back asleep. Before that,"}}
{"generation": ["he wants to break up with you"], "references": ["PersonX talks to PersonX's boyfriend about his anger"], "input": {"head": "PersonX wants to break up", "relation": "isAfter", "prompt": "PersonX wants to break up. Before that,"}}
{"generation": ["he was a member of the team that won the"], "references": ["PersonX comes across someone in a dark alley"], "input": {"head": "PersonX runs for PersonX's lives", "relation": "isAfter", "prompt": "PersonX runs for PersonX's lives. Before that,"}}
{"generation": ["I was a skateboarder, and I was"], "references": ["PersonX goes to the park"], "input": {"head": "PersonX skateboards with PersonY's friends", "relation": "isAfter", "prompt": "PersonX skateboards with PersonY's friends. Before that,"}}
{"generation": ["he was a good guy"], "references": ["PersonX is turned down by person"], "input": {"head": "PersonX gets so frustrated", "relation": "isAfter", "prompt": "PersonX gets so frustrated. Before that,"}}
{"generation": ["he was a normal person"], "references": ["PersonX took a computer class"], "input": {"head": "PersonX learns a new skill", "relation": "isAfter", "prompt": "PersonX learns a new skill. Before that,"}}
{"generation": ["he was a normal person"], "references": ["PersonX visits the circus"], "input": {"head": "PersonX gets a balloon", "relation": "isAfter", "prompt": "PersonX gets a balloon. Before that,"}}
{"generation": ["it was a very small group of people who were"], "references": ["PersonX goes to look for a four leaf clover", "PersonX looks for it"], "input": {"head": "PersonX finds it anywhere", "relation": "isAfter", "prompt": "PersonX finds it anywhere. Before that,"}}
{"generation": ["PersonX is looking at the person's face"], "references": ["PersonX asks PersonY for a kiss"], "input": {"head": "PersonX looks on PersonY's face", "relation": "isAfter", "prompt": "PersonX looks on PersonY's face. Before that,"}}
{"generation": ["he bought a new video game"], "references": ["PersonX went to the store", "PersonX saved their allowance for several weeks", "PersonX buys a new gaming console"], "input": {"head": "PersonX buys a new video game", "relation": "isAfter", "prompt": "PersonX buys a new video game. Before that,"}}
{"generation": ["he wants to know what the hell is going on"], "references": ["PersonX sees a commercial on tv"], "input": {"head": "PersonX wants some ice cream", "relation": "isAfter", "prompt": "PersonX wants some ice cream. Before that,"}}
{"generation": ["he was a member of the National Assembly"], "references": ["PersonX drafts a document"], "input": {"head": "PersonX sends document to parliament", "relation": "isAfter", "prompt": "PersonX sends document to parliament. Before that,"}}
{"generation": ["PersonX is the only one who can see Person"], "references": ["PersonX follows PersonY around"], "input": {"head": "PersonX grows upon PersonY", "relation": "isAfter", "prompt": "PersonX grows upon PersonY. Before that,"}}
{"generation": ["he was a dog"], "references": ["PersonX makes a sign for the pet store"], "input": {"head": "PersonX has a litter of puppies", "relation": "isAfter", "prompt": "PersonX has a litter of puppies. Before that,"}}
{"generation": ["he was a regular guy who was just trying to"], "references": ["PersonX buys a lottery ticket"], "input": {"head": "PersonX hits it big", "relation": "isAfter", "prompt": "PersonX hits it big. Before that,"}}
{"generation": ["PersonX sees PersonX's dad"], "references": ["PersonX returns to their hometown"], "input": {"head": "PersonX sees PersonX's mom", "relation": "isAfter", "prompt": "PersonX sees PersonX's mom. Before that,"}}
{"generation": ["he was just a person"], "references": ["PersonX attends a private school", "PersonX moves to the dorm", "PersonX lives next door to PersonY"], "input": {"head": "PersonX sees PersonY every day", "relation": "isAfter", "prompt": "PersonX sees PersonY every day. Before that,"}}
{"generation": ["PersonX paid PersonY taxes"], "references": ["PersonX earns an accounting degree", "PersonX gets a big paycheck"], "input": {"head": "PersonX pays PersonY taxes", "relation": "isAfter", "prompt": "PersonX pays PersonY taxes. Before that,"}}
{"generation": ["he finds a treasure chest"], "references": ["PersonX goes on a voyage alone"], "input": {"head": "PersonX finds treasure yet", "relation": "isAfter", "prompt": "PersonX finds treasure yet. Before that,"}}
{"generation": ["he had been a bit of a loner"], "references": ["PersonX receives a compliment from a stranger"], "input": {"head": "PersonX gives a small smile", "relation": "isAfter", "prompt": "PersonX gives a small smile. Before that,"}}
{"generation": ["he finds a gold ring"], "references": ["PersonX digs in the dirt"], "input": {"head": "PersonX finds a gold ring", "relation": "isAfter", "prompt": "PersonX finds a gold ring. Before that,"}}
{"generation": ["he was a member of the group, and he"], "references": ["PersonX is walking in the rain"], "input": {"head": "PersonX hits by lightning", "relation": "isAfter", "prompt": "PersonX hits by lightning. Before that,"}}
{"generation": ["the computer is in the hands of the computer company"], "references": ["PersonX narrows down a few computer options to one"], "input": {"head": "PersonX buys the computer", "relation": "isAfter", "prompt": "PersonX buys the computer. Before that,"}}
{"generation": ["the player could only dress in the clothes of the"], "references": ["PersonX borrows clothes for the concert"], "input": {"head": "PersonX dresses in PersonY's clothes", "relation": "isAfter", "prompt": "PersonX dresses in PersonY's clothes. Before that,"}}
{"generation": ["the only way to get a new person was to"], "references": ["PersonX buys flowers for PersonY"], "input": {"head": "PersonX makes PersonY's day", "relation": "isAfter", "prompt": "PersonX makes PersonY's day. Before that,"}}
{"generation": ["PersonX had been working on a project called \""], "references": ["PersonX feels very sick in the morning"], "input": {"head": "PersonX calls PersonX's work", "relation": "isAfter", "prompt": "PersonX calls PersonX's work. Before that,"}}
{"generation": ["he wants to clean PersonX's room"], "references": ["PersonY lives in filth"], "input": {"head": "PersonX wants to clean PersonY's room", "relation": "isAfter", "prompt": "PersonX wants to clean PersonY's room. Before that,"}}
{"generation": ["PersonX asks PersonY to try"], "references": ["PersonX pushes a car with a stranger who doesn't really help much", "PersonX is struggling to open the jar"], "input": {"head": "PersonX asks PersonY to try", "relation": "isAfter", "prompt": "PersonX asks PersonY to try. Before that,"}}
{"generation": ["he was a web designer"], "references": ["PersonX went to college"], "input": {"head": "PersonX is a web developer", "relation": "isAfter", "prompt": "PersonX is a web developer. Before that,"}}
{"generation": ["PersonX is just a person"], "references": ["PersonX goes to the public pool"], "input": {"head": "PersonX gets PersonX's feet wet", "relation": "isAfter", "prompt": "PersonX gets PersonX's feet wet. Before that,"}}
{"generation": ["he was diagnosed with type 2 diabetes"], "references": ["PersonX looks over the charts"], "input": {"head": "PersonX diagnoses with diabetes", "relation": "isAfter", "prompt": "PersonX diagnoses with diabetes. Before that,"}}
{"generation": ["PersonX had been talking to PersonY about the"], "references": ["PersonX buys something from a store"], "input": {"head": "PersonX tells PersonY had a surprise", "relation": "isAfter", "prompt": "PersonX tells PersonY had a surprise. Before that,"}}
{"generation": ["he was a member of the group that was known"], "references": ["PersonX goes to the doctor", "PersonX goes to an appointment", "PersonX checks in for a doctor's appointment"], "input": {"head": "PersonX sits patiently", "relation": "isAfter", "prompt": "PersonX sits patiently. Before that,"}}
{"generation": ["PersonX has to go to the bathroom"], "references": ["PersonX goes to PersonY's house"], "input": {"head": "PersonX goes back to PersonY's room", "relation": "isAfter", "prompt": "PersonX goes back to PersonY's room. Before that,"}}
{"generation": ["PersonX is in the middle of a conversation with"], "references": ["PersonX falls behind perony on the trail"], "input": {"head": "PersonX loses sight of PersonY", "relation": "isAfter", "prompt": "PersonX loses sight of PersonY. Before that,"}}
{"generation": ["PersonX is the name of the person who is"], "references": ["PersonX sees her friend across the hall"], "input": {"head": "PersonX speaks PersonY's name", "relation": "isAfter", "prompt": "PersonX speaks PersonY's name. Before that,"}}
{"generation": ["he was at the house of his friend's"], "references": ["PersonX drives to a different town"], "input": {"head": "PersonX is at PersonX's grandmother 's house", "relation": "isAfter", "prompt": "PersonX is at PersonX's grandmother 's house. Before that,"}}
{"generation": ["he was a member of the \"Crazy Gang"], "references": ["PersonX was digging on the beach"], "input": {"head": "PersonX finds gold", "relation": "isAfter", "prompt": "PersonX finds gold. Before that,"}}
{"generation": ["PersonX would have to be the one to initiate"], "references": ["PersonX wins a vacation"], "input": {"head": "PersonX gives PersonY this opportunity", "relation": "isAfter", "prompt": "PersonX gives PersonY this opportunity. Before that,"}}
{"generation": ["he was walking to the store"], "references": ["PersonX gets dressed and leaves the house", "PersonX doesn't have a car", "PersonX wants some potato chips"], "input": {"head": "PersonX is walking to the store", "relation": "isAfter", "prompt": "PersonX is walking to the store. Before that,"}}
{"generation": ["however, he has to get to the next town"], "references": ["PersonX drives down a dead-end road"], "input": {"head": "PersonX finds another road", "relation": "isAfter", "prompt": "PersonX finds another road. Before that,"}}
{"generation": ["he's got a towel to the beach"], "references": ["PersonX packs for a getaway"], "input": {"head": "PersonX takes a towel to the beach", "relation": "isAfter", "prompt": "PersonX takes a towel to the beach. Before that,"}}
{"generation": ["he was a normal kid"], "references": ["PersonX onx throws a paper airplane at the teacher"], "input": {"head": "PersonX gets detention", "relation": "isAfter", "prompt": "PersonX gets detention. Before that,"}}
{"generation": ["he has to get the ingredients"], "references": ["PersonX makes the dough"], "input": {"head": "PersonX opens the oven", "relation": "isAfter", "prompt": "PersonX opens the oven. Before that,"}}
{"generation": ["PersonX is a person, and PersonY is"], "references": ["PersonX talks to PersonY for a long time"], "input": {"head": "PersonX drives deep inside PersonY", "relation": "isAfter", "prompt": "PersonX drives deep inside PersonY. Before that,"}}
{"generation": ["PersonX was a blank white screen"], "references": ["PersonX sees a naked man running around"], "input": {"head": "PersonX covers PersonY's eyes", "relation": "isAfter", "prompt": "PersonX covers PersonY's eyes. Before that,"}}
{"generation": ["it was a bit of a mixed bag"], "references": ["PersonX stays up too late"], "input": {"head": "PersonX feels sluggish", "relation": "isAfter", "prompt": "PersonX feels sluggish. Before that,"}}
{"generation": ["he was a member of the group that was known"], "references": ["PersonX joins a social club"], "input": {"head": "PersonX makes good friends", "relation": "isAfter", "prompt": "PersonX makes good friends. Before that,"}}
{"generation": ["PersonX and PersonY were the same"], "references": ["PersonX gets trained by PersonY"], "input": {"head": "PersonX finds PersonY way", "relation": "isAfter", "prompt": "PersonX finds PersonY way. Before that,"}}
{"generation": ["PersonX tells PersonY a little"], "references": ["PersonX learns everything about windows 10"], "input": {"head": "PersonX tells PersonY a little", "relation": "isAfter", "prompt": "PersonX tells PersonY a little. Before that,"}}
{"generation": ["PersonX spends PersonY money"], "references": ["PersonX steals PersonY's money"], "input": {"head": "PersonX spends PersonY money", "relation": "isAfter", "prompt": "PersonX spends PersonY money. Before that,"}}
{"generation": ["PersonY has to read the first paragraph of the"], "references": ["PersonX is teaching out of a book"], "input": {"head": "PersonX asks PersonY to read", "relation": "isAfter", "prompt": "PersonX asks PersonY to read. Before that,"}}
{"generation": ["I was a fan of the original, but I"], "references": ["PersonX volunteers to pack my bags", "PersonX gets the suitcase from under the bed", "PersonX tells me i need to leave"], "input": {"head": "PersonX packs my bags", "relation": "isAfter", "prompt": "PersonX packs my bags. Before that,"}}
{"generation": ["PersonX is able to kill PersonX's brother"], "references": ["PersonX shaves with a sharp razor"], "input": {"head": "PersonX cuts PersonX's throat", "relation": "isAfter", "prompt": "PersonX cuts PersonX's throat. Before that,"}}
{"generation": ["he was a vegetarian"], "references": ["PersonX goes to a buffet", "PersonX orders lots of food", "PersonX visits a buffet"], "input": {"head": "PersonX eats everything", "relation": "isAfter", "prompt": "PersonX eats everything. Before that,"}}
{"generation": ["he was a competitive swimmer"], "references": ["PersonX goes to a new school"], "input": {"head": "PersonX loves playing sports", "relation": "isAfter", "prompt": "PersonX loves playing sports. Before that,"}}
{"generation": ["he was a very good player, but he's"], "references": ["PersonX rides a water ride"], "input": {"head": "PersonX goes down the tubes", "relation": "isAfter", "prompt": "PersonX goes down the tubes. Before that,"}}
{"generation": ["he was running in circles"], "references": ["PersonX stops to pick up some change"], "input": {"head": "PersonX starts running again", "relation": "isAfter", "prompt": "PersonX starts running again. Before that,"}}
{"generation": ["PersonX had to call PersonY's phone"], "references": ["PersonX asks PersonY for their phone"], "input": {"head": "PersonX puts PersonY's phone", "relation": "isAfter", "prompt": "PersonX puts PersonY's phone. Before that,"}}
{"generation": ["it was just a bunch of people who were trying"], "references": ["PersonX practices violin everyday"], "input": {"head": "PersonX becomes great", "relation": "isAfter", "prompt": "PersonX becomes great. Before that,"}}
{"generation": ["he had to call a cab"], "references": ["PersonX wants to go home from the bar"], "input": {"head": "PersonX calls a taxi", "relation": "isAfter", "prompt": "PersonX calls a taxi. Before that,"}}
{"generation": ["PersonX had to pay PersonY's phone bill"], "references": ["PersonX breaks PersonX's phone"], "input": {"head": "PersonX buys PersonY's phone", "relation": "isAfter", "prompt": "PersonX buys PersonY's phone. Before that,"}}
{"generation": ["PersonX sees the person who killed his daughter"], "references": ["PersonX goes to the strip club"], "input": {"head": "PersonX sees PersonX's daughter", "relation": "isAfter", "prompt": "PersonX sees PersonX's daughter. Before that,"}}
{"generation": ["he was a man who was always trying to get"], "references": ["PersonX looks at both ends of the pole"], "input": {"head": "PersonX knows which end is up", "relation": "isAfter", "prompt": "PersonX knows which end is up. Before that,"}}
{"generation": ["he has to get a job"], "references": ["PersonX eats the end of their food"], "input": {"head": "PersonX takes a shopping cart to the store", "relation": "isAfter", "prompt": "PersonX takes a shopping cart to the store. Before that,"}}
{"generation": ["he was a fan of PersonZ"], "references": ["PersonX goes on a date with PersonY"], "input": {"head": "PersonX loves PersonY to death", "relation": "isAfter", "prompt": "PersonX loves PersonY to death. Before that,"}}
{"generation": ["he was a vegetarian"], "references": ["PersonX is making lunch"], "input": {"head": "PersonX eats crackers", "relation": "isAfter", "prompt": "PersonX eats crackers. Before that,"}}
{"generation": ["PersonX is a person who is not a person"], "references": ["PersonX applies to be PersonY's engineer", "PersonX applies for the contract", "PersonX applies for a job"], "input": {"head": "PersonX becomes PersonY engineer", "relation": "isAfter", "prompt": "PersonX becomes PersonY engineer. Before that,"}}
{"generation": ["PersonX gave PersonY bread"], "references": ["PersonX takes bread from the restaurant table basket"], "input": {"head": "PersonX gives PersonY bread", "relation": "isAfter", "prompt": "PersonX gives PersonY bread. Before that,"}}
{"generation": ["he was a member of the \"Boys of"], "references": ["PersonX gets rejected", "PersonX marches to the beat of a different drum"], "input": {"head": "PersonX goes against the grain", "relation": "isAfter", "prompt": "PersonX goes against the grain. Before that,"}}
{"generation": ["the only way to get a replacement was to get"], "references": ["PersonX drops their phone in the toilet"], "input": {"head": "PersonX gets a replacement", "relation": "isAfter", "prompt": "PersonX gets a replacement. Before that,"}}
{"generation": ["PersonX had been trying to get PersonY to"], "references": ["PersonX buys PersonY a flaming shot", "PersonX hears PersonY choking", "PersonX gets into a fight with PersonY"], "input": {"head": "PersonX tips PersonY's head back", "relation": "isAfter", "prompt": "PersonX tips PersonY's head back. Before that,"}}
{"generation": ["he was a member of the band, and he"], "references": ["PersonX is negotiating for a car"], "input": {"head": "PersonX plays hardball", "relation": "isAfter", "prompt": "PersonX plays hardball. Before that,"}}
{"generation": ["PersonX was a PersonY, and PersonY"], "references": ["PersonY sprains PersonY's wrist"], "input": {"head": "PersonX wraps PersonY's hand", "relation": "isAfter", "prompt": "PersonX wraps PersonY's hand. Before that,"}}
{"generation": ["however, he has to get through the first round"], "references": ["PersonX works on it all day"], "input": {"head": "PersonX is ready to give up", "relation": "isAfter", "prompt": "PersonX is ready to give up. Before that,"}}
{"generation": ["we have PersonX and PersonY"], "references": ["PersonX starts a hobby"], "input": {"head": "PersonX takes PersonY example", "relation": "isAfter", "prompt": "PersonX takes PersonY example. Before that,"}}
{"generation": ["he was very calm and collected"], "references": ["PersonX gets up to give a speech"], "input": {"head": "PersonX feels very nervous", "relation": "isAfter", "prompt": "PersonX feels very nervous. Before that,"}}
{"generation": ["the only thing that could be done was to wait"], "references": ["PersonX shops for an outfit online", "PersonX goes to a diner"], "input": {"head": "PersonX orders something", "relation": "isAfter", "prompt": "PersonX orders something. Before that,"}}
{"generation": ["he was a member of the group, and he"], "references": ["PersonX skydives"], "input": {"head": "PersonX stills lives", "relation": "isAfter", "prompt": "PersonX stills lives. Before that,"}}
{"generation": ["he has to get the ingredients"], "references": ["PersonX is ready to bake a cake"], "input": {"head": "PersonX gathers all the ingredients", "relation": "isAfter", "prompt": "PersonX gathers all the ingredients. Before that,"}}
{"generation": ["he was a successful businessman"], "references": ["PersonX heard the economy is slipping", "PersonX decides to buy something expensive"], "input": {"head": "PersonX wants to save money", "relation": "isAfter", "prompt": "PersonX wants to save money. Before that,"}}
{"generation": ["the player had to jump to the right to get"], "references": ["PersonX practices her strokes"], "input": {"head": "PersonX arches PersonY's back", "relation": "isAfter", "prompt": "PersonX arches PersonY's back. Before that,"}}
{"generation": ["it was a college that was a college"], "references": ["PersonX works two jobs"], "input": {"head": "PersonX affords college", "relation": "isAfter", "prompt": "PersonX affords college. Before that,"}}
{"generation": ["PersonX had been working at a restaurant"], "references": ["PersonX gets a phone call"], "input": {"head": "PersonX picks PersonY up from work", "relation": "isAfter", "prompt": "PersonX picks PersonY up from work. Before that,"}}
{"generation": ["she was a seamstress"], "references": ["PersonX gets cake batter all over their jewelry"], "input": {"head": "PersonX washes jewelry by hand", "relation": "isAfter", "prompt": "PersonX washes jewelry by hand. Before that,"}}
{"generation": ["it was a man"], "references": ["PersonX wears a red dress"], "input": {"head": "PersonX looks like a woman", "relation": "isAfter", "prompt": "PersonX looks like a woman. Before that,"}}
{"generation": ["I was a little confused"], "references": ["PersonX steals from someone else"], "input": {"head": "PersonX makes it right", "relation": "isAfter", "prompt": "PersonX makes it right. Before that,"}}
{"generation": ["PersonX was a person, and PersonX's"], "references": ["PersonX moved to a new neighborhood"], "input": {"head": "PersonX meets PersonX's neighbors", "relation": "isAfter", "prompt": "PersonX meets PersonX's neighbors. Before that,"}}
{"generation": ["he was a man who was always in motion"], "references": ["PersonX can't remember his name"], "input": {"head": "PersonX paces back and forth", "relation": "isAfter", "prompt": "PersonX paces back and forth. Before that,"}}
{"generation": ["he was a regular guy who was just trying to"], "references": ["PersonX drinks a lot of alcohol"], "input": {"head": "PersonX goes wild", "relation": "isAfter", "prompt": "PersonX goes wild. Before that,"}}
{"generation": ["he was a member of the \"Boys of"], "references": ["PersonX had a lot of bad things happen"], "input": {"head": "PersonX has had it up to here", "relation": "isAfter", "prompt": "PersonX has had it up to here. Before that,"}}
{"generation": ["the window is closed"], "references": ["PersonX fans PersonX's face"], "input": {"head": "PersonX opens the windows", "relation": "isAfter", "prompt": "PersonX opens the windows. Before that,"}}
{"generation": ["PersonX is a person who is not a person"], "references": ["PersonX wakes up"], "input": {"head": "PersonX wastes PersonX's day", "relation": "isAfter", "prompt": "PersonX wastes PersonX's day. Before that,"}}
{"generation": ["he's seen in a bar, where he's"], "references": ["PersonX is at PersonX's beach house"], "input": {"head": "PersonX goes for a walk on the beach", "relation": "isAfter", "prompt": "PersonX goes for a walk on the beach. Before that,"}}
{"generation": ["it was a tree with a christmas tree"], "references": ["PersonX buys a tall pine tree"], "input": {"head": "PersonX decorates the christmas tree", "relation": "isAfter", "prompt": "PersonX decorates the christmas tree. Before that,"}}
{"generation": ["he was a kid who was bullied by his classmates"], "references": ["PersonX goes trick-or-treating", "PersonX walks into the shop"], "input": {"head": "PersonX gets candy", "relation": "isAfter", "prompt": "PersonX gets candy. Before that,"}}
{"generation": ["PersonY has to say \"I am a Christian"], "references": ["PersonX goes to church"], "input": {"head": "PersonX asks PersonY to pray", "relation": "isAfter", "prompt": "PersonX asks PersonY to pray. Before that,"}}
{"generation": ["he was a musician"], "references": ["PersonX takes a music class"], "input": {"head": "PersonX learns a new instrument", "relation": "isAfter", "prompt": "PersonX learns a new instrument. Before that,"}}
{"generation": ["the only way to get rid of PersonX is"], "references": ["PersonX doesn't show up to meet PersonY"], "input": {"head": "PersonX leaves PersonY high and dry", "relation": "isAfter", "prompt": "PersonX leaves PersonY high and dry. Before that,"}}
{"generation": ["I was a little worried about the fact that the"], "references": ["PersonX goes shopping for an fashion make over"], "input": {"head": "PersonX looks fabulous", "relation": "isAfter", "prompt": "PersonX looks fabulous. Before that,"}}
{"generation": ["he was happy"], "references": ["PersonX goes to a funeral"], "input": {"head": "PersonX feels unhappy", "relation": "isAfter", "prompt": "PersonX feels unhappy. Before that,"}}
{"generation": ["PersonX is a bit of a jerk, but"], "references": ["PersonX sees a stage show"], "input": {"head": "PersonX sings PersonY's praises", "relation": "isAfter", "prompt": "PersonX sings PersonY's praises. Before that,"}}
{"generation": ["the kitten was in the care of the Humane Society"], "references": ["PersonX finds a lost kitten", "PersonX finds a kitten in the alley", "PersonX finds kitty"], "input": {"head": "PersonX keeps the kitten", "relation": "isAfter", "prompt": "PersonX keeps the kitten. Before that,"}}
{"generation": ["PersonX had been a member of the Mafia"], "references": ["PersonX asks for a job"], "input": {"head": "PersonX babysits PersonX's cousin", "relation": "isAfter", "prompt": "PersonX babysits PersonX's cousin. Before that,"}}
{"generation": ["it was just a bunch of people who were trying"], "references": ["PersonX is playing a game outside"], "input": {"head": "PersonX takes a step forward", "relation": "isAfter", "prompt": "PersonX takes a step forward. Before that,"}}
{"generation": ["he wants to go to the next level"], "references": ["PersonX goes on the roller coaster", "PersonX attended a music festival"], "input": {"head": "PersonX wants to go again", "relation": "isAfter", "prompt": "PersonX wants to go again. Before that,"}}
{"generation": ["PersonX was a person who was not a person"], "references": ["PersonX is working on the roof"], "input": {"head": "PersonX looks down upon PersonY", "relation": "isAfter", "prompt": "PersonX looks down upon PersonY. Before that,"}}
{"generation": ["PersonX was the one ordering PersonY"], "references": ["PersonX decides to order take out", "PersonX takes PersonY on a date"], "input": {"head": "PersonX makes PersonY order", "relation": "isAfter", "prompt": "PersonX makes PersonY order. Before that,"}}
{"generation": ["PersonX had been standing on the ground, and"], "references": ["PersonX sees a cut on PersonY's leg", "PersonX finds PersonY stuck in the mud", "PersonX knocks PersonY onto the ground"], "input": {"head": "PersonX lifts PersonY's leg", "relation": "isAfter", "prompt": "PersonX lifts PersonY's leg. Before that,"}}
{"generation": ["PersonX has to get the food from the fridge"], "references": ["PersonX goes to PersonY house for dinner"], "input": {"head": "PersonX tries PersonY's food", "relation": "isAfter", "prompt": "PersonX tries PersonY's food. Before that,"}}
{"generation": ["PersonX and PersonY are both empty"], "references": ["PersonX quits her job"], "input": {"head": "PersonX starts PersonY business", "relation": "isAfter", "prompt": "PersonX starts PersonY business. Before that,"}}
{"generation": ["the user will have to wait for the renewal to"], "references": ["PersonX has a trail run"], "input": {"head": "PersonX renews within days", "relation": "isAfter", "prompt": "PersonX renews within days. Before that,"}}
{"generation": ["it was a little bit of a mess"], "references": ["PersonX listens to the coach talk about running styles"], "input": {"head": "PersonX runs right", "relation": "isAfter", "prompt": "PersonX runs right. Before that,"}}
{"generation": ["the car was moving in the direction of the player"], "references": ["PersonX blocks the neighbors driveway"], "input": {"head": "PersonX moves the car", "relation": "isAfter", "prompt": "PersonX moves the car. Before that,"}}
{"generation": ["he was a janitor at a local hospital"], "references": ["PersonX spends everyday searching for work"], "input": {"head": "PersonX finds a good job", "relation": "isAfter", "prompt": "PersonX finds a good job. Before that,"}}
{"generation": ["PersonX is the only one who can see Person"], "references": ["PersonX starts dating PersonY"], "input": {"head": "PersonX pops PersonY's cherry", "relation": "isAfter", "prompt": "PersonX pops PersonY's cherry. Before that,"}}
{"generation": ["PersonX had touched PersonY's shoulder"], "references": ["PersonX sneaks up on PersonY"], "input": {"head": "PersonX touches PersonY's shoulder", "relation": "isAfter", "prompt": "PersonX touches PersonY's shoulder. Before that,"}}
{"generation": ["PersonX grabs PersonY's chest"], "references": ["PersonX begins feeling sharp pain in PersonX's chest"], "input": {"head": "PersonX grabs PersonX's chest", "relation": "isAfter", "prompt": "PersonX grabs PersonX's chest. Before that,"}}
{"generation": ["it was the other way around"], "references": ["PersonX is eating healthier"], "input": {"head": "PersonX gets more exercise", "relation": "isAfter", "prompt": "PersonX gets more exercise. Before that,"}}
{"generation": ["he was a student at the University of California,"], "references": ["PersonX saves up money"], "input": {"head": "PersonX rents an apartment", "relation": "isAfter", "prompt": "PersonX rents an apartment. Before that,"}}
{"generation": ["he was a member of the \"Boys of"], "references": ["PersonX wrestles 10 opponents one right after the other"], "input": {"head": "PersonX runs the gauntlet", "relation": "isAfter", "prompt": "PersonX runs the gauntlet. Before that,"}}
{"generation": ["it was hard to find the name of the game"], "references": ["PersonX goes into the forest on a hike"], "input": {"head": "PersonX is hard to find", "relation": "isAfter", "prompt": "PersonX is hard to find. Before that,"}}
{"generation": ["the only thing that could have possibly made this scene"], "references": ["PersonX hits PersonX head on the door"], "input": {"head": "PersonX starts to swell", "relation": "isAfter", "prompt": "PersonX starts to swell. Before that,"}}
{"generation": ["he was a good guy"], "references": ["PersonX gets up podium"], "input": {"head": "PersonX gets nervous", "relation": "isAfter", "prompt": "PersonX gets nervous. Before that,"}}
{"generation": ["PersonX had been kissing PersonY"], "references": ["PersonX sees PersonY and kisses them"], "input": {"head": "PersonX stops kissing PersonY", "relation": "isAfter", "prompt": "PersonX stops kissing PersonY. Before that,"}}
{"generation": ["PersonX gets PersonY's mom"], "references": ["PersonX was placed in an car cleaning interview that was run by his bestfriend's dad"], "input": {"head": "PersonX gets PersonY's dad", "relation": "isAfter", "prompt": "PersonX gets PersonY's dad. Before that,"}}
{"generation": ["PersonX sees the person who is in love with"], "references": ["PersonX is at the gym"], "input": {"head": "PersonX sees PersonX's crush", "relation": "isAfter", "prompt": "PersonX sees PersonX's crush. Before that,"}}
{"generation": ["PersonX has no idea who PersonY is"], "references": ["PersonX meets a friend"], "input": {"head": "PersonX gets to know PersonY", "relation": "isAfter", "prompt": "PersonX gets to know PersonY. Before that,"}}
{"generation": ["PersonX is in the middle of a conversation with"], "references": ["PersonX is asked to make a speech"], "input": {"head": "PersonX makes PersonX's speech", "relation": "isAfter", "prompt": "PersonX makes PersonX's speech. Before that,"}}
{"generation": ["I'm going to go to the bathroom"], "references": ["PersonX notices the flat tire"], "input": {"head": "PersonX has to get it fixed", "relation": "isAfter", "prompt": "PersonX has to get it fixed. Before that,"}}
{"generation": ["the batteries were replaced by a new battery"], "references": ["PersonX cannot get the remote to work"], "input": {"head": "PersonX replaces the batteries", "relation": "isAfter", "prompt": "PersonX replaces the batteries. Before that,"}}
{"generation": ["I was so happy"], "references": ["PersonX signs divorce papers"], "input": {"head": "PersonX feels so sad", "relation": "isAfter", "prompt": "PersonX feels so sad. Before that,"}}
{"generation": ["he was a fan of PersonZ"], "references": ["PersonX sees PersonY at the bank"], "input": {"head": "PersonX has always loved PersonY", "relation": "isAfter", "prompt": "PersonX has always loved PersonY. Before that,"}}
{"generation": ["the welkin ring was a place where the people"], "references": ["PersonX gets their tools together", "PersonX feels like exercising"], "input": {"head": "PersonX makes the welkin ring", "relation": "isAfter", "prompt": "PersonX makes the welkin ring. Before that,"}}
{"generation": ["he was in the hospital"], "references": ["PersonX breaks their wrist", "PersonX onx breaks PersonX's arm", "PersonX falls on the sidewalk"], "input": {"head": "PersonX calls an ambulance", "relation": "isAfter", "prompt": "PersonX calls an ambulance. Before that,"}}
{"generation": ["the only thing that was left was the \"X"], "references": ["PersonX arrives at the dentist office and it is closed"], "input": {"head": "PersonX comes back later", "relation": "isAfter", "prompt": "PersonX comes back later. Before that,"}}
{"generation": ["he was a writer"], "references": ["PersonX watches a play as a young child"], "input": {"head": "PersonX wants to be an actor", "relation": "isAfter", "prompt": "PersonX wants to be an actor. Before that,"}}
{"generation": ["it was a phone"], "references": ["PersonX wonders if it will rain", "PersonX needs a computer"], "input": {"head": "PersonX uses the internet", "relation": "isAfter", "prompt": "PersonX uses the internet. Before that,"}}
{"generation": ["PersonX's ticket is in the queue"], "references": ["PersonX goes online to book a flight"], "input": {"head": "PersonX gets PersonX's ticket", "relation": "isAfter", "prompt": "PersonX gets PersonX's ticket. Before that,"}}
{"generation": ["we used PersonX expression"], "references": ["PersonX observes PersonY's face"], "input": {"head": "PersonX uses PersonY expression", "relation": "isAfter", "prompt": "PersonX uses PersonY expression. Before that,"}}
{"generation": ["he was a solitary wolf"], "references": ["PersonX encounters a duo asking him for food"], "input": {"head": "PersonX shares the food with others", "relation": "isAfter", "prompt": "PersonX shares the food with others. Before that,"}}
{"generation": ["however, the match is decided by a coin flip"], "references": ["PersonX onx enters the wrestling match", "PersonX plays volley ball with their friends", "PersonX plays"], "input": {"head": "PersonX wins the match", "relation": "isAfter", "prompt": "PersonX wins the match. Before that,"}}
{"generation": ["he was a professional wrestler"], "references": ["PersonX loves the yankees"], "input": {"head": "PersonX wants to play baseball", "relation": "isAfter", "prompt": "PersonX wants to play baseball. Before that,"}}
{"generation": ["it was PersonY's nakedness"], "references": ["PersonX wakes up"], "input": {"head": "PersonX covers PersonX's nakedness", "relation": "isAfter", "prompt": "PersonX covers PersonX's nakedness. Before that,"}}
{"generation": ["he was a member of the band The Vandals"], "references": ["PersonX eats pie"], "input": {"head": "PersonX has PersonX's fingers in many pies", "relation": "isAfter", "prompt": "PersonX has PersonX's fingers in many pies. Before that,"}}
{"generation": ["PersonX was sitting next to PersonY"], "references": ["PersonX walks in the classroom"], "input": {"head": "PersonX sits next to PersonY in class", "relation": "isAfter", "prompt": "PersonX sits next to PersonY in class. Before that,"}}
{"generation": ["he was a man who was not afraid to speak"], "references": ["PersonX falls over"], "input": {"head": "PersonX holds onto nothing", "relation": "isAfter", "prompt": "PersonX holds onto nothing. Before that,"}}
{"generation": ["he was a student at the University of Texas at"], "references": ["PersonX makes a grocery list"], "input": {"head": "PersonX walks to the grocery store", "relation": "isAfter", "prompt": "PersonX walks to the grocery store. Before that,"}}
{"generation": ["he was just a guy who was trying to find"], "references": ["PersonX pans for gold"], "input": {"head": "PersonX finds something", "relation": "isAfter", "prompt": "PersonX finds something. Before that,"}}
{"generation": ["the only way to get a new character was to"], "references": ["PersonX is conceived"], "input": {"head": "PersonX comes into being", "relation": "isAfter", "prompt": "PersonX comes into being. Before that,"}}
{"generation": ["he was a professional wrestler"], "references": ["PersonX is camping in the wilderness"], "input": {"head": "PersonX goes rock climbing", "relation": "isAfter", "prompt": "PersonX goes rock climbing. Before that,"}}
{"generation": ["he was a member of the \"Bread Brigade"], "references": ["PersonX bakes some bread", "PersonX picks up a piece of bread"], "input": {"head": "PersonX throws some bread", "relation": "isAfter", "prompt": "PersonX throws some bread. Before that,"}}
{"generation": ["I was working at a small company and I was"], "references": ["PersonX hires employees"], "input": {"head": "PersonX pays very well", "relation": "isAfter", "prompt": "PersonX pays very well. Before that,"}}
{"generation": ["PersonX says, \"I'm sorry for the"], "references": ["PersonX decides to move to another state"], "input": {"head": "PersonX says PersonY's goodbyes", "relation": "isAfter", "prompt": "PersonX says PersonY's goodbyes. Before that,"}}
{"generation": ["PersonX has to complete the task of PersonY"], "references": ["PersonX helps PersonY with a chore"], "input": {"head": "PersonX completes PersonY's task", "relation": "isAfter", "prompt": "PersonX completes PersonY's task. Before that,"}}
{"generation": ["he had been a bit of a skeptic"], "references": ["PersonX listens to a expert"], "input": {"head": "PersonX finally convinced", "relation": "isAfter", "prompt": "PersonX finally convinced. Before that,"}}
{"generation": ["PersonX asks PersonY to sign"], "references": ["PersonX starts a petition"], "input": {"head": "PersonX asks PersonY to sign", "relation": "isAfter", "prompt": "PersonX asks PersonY to sign. Before that,"}}
{"generation": ["he was a normal person"], "references": ["PersonX goes to college to learn about science"], "input": {"head": "PersonX learns a lot", "relation": "isAfter", "prompt": "PersonX learns a lot. Before that,"}}
{"generation": ["the person who was the father of the person who"], "references": ["PersonX hears his father was killed in battle"], "input": {"head": "PersonX succeeds PersonX's father", "relation": "isAfter", "prompt": "PersonX succeeds PersonX's father. Before that,"}}
{"generation": ["PersonX writes PersonY's novel"], "references": ["PersonX is a successful writer"], "input": {"head": "PersonX writes PersonY's novel", "relation": "isAfter", "prompt": "PersonX writes PersonY's novel. Before that,"}}
{"generation": ["we had to create a new image for each Person"], "references": ["PersonX is sculpting"], "input": {"head": "PersonX forms PersonY image", "relation": "isAfter", "prompt": "PersonX forms PersonY image. Before that,"}}
{"generation": ["the only way to get the same results was to"], "references": ["PersonX studies for the exam"], "input": {"head": "PersonX does much better", "relation": "isAfter", "prompt": "PersonX does much better. Before that,"}}
{"generation": ["he was a member of the \"Boys of"], "references": ["PersonX sees cat getting into things"], "input": {"head": "PersonX puts the cat among the pigeons", "relation": "isAfter", "prompt": "PersonX puts the cat among the pigeons. Before that,"}}
{"generation": ["he was a member of the band The Black Keys"], "references": ["PersonX needs a lot of money to pay bills"], "input": {"head": "PersonX keeps on truckin", "relation": "isAfter", "prompt": "PersonX keeps on truckin. Before that,"}}
{"generation": ["PersonX was just a simple object, but now"], "references": ["PersonX holds PersonY closely"], "input": {"head": "PersonX tightens PersonY's arms", "relation": "isAfter", "prompt": "PersonX tightens PersonY's arms. Before that,"}}
{"generation": ["he was a member of the group, and he"], "references": ["PersonX gets into a fight with their friend", "PersonX gets too rowdy", "PersonX smells the garbage"], "input": {"head": "PersonX takes it outside", "relation": "isAfter", "prompt": "PersonX takes it outside. Before that,"}}
{"generation": ["it was just a matter of getting the right person"], "references": ["PersonX sees PersonY struggling"], "input": {"head": "PersonX gives PersonY relief", "relation": "isAfter", "prompt": "PersonX gives PersonY relief. Before that,"}}
{"generation": ["PersonX was the umbrella for PersonY"], "references": ["PersonX sees that it is raining"], "input": {"head": "PersonX brings PersonY's umbrella", "relation": "isAfter", "prompt": "PersonX brings PersonY's umbrella. Before that,"}}
{"generation": ["the only way to get the PersonX's mind"], "references": ["PersonX needs to improve their grade", "PersonX starts playing guitar", "PersonX starts a new goal"], "input": {"head": "PersonX puts PersonX's mind to it", "relation": "isAfter", "prompt": "PersonX puts PersonX's mind to it. Before that,"}}
{"generation": ["the only way to get a PersonX suit was"], "references": ["PersonX is being interviewed for a job"], "input": {"head": "PersonX suits PersonY's purposes", "relation": "isAfter", "prompt": "PersonX suits PersonY's purposes. Before that,"}}
{"generation": ["PersonX was just a person who was seeing Person"], "references": ["PersonX see PersonY in the distance"], "input": {"head": "PersonX imagines what PersonY was seeing", "relation": "isAfter", "prompt": "PersonX imagines what PersonY was seeing. Before that,"}}
{"generation": ["he was a good guy"], "references": ["PersonX has an accident skydiving"], "input": {"head": "PersonX seriously injured", "relation": "isAfter", "prompt": "PersonX seriously injured. Before that,"}}
{"generation": ["we had to think about the PersonX and Person"], "references": ["PersonX needs to helps PersonY"], "input": {"head": "PersonX puts PersonY in mind", "relation": "isAfter", "prompt": "PersonX puts PersonY in mind. Before that,"}}
{"generation": ["PersonX was the one who was going to stay"], "references": ["PersonY experiences flu symptoms"], "input": {"head": "PersonX lets PersonY's stay home", "relation": "isAfter", "prompt": "PersonX lets PersonY's stay home. Before that,"}}
{"generation": ["the links were just one-way"], "references": ["PersonX closes the gate"], "input": {"head": "PersonX links chain together", "relation": "isAfter", "prompt": "PersonX links chain together. Before that,"}}
{"generation": ["he's been a bit of a loner"], "references": ["PersonX meets someone on christianmingle"], "input": {"head": "PersonX makes a date", "relation": "isAfter", "prompt": "PersonX makes a date. Before that,"}}
{"generation": ["I was a student"], "references": ["PersonX checks bank account", "PersonX has an overdrawn checking account"], "input": {"head": "PersonX makes a budget", "relation": "isAfter", "prompt": "PersonX makes a budget. Before that,"}}
{"generation": ["he was a member of the group, and he"], "references": ["PersonX cannot work", "PersonX meets a new co-worker at lunch"], "input": {"head": "PersonX does n't get along", "relation": "isAfter", "prompt": "PersonX does n't get along. Before that,"}}
{"generation": ["the quilt was a single piece of fabric"], "references": ["PersonX needle works all the squares"], "input": {"head": "PersonX produces another quilt", "relation": "isAfter", "prompt": "PersonX produces another quilt. Before that,"}}
{"generation": ["he was a thief"], "references": ["PersonX has no money"], "input": {"head": "PersonX steals anything", "relation": "isAfter", "prompt": "PersonX steals anything. Before that,"}}
{"generation": ["PersonX had been a good friend of PersonY"], "references": ["PersonX buys some candy"], "input": {"head": "PersonX bribes PersonY with candy", "relation": "isAfter", "prompt": "PersonX bribes PersonY with candy. Before that,"}}
{"generation": ["he'll be in the U"], "references": ["PersonX looks at travel sites on their laptop"], "input": {"head": "PersonX is planning a trip", "relation": "isAfter", "prompt": "PersonX is planning a trip. Before that,"}}
{"generation": ["he's got a nice little speech about how he"], "references": ["PersonX goes to a popsicle stand"], "input": {"head": "PersonX blows this popsicle stand", "relation": "isAfter", "prompt": "PersonX blows this popsicle stand. Before that,"}}
{"generation": ["I had to use the \"X\" command to"], "references": ["PersonX troubleshoots a problem"], "input": {"head": "PersonX finally worked", "relation": "isAfter", "prompt": "PersonX finally worked. Before that,"}}
{"generation": ["he was a member of the group, and he"], "references": ["PersonX gets sick"], "input": {"head": "PersonX eventually died", "relation": "isAfter", "prompt": "PersonX eventually died. Before that,"}}
{"generation": ["he buys a new house"], "references": ["PersonX had their car break down", "PersonX needs a car", "PersonX visits the dealership"], "input": {"head": "PersonX buys a new car", "relation": "isAfter", "prompt": "PersonX buys a new car. Before that,"}}
{"generation": ["he had to get through the first round of the"], "references": ["PersonX plans a big party"], "input": {"head": "PersonX has a lot of work to do", "relation": "isAfter", "prompt": "PersonX has a lot of work to do. Before that,"}}
{"generation": ["I was a little bit of a nerd"], "references": ["PersonX walks through the quiet town"], "input": {"head": "PersonX tricks or treat", "relation": "isAfter", "prompt": "PersonX tricks or treat. Before that,"}}
{"generation": ["PersonX had to be the one to take the"], "references": ["PersonX goes to a shop"], "input": {"head": "PersonX takes PersonY's stand", "relation": "isAfter", "prompt": "PersonX takes PersonY's stand. Before that,"}}
{"generation": ["he was a member of the band, and he"], "references": ["PersonX is in an bad community"], "input": {"head": "PersonX eventually moved", "relation": "isAfter", "prompt": "PersonX eventually moved. Before that,"}}
{"generation": ["he was a regular guy who was just trying to"], "references": ["PersonX buys a snowplow"], "input": {"head": "PersonX puts snowplow to work", "relation": "isAfter", "prompt": "PersonX puts snowplow to work. Before that,"}}
{"generation": ["PersonX was a game that was released in Japan"], "references": ["PersonX receives a new game for christmas"], "input": {"head": "PersonX plays PersonX's new game", "relation": "isAfter", "prompt": "PersonX plays PersonX's new game. Before that,"}}
{"generation": ["PersonX was a person who was not happy"], "references": ["PersonX give flowers to PersonY"], "input": {"head": "PersonX makes PersonY's smile", "relation": "isAfter", "prompt": "PersonX makes PersonY's smile. Before that,"}}
{"generation": ["though, he's got a lot of work to"], "references": ["PersonX is driving across the country"], "input": {"head": "PersonX has a long way to go", "relation": "isAfter", "prompt": "PersonX has a long way to go. Before that,"}}
{"generation": ["he was a very happy person"], "references": ["PersonX finds out PersonY and PersonZ are talking about them"], "input": {"head": "PersonX is rather upset", "relation": "isAfter", "prompt": "PersonX is rather upset. Before that,"}}
{"generation": ["PersonX has to take care of PersonY"], "references": ["PersonX hears that PersonY is sick", "PersonX founds out that PersonY is sick", "PersonX gets a job as a health aide"], "input": {"head": "PersonX has to take care of PersonY", "relation": "isAfter", "prompt": "PersonX has to take care of PersonY. Before that,"}}
{"generation": ["the two people were in a state of conflict"], "references": ["PersonX holds up PersonY while ice skating"], "input": {"head": "PersonX maintains PersonY equilibrium", "relation": "isAfter", "prompt": "PersonX maintains PersonY equilibrium. Before that,"}}
{"generation": ["he was a fan of the Chicago Bulls"], "references": ["PersonX goes to a soccer game"], "input": {"head": "PersonX loves soccer", "relation": "isAfter", "prompt": "PersonX loves soccer. Before that,"}}
{"generation": ["he has to get the ingredients"], "references": ["PersonX looks at a recipe"], "input": {"head": "PersonX gathers the ingredients", "relation": "isAfter", "prompt": "PersonX gathers the ingredients. Before that,"}}
{"generation": ["he was a lawyer"], "references": ["PersonX goes to law school"], "input": {"head": "PersonX becomes a lawyer", "relation": "isAfter", "prompt": "PersonX becomes a lawyer. Before that,"}}
{"generation": ["it was a stool"], "references": ["PersonX drinks too much at the bar", "PersonX gets drunk"], "input": {"head": "PersonX falls between two stools", "relation": "isAfter", "prompt": "PersonX falls between two stools. Before that,"}}
{"generation": ["the beak was a normal beak"], "references": ["PersonX feels thirsty"], "input": {"head": "PersonX wets PersonX's beak", "relation": "isAfter", "prompt": "PersonX wets PersonX's beak. Before that,"}}
{"generation": ["PersonX was a very good player, but he"], "references": ["PersonX attends an elite fundraiser"], "input": {"head": "PersonX minds PersonX's ps and qs", "relation": "isAfter", "prompt": "PersonX minds PersonX's ps and qs. Before that,"}}
{"generation": ["I was a little bit scared of the idea of"], "references": ["PersonX sneezes and coughs", "PersonX wakes up coughing and sneezing", "PersonX goes to work with a cold"], "input": {"head": "PersonX works sick", "relation": "isAfter", "prompt": "PersonX works sick. Before that,"}}
{"generation": ["PersonX's friend hits PersonX's friend"], "references": ["PersonX gets in an argument", "PersonX gets in to an argument"], "input": {"head": "PersonX hits PersonX's friend", "relation": "isAfter", "prompt": "PersonX hits PersonX's friend. Before that,"}}
{"generation": ["he was a normal person"], "references": ["PersonX leaves work after a hard day"], "input": {"head": "PersonX does n't want to go back", "relation": "isAfter", "prompt": "PersonX does n't want to go back. Before that,"}}
{"generation": ["PersonX was just a random person"], "references": ["PersonX is hired as a tutor"], "input": {"head": "PersonX teaches PersonY things", "relation": "isAfter", "prompt": "PersonX teaches PersonY things. Before that,"}}
{"generation": ["PersonX gave PersonY's dog"], "references": ["PersonX buys a box of dog treats"], "input": {"head": "PersonX gives PersonY's dog", "relation": "isAfter", "prompt": "PersonX gives PersonY's dog. Before that,"}}
{"generation": ["he was a member of the group that was responsible"], "references": ["PersonX loses their book", "PersonX sees a shell", "PersonX loses their toy"], "input": {"head": "PersonX finds another", "relation": "isAfter", "prompt": "PersonX finds another. Before that,"}}
{"generation": ["he was a high school student"], "references": ["PersonX signs up for classes"], "input": {"head": "PersonX is a freshman in college", "relation": "isAfter", "prompt": "PersonX is a freshman in college. Before that,"}}
{"generation": ["it was a lot of people touching wood"], "references": ["PersonX sees the wood"], "input": {"head": "PersonX touches wood", "relation": "isAfter", "prompt": "PersonX touches wood. Before that,"}}
{"generation": ["he was a professional cyclist"], "references": ["PersonX puts a helmet on"], "input": {"head": "PersonX rides bikes", "relation": "isAfter", "prompt": "PersonX rides bikes. Before that,"}}
{"generation": ["he wants to clean it"], "references": ["PersonX buys an old couch"], "input": {"head": "PersonX wants to clean it", "relation": "isAfter", "prompt": "PersonX wants to clean it. Before that,"}}
{"generation": ["he was a member of the group that was arrested"], "references": ["PersonX almost runs into a fence"], "input": {"head": "PersonX climbs the fence", "relation": "isAfter", "prompt": "PersonX climbs the fence. Before that,"}}
{"generation": ["the game was a bit too easy"], "references": ["PersonX is talked to by their manager"], "input": {"head": "PersonX steps up PersonX's game", "relation": "isAfter", "prompt": "PersonX steps up PersonX's game. Before that,"}}
{"generation": ["he was a kid who wanted to be a professional"], "references": ["PersonX is bored"], "input": {"head": "PersonX wants to play", "relation": "isAfter", "prompt": "PersonX wants to play. Before that,"}}
{"generation": ["the player can choose to have the player's character"], "references": ["PersonX is dead"], "input": {"head": "PersonX turns in PersonX's grave", "relation": "isAfter", "prompt": "PersonX turns in PersonX's grave. Before that,"}}
{"generation": ["he was a member of the group, and he"], "references": ["PersonX has tangled their foot on a barb wire fence"], "input": {"head": "PersonX breaks free", "relation": "isAfter", "prompt": "PersonX breaks free. Before that,"}}
{"generation": ["PersonX and PersonY are in the same place"], "references": ["PersonX drives for an hour"], "input": {"head": "PersonX reaches PersonY's destination", "relation": "isAfter", "prompt": "PersonX reaches PersonY's destination. Before that,"}}
{"generation": ["the player could only change the hairstyle of the"], "references": ["PersonX needs a haircut"], "input": {"head": "PersonX changes PersonX's hairstyle", "relation": "isAfter", "prompt": "PersonX changes PersonX's hairstyle. Before that,"}}
{"generation": ["I was a fan of the original"], "references": ["PersonX watches a woman from afar", "PersonX buys a new outfit"], "input": {"head": "PersonX catches my eye", "relation": "isAfter", "prompt": "PersonX catches my eye. Before that,"}}
{"generation": ["he was a chef"], "references": ["PersonX prepares for dinner"], "input": {"head": "PersonX makes pasta", "relation": "isAfter", "prompt": "PersonX makes pasta. Before that,"}}
{"generation": ["I was a bit nervous"], "references": ["PersonX orders a burger"], "input": {"head": "PersonX takes my first bite", "relation": "isAfter", "prompt": "PersonX takes my first bite. Before that,"}}
{"generation": ["he finds a dress"], "references": ["PersonX looks online for a dress"], "input": {"head": "PersonX finds a dress", "relation": "isAfter", "prompt": "PersonX finds a dress. Before that,"}}
{"generation": ["he was a fool"], "references": ["PersonX gets extremely drunk at dinner"], "input": {"head": "PersonX looks like a fool", "relation": "isAfter", "prompt": "PersonX looks like a fool. Before that,"}}
{"generation": ["the player has to get the eggs from the monster"], "references": ["PersonX pulls a plate from the cupboard"], "input": {"head": "PersonX puts the eggs", "relation": "isAfter", "prompt": "PersonX puts the eggs. Before that,"}}
{"generation": ["PersonX has to get PersonY's ticket"], "references": ["PersonX invites PersonY to a concert"], "input": {"head": "PersonX gets PersonY's ticket", "relation": "isAfter", "prompt": "PersonX gets PersonY's ticket. Before that,"}}
{"generation": ["he was a thief"], "references": ["PersonX buys some bread and peanut butter"], "input": {"head": "PersonX does a good deed", "relation": "isAfter", "prompt": "PersonX does a good deed. Before that,"}}
{"generation": ["he was a member of the band The B-"], "references": ["PersonX goes to the store to get some supplies", "PersonX buys items for friendship bracelets", "PersonX starts a summer camp"], "input": {"head": "PersonX makes friendship bracelets", "relation": "isAfter", "prompt": "PersonX makes friendship bracelets. Before that,"}}
{"generation": ["it was only the most basic of devices"], "references": ["PersonX worked hard to raise money"], "input": {"head": "PersonX affords every electronic", "relation": "isAfter", "prompt": "PersonX affords every electronic. Before that,"}}
{"generation": ["PersonX had to clean the bathroom"], "references": ["PersonX starts a new cleaning business"], "input": {"head": "PersonX cleans PersonY's bedroom", "relation": "isAfter", "prompt": "PersonX cleans PersonY's bedroom. Before that,"}}
{"generation": ["the class is empty"], "references": ["PersonX gets sick in class"], "input": {"head": "PersonX leaves the class", "relation": "isAfter", "prompt": "PersonX leaves the class. Before that,"}}
{"generation": ["PersonX sees PersonY alone"], "references": ["PersonX walks into a cafeteria"], "input": {"head": "PersonX sees PersonY alone", "relation": "isAfter", "prompt": "PersonX sees PersonY alone. Before that,"}}
{"generation": ["he's a regular guy who's just trying to"], "references": ["PersonX paints very well"], "input": {"head": "PersonX enters an art contest", "relation": "isAfter", "prompt": "PersonX enters an art contest. Before that,"}}
{"generation": ["PersonX was sitting on PersonY's bed"], "references": ["PersonX goes into PersonY's room"], "input": {"head": "PersonX sits on PersonY's bed", "relation": "isAfter", "prompt": "PersonX sits on PersonY's bed. Before that,"}}
{"generation": ["PersonX is in the house, and PersonY"], "references": ["PersonX wanted to meet up with PersonY"], "input": {"head": "PersonX comes to PersonY house", "relation": "isAfter", "prompt": "PersonX comes to PersonY house. Before that,"}}
{"generation": ["PersonX tells PersonY to give"], "references": ["PersonX talks to PersonY about the spirit of christmas"], "input": {"head": "PersonX tells PersonY to give", "relation": "isAfter", "prompt": "PersonX tells PersonY to give. Before that,"}}
{"generation": ["PersonX has to get a job"], "references": ["PersonX prepares for a vacation"], "input": {"head": "PersonX plans PersonX's trip", "relation": "isAfter", "prompt": "PersonX plans PersonX's trip. Before that,"}}
{"generation": ["PersonX was the only one who could do it"], "references": ["PersonX teaches a class"], "input": {"head": "PersonX gives PersonY instruction", "relation": "isAfter", "prompt": "PersonX gives PersonY instruction. Before that,"}}
{"generation": ["it was just a bunch of people who were trying"], "references": ["PersonX gets a face lift", "PersonX goes to the makeover salon"], "input": {"head": "PersonX looks like new", "relation": "isAfter", "prompt": "PersonX looks like new. Before that,"}}
{"generation": ["the game is a bit of a slog"], "references": ["PersonX drives to a doctor's appointment"], "input": {"head": "PersonX gets there early", "relation": "isAfter", "prompt": "PersonX gets there early. Before that,"}}
{"generation": ["he was a professional wrestler"], "references": ["PersonX picks up a fountain pen"], "input": {"head": "PersonX writes poetry", "relation": "isAfter", "prompt": "PersonX writes poetry. Before that,"}}
{"generation": ["I was a fan of PersonX"], "references": ["PersonX walks toward PersonY at school"], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "isAfter", "prompt": "PersonX loves PersonY with all my heart. Before that,"}}
{"generation": ["PersonX was behind PersonY"], "references": ["PersonX rides a bike with PersonY"], "input": {"head": "PersonX trails behind PersonY", "relation": "isAfter", "prompt": "PersonX trails behind PersonY. Before that,"}}
{"generation": ["PersonX was developed by the same team that developed"], "references": ["PersonX goes to PersonY's class", "PersonX observes PersonY"], "input": {"head": "PersonX develops PersonY approach", "relation": "isAfter", "prompt": "PersonX develops PersonY approach. Before that,"}}
{"generation": ["it was PersonX's pillow"], "references": ["PersonX tells PersonY that the toothfairy will bring them money"], "input": {"head": "PersonX puts it under PersonY's pillow", "relation": "isAfter", "prompt": "PersonX puts it under PersonY's pillow. Before that,"}}
{"generation": ["he was a member of the Black Order, a"], "references": ["PersonX delivers a letter"], "input": {"head": "PersonX falls into the wrong hands", "relation": "isAfter", "prompt": "PersonX falls into the wrong hands. Before that,"}}
{"generation": ["PersonX had to catch PersonX's bus"], "references": ["PersonX waiting", "PersonX is waiting at the bus stop", "PersonX leaves the house to go to school"], "input": {"head": "PersonX catches PersonX's bus", "relation": "isAfter", "prompt": "PersonX catches PersonX's bus. Before that,"}}
{"generation": ["it was just a simple way to get the player"], "references": ["PersonX loses the game again", "PersonX applies to college", "PersonX thinks about their direction in life"], "input": {"head": "PersonX effects PersonX's purpose", "relation": "isAfter", "prompt": "PersonX effects PersonX's purpose. Before that,"}}
{"generation": ["PersonX was on the ground"], "references": ["PersonX jumps from the window"], "input": {"head": "PersonX lands on PersonX's feet", "relation": "isAfter", "prompt": "PersonX lands on PersonX's feet. Before that,"}}
{"generation": ["it was just a matter of finding a way to"], "references": ["PersonX makes a lot of money"], "input": {"head": "PersonX affords PersonY pleasure", "relation": "isAfter", "prompt": "PersonX affords PersonY pleasure. Before that,"}}
{"generation": ["he had a laptop that was stolen"], "references": ["PersonX breaks his laptop"], "input": {"head": "PersonX gets another laptop", "relation": "isAfter", "prompt": "PersonX gets another laptop. Before that,"}}
{"generation": ["PersonX had to be in the same room as"], "references": ["PersonX buys a new dress", "PersonX has been described as a looker"], "input": {"head": "PersonX turns PersonY's heads", "relation": "isAfter", "prompt": "PersonX turns PersonY's heads. Before that,"}}
{"generation": ["PersonX makes announcement"], "references": ["PersonX accept PersonY's request to add PersonY's announcement to the announcements"], "input": {"head": "PersonX makes PersonY announcement", "relation": "isAfter", "prompt": "PersonX makes PersonY announcement. Before that,"}}
{"generation": ["PersonX is arguing with PersonY's boyfriend"], "references": ["PersonX disagrees with PersonY's boyfriend"], "input": {"head": "PersonX argues with PersonY's boyfriend", "relation": "isAfter", "prompt": "PersonX argues with PersonY's boyfriend. Before that,"}}
{"generation": ["PersonX was a poor man's PersonY"], "references": ["PersonX hires a new employee", "PersonX hires PersonY to paint their fence"], "input": {"head": "PersonX pays PersonY well", "relation": "isAfter", "prompt": "PersonX pays PersonY well. Before that,"}}
{"generation": ["he was a normal guy who was just trying to"], "references": ["PersonX drinks a lot of coffee"], "input": {"head": "PersonX is having trouble sleeping at night", "relation": "isAfter", "prompt": "PersonX is having trouble sleeping at night. Before that,"}}
{"generation": ["PersonX is a person who is not a person"], "references": ["PersonX read the cover of the book"], "input": {"head": "PersonX draws PersonX's conclusions", "relation": "isAfter", "prompt": "PersonX draws PersonX's conclusions. Before that,"}}
{"generation": ["he was a professional musician"], "references": ["PersonX grabs a paper and pencil"], "input": {"head": "PersonX writes music", "relation": "isAfter", "prompt": "PersonX writes music. Before that,"}}
{"generation": ["PersonX and PersonY are not connected"], "references": ["PersonX goes on a date"], "input": {"head": "PersonX makes PersonY connection", "relation": "isAfter", "prompt": "PersonX makes PersonY connection. Before that,"}}
{"generation": ["he heard a loud bang"], "references": ["PersonX just got home"], "input": {"head": "PersonX hears a loud bang", "relation": "isAfter", "prompt": "PersonX hears a loud bang. Before that,"}}
{"generation": ["PersonX was a man, and PersonY was"], "references": ["PersonX invites their partner over", "PersonX hugs PersonY close"], "input": {"head": "PersonX runs PersonY's fingers through PersonY's hair", "relation": "isAfter", "prompt": "PersonX runs PersonY's fingers through PersonY's hair. Before that,"}}
{"generation": ["the gas was pumped by PersonX"], "references": ["PersonX pulls into the station", "PersonX is a gas station attendant"], "input": {"head": "PersonX pumps PersonX's gas", "relation": "isAfter", "prompt": "PersonX pumps PersonX's gas. Before that,"}}
{"generation": ["he was a member of the group, but he"], "references": ["PersonX finds a stray cat"], "input": {"head": "PersonX grows close", "relation": "isAfter", "prompt": "PersonX grows close. Before that,"}}
{"generation": ["PersonX is the player, and PersonY is"], "references": ["PersonX wanted to go to the game"], "input": {"head": "PersonX takes PersonY to the game", "relation": "isAfter", "prompt": "PersonX takes PersonY to the game. Before that,"}}
{"generation": ["PersonX and PersonY are both empty"], "references": ["PersonX leads PersonY to an already reserved table"], "input": {"head": "PersonX finds PersonY another table", "relation": "isAfter", "prompt": "PersonX finds PersonY another table. Before that,"}}
{"generation": ["it was just the humans"], "references": ["PersonX visits the zoo", "PersonX goes to the zoo with their friend", "PersonX went to the zoo"], "input": {"head": "PersonX sees all of the animals", "relation": "isAfter", "prompt": "PersonX sees all of the animals. Before that,"}}
{"generation": ["he was a very poor man"], "references": ["PersonX goes to the mall"], "input": {"head": "PersonX spends a lot of money", "relation": "isAfter", "prompt": "PersonX spends a lot of money. Before that,"}}
{"generation": ["the news was that the new game would be called"], "references": ["PersonX reads from the teleprompter"], "input": {"head": "PersonX breaks the news", "relation": "isAfter", "prompt": "PersonX breaks the news. Before that,"}}
{"generation": ["he had been a member of the team that won"], "references": ["PersonX argues with a co-worker in the office", "PersonX gets yelled at by boss for making a mistake", "PersonX makes a big mistake at work"], "input": {"head": "PersonX quits the next day", "relation": "isAfter", "prompt": "PersonX quits the next day. Before that,"}}
{"generation": ["he was a regular guy"], "references": ["PersonX breaks a nail"], "input": {"head": "PersonX gets a manicure", "relation": "isAfter", "prompt": "PersonX gets a manicure. Before that,"}}
{"generation": ["PersonX had been standing up"], "references": ["PersonX notices PersonY looking around"], "input": {"head": "PersonX puts PersonY's head down", "relation": "isAfter", "prompt": "PersonX puts PersonY's head down. Before that,"}}
{"generation": ["the movie is a bit of a mess"], "references": ["PersonX turns on the dvd player"], "input": {"head": "PersonX finishes the movie", "relation": "isAfter", "prompt": "PersonX finishes the movie. Before that,"}}
{"generation": ["he was a quiet, shy kid who was bullied"], "references": ["PersonX is running"], "input": {"head": "PersonX sweats profusely", "relation": "isAfter", "prompt": "PersonX sweats profusely. Before that,"}}
{"generation": ["they were in a coma"], "references": ["PersonX brings a medical bag to PersonY's house"], "input": {"head": "PersonX nurses PersonY back to health", "relation": "isAfter", "prompt": "PersonX nurses PersonY back to health. Before that,"}}
{"generation": ["PersonX is the one who is the target of"], "references": ["PersonX rehearses their scene for the play"], "input": {"head": "PersonX falls upon PersonY", "relation": "isAfter", "prompt": "PersonX falls upon PersonY. Before that,"}}
{"generation": ["the dog was a dog"], "references": ["PersonX gets the dog off the bed"], "input": {"head": "PersonX takes the dog", "relation": "isAfter", "prompt": "PersonX takes the dog. Before that,"}}
{"generation": ["he was a fan of the show \"The Simpsons"], "references": ["PersonX laying on couch", "PersonX goes to the local bar", "PersonX sits down in front of the television"], "input": {"head": "PersonX loves watching television", "relation": "isAfter", "prompt": "PersonX loves watching television. Before that,"}}
{"generation": ["she was a normal girl"], "references": ["PersonX is going to a wedding"], "input": {"head": "PersonX wears makeup", "relation": "isAfter", "prompt": "PersonX wears makeup. Before that,"}}
{"generation": ["he had to buy the ingredients"], "references": ["PersonX looks at the recipe"], "input": {"head": "PersonX buys all the ingredients", "relation": "isAfter", "prompt": "PersonX buys all the ingredients. Before that,"}}
{"generation": ["the car is in the hands of the dealer"], "references": ["PersonX looks at the new car"], "input": {"head": "PersonX buys the car", "relation": "isAfter", "prompt": "PersonX buys the car. Before that,"}}
{"generation": ["PersonX had to go through a series of steps"], "references": ["PersonX sees a laptop", "PersonX asks PersonY if he may borrow the laptop", "PersonX needs to finish project"], "input": {"head": "PersonX takes PersonY's laptop", "relation": "isAfter", "prompt": "PersonX takes PersonY's laptop. Before that,"}}
{"generation": ["PersonX was a person who was not a person"], "references": ["PersonX goes to meet the pope"], "input": {"head": "PersonX bows PersonX's heads", "relation": "isAfter", "prompt": "PersonX bows PersonX's heads. Before that,"}}
{"generation": ["I was just a normal person"], "references": ["PersonX is talking to loud"], "input": {"head": "PersonX stops but PersonY did n't listen", "relation": "isAfter", "prompt": "PersonX stops but PersonY did n't listen. Before that,"}}
{"generation": ["I was just a little bit worried about it"], "references": ["PersonX yells at their daughter"], "input": {"head": "PersonX feels bad about it", "relation": "isAfter", "prompt": "PersonX feels bad about it. Before that,"}}
{"generation": ["the only way to get a new character was to"], "references": ["PersonX is reading PersonY's book"], "input": {"head": "PersonX takes a leaf out of PersonY's book", "relation": "isAfter", "prompt": "PersonX takes a leaf out of PersonY's book. Before that,"}}
{"generation": ["he was in the bathroom"], "references": ["PersonX is feeling bloated from eating too much"], "input": {"head": "PersonX uses the restroom", "relation": "isAfter", "prompt": "PersonX uses the restroom. Before that,"}}
{"generation": ["he was a fisherman"], "references": ["PersonX takes a day off"], "input": {"head": "PersonX loves fishing", "relation": "isAfter", "prompt": "PersonX loves fishing. Before that,"}}
{"generation": ["I was just a little bit worried about the game"], "references": ["PersonX yells at their friend"], "input": {"head": "PersonX feels bad", "relation": "isAfter", "prompt": "PersonX feels bad. Before that,"}}
{"generation": ["the game is a bit slow, but once it"], "references": ["PersonX sits down at the piano"], "input": {"head": "PersonX starts to play", "relation": "isAfter", "prompt": "PersonX starts to play. Before that,"}}
{"generation": ["he was a man who had been a soldier in"], "references": ["PersonX finds their cellphone"], "input": {"head": "PersonX makes a phone call", "relation": "isAfter", "prompt": "PersonX makes a phone call. Before that,"}}
{"generation": ["the player had to go to the room of the"], "references": ["PersonX leaves PersonY's room"], "input": {"head": "PersonX returns to PersonY's room", "relation": "isAfter", "prompt": "PersonX returns to PersonY's room. Before that,"}}
{"generation": ["he was a popular figure in the community, and"], "references": ["PersonX cheats the system"], "input": {"head": "PersonX falls from grace", "relation": "isAfter", "prompt": "PersonX falls from grace. Before that,"}}
{"generation": ["he was a successful businessman"], "references": ["PersonX is researching buying a new car"], "input": {"head": "PersonX has enough money", "relation": "isAfter", "prompt": "PersonX has enough money. Before that,"}}
{"generation": ["he saw a tree"], "references": ["PersonX walks into a store"], "input": {"head": "PersonX sees wood", "relation": "isAfter", "prompt": "PersonX sees wood. Before that,"}}
{"generation": ["PersonX had to read PersonX's diary"], "references": ["PersonX wants to analyze their feeling"], "input": {"head": "PersonX reads PersonX's diary", "relation": "isAfter", "prompt": "PersonX reads PersonX's diary. Before that,"}}
{"generation": ["PersonX has a party at PersonY's house"], "references": ["PersonX decides to throw a surprise party for PersonY"], "input": {"head": "PersonX has a party at PersonY's house", "relation": "isAfter", "prompt": "PersonX has a party at PersonY's house. Before that,"}}
{"generation": ["she was a child"], "references": ["PersonX is in labor one month early"], "input": {"head": "PersonX gives birth", "relation": "isAfter", "prompt": "PersonX gives birth. Before that,"}}
{"generation": ["he was a good swimmer"], "references": ["PersonX goes to the pool"], "input": {"head": "PersonX is a good swimmer", "relation": "isAfter", "prompt": "PersonX is a good swimmer. Before that,"}}
{"generation": ["the only way to get a job was to be"], "references": ["PersonX stands on their soapbox", "PersonX prepares information for a debate"], "input": {"head": "PersonX makes a point", "relation": "isAfter", "prompt": "PersonX makes a point. Before that,"}}
{"generation": ["it was the zoo's only attraction"], "references": ["PersonX packs juice in a bag"], "input": {"head": "PersonX brings juice to the zoo", "relation": "isAfter", "prompt": "PersonX brings juice to the zoo. Before that,"}}
{"generation": ["it was just a matter of getting the right people"], "references": ["PersonX wins all the contests"], "input": {"head": "PersonX becomes intolerable", "relation": "isAfter", "prompt": "PersonX becomes intolerable. Before that,"}}
{"generation": ["he's a little boy who's been raised by"], "references": ["PersonX is tired of being inside"], "input": {"head": "PersonX goes for a walk in the park", "relation": "isAfter", "prompt": "PersonX goes for a walk in the park. Before that,"}}
{"generation": ["he was a normal kid"], "references": ["PersonX goes out for a walk"], "input": {"head": "PersonX walks to the park", "relation": "isAfter", "prompt": "PersonX walks to the park. Before that,"}}
{"generation": ["he was a good guy"], "references": ["PersonX smokes a lot of cigaretts", "PersonX smokes cigarettes", "PersonX smokes heavily"], "input": {"head": "PersonX gets cancer", "relation": "isAfter", "prompt": "PersonX gets cancer. Before that,"}}
{"generation": ["he was a little bit scared"], "references": ["PersonX pulls out a massive sub sandwich", "PersonX gets an apple"], "input": {"head": "PersonX eats it quickly", "relation": "isAfter", "prompt": "PersonX eats it quickly. Before that,"}}
{"generation": ["he's going to have to get his hands on"], "references": ["PersonX notices the dog is sick", "PersonX had a sick dog", "PersonX adopts a puppy"], "input": {"head": "PersonX takes it to the vet", "relation": "isAfter", "prompt": "PersonX takes it to the vet. Before that,"}}
{"generation": ["PersonX has sent PersonY a gift"], "references": ["PersonX sees PersonY's birthday circled on the calendar"], "input": {"head": "PersonX sends PersonY a gift", "relation": "isAfter", "prompt": "PersonX sends PersonY a gift. Before that,"}}
{"generation": ["PersonX is the only one who can see Person"], "references": ["PersonX saw PersonY steal the pan"], "input": {"head": "PersonX brings PersonY into conflict", "relation": "isAfter", "prompt": "PersonX brings PersonY into conflict. Before that,"}}
{"generation": ["PersonX is arguing with PersonX's girlfriend"], "references": ["PersonX goes to PersonX's boyfriend's house"], "input": {"head": "PersonX argues with PersonX's boyfriend", "relation": "isAfter", "prompt": "PersonX argues with PersonX's boyfriend. Before that,"}}
{"generation": ["he was a book"], "references": ["PersonX goes to the library"], "input": {"head": "PersonX gets a book", "relation": "isAfter", "prompt": "PersonX gets a book. Before that,"}}
{"generation": ["PersonX is the one who is the most important"], "references": ["PersonX makes appointment with PersonY", "PersonX made an appointment with PersonY", "PersonX walking to the coffee shop"], "input": {"head": "PersonX meets PersonY for the time", "relation": "isAfter", "prompt": "PersonX meets PersonY for the time. Before that,"}}
{"generation": ["PersonX's stop was a bit too late"], "references": ["PersonX rides a bus"], "input": {"head": "PersonX misses PersonX's stop", "relation": "isAfter", "prompt": "PersonX misses PersonX's stop. Before that,"}}
{"generation": ["PersonX had been the one to wipe PersonY"], "references": ["PersonX spills oil on PersonY's hands"], "input": {"head": "PersonX wipes PersonY's hands", "relation": "isAfter", "prompt": "PersonX wipes PersonY's hands. Before that,"}}
{"generation": ["be able to see the results of the test"], "references": ["turn in", "hand in test", "give test to tester", "fill in name", "write down name"], "input": {"head": "take test", "relation": "HasSubEvent", "prompt": "While taking test, you would"}}
{"generation": ["be able to do a lot of things that you"], "references": ["trip on rope", "drink water", "might hit", "step on dog", "hold rope ends", "get playmate", "pick up rope", "have fun", "get rope", "increased heart rate", "become tired", "put on sneakers", "jump", "trip and fall", "fall down", "stop jumping", "land", "breathe hard", "put away rope", "swing rope over head", "get tired", "jumping off ground", "sing", "start to sweat from exertion", "get exercise", "fall"], "input": {"head": "jump rope", "relation": "HasSubEvent", "prompt": "While jump rope, you would"}}
{"generation": ["be able to see the story of the game"], "references": ["read", "look for beginning", "notice who author", "read title", "understand", "remember", "might laugh", "would read", "turn page", "start reading", "stop to read story", "write down", "reading", "might listen to narrator", "learn", "read last word", "understand plot", "might entertained", "lacrimation"], "input": {"head": "see story", "relation": "HasSubEvent", "prompt": "While seeing story, you would"}}
{"generation": ["be able to eat a lot more than you can"], "references": ["is find food to eat", "is eat", "is finding to eat"], "input": {"head": "hungry", "relation": "HasSubEvent", "prompt": "While hungry, you would"}}
{"generation": ["be able to see the entire battlefield"], "references": ["firm", "tell truth", "make everyone look at", "state name", "stand up", "leave little note", "testimony interrupted", "testifying", "sober and righteous feeling", "have to pay for", "being sworn in", "give testimony", "injury", "lie", "testify in courtroom trial", "have strong opinion", "take fifth amendment", "talk", "sway jury", "answer questions", "change world", "swear to tell truth", "would speak", "give evidence", "swear on bible", "testify", "get cross examined", "runaway", "swear oath", "get sworn in", "might testify", "swear"], "input": {"head": "take stand", "relation": "HasSubEvent", "prompt": "While taking standing, you would"}}
{"generation": ["be able to see the road ahead of you,"], "references": ["arrive", "crashing", "getting caught in traffic jam", "being caught in traffic jam", "getting lost", "walk home fromwork", "start car", "car may break down", "turn vehicle off", "enter garage", "put seatbelt", "getting stuck in traffic", "watch road", "get in car", "wear working clothes", "shut off engine", "steer car", "remove keys from ignition", "open car door"], "input": {"head": "drive to work", "relation": "HasSubEvent", "prompt": "While driving to working, you would"}}
{"generation": ["like to take a break from the stress of your"], "references": ["visit paris", "go camping", "travel home", "go to hong kong", "ends", "go to berlin", "go to san francisco", "go snorkeling", "visit nice places", "pack", "foreign travel", "visit amsterdam", "go to theme parks", "enjoy entertainment", "take cruise", "coworkers envious", "play sports", "put pets in pet hotel", "do passtime", "hire travel agent", "visit europe", "visit rio", "may take train", "visit new york", "having vacation money to spend", "water ski", "pack things", "come home", "go to plays", "go to new orleans", "go to chicago", "make reservations", "go to fiji", "catch up on things", "lounge in backyard hammock", "will relax", "cessation of work", "share with", "go to copenhagen", "work on hobbies", "get out cameras", "carry luggage", "go to mountains", "put things in order", "new challenges", "make travel plans", "buy travelers checks", "visit africa", "get sun", "go to tourist sights", "use travelers checks", "return home", "play baseball", "coworkers must pick up load", "visit los angeles", "visit tokyo", "have adventures", "see yellowstone", "can spend family time", "go sailing", "work on book", "eat out more", "get outdoors", "read maps", "take pictures", "take harbor cruises", "don't go into office", "drive", "go to knotts berry farm", "refreshed attitude", "tan", "relaxation", "go to airport", "buy film", "paint house", "forgetting to pack", "sleep late", "go to park", "meet interesting people", "fishing", "unforgetable memories", "get in car to return", "go diving", "go to washington d.c", "go to sea shore", "spend money", "go to movie", "go to cabin", "pack up vehicle", "update passport", "visit russia", "go to beach", "work on side business", "see yosemite", "luggage lost", "coworkers must do extra work", "read", "visit london", "mosquito bites", "buy camera", "have travelers checks stolen", "stay at hotel", "hire house sitter", "feel relaxed", "read books", "go to hawaii", "take family somewhere", "go fishing", "use public transportation", "visit south america", "see new places", "get excited", "go to reno", "stay at motel", "visit ancient cities", "go skiing", "lose travelers checks", "watch baseball", "go to branson", "sleeping in tent", "relax", "have time to make children", "unexpected", "go to disneyland", "drinking liquor", "go to vegas", "play basetball", "rent place to stay", "have grand alaskan adventure", "vegetate", "pack car", "go on love boat", "work intrudes anyway", "go to caribbean", "visit ozarks", "going through climate changes", "have time for children", "packing too much", "go to national park", "pack bags", "go places have never been", "take camcorder", "use videocam", "visit asia", "go to lake tahoe", "go hiking", "repair house", "business falls apart", "buy travel package", "having lemonade in shade", "work on new business", "catching poison oak", "travel between different destinations", "go home", "house getting robbed", "lay around", "rejuvenate", "go to magic mountain", "say so long to coworkers", "travel to airport", "swim", "go visit relatives", "tired body", "rent motor home", "enjoy outdoors", "go to niagra falls", "pack stuff", "reserve lodging", "picnics", "visit norway sweden or finland", "office will miss", "go to seattle", "go to majorca", "visit china", "get sea sick", "sleeping in sleeping bag", "visit rome", "watch basketball", "do project", "catching poison ivy", "each day can special", "take museum tours", "visit singapore", "driving to destination", "go to favorite place", "pack luggage", "buying film", "see things for first time", "sun burn", "lock up house", "clean garage", "eat in restaurants", "stay away from office", "go visit friends", "refresh", "travel", "make plans"], "input": {"head": "go on vacation", "relation": "HasSubEvent", "prompt": "While going on vacation, you would"}}
{"generation": ["be asked to fill out a questionnaire, which would"], "references": ["get weighed on scales", "check on body's status", "disrobe", "health problem discovered", "take off shirt", "pay doctor's bill", "taking off clothes", "draw blood", "blood taken", "weighed", "drop pants", "physical exursion", "embarassment", "urinating in cup", "pain", "visit doctor", "finfing disease", "reflex test", "remove clothing", "doctor gives bad news", "say aaaaah"], "input": {"head": "have physical exam", "relation": "HasSubEvent", "prompt": "While having physical exam, you would"}}
{"generation": ["be able to see the current state of the game"], "references": ["going home", "watching actors", "go to theatre", "walk in", "see actress", "applaud actors", "give ticket to usher", "have fun", "winning", "intermission", "say goodbye", "purchase tickets", "get playbill", "get dressed", "check tickets", "enjoyment and learning", "meet friend", "see when play listed", "watch actors", "hire taxi", "leave theater", "would sit in auditorium", "eat", "see actor", "watch characters", "sit for long time"], "input": {"head": "go to play", "relation": "HasSubEvent", "prompt": "While going to playing, you would"}}
{"generation": ["be surprised how many people don't know how to"], "references": ["abide by ethical rules"], "input": {"head": "professional", "relation": "HasSubEvent", "prompt": "While professional, you would"}}
{"generation": ["be able to see the pieces move, and you"], "references": ["controlling diagonal", "calculate variations", "move pieces", "capture of queen", "setting up figures", "concentrate strongly", "win or lose game", "set up board", "move pawn", "capture of rook", "middle game", "drawn game", "say checkmate", "determine who plays white", "loosing knight", "guarding pawn", "checking", "being part of tournament", "promoting pawn", "concentrate", "protecting piece", "castling kingside", "unexpected move", "following rules", "capture of bishop", "set up pieces", "checkmate opponent", "concerntrate on chess game", "move chess pieces", "winning", "set up chess board", "castling queenside", "loosing queen", "think", "loosing rook", "run out of time", "move white pawn", "intellectual stimulation", "put away pieces", "promotion", "capture pawns", "time expires", "might win", "capture of pawn", "contemplate move", "controlling square", "travel arrangements", "castling", "checkmate", "openning variation", "try to win", "time moves", "having passed pawn", "pack away chessboard", "thinking", "lose", "put set away", "lose track of time", "en passant", "would win", "capturing en passant", "use timer", "move white knight", "defending piece", "artificially intelligent opponent", "loosing bishop", "controlling row", "visualizing patterns", "textbook move", "controlling file", "getting beat by prodigy", "patience", "trap", "move piece", "win", "discovered attack", "focus attention", "touch piece", "put opponent's king in checkmate", "end game reached", "discovered check", "capture of knight", "make opening move", "castling king", "think ahead", "loosing pawn", "kibitzers gather", "being watched by kibitzers", "attacking and defending", "computer wins", "forced move", "kill opponent's queen", "pieces get knocked over", "end game", "compete against another player", "set up game pieces"], "input": {"head": "play chess", "relation": "HasSubEvent", "prompt": "While playing chess, you would"}}
{"generation": ["be able to feel the pain of the other person"], "references": ["cry"], "input": {"head": "feel pain", "relation": "HasSubEvent", "prompt": "While feeling pain, you would"}}
{"generation": ["be able to see the party's current location,"], "references": ["talk about next time", "talk about old times", "get film developed", "people will drink", "account for cost", "find out if everyone enjoyed themselves", "but lots of food and drink", "package up unfinished food", "socialise", "clean up mess", "dog bites", "plop down", "printint sign with computer", "invite mon and dad", "thank band", "housework", "collect remembrances", "go to bed", "might get drunk", "pick up dishes", "reflect on memories", "smoke bowl", "refrigerate food", "give thanks", "pick up tab", "have reunion", "guests get drunk", "sing last song", "vacuum", "drinking and music", "dump detritus", "thank party goers for coming", "close front door", "kiss goodbye", "say goodbye", "receive departing guests at door", "create scrapbook", "tip help", "clean up place", "wonder why didn't come", "thank help", "express relief", "inquire about travel concerns", "turn off lights", "cleaning room", "send out invitations", "retrieve coats", "lawn croquet", "grumpy", "make sure drinkers don't drive", "accept congratulations", "glasses get borken", "give hug goodbye", "pay caterer", "assist departures", "throw up", "distribute goodies", "wipe off lipstick", "people spill drinks and food", "give out souvenirs", "make sure guests have directions", "pay bill", "stand at front door", "eat leftovers", "send copies of pictures", "clean everything up", "skinny dipping in backyard pool", "friends show up", "throw away used gift wrappings", "invite people", "dancing", "take aspirin", "give big cheer", "cherish moments of evening", "watching football", "send invitations", "put out snacks", "lessening of inhibitions", "sending directions", "plan", "eat perishables", "have fun", "read thank notes", "choose music", "clean up confetti", "wash dishes", "spills on carpet", "fun", "think about safe travel home", "see guests off", "pick up pieces", "pray together", "sigh in relief", "hug spouse", "get laid", "begin new life", "provide snacks", "decorating with crepe paper", "help guests get wraps", "guests open party favors", "wave goodbye", "take baby sitter home"], "input": {"head": "have party", "relation": "HasSubEvent", "prompt": "While having party, you would"}}
{"generation": ["have to be a bit of a genius to figure"], "references": ["get excited"], "input": {"head": "touch", "relation": "HasSubEvent", "prompt": "While touch, you would"}}
{"generation": ["think, would be about the merits of the bill"], "references": ["state case"], "input": {"head": "debate", "relation": "HasSubEvent", "prompt": "While debate, you would"}}
{"generation": ["PersonX can spend the money on whatever he wants"], "references": ["PersonX tries to find other people to steal money from", "PersonX brings back all of the items they bought"], "input": {"head": "PersonX spends all of PersonY's money", "relation": "isBefore", "prompt": "PersonX spends all of PersonY's money. After that,"}}
{"generation": ["PersonX and PersonY are free to do whatever"], "references": ["PersonX fills PersonY's car with gas as a thank you", "PersonX crashes car"], "input": {"head": "PersonX drives PersonY's car to work", "relation": "isBefore", "prompt": "PersonX drives PersonY's car to work. After that,"}}
{"generation": ["the player can choose to go to the next level"], "references": ["PersonX drives to pickup the pizza"], "input": {"head": "PersonX gets pizza", "relation": "isBefore", "prompt": "PersonX gets pizza. After that,"}}
{"generation": ["PersonX will be able to move forward and Person"], "references": ["PersonX gets scratched"], "input": {"head": "PersonX holds PersonY back", "relation": "isBefore", "prompt": "PersonX holds PersonY back. After that,"}}
{"generation": ["the game is a lot more fun"], "references": ["PersonX looks for a rag to clean it up", "PersonX cleans up the tea"], "input": {"head": "PersonX spills the tea", "relation": "isBefore", "prompt": "PersonX spills the tea. After that,"}}
{"generation": ["the game is a bit of a mess"], "references": ["PersonX makes it home on time"], "input": {"head": "PersonX keeps straight", "relation": "isBefore", "prompt": "PersonX keeps straight. After that,"}}
{"generation": ["the person's life is affected by the person's"], "references": ["PersonX pays for PersonY's hospital bills"], "input": {"head": "PersonX affects PersonY's lives", "relation": "isBefore", "prompt": "PersonX affects PersonY's lives. After that,"}}
{"generation": ["he's not afraid to go to the dark side"], "references": ["PersonX buys a t-shirt and hat for the band"], "input": {"head": "PersonX goes to great lengths", "relation": "isBefore", "prompt": "PersonX goes to great lengths. After that,"}}
{"generation": ["PersonX will be able to move around the room"], "references": ["PersonX is yelled at by another movie goer"], "input": {"head": "PersonX puts PersonX's feet up", "relation": "isBefore", "prompt": "PersonX puts PersonX's feet up. After that,"}}
{"generation": ["PersonX and PersonY are both killed by the"], "references": ["PersonX is paid very well"], "input": {"head": "PersonX carries out PersonY's plan", "relation": "isBefore", "prompt": "PersonX carries out PersonY's plan. After that,"}}
{"generation": ["PersonY will be able to see the person's"], "references": ["PersonX shows that PersonY is a criminal", "PersonX destroyed PersonY's life", "PersonX gets scolded for gossiping"], "input": {"head": "PersonX reveals PersonY's identity", "relation": "isBefore", "prompt": "PersonX reveals PersonY's identity. After that,"}}
{"generation": ["PersonX's hands are bound to the PersonY"], "references": ["PersonX escapes the binds"], "input": {"head": "PersonX binds PersonX's hands together", "relation": "isBefore", "prompt": "PersonX binds PersonX's hands together. After that,"}}
{"generation": ["the car drives off"], "references": ["PersonX gets in the car and drives to the school"], "input": {"head": "PersonX walks to the car", "relation": "isBefore", "prompt": "PersonX walks to the car. After that,"}}
{"generation": ["the paper is the only thing that matters"], "references": ["PersonX reads the message"], "input": {"head": "PersonX takes paper in the future", "relation": "isBefore", "prompt": "PersonX takes paper in the future. After that,"}}
{"generation": ["PersonX's paycheck is sent to PersonY"], "references": ["PersonX is ready to spend some money"], "input": {"head": "PersonX gets PersonX's paycheck", "relation": "isBefore", "prompt": "PersonX gets PersonX's paycheck. After that,"}}
{"generation": ["I'm not sure what to do"], "references": ["PersonX becomes a scary monster", "PersonX spends the night scaring kids"], "input": {"head": "PersonX looks like something", "relation": "isBefore", "prompt": "PersonX looks like something. After that,"}}
{"generation": ["PersonX is left alone"], "references": ["PersonX continues to exercise"], "input": {"head": "PersonX wipes PersonX's forehead", "relation": "isBefore", "prompt": "PersonX wipes PersonX's forehead. After that,"}}
{"generation": ["the user can choose to publish the user's profile"], "references": ["PersonX gets rich"], "input": {"head": "PersonX gets published", "relation": "isBefore", "prompt": "PersonX gets published. After that,"}}
{"generation": ["PersonX is able to use the power of the"], "references": ["PersonX makes PersonY submit"], "input": {"head": "PersonX twists PersonY's arm", "relation": "isBefore", "prompt": "PersonX twists PersonY's arm. After that,"}}
{"generation": ["the difference is not significant"], "references": ["PersonX celebrates their good grade"], "input": {"head": "PersonX does much better", "relation": "isBefore", "prompt": "PersonX does much better. After that,"}}
{"generation": ["he'll eat you"], "references": ["PersonX leaves without anybody seeing", "PersonX throws up"], "input": {"head": "PersonX eats everything", "relation": "isBefore", "prompt": "PersonX eats everything. After that,"}}
{"generation": ["the game is a simple, linear, and linear"], "references": ["PersonX reading books"], "input": {"head": "PersonX spends all of PersonX's time", "relation": "isBefore", "prompt": "PersonX spends all of PersonX's time. After that,"}}
{"generation": ["PersonX will be able to see the person's"], "references": ["PersonX talks all day with PersonY's mother"], "input": {"head": "PersonX visits PersonY's mother", "relation": "isBefore", "prompt": "PersonX visits PersonY's mother. After that,"}}
{"generation": ["I was able to get a few more things done"], "references": ["PersonX does the thing"], "input": {"head": "PersonX finally worked up", "relation": "isBefore", "prompt": "PersonX finally worked up. After that,"}}
{"generation": ["he'll ask you to go to the beach"], "references": ["PersonX drives to the pool"], "input": {"head": "PersonX wants to swim", "relation": "isBefore", "prompt": "PersonX wants to swim. After that,"}}
{"generation": ["the game is a bit of a mess"], "references": ["PersonX makes dinner"], "input": {"head": "PersonX makes it back", "relation": "isBefore", "prompt": "PersonX makes it back. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX bows in conclusion", "PersonX drops the microphone"], "input": {"head": "PersonX sings PersonY a song", "relation": "isBefore", "prompt": "PersonX sings PersonY a song. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX is thanked profusely"], "input": {"head": "PersonX changes PersonY's lives", "relation": "isBefore", "prompt": "PersonX changes PersonY's lives. After that,"}}
{"generation": ["he goes to the kitchen and starts cooking"], "references": ["PersonX hears a fire alarm"], "input": {"head": "PersonX takes a nap on the couch", "relation": "isBefore", "prompt": "PersonX takes a nap on the couch. After that,"}}
{"generation": ["PersonX will be happy"], "references": ["PersonX tells PersonY how great the show was"], "input": {"head": "PersonX loves PersonY's performance", "relation": "isBefore", "prompt": "PersonX loves PersonY's performance. After that,"}}
{"generation": ["the player can choose to either light the candle or"], "references": ["PersonX is glad the smell is gone", "PersonX sings happy birthday to the child", "PersonX blows out the candle"], "input": {"head": "PersonX lights a candle", "relation": "isBefore", "prompt": "PersonX lights a candle. After that,"}}
{"generation": ["the player can choose to either go to the left"], "references": ["PersonX uses super-strength to get the plane to safety"], "input": {"head": "PersonX flies overhead", "relation": "isBefore", "prompt": "PersonX flies overhead. After that,"}}
{"generation": ["he's a bit of a slob"], "references": ["PersonX cracks open an energy drink to stay awake"], "input": {"head": "PersonX has trouble staying awake", "relation": "isBefore", "prompt": "PersonX has trouble staying awake. After that,"}}
{"generation": ["the player is given the option to either take care"], "references": ["PersonX stays in bed", "PersonX went to the doctor", "PersonX schedules an appointment with their doctor"], "input": {"head": "PersonX falls ill", "relation": "isBefore", "prompt": "PersonX falls ill. After that,"}}
{"generation": ["PersonX hands it to PersonY"], "references": ["PersonX tells PersonY to open a bank account"], "input": {"head": "PersonX hands it to PersonY", "relation": "isBefore", "prompt": "PersonX hands it to PersonY. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX also sees the tigers"], "input": {"head": "PersonX sees the elephants", "relation": "isBefore", "prompt": "PersonX sees the elephants. After that,"}}
{"generation": ["he'll ask for a cup of coffee"], "references": ["PersonX pours a bowl of cereal"], "input": {"head": "PersonX wants cereal", "relation": "isBefore", "prompt": "PersonX wants cereal. After that,"}}
{"generation": ["you can use the keyboard to select the window you"], "references": ["PersonX grabs a glass of ice water"], "input": {"head": "PersonX opens the windows", "relation": "isBefore", "prompt": "PersonX opens the windows. After that,"}}
{"generation": ["you can use the \"X\" button to move"], "references": ["PersonX is happy they made up"], "input": {"head": "PersonX works things out", "relation": "isBefore", "prompt": "PersonX works things out. After that,"}}
{"generation": ["the cat is gone"], "references": ["PersonX trips and falls on the ground", "PersonX catches the cat", "PersonX gets arrested"], "input": {"head": "PersonX chases the cat", "relation": "isBefore", "prompt": "PersonX chases the cat. After that,"}}
{"generation": ["PersonX's gas is pumped to PersonY"], "references": ["PersonX gets a big tip", "PersonX pays the cashier for their gas"], "input": {"head": "PersonX pumps PersonX's gas", "relation": "isBefore", "prompt": "PersonX pumps PersonX's gas. After that,"}}
{"generation": ["PersonX moves to the right and PersonY moves"], "references": ["PersonX laughs as PersonY jumps"], "input": {"head": "PersonX touches PersonY's shoulder", "relation": "isBefore", "prompt": "PersonX touches PersonY's shoulder. After that,"}}
{"generation": ["PersonX is the only one who can knock Person"], "references": ["PersonX takes the trophy"], "input": {"head": "PersonX knocks PersonY's socks off", "relation": "isBefore", "prompt": "PersonX knocks PersonY's socks off. After that,"}}
{"generation": ["the only thing left is to wait for the next"], "references": ["PersonX signs up to skydive again"], "input": {"head": "PersonX stills lives", "relation": "isBefore", "prompt": "PersonX stills lives. After that,"}}
{"generation": ["the two of them are seen talking to each other"], "references": ["PersonX smiles when the teacher explains it again"], "input": {"head": "PersonX looks confused", "relation": "isBefore", "prompt": "PersonX looks confused. After that,"}}
{"generation": ["PersonX is an astronaut when PersonY grew up"], "references": ["PersonX mentors PersonY while PersonY studies to be an astronaut"], "input": {"head": "PersonX is an astronaut when PersonY grew up", "relation": "isBefore", "prompt": "PersonX is an astronaut when PersonY grew up. After that,"}}
{"generation": ["the player can move the player character around the room"], "references": ["PersonX receives a splinter from the wood"], "input": {"head": "PersonX touches wood", "relation": "isBefore", "prompt": "PersonX touches wood. After that,"}}
{"generation": ["he moved to the east coast of the US"], "references": ["PersonX attends classes at college", "PersonX begins their new job", "PersonX unpacks their moving van"], "input": {"head": "PersonX moves to florida", "relation": "isBefore", "prompt": "PersonX moves to florida. After that,"}}
{"generation": ["the two of them stare at each other for a"], "references": ["PersonX proposes marriage to PersonY"], "input": {"head": "PersonX looks up into PersonY's eyes", "relation": "isBefore", "prompt": "PersonX looks up into PersonY's eyes. After that,"}}
{"generation": ["the player can choose to go to the next location"], "references": ["PersonX holds the new book tightly", "PersonX puts the shells in the beach bag", "PersonX plays with the new toy"], "input": {"head": "PersonX finds another", "relation": "isBefore", "prompt": "PersonX finds another. After that,"}}
{"generation": ["PersonY is given a choice:\n\n1"], "references": ["PersonX leaves PersonY behind"], "input": {"head": "PersonX gives PersonY an earful", "relation": "isBefore", "prompt": "PersonX gives PersonY an earful. After that,"}}
{"generation": ["he's going to be late for everything"], "references": ["PersonX gets fired"], "input": {"head": "PersonX is an hour late for work", "relation": "isBefore", "prompt": "PersonX is an hour late for work. After that,"}}
{"generation": ["the player is sent to the office"], "references": ["PersonX gets a write up by the principal", "PersonX gets a formal reprimand from their boss"], "input": {"head": "PersonX is sent to the office", "relation": "isBefore", "prompt": "PersonX is sent to the office. After that,"}}
{"generation": ["we can use PersonX"], "references": ["PersonX gives a good performance"], "input": {"head": "PersonX uses PersonY instrument", "relation": "isBefore", "prompt": "PersonX uses PersonY instrument. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX drives PersonY to the vet to get the dog vaccinated", "PersonX helps PersonY take care of the dog", "PersonX gives the dog to PersonY"], "input": {"head": "PersonX buys PersonY a dog", "relation": "isBefore", "prompt": "PersonX buys PersonY a dog. After that,"}}
{"generation": ["the game is a lot of fun"], "references": ["PersonX sits down in the waiting room"], "input": {"head": "PersonX gets there early", "relation": "isBefore", "prompt": "PersonX gets there early. After that,"}}
{"generation": ["PersonX will be able to use the PersonX"], "references": ["PersonX gets out of their seat to hand it in"], "input": {"head": "PersonX finishes PersonX's test", "relation": "isBefore", "prompt": "PersonX finishes PersonX's test. After that,"}}
{"generation": ["PersonX will be able to move around the room"], "references": ["PersonX writes down his performance"], "input": {"head": "PersonX gives PersonY control", "relation": "isBefore", "prompt": "PersonX gives PersonY control. After that,"}}
{"generation": ["he's a full-time employee of the company"], "references": ["PersonX buys a house", "PersonX pays the new car off faster", "PersonX buys new clothes for the job"], "input": {"head": "PersonX gets a second job", "relation": "isBefore", "prompt": "PersonX gets a second job. After that,"}}
{"generation": ["PersonZ is the last one"], "references": ["PersonX enjoyed the circus"], "input": {"head": "PersonX brings the kids with PersonY", "relation": "isBefore", "prompt": "PersonX brings the kids with PersonY. After that,"}}
{"generation": ["it's a matter of how much money you can"], "references": ["PersonX buys many expensive things"], "input": {"head": "PersonX makes a good living", "relation": "isBefore", "prompt": "PersonX makes a good living. After that,"}}
{"generation": ["he is seen in the classroom, where he is"], "references": ["PersonX is sweaty"], "input": {"head": "PersonX arrives to class", "relation": "isBefore", "prompt": "PersonX arrives to class. After that,"}}
{"generation": ["he is a bicycle salesman"], "references": ["PersonX rides his new bike every day"], "input": {"head": "PersonX buys a bicycle", "relation": "isBefore", "prompt": "PersonX buys a bicycle. After that,"}}
{"generation": ["he's a vegetarian"], "references": ["PersonX is full and pats their belly"], "input": {"head": "PersonX eats burgers", "relation": "isBefore", "prompt": "PersonX eats burgers. After that,"}}
{"generation": ["the player must find the ring and return it to"], "references": ["PersonX puts the ring back on their finger"], "input": {"head": "PersonX finds the ring", "relation": "isBefore", "prompt": "PersonX finds the ring. After that,"}}
{"generation": ["he goes to the beach and plays with the snow"], "references": ["PersonX takes a photo of their snowman", "PersonX goes in for hot chocolate to warm up", "PersonX places an old scarf around its neck"], "input": {"head": "PersonX builds a giant snowman", "relation": "isBefore", "prompt": "PersonX builds a giant snowman. After that,"}}
{"generation": ["you can use the following command to check the status"], "references": ["PersonX buys the game online"], "input": {"head": "PersonX checks online", "relation": "isBefore", "prompt": "PersonX checks online. After that,"}}
{"generation": ["the game is a bit of a mess"], "references": ["PersonX is smart"], "input": {"head": "PersonX gets the drift", "relation": "isBefore", "prompt": "PersonX gets the drift. After that,"}}
{"generation": ["the game is a bit of a mess"], "references": ["PersonX stops to check the damage", "PersonX now his hand is also broken up"], "input": {"head": "PersonX hits something hard", "relation": "isBefore", "prompt": "PersonX hits something hard. After that,"}}
{"generation": ["I was able to get the data from the dump"], "references": ["PersonX is very sad", "PersonX goes to the store to get away"], "input": {"head": "PersonX dumps by PersonX's boyfriend", "relation": "isBefore", "prompt": "PersonX dumps by PersonX's boyfriend. After that,"}}
{"generation": ["the player can choose to either kill the person or"], "references": ["PersonX is buried back in PersonX's hometown"], "input": {"head": "PersonX dies for PersonX's country", "relation": "isBefore", "prompt": "PersonX dies for PersonX's country. After that,"}}
{"generation": ["the player can choose to have the player's character"], "references": ["PersonX rules his new kingdom"], "input": {"head": "PersonX succeeds PersonX's father", "relation": "isBefore", "prompt": "PersonX succeeds PersonX's father. After that,"}}
{"generation": ["the player character will be able to choose from a"], "references": ["PersonX had the right away"], "input": {"head": "PersonX goes first", "relation": "isBefore", "prompt": "PersonX goes first. After that,"}}
{"generation": ["the player can choose to go to the next town"], "references": ["PersonX schedules a trip"], "input": {"head": "PersonX wants to visit", "relation": "isBefore", "prompt": "PersonX wants to visit. After that,"}}
{"generation": ["it's a matter of how you present yourself"], "references": ["PersonX asks questions about the job", "PersonX gets the job", "PersonX accepts the position"], "input": {"head": "PersonX gives a good account of oneself", "relation": "isBefore", "prompt": "PersonX gives a good account of oneself. After that,"}}
{"generation": ["he is invited to a party at the home of"], "references": ["PersonX wins the contest money"], "input": {"head": "PersonX enters an art contest", "relation": "isBefore", "prompt": "PersonX enters an art contest. After that,"}}
{"generation": ["he goes to the train station and meets up with"], "references": ["PersonX calls a auto repair shop"], "input": {"head": "PersonX takes the train that day", "relation": "isBefore", "prompt": "PersonX takes the train that day. After that,"}}
{"generation": ["he's got a new album coming out, and"], "references": ["PersonX cashes the paycheck"], "input": {"head": "PersonX keeps on truckin", "relation": "isBefore", "prompt": "PersonX keeps on truckin. After that,"}}
{"generation": ["he's on a date with a girl"], "references": ["PersonX takes date home"], "input": {"head": "PersonX is on a first date", "relation": "isBefore", "prompt": "PersonX is on a first date. After that,"}}
{"generation": ["the client will send the X-Client-ID"], "references": ["PersonX brings the award to the post office", "PersonX onx walked out without paying"], "input": {"head": "PersonX has to send it back", "relation": "isBefore", "prompt": "PersonX has to send it back. After that,"}}
{"generation": ["PersonX will get the order of PersonY's"], "references": ["PersonX calls in PersonY's order"], "input": {"head": "PersonX gets PersonY's order", "relation": "isBefore", "prompt": "PersonX gets PersonY's order. After that,"}}
{"generation": ["you can use the app to create a new user"], "references": ["PersonX publishes the app"], "input": {"head": "PersonX creates an app", "relation": "isBefore", "prompt": "PersonX creates an app. After that,"}}
{"generation": ["the only thing left is to find the right balance"], "references": ["PersonX leaves a tip", "PersonX pays their part of the bill"], "input": {"head": "PersonX splits the difference", "relation": "isBefore", "prompt": "PersonX splits the difference. After that,"}}
{"generation": ["the player can choose to go to the next area"], "references": ["PersonX calls their friends to make sure they got home"], "input": {"head": "PersonX leaves alone", "relation": "isBefore", "prompt": "PersonX leaves alone. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX calls for an ambulance", "PersonX feels good about PersonX's work", "PersonX holds PersonY until the ambulance comes"], "input": {"head": "PersonX restores PersonY to life", "relation": "isBefore", "prompt": "PersonX restores PersonY to life. After that,"}}
{"generation": ["I was told that I had to take a test"], "references": ["PersonX improves their grade", "PersonX passed the exam"], "input": {"head": "PersonX studies for an exam", "relation": "isBefore", "prompt": "PersonX studies for an exam. After that,"}}
{"generation": ["it will be a new chapter in the life of"], "references": ["PersonX takes a picture of the dog and its new owner", "PersonX moves in to a new home", "PersonX looks for more rabbits"], "input": {"head": "PersonX finds it a new home", "relation": "isBefore", "prompt": "PersonX finds it a new home. After that,"}}
{"generation": ["it's just a matter of time before he's"], "references": ["PersonX opens an animal shelter"], "input": {"head": "PersonX makes it PersonX's career", "relation": "isBefore", "prompt": "PersonX makes it PersonX's career. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX starts to sing dixie"], "input": {"head": "PersonX whistles dixie", "relation": "isBefore", "prompt": "PersonX whistles dixie. After that,"}}
{"generation": ["the player is given the option to either kill him"], "references": ["PersonX receives an applause"], "input": {"head": "PersonX gives a speech", "relation": "isBefore", "prompt": "PersonX gives a speech. After that,"}}
{"generation": ["he was always fighting"], "references": ["PersonX wins the boxing championship"], "input": {"head": "PersonX always fought", "relation": "isBefore", "prompt": "PersonX always fought. After that,"}}
{"generation": ["he goes to the store and buys a new pair"], "references": ["PersonX comes home and relax after finishing with errands"], "input": {"head": "PersonX runs some errands", "relation": "isBefore", "prompt": "PersonX runs some errands. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX onx tells PersonY he loves her"], "input": {"head": "PersonX takes PersonY in PersonY's arms", "relation": "isBefore", "prompt": "PersonX takes PersonY in PersonY's arms. After that,"}}
{"generation": ["he will say \"I'm not going to let"], "references": ["PersonX eats a donut"], "input": {"head": "PersonX becomes very frustrated", "relation": "isBefore", "prompt": "PersonX becomes very frustrated. After that,"}}
{"generation": ["he goes to the bakery and buys a loaf of"], "references": ["PersonX eats their yummy bread", "PersonY and PersonX eat the fresh bread", "PersonX slices the bread"], "input": {"head": "PersonX makes bread", "relation": "isBefore", "prompt": "PersonX makes bread. After that,"}}
{"generation": ["I'm going to be a good boy and not"], "references": ["PersonX turns red of embarrassment", "PersonX is speaking french", "PersonX keeps talking"], "input": {"head": "PersonX pardons my french", "relation": "isBefore", "prompt": "PersonX pardons my french. After that,"}}
{"generation": ["the player can choose to either kill the player or"], "references": ["PersonX finally sees the doctor"], "input": {"head": "PersonX becomes impatient", "relation": "isBefore", "prompt": "PersonX becomes impatient. After that,"}}
{"generation": ["PersonY will be able to see the person's"], "references": ["PersonX gathers more signatures"], "input": {"head": "PersonX asks PersonY to sign", "relation": "isBefore", "prompt": "PersonX asks PersonY to sign. After that,"}}
{"generation": ["they are expected to work for a year or two"], "references": ["PersonX is proud of their degree"], "input": {"head": "PersonX graduates college", "relation": "isBefore", "prompt": "PersonX graduates college. After that,"}}
{"generation": ["I'm not sure what to do"], "references": ["PersonX tried to conceal her looks"], "input": {"head": "PersonX looks like crap", "relation": "isBefore", "prompt": "PersonX looks like crap. After that,"}}
{"generation": ["PersonY will be able to see PersonX's"], "references": ["PersonX waits for PersonY to respond"], "input": {"head": "PersonX gives PersonY a note", "relation": "isBefore", "prompt": "PersonX gives PersonY a note. After that,"}}
{"generation": ["he's going to have to find a way to"], "references": ["PersonX didn't have to wait for the train"], "input": {"head": "PersonX finds another way", "relation": "isBefore", "prompt": "PersonX finds another way. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX sends a friend request to PersonY", "PersonX writes a book report on PersonY"], "input": {"head": "PersonX knows much about PersonY", "relation": "isBefore", "prompt": "PersonX knows much about PersonY. After that,"}}
{"generation": ["he's just a guy who's trying to get"], "references": ["PersonX gets pulled over by a cop"], "input": {"head": "PersonX hightails it", "relation": "isBefore", "prompt": "PersonX hightails it. After that,"}}
{"generation": ["he goes to the ring and finds a ring"], "references": ["PersonX finds the person it belongs to"], "input": {"head": "PersonX finds a ring", "relation": "isBefore", "prompt": "PersonX finds a ring. After that,"}}
{"generation": ["PersonX will see PersonY's mother"], "references": ["PersonX stops to chat with PersonY's mother"], "input": {"head": "PersonX sees PersonY mother", "relation": "isBefore", "prompt": "PersonX sees PersonY mother. After that,"}}
{"generation": ["we will be focusing on the next generation of consoles"], "references": ["PersonX sets up a will"], "input": {"head": "PersonX is coming to an end", "relation": "isBefore", "prompt": "PersonX is coming to an end. After that,"}}
{"generation": ["PersonX will be able to change PersonX's"], "references": ["PersonX comes out reformed"], "input": {"head": "PersonX changes PersonX's way", "relation": "isBefore", "prompt": "PersonX changes PersonX's way. After that,"}}
{"generation": ["the cat is adopted by the cat's owner"], "references": ["PersonX buys a new litter box"], "input": {"head": "PersonX decides to adopt the cat", "relation": "isBefore", "prompt": "PersonX decides to adopt the cat. After that,"}}
{"generation": ["the cat is free to roam the house"], "references": ["PersonX pets the cat"], "input": {"head": "PersonX fees the cat", "relation": "isBefore", "prompt": "PersonX fees the cat. After that,"}}
{"generation": ["he wants to learn how to play the drums"], "references": ["PersonX signs up for some music lessons"], "input": {"head": "PersonX wants to learn how to play the guitar", "relation": "isBefore", "prompt": "PersonX wants to learn how to play the guitar. After that,"}}
{"generation": ["the two of them are seen in the background"], "references": ["PersonX gets beat up", "PersonX sees the other person fall down", "PersonX knocks bully out then kicks his balls in"], "input": {"head": "PersonX strikes a blow", "relation": "isBefore", "prompt": "PersonX strikes a blow. After that,"}}
{"generation": ["he is given a new name, \"Mister"], "references": ["PersonX starts the first day of work"], "input": {"head": "PersonX takes a new job", "relation": "isBefore", "prompt": "PersonX takes a new job. After that,"}}
{"generation": ["PersonX can earn money by selling PersonX's"], "references": ["PersonX spends PersonX's money"], "input": {"head": "PersonX earns PersonX's own money", "relation": "isBefore", "prompt": "PersonX earns PersonX's own money. After that,"}}
{"generation": ["we'll see what happens"], "references": ["PersonX buys ice skates"], "input": {"head": "PersonX wants to give it a try", "relation": "isBefore", "prompt": "PersonX wants to give it a try. After that,"}}
{"generation": ["PersonX tells PersonY to tell"], "references": ["PersonX is known as a snitch for the rest of their school career", "PersonX tells on PersonY since PersonY wouldn't confess"], "input": {"head": "PersonX tells PersonY to tell", "relation": "isBefore", "prompt": "PersonX tells PersonY to tell. After that,"}}
{"generation": ["he's a good guy"], "references": ["PersonX hands out sandwiches to the homeless"], "input": {"head": "PersonX does a good deed", "relation": "isBefore", "prompt": "PersonX does a good deed. After that,"}}
{"generation": ["the player will be able to choose a new character"], "references": ["PersonX sees the countryside"], "input": {"head": "PersonX is taking a trip", "relation": "isBefore", "prompt": "PersonX is taking a trip. After that,"}}
{"generation": ["the person who is uncomfortable is the one who is"], "references": ["PersonX onx apologizes to PersonY for the accident", "PersonX laughs and walks away"], "input": {"head": "PersonX makes PersonY uncomfortable", "relation": "isBefore", "prompt": "PersonX makes PersonY uncomfortable. After that,"}}
{"generation": ["the mouse is moved to the right"], "references": ["PersonX types up the letter"], "input": {"head": "PersonX pushes the mouse forward", "relation": "isBefore", "prompt": "PersonX pushes the mouse forward. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX asks if PersonY needs any more help"], "input": {"head": "PersonX helps PersonY along", "relation": "isBefore", "prompt": "PersonX helps PersonY along. After that,"}}
{"generation": ["I'll be back to work on the next update"], "references": ["PersonX takes the flat tire to the mechanic"], "input": {"head": "PersonX has to get it fixed", "relation": "isBefore", "prompt": "PersonX has to get it fixed. After that,"}}
{"generation": ["PersonX is left with a single wad of"], "references": ["PersonX no longer has mucus in their throat", "PersonX is appreciative", "PersonX looks for a part-time job"], "input": {"head": "PersonX blows PersonX's wad", "relation": "isBefore", "prompt": "PersonX blows PersonX's wad. After that,"}}
{"generation": ["PersonX will be able to see PersonY"], "references": ["PersonY flattens PersonX's tires"], "input": {"head": "PersonX prevents PersonY from coming", "relation": "isBefore", "prompt": "PersonX prevents PersonY from coming. After that,"}}
{"generation": ["the player can choose to either kill him or let"], "references": ["PersonX finally walks away"], "input": {"head": "PersonX refuses to move", "relation": "isBefore", "prompt": "PersonX refuses to move. After that,"}}
{"generation": ["he's a little more of a mystery"], "references": ["PersonX buys some new card", "PersonX shows his cards to his friends", "PersonX gives away 0 percent of them since they lost value"], "input": {"head": "PersonX collects baseball cards", "relation": "isBefore", "prompt": "PersonX collects baseball cards. After that,"}}
{"generation": ["the person will be able to see the person's"], "references": ["PersonX stands on their tip toes"], "input": {"head": "PersonX comes to PersonY's eyes", "relation": "isBefore", "prompt": "PersonX comes to PersonY's eyes. After that,"}}
{"generation": ["PersonX will be the one who will be the"], "references": ["PersonX fires PersonY"], "input": {"head": "PersonX works PersonY's way up", "relation": "isBefore", "prompt": "PersonX works PersonY's way up. After that,"}}
{"generation": ["he's going to be a lot more confident"], "references": ["PersonX rides their bike without being afraid to fall"], "input": {"head": "PersonX is no longer scared", "relation": "isBefore", "prompt": "PersonX is no longer scared. After that,"}}
{"generation": ["the game is a bit of a mixed bag"], "references": ["PersonX dries PersonX's hair", "PersonX lays down in bed", "PersonX is going to the club with their friends"], "input": {"head": "PersonX feels refreshed", "relation": "isBefore", "prompt": "PersonX feels refreshed. After that,"}}
{"generation": ["the game is a bit more linear, but still"], "references": ["PersonX ate dinner at a restaurant", "PersonX finds a bar that is open", "PersonX walks into a new store"], "input": {"head": "PersonX goes elsewhere", "relation": "isBefore", "prompt": "PersonX goes elsewhere. After that,"}}
{"generation": ["it's a matter of how much money you can"], "references": ["PersonX is bankrupt"], "input": {"head": "PersonX pisses money up the wall", "relation": "isBefore", "prompt": "PersonX pisses money up the wall. After that,"}}
{"generation": ["the ball is in the air and the game is"], "references": ["PersonX cooks deer"], "input": {"head": "PersonX gets the shot", "relation": "isBefore", "prompt": "PersonX gets the shot. After that,"}}
{"generation": ["he wakes up and goes to the bathroom"], "references": ["PersonX wakes up at 3 and cannot get back to sleep"], "input": {"head": "PersonX has a bad dream", "relation": "isBefore", "prompt": "PersonX has a bad dream. After that,"}}
{"generation": ["I think we'll see a lot of people who"], "references": ["PersonX reads the end"], "input": {"head": "PersonX thinks would happen", "relation": "isBefore", "prompt": "PersonX thinks would happen. After that,"}}
{"generation": ["PersonY kisses PersonX passionately"], "references": ["PersonX and PersonY go inside"], "input": {"head": "PersonX kisses PersonY passionately", "relation": "isBefore", "prompt": "PersonX kisses PersonY passionately. After that,"}}
{"generation": ["the ball is thrown to the other team"], "references": ["PersonX tells his dog to fetch the ball"], "input": {"head": "PersonX throws the ball", "relation": "isBefore", "prompt": "PersonX throws the ball. After that,"}}
{"generation": ["the game is a lot more fun"], "references": ["PersonX is stuck and waits for help"], "input": {"head": "PersonX gets tangled", "relation": "isBefore", "prompt": "PersonX gets tangled. After that,"}}
{"generation": ["he'll say, \"I'm not sure if"], "references": ["PersonX congratulates PersonY on their winnings"], "input": {"head": "PersonX can n't believe PersonY's luck", "relation": "isBefore", "prompt": "PersonX can n't believe PersonY's luck. After that,"}}
{"generation": ["it's a matter of time before the game is"], "references": ["PersonX quits the music industry", "PersonX cries after reading the news of their failure"], "input": {"head": "PersonX fails to even go platinum", "relation": "isBefore", "prompt": "PersonX fails to even go platinum. After that,"}}
{"generation": ["the only thing that matters is that you look good"], "references": ["PersonX takes pictures with their date"], "input": {"head": "PersonX wears makeup", "relation": "isBefore", "prompt": "PersonX wears makeup. After that,"}}
{"generation": ["the group was able to get a new home in"], "references": ["PersonX opens up an business store, one that they can llive in upstairs"], "input": {"head": "PersonX eventually moved", "relation": "isBefore", "prompt": "PersonX eventually moved. After that,"}}
{"generation": ["he goes to the beach and takes a towel to"], "references": ["PersonX lays on the beach"], "input": {"head": "PersonX takes a towel to the beach", "relation": "isBefore", "prompt": "PersonX takes a towel to the beach. After that,"}}
{"generation": ["it's a matter of how much it costs"], "references": ["PersonX says that PersonX should not have wasted PersonX's money"], "input": {"head": "PersonX buys anything", "relation": "isBefore", "prompt": "PersonX buys anything. After that,"}}
{"generation": ["the user can choose to set the time to a"], "references": ["PersonX puts it on his calendar"], "input": {"head": "PersonX gives the time of day", "relation": "isBefore", "prompt": "PersonX gives the time of day. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX dries their eyes"], "input": {"head": "PersonX starts crying", "relation": "isBefore", "prompt": "PersonX starts crying. After that,"}}
{"generation": ["I'm not sure what to do"], "references": ["PersonX chastises everyone for losing"], "input": {"head": "PersonX beats everyone", "relation": "isBefore", "prompt": "PersonX beats everyone. After that,"}}
{"generation": ["PersonX's head is removed"], "references": ["PersonX kisses the pope's ring"], "input": {"head": "PersonX bows PersonX's heads", "relation": "isBefore", "prompt": "PersonX bows PersonX's heads. After that,"}}
{"generation": ["he wants to learn how to play the piano"], "references": ["PersonX finds a cooking class"], "input": {"head": "PersonX wants to learn how to cook", "relation": "isBefore", "prompt": "PersonX wants to learn how to cook. After that,"}}
{"generation": ["the player can choose to either go to the next"], "references": ["PersonX lets PersonY inside the house"], "input": {"head": "PersonX opens PersonY's doors", "relation": "isBefore", "prompt": "PersonX opens PersonY's doors. After that,"}}
{"generation": ["he's back to his old self"], "references": ["PersonX makes a wooden sculpture"], "input": {"head": "PersonX grinds gears for a month", "relation": "isBefore", "prompt": "PersonX grinds gears for a month. After that,"}}
{"generation": ["PersonX checks PersonY's watch again"], "references": ["PersonX hurries up"], "input": {"head": "PersonX checks PersonY's watch", "relation": "isBefore", "prompt": "PersonX checks PersonY's watch. After that,"}}
{"generation": ["PersonX moves to the next cell, and Person"], "references": ["PersonX waits for the police"], "input": {"head": "PersonX holds PersonY in place", "relation": "isBefore", "prompt": "PersonX holds PersonY in place. After that,"}}
{"generation": ["PersonX's son is killed by a man who"], "references": ["PersonX helps their son understand the material"], "input": {"head": "PersonX helps PersonX's son", "relation": "isBefore", "prompt": "PersonX helps PersonX's son. After that,"}}
{"generation": ["the fish will be able to swim around and eat"], "references": ["PersonX feeds the fish"], "input": {"head": "PersonX puts fish in the tank", "relation": "isBefore", "prompt": "PersonX puts fish in the tank. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX blames it on PersonY"], "input": {"head": "PersonX breaks wind", "relation": "isBefore", "prompt": "PersonX breaks wind. After that,"}}
{"generation": ["the other players started to join in"], "references": ["PersonX onx worked the cash register"], "input": {"head": "PersonX immediately started", "relation": "isBefore", "prompt": "PersonX immediately started. After that,"}}
{"generation": ["he goes to the kitchen and gets a drink"], "references": ["PersonX orders a cold beer"], "input": {"head": "PersonX sits at the bar", "relation": "isBefore", "prompt": "PersonX sits at the bar. After that,"}}
{"generation": ["he's back to his normal self"], "references": ["PersonX plans another vacation"], "input": {"head": "PersonX has a wonderful time on PersonX's trip", "relation": "isBefore", "prompt": "PersonX has a wonderful time on PersonX's trip. After that,"}}
{"generation": ["the game will be over"], "references": ["PersonX leaves the beach"], "input": {"head": "PersonX is getting dark", "relation": "isBefore", "prompt": "PersonX is getting dark. After that,"}}
{"generation": ["PersonX and PersonY are the same object"], "references": ["PersonX helps y turn life around"], "input": {"head": "PersonX puts PersonY together", "relation": "isBefore", "prompt": "PersonX puts PersonY together. After that,"}}
{"generation": ["PersonX is saved and PersonY is killed"], "references": ["PersonX feels happy to help"], "input": {"head": "PersonX tries to save PersonY", "relation": "isBefore", "prompt": "PersonX tries to save PersonY. After that,"}}
{"generation": ["he's a big fish"], "references": ["PersonX takes a photo with the fish"], "input": {"head": "PersonX catches a big fish", "relation": "isBefore", "prompt": "PersonX catches a big fish. After that,"}}
{"generation": ["the player can choose to follow him or not"], "references": ["PersonX sees a car coming towards them", "PersonX looks both ways for cars", "PersonX is going shopping for a new one"], "input": {"head": "PersonX is walking across the street", "relation": "isBefore", "prompt": "PersonX is walking across the street. After that,"}}
{"generation": ["he goes to the bathroom and eats a sandwich"], "references": ["PersonX pays for the hamburger"], "input": {"head": "PersonX eats a hamburger", "relation": "isBefore", "prompt": "PersonX eats a hamburger. After that,"}}
{"generation": ["the person will be able to see the person's"], "references": ["PersonX has a few drinks with them", "PersonX onx takes PersonY out to dinner", "PersonX goes shopping with them"], "input": {"head": "PersonX meets someone", "relation": "isBefore", "prompt": "PersonX meets someone. After that,"}}
{"generation": ["the pipe is closed and the PersonX and Person"], "references": ["PersonX asks PersonY if they like the tobacco"], "input": {"head": "PersonX fills PersonY's pipe", "relation": "isBefore", "prompt": "PersonX fills PersonY's pipe. After that,"}}
{"generation": ["you can go to the next area, where you"], "references": ["PersonX has a pleasant time"], "input": {"head": "PersonX affords the trip", "relation": "isBefore", "prompt": "PersonX affords the trip. After that,"}}
{"generation": ["the job is sent to the hiring manager"], "references": ["PersonX goes to interviews"], "input": {"head": "PersonX applies for jobs", "relation": "isBefore", "prompt": "PersonX applies for jobs. After that,"}}
{"generation": ["the game is no longer available for purchase"], "references": ["PersonX regrets spending their money on the game", "PersonX plays the new video game", "PersonX plays his new video game for hours"], "input": {"head": "PersonX buys a new video game", "relation": "isBefore", "prompt": "PersonX buys a new video game. After that,"}}
{"generation": ["the song is a bit more mellow, but"], "references": ["PersonX pours it into a bake pan", "PersonX turns off the music", "PersonX serves the wrong drinks"], "input": {"head": "PersonX mixes it up", "relation": "isBefore", "prompt": "PersonX mixes it up. After that,"}}
{"generation": ["he's a good player"], "references": ["PersonX gets rewarded for their answer", "PersonX made up an excuse and kept going", "PersonX confronts the other driver"], "input": {"head": "PersonX thinks on PersonX's feet", "relation": "isBefore", "prompt": "PersonX thinks on PersonX's feet. After that,"}}
{"generation": ["PersonY was never seen again"], "references": ["PersonX felt bad about missing PersonY's birthday"], "input": {"head": "PersonX never gave PersonY a present", "relation": "isBefore", "prompt": "PersonX never gave PersonY a present. After that,"}}
{"generation": ["he's just a normal guy"], "references": ["PersonX asks if their date if they would like to order an appetizer"], "input": {"head": "PersonX plays it cool", "relation": "isBefore", "prompt": "PersonX plays it cool. After that,"}}
{"generation": ["he'll be hungry again"], "references": ["PersonX eats some tomato soup"], "input": {"head": "PersonX has n't eaten all day", "relation": "isBefore", "prompt": "PersonX has n't eaten all day. After that,"}}
{"generation": ["I'm going to go to the gym and do"], "references": ["PersonX eats a big plate of spaghetti"], "input": {"head": "PersonX makes pasta that night", "relation": "isBefore", "prompt": "PersonX makes pasta that night. After that,"}}
{"generation": ["he'll ask you to help him with his sewing"], "references": ["PersonX buys a sewing machine"], "input": {"head": "PersonX wants to learn how to sew", "relation": "isBefore", "prompt": "PersonX wants to learn how to sew. After that,"}}
{"generation": ["it sends the picture to the server"], "references": ["PersonX prints out the picture"], "input": {"head": "PersonX takes a picture", "relation": "isBefore", "prompt": "PersonX takes a picture. After that,"}}
{"generation": ["he goes to the bathroom and takes a shower"], "references": ["PersonX drys off and puts on the new shirt"], "input": {"head": "PersonX grabs a towel", "relation": "isBefore", "prompt": "PersonX grabs a towel. After that,"}}
{"generation": ["the book is sent to the customer"], "references": ["PersonX is enjoying the great novel"], "input": {"head": "PersonX orders the book", "relation": "isBefore", "prompt": "PersonX orders the book. After that,"}}
{"generation": ["PersonX will be able to use PersonY's"], "references": ["PersonX is an effective leader"], "input": {"head": "PersonX puts PersonY to use", "relation": "isBefore", "prompt": "PersonX puts PersonY to use. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX driving PersonY"], "input": {"head": "PersonX is PersonY's maid of honor", "relation": "isBefore", "prompt": "PersonX is PersonY's maid of honor. After that,"}}
{"generation": ["the person will be able to see the world as"], "references": ["PersonX attends college"], "input": {"head": "PersonX turns PersonX's life around", "relation": "isBefore", "prompt": "PersonX turns PersonX's life around. After that,"}}
{"generation": ["I will be able to order from amazon"], "references": ["PersonX opens the box when television is delivered"], "input": {"head": "PersonX orders television from amazon", "relation": "isBefore", "prompt": "PersonX orders television from amazon. After that,"}}
{"generation": ["the class is split into two groups"], "references": ["PersonX applies for a high paying job"], "input": {"head": "PersonX graduates top of PersonX's class", "relation": "isBefore", "prompt": "PersonX graduates top of PersonX's class. After that,"}}
{"generation": ["it will return the number of characters in the string"], "references": ["PersonX waits for an hour before being called up"], "input": {"head": "PersonX takes a number", "relation": "isBefore", "prompt": "PersonX takes a number. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX gets offered a good job in their field"], "input": {"head": "PersonX makes PersonX's parents proud", "relation": "isBefore", "prompt": "PersonX makes PersonX's parents proud. After that,"}}
{"generation": ["I was able to get a job at a local"], "references": ["PersonX scratches the mosquito bites from the night before", "PersonX makes smores at night", "PersonX catches a bunch of fish"], "input": {"head": "PersonX camps with PersonX's family", "relation": "isBefore", "prompt": "PersonX camps with PersonX's family. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX wins game"], "input": {"head": "PersonX plays PersonY's game", "relation": "isBefore", "prompt": "PersonX plays PersonY's game. After that,"}}
{"generation": ["it will be a year before we can start to"], "references": ["PersonX gets lots of gifts"], "input": {"head": "PersonX is three years old", "relation": "isBefore", "prompt": "PersonX is three years old. After that,"}}
{"generation": ["PersonX is given a random name"], "references": ["PersonX picks a name"], "input": {"head": "PersonX puts PersonX's name in the hat", "relation": "isBefore", "prompt": "PersonX puts PersonX's name in the hat. After that,"}}
{"generation": ["PersonY will call PersonX"], "references": ["PersonX is rejected by y", "PersonX picks up friends and goes to the party"], "input": {"head": "PersonX calls PersonY tonight", "relation": "isBefore", "prompt": "PersonX calls PersonY tonight. After that,"}}
{"generation": ["the game is a bit more linear, but still"], "references": ["PersonX makes a trail"], "input": {"head": "PersonX cuts a swath", "relation": "isBefore", "prompt": "PersonX cuts a swath. After that,"}}
{"generation": ["PersonX sees PersonY rarely"], "references": ["PersonX swims with PersonY"], "input": {"head": "PersonX sees PersonY frequently", "relation": "isBefore", "prompt": "PersonX sees PersonY frequently. After that,"}}
{"generation": ["you can choose to have him wear a different outfit"], "references": ["PersonX is teased for style"], "input": {"head": "PersonX always wears", "relation": "isBefore", "prompt": "PersonX always wears. After that,"}}
{"generation": ["he goes to the park and plays with his friends"], "references": ["PersonX attends the graduation ceremony"], "input": {"head": "PersonX takes a test at school", "relation": "isBefore", "prompt": "PersonX takes a test at school. After that,"}}
{"generation": ["PersonX shoots PersonY in the head"], "references": ["PersonX shoots PersonY", "PersonX knows if it is an intruder they are the better shot"], "input": {"head": "PersonX grabs PersonY's gun", "relation": "isBefore", "prompt": "PersonX grabs PersonY's gun. After that,"}}
{"generation": ["the player can choose to use the \"Swing"], "references": ["PersonX onx sows the swathes together"], "input": {"head": "PersonX cuts swathes", "relation": "isBefore", "prompt": "PersonX cuts swathes. After that,"}}
{"generation": ["PersonY will be able to see the person's"], "references": ["PersonX plans their date"], "input": {"head": "PersonX discusses the matter with PersonY", "relation": "isBefore", "prompt": "PersonX discusses the matter with PersonY. After that,"}}
{"generation": ["PersonX is the only one who can move"], "references": ["PersonX goes to the front of the line"], "input": {"head": "PersonX pushes past PersonY", "relation": "isBefore", "prompt": "PersonX pushes past PersonY. After that,"}}
{"generation": ["the movie is rented to the user"], "references": ["PersonX watches the movie rented", "PersonX invited friends over to hang out", "PersonX watches the movie and eats popcorn"], "input": {"head": "PersonX rents a movie", "relation": "isBefore", "prompt": "PersonX rents a movie. After that,"}}
{"generation": ["the battle ends"], "references": ["PersonX helps y through"], "input": {"head": "PersonX fights PersonY's battle", "relation": "isBefore", "prompt": "PersonX fights PersonY's battle. After that,"}}
{"generation": ["I'm not sure what to do"], "references": ["PersonX ends up being manager"], "input": {"head": "PersonX works very well", "relation": "isBefore", "prompt": "PersonX works very well. After that,"}}
{"generation": ["PersonX will be able to move again"], "references": ["PersonX continues working"], "input": {"head": "PersonX makes PersonY stop", "relation": "isBefore", "prompt": "PersonX makes PersonY stop. After that,"}}
{"generation": ["PersonY pays PersonZ taxes"], "references": ["PersonX asks for repayment", "PersonX accepts payment from PersonY"], "input": {"head": "PersonX pays PersonY taxes", "relation": "isBefore", "prompt": "PersonX pays PersonY taxes. After that,"}}
{"generation": ["the player can choose to go to the next level"], "references": ["PersonX pins two pieces of fabric together", "PersonX covers the hole", "PersonX onx places the bag inside"], "input": {"head": "PersonX cuts a hole", "relation": "isBefore", "prompt": "PersonX cuts a hole. After that,"}}
{"generation": ["the player can choose to go to the next house"], "references": ["PersonX begins a new job"], "input": {"head": "PersonX moves home", "relation": "isBefore", "prompt": "PersonX moves home. After that,"}}
{"generation": ["he's off to the races"], "references": ["PersonX lands safely in anchorage"], "input": {"head": "PersonX boards a plane", "relation": "isBefore", "prompt": "PersonX boards a plane. After that,"}}
{"generation": ["he's a little more relaxed"], "references": ["PersonX falls down laughing"], "input": {"head": "PersonX busts a nut", "relation": "isBefore", "prompt": "PersonX busts a nut. After that,"}}
{"generation": ["he'll be able to get a job"], "references": ["PersonX applies to a burger stand"], "input": {"head": "PersonX has to get a job", "relation": "isBefore", "prompt": "PersonX has to get a job. After that,"}}
{"generation": ["he's back in the house, where he's"], "references": ["PersonX is attacked by animals", "PersonX enjoys the walk and returns to the car"], "input": {"head": "PersonX takes a hike in the woods", "relation": "isBefore", "prompt": "PersonX takes a hike in the woods. After that,"}}
{"generation": ["PersonX walks to the house and opens the door"], "references": ["PersonX goes inside for cocoa"], "input": {"head": "PersonX shovels PersonX's driveway", "relation": "isBefore", "prompt": "PersonX shovels PersonX's driveway. After that,"}}
{"generation": ["PersonX is free to do whatever he wants"], "references": ["PersonX decides the water is too cold and returns home"], "input": {"head": "PersonX gets PersonX's feet wet", "relation": "isBefore", "prompt": "PersonX gets PersonX's feet wet. After that,"}}
{"generation": ["it's a matter of how much you want to"], "references": ["PersonX quits their job to stay at home with the children", "PersonX gets no responses"], "input": {"head": "PersonX has two kids", "relation": "isBefore", "prompt": "PersonX has two kids. After that,"}}
{"generation": ["the player can choose to wear PersonX's hat"], "references": ["PersonX walks in the snow"], "input": {"head": "PersonX wears PersonX's boots", "relation": "isBefore", "prompt": "PersonX wears PersonX's boots. After that,"}}
{"generation": ["PersonX will give PersonY PersonX's opinion"], "references": ["PersonX listens to PersonY's answer"], "input": {"head": "PersonX gives PersonY PersonX's opinion", "relation": "isBefore", "prompt": "PersonX gives PersonY PersonX's opinion. After that,"}}
{"generation": ["he's going to be a little bit more relaxed"], "references": ["PersonX goes to bed early that night"], "input": {"head": "PersonX has a bad day", "relation": "isBefore", "prompt": "PersonX has a bad day. After that,"}}
{"generation": ["the person who threw the person overboard will be the"], "references": ["PersonX feels no remorse as he watches PersonY drown"], "input": {"head": "PersonX throws PersonY overboard", "relation": "isBefore", "prompt": "PersonX throws PersonY overboard. After that,"}}
{"generation": ["PersonX will be the only one who can see"], "references": ["PersonX puts the kids to bed early"], "input": {"head": "PersonX takes care of PersonY's children", "relation": "isBefore", "prompt": "PersonX takes care of PersonY's children. After that,"}}
{"generation": ["it's a matter of personal preference"], "references": ["PersonX gets married to PersonY"], "input": {"head": "PersonX loves PersonY more than anything", "relation": "isBefore", "prompt": "PersonX loves PersonY more than anything. After that,"}}
{"generation": ["I'm going to be a little more careful about"], "references": ["PersonX asks PersonY if they studied for the final"], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "isBefore", "prompt": "PersonX loves PersonY with all my heart. After that,"}}
{"generation": ["he will be able to learn the karate moves"], "references": ["PersonX signs up for classes at the local ymca"], "input": {"head": "PersonX wants to learn karate", "relation": "isBefore", "prompt": "PersonX wants to learn karate. After that,"}}
{"generation": ["the shell is destroyed"], "references": ["PersonX puts it with the others in the bucket"], "input": {"head": "PersonX finds another shell", "relation": "isBefore", "prompt": "PersonX finds another shell. After that,"}}
{"generation": ["the game is a bit of a slog"], "references": ["PersonX has to go to bed early from exhuastion"], "input": {"head": "PersonX has a wonderful time", "relation": "isBefore", "prompt": "PersonX has a wonderful time. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX accepts a gift from PersonY", "PersonX makes new friends"], "input": {"head": "PersonX turns PersonY's heads", "relation": "isBefore", "prompt": "PersonX turns PersonY's heads. After that,"}}
{"generation": ["the player is free to do whatever they want"], "references": ["PersonX ends up in a lot of trouble"], "input": {"head": "PersonX falls into the wrong hands", "relation": "isBefore", "prompt": "PersonX falls into the wrong hands. After that,"}}
{"generation": ["the taxi driver will call the taxi company and the"], "references": ["PersonX waits for the taxi to show up"], "input": {"head": "PersonX calls a taxi", "relation": "isBefore", "prompt": "PersonX calls a taxi. After that,"}}
{"generation": ["PersonX and PersonY are both in the same"], "references": ["PersonX then asks PersonY why they aren't talking to them"], "input": {"head": "PersonX shrugs PersonY's shoulders", "relation": "isBefore", "prompt": "PersonX shrugs PersonY's shoulders. After that,"}}
{"generation": ["the game will start to slow down"], "references": ["PersonX pulls into gas station"], "input": {"head": "PersonX is low on gas", "relation": "isBefore", "prompt": "PersonX is low on gas. After that,"}}
{"generation": ["PersonX will present the views of PersonY and"], "references": ["PersonX gets told off by PersonY"], "input": {"head": "PersonX presents PersonX's views", "relation": "isBefore", "prompt": "PersonX presents PersonX's views. After that,"}}
{"generation": ["he's going to eat a lot of food"], "references": ["PersonX got the daily special", "PersonX orders chinese takeout"], "input": {"head": "PersonX does n't know what to eat", "relation": "isBefore", "prompt": "PersonX does n't know what to eat. After that,"}}
{"generation": ["the player is given the option to either kill the"], "references": ["PersonX reports the person"], "input": {"head": "PersonX becomes suspicious", "relation": "isBefore", "prompt": "PersonX becomes suspicious. After that,"}}
{"generation": ["he's a little more hesitant to let the puppy"], "references": ["PersonX names the puppy"], "input": {"head": "PersonX loves the puppy", "relation": "isBefore", "prompt": "PersonX loves the puppy. After that,"}}
{"generation": ["he'll be able to get a job"], "references": ["PersonX brings her parents a gift", "PersonX tells them about the charities they donate to", "PersonX gets the job"], "input": {"head": "PersonX wants to make a good impression", "relation": "isBefore", "prompt": "PersonX wants to make a good impression. After that,"}}
{"generation": ["he goes to a bar"], "references": ["PersonX buys a bunch of fries"], "input": {"head": "PersonX goes to a fast food restaurant", "relation": "isBefore", "prompt": "PersonX goes to a fast food restaurant. After that,"}}
{"generation": ["the phone is no longer owned by the person who"], "references": ["PersonX buys a waterproof case for the phone"], "input": {"head": "PersonX buys a new phone", "relation": "isBefore", "prompt": "PersonX buys a new phone. After that,"}}
{"generation": ["he'll start to get really angry"], "references": ["PersonX scrolls through social media during the sermon"], "input": {"head": "PersonX gets really bored", "relation": "isBefore", "prompt": "PersonX gets really bored. After that,"}}
{"generation": ["the player is given a choice of two options"], "references": ["PersonX rolls the dice first"], "input": {"head": "PersonX explains the rules", "relation": "isBefore", "prompt": "PersonX explains the rules. After that,"}}
{"generation": ["PersonX will be dead"], "references": ["PersonX offers to help PersonY even more"], "input": {"head": "PersonX changes PersonY life", "relation": "isBefore", "prompt": "PersonX changes PersonY life. After that,"}}
{"generation": ["it's a matter of how much you can get"], "references": ["PersonX receives a good grade"], "input": {"head": "PersonX needs a good grade", "relation": "isBefore", "prompt": "PersonX needs a good grade. After that,"}}
{"generation": ["he says that he's not sure if he's"], "references": ["PersonX asks for help"], "input": {"head": "PersonX beats around the bush", "relation": "isBefore", "prompt": "PersonX beats around the bush. After that,"}}
{"generation": ["PersonY is free to drink"], "references": ["PersonX drinks from PersonX's glass"], "input": {"head": "PersonX hands PersonY a glass", "relation": "isBefore", "prompt": "PersonX hands PersonY a glass. After that,"}}
{"generation": ["PersonX grabs PersonY's hair and pulls him"], "references": ["PersonX is later arrested", "PersonX covers PersonY's eyes so they cannot see"], "input": {"head": "PersonX tears PersonY's eyes away", "relation": "isBefore", "prompt": "PersonX tears PersonY's eyes away. After that,"}}
{"generation": ["the tire is replaced with a new one"], "references": ["PersonX recycles the old tire"], "input": {"head": "PersonX replaces the tire", "relation": "isBefore", "prompt": "PersonX replaces the tire. After that,"}}
{"generation": ["he's going to be a little bit more cautious"], "references": ["PersonX does not win"], "input": {"head": "PersonX feels lucky", "relation": "isBefore", "prompt": "PersonX feels lucky. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX leaves PersonY's class"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "isBefore", "prompt": "PersonX enjoys PersonY's class. After that,"}}
{"generation": ["PersonY's phone is no longer in the phone"], "references": ["PersonX gets a lot thanks"], "input": {"head": "PersonX charges PersonY's phone", "relation": "isBefore", "prompt": "PersonX charges PersonY's phone. After that,"}}
{"generation": ["PersonX and PersonY go to a bar"], "references": ["PersonX takes PersonY's girlfriend home", "PersonX eats dinner with PersonY's girlfriend", "PersonX sleeps with PersonY's girlfriend"], "input": {"head": "PersonX takes PersonY's girlfriend out to dinner", "relation": "isBefore", "prompt": "PersonX takes PersonY's girlfriend out to dinner. After that,"}}
{"generation": ["the player can choose to go to the next level"], "references": ["PersonX takes pictures of the lions", "PersonX takes a bunch of pictures", "PersonX buys a season zoo pass"], "input": {"head": "PersonX sees all the animals", "relation": "isBefore", "prompt": "PersonX sees all the animals. After that,"}}
{"generation": ["I'm not sure what to do"], "references": ["PersonX receives many awards", "PersonX asks to see the next patient"], "input": {"head": "PersonX makes PersonY well", "relation": "isBefore", "prompt": "PersonX makes PersonY well. After that,"}}
{"generation": ["I was able to get a few more reps in"], "references": ["PersonX plays in a recital"], "input": {"head": "PersonX practices for weeks", "relation": "isBefore", "prompt": "PersonX practices for weeks. After that,"}}
{"generation": ["I'm not sure what to do"], "references": ["PersonX takes a shower"], "input": {"head": "PersonX smells bad", "relation": "isBefore", "prompt": "PersonX smells bad. After that,"}}
{"generation": ["the stain is removed by the stain remover"], "references": ["PersonX tells the owner anyway"], "input": {"head": "PersonX gets the stain out", "relation": "isBefore", "prompt": "PersonX gets the stain out. After that,"}}
{"generation": ["PersonX will be able to see the friend's"], "references": ["PersonX apologizes the next day"], "input": {"head": "PersonX hits PersonY's friend", "relation": "isBefore", "prompt": "PersonX hits PersonY's friend. After that,"}}
{"generation": ["PersonY will say something like \"I'm sorry"], "references": ["PersonX nods at what PersonY says", "PersonX records PersonY talking", "PersonX high fives PersonY after their speech"], "input": {"head": "PersonX asks PersonY to speak", "relation": "isBefore", "prompt": "PersonX asks PersonY to speak. After that,"}}
{"generation": ["PersonX will be able to use the sword to"], "references": ["PersonX kills the enemy with the sword"], "input": {"head": "PersonX draws PersonX's sword", "relation": "isBefore", "prompt": "PersonX draws PersonX's sword. After that,"}}
{"generation": ["PersonX is no longer able to see PersonX"], "references": ["PersonX performs confidently during the interview"], "input": {"head": "PersonX shaves PersonX's beard", "relation": "isBefore", "prompt": "PersonX shaves PersonX's beard. After that,"}}
{"generation": ["the user is presented with a list of contacts"], "references": ["PersonX gets bad news from the caller"], "input": {"head": "PersonX gets a call", "relation": "isBefore", "prompt": "PersonX gets a call. After that,"}}
{"generation": ["I'm not sure what to say"], "references": ["PersonX goes to the flea market"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "isBefore", "prompt": "PersonX impresses with PersonX's work. After that,"}}
{"generation": ["the player can choose to either kill the enemy or"], "references": ["PersonX still gets shot"], "input": {"head": "PersonX takes cover", "relation": "isBefore", "prompt": "PersonX takes cover. After that,"}}
{"generation": ["he was a regular guy"], "references": ["\"PersonX says, \"\"i do\"\"\""], "input": {"head": "PersonX about to get married", "relation": "isBefore", "prompt": "PersonX about to get married. After that,"}}
{"generation": ["he goes to a bar and drinks"], "references": ["PersonX hustles to get people their breakfast quickly"], "input": {"head": "PersonX is working at a diner", "relation": "isBefore", "prompt": "PersonX is working at a diner. After that,"}}
{"generation": ["the game is up to you"], "references": ["PersonX gets hit in the face", "PersonX gets tired and sweaty", "PersonX runs around"], "input": {"head": "PersonX plays ball", "relation": "isBefore", "prompt": "PersonX plays ball. After that,"}}
{"generation": ["he goes to the bathroom and takes a shower"], "references": ["PersonX falls asleep for five hours"], "input": {"head": "PersonX goes home and rest", "relation": "isBefore", "prompt": "PersonX goes home and rest. After that,"}}
{"generation": ["he'll be able to get a new one"], "references": ["PersonX orders a second serving"], "input": {"head": "PersonX wants another one", "relation": "isBefore", "prompt": "PersonX wants another one. After that,"}}
{"generation": ["PersonX is the person who is the most like"], "references": ["PersonX goes to sleep"], "input": {"head": "PersonX lies behind PersonY", "relation": "isBefore", "prompt": "PersonX lies behind PersonY. After that,"}}
{"generation": ["he's off to the next one"], "references": ["PersonX goes for a jog"], "input": {"head": "PersonX stays busy", "relation": "isBefore", "prompt": "PersonX stays busy. After that,"}}
{"generation": ["I'm going to go to the next station and"], "references": ["PersonX fails the class"], "input": {"head": "PersonX hams it up", "relation": "isBefore", "prompt": "PersonX hams it up. After that,"}}
{"generation": ["he's going to be a little bit more cautious"], "references": ["PersonX walks out immediately"], "input": {"head": "PersonX smells something terrible", "relation": "isBefore", "prompt": "PersonX smells something terrible. After that,"}}
{"generation": ["PersonX is the one who is the most likely"], "references": ["PersonX taps PersonY's bumper to drive them off the road"], "input": {"head": "PersonX closes behind PersonY", "relation": "isBefore", "prompt": "PersonX closes behind PersonY. After that,"}}
{"generation": ["PersonX and PersonY are used to create Person"], "references": ["PersonX puts down PersonY's phone number on the phone"], "input": {"head": "PersonX provides PersonY introduction", "relation": "isBefore", "prompt": "PersonX provides PersonY introduction. After that,"}}
{"generation": ["the server comes back and says, \"I'm"], "references": ["PersonX asks for the bill"], "input": {"head": "PersonX orders a salad", "relation": "isBefore", "prompt": "PersonX orders a salad. After that,"}}
{"generation": ["the user can choose to do something else"], "references": ["PersonX helps PersonY ask for a snack"], "input": {"head": "PersonX indicates PersonY intention", "relation": "isBefore", "prompt": "PersonX indicates PersonY intention. After that,"}}
{"generation": ["the doctor tells him that he has a tumor in"], "references": ["PersonX is prescribed cough medicine", "PersonX gets a prescription filled and goes home", "PersonX gets a prescription from the doctor and PersonX goes to the drug store"], "input": {"head": "PersonX goes to the doctor 's office", "relation": "isBefore", "prompt": "PersonX goes to the doctor 's office. After that,"}}
{"generation": ["the player is given the option to either save him"], "references": ["PersonX vows to never eat bad meat again"], "input": {"head": "PersonX becomes very sick", "relation": "isBefore", "prompt": "PersonX becomes very sick. After that,"}}
{"generation": ["the game is a bit more linear, but still"], "references": ["PersonX climbs to the peak of the mountain"], "input": {"head": "PersonX takes a hike", "relation": "isBefore", "prompt": "PersonX takes a hike. After that,"}}
{"generation": ["it's up to you to decide what to do"], "references": ["PersonX throws a great party"], "input": {"head": "PersonX invites people", "relation": "isBefore", "prompt": "PersonX invites people. After that,"}}
{"generation": ["he's off to college"], "references": ["PersonX signs up for summer school"], "input": {"head": "PersonX spends the summer", "relation": "isBefore", "prompt": "PersonX spends the summer. After that,"}}
{"generation": ["the player can choose to either kill him or let"], "references": ["PersonX hurries even faster"], "input": {"head": "PersonX walks closer", "relation": "isBefore", "prompt": "PersonX walks closer. After that,"}}
{"generation": ["PersonX grabs PersonY's arm and pulls him"], "references": ["PersonX lifts PersonY out of the car", "PersonX pulls PersonY to the bed to make love", "PersonX drags PersonY from the wrecked car"], "input": {"head": "PersonX unbuckles PersonY's belt", "relation": "isBefore", "prompt": "PersonX unbuckles PersonY's belt. After that,"}}
{"generation": ["PersonX and PersonY will be able to see"], "references": ["PersonX goes into their destination and watches movies"], "input": {"head": "PersonX arrives at PersonX's destination", "relation": "isBefore", "prompt": "PersonX arrives at PersonX's destination. After that,"}}
{"generation": ["PersonX will be able to use PersonY's"], "references": ["PersonX is given a bonus by PersonY for serving them"], "input": {"head": "PersonX serves PersonY faithfully", "relation": "isBefore", "prompt": "PersonX serves PersonY faithfully. After that,"}}
{"generation": ["PersonX is the person who is the most important"], "references": ["PersonX opens PersonY's umbrell"], "input": {"head": "PersonX brings PersonY's umbrella", "relation": "isBefore", "prompt": "PersonX brings PersonY's umbrella. After that,"}}
{"generation": ["PersonY and PersonZ are both in the same"], "references": ["PersonX earns a few extra bucks"], "input": {"head": "PersonX babysits PersonY's cousin", "relation": "isBefore", "prompt": "PersonX babysits PersonY's cousin. After that,"}}
{"generation": ["PersonX will receive PersonY order"], "references": ["PersonX tells PersonY the total"], "input": {"head": "PersonX receives PersonY order", "relation": "isBefore", "prompt": "PersonX receives PersonY order. After that,"}}
{"generation": ["I was just a regular guy"], "references": ["PersonX is stopped by the police"], "input": {"head": "PersonX never got around", "relation": "isBefore", "prompt": "PersonX never got around. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX erases the mistake"], "input": {"head": "PersonX makes a mistake", "relation": "isBefore", "prompt": "PersonX makes a mistake. After that,"}}
{"generation": ["PersonX and PersonY are both dead"], "references": ["PersonX cries at the grave site"], "input": {"head": "PersonX mourns PersonY's loss", "relation": "isBefore", "prompt": "PersonX mourns PersonY's loss. After that,"}}
{"generation": ["I was like, \"I'm going to do"], "references": ["PersonX misses lunch date with PersonY"], "input": {"head": "PersonX never showed", "relation": "isBefore", "prompt": "PersonX never showed. After that,"}}
{"generation": ["he's a bit of a troublemaker"], "references": ["PersonX tells the school counselor the problem"], "input": {"head": "PersonX has trouble in school", "relation": "isBefore", "prompt": "PersonX has trouble in school. After that,"}}
{"generation": ["the player can choose to go left or right"], "references": ["PersonX makes it across the street safely"], "input": {"head": "PersonX looks both ways", "relation": "isBefore", "prompt": "PersonX looks both ways. After that,"}}
{"generation": ["he goes to the store and buys a new shirt"], "references": ["PersonX goes to bed"], "input": {"head": "PersonX waits all day", "relation": "isBefore", "prompt": "PersonX waits all day. After that,"}}
{"generation": ["the player can go to the bed and sleep"], "references": ["PersonX sleeps soundly", "PersonX sleeps until morning"], "input": {"head": "PersonX gets back to sleep", "relation": "isBefore", "prompt": "PersonX gets back to sleep. After that,"}}
{"generation": ["the clothes are washed and dried"], "references": ["PersonX hangs up the clothes after drying"], "input": {"head": "PersonX dries the clothes", "relation": "isBefore", "prompt": "PersonX dries the clothes. After that,"}}
{"generation": ["the links are broken and the link is removed"], "references": ["PersonX puts the dog into the pen"], "input": {"head": "PersonX links chain together", "relation": "isBefore", "prompt": "PersonX links chain together. After that,"}}
{"generation": ["he's going to be a good guy"], "references": ["PersonX returns the stolen book"], "input": {"head": "PersonX feels ashamed", "relation": "isBefore", "prompt": "PersonX feels ashamed. After that,"}}
{"generation": ["it will wait till see"], "references": ["PersonX waters the seed while waiting", "PersonX is happy that the friend feel better"], "input": {"head": "PersonX waits till see", "relation": "isBefore", "prompt": "PersonX waits till see. After that,"}}
{"generation": ["he's not sure what to do"], "references": ["PersonX stutters during speech"], "input": {"head": "PersonX gets nervous", "relation": "isBefore", "prompt": "PersonX gets nervous. After that,"}}
{"generation": ["he will be able to use the \"Punch"], "references": ["PersonX develops muscle tone"], "input": {"head": "PersonX starts training", "relation": "isBefore", "prompt": "PersonX starts training. After that,"}}
{"generation": ["PersonX and PersonY are in the same room"], "references": ["PersonX pays for PersonY to see the movie"], "input": {"head": "PersonX takes PersonY along", "relation": "isBefore", "prompt": "PersonX takes PersonY along. After that,"}}
{"generation": ["the user can choose to delete the file or not"], "references": ["PersonX is proud of PersonX's accomplishments"], "input": {"head": "PersonX stays clean", "relation": "isBefore", "prompt": "PersonX stays clean. After that,"}}
{"generation": ["the customer can choose to pay for the food with"], "references": ["PersonX listens for the doorbell"], "input": {"head": "PersonX orders delivery food", "relation": "isBefore", "prompt": "PersonX orders delivery food. After that,"}}
{"generation": ["PersonX will be able to call PersonY's"], "references": ["PersonX gives back the phone"], "input": {"head": "PersonX puts PersonY's phone", "relation": "isBefore", "prompt": "PersonX puts PersonY's phone. After that,"}}
{"generation": ["PersonY's fingers move to the left and Person"], "references": ["PersonX successfully teaches another student", "PersonX helps PersonY find the right buttons"], "input": {"head": "PersonX slides PersonY's fingers", "relation": "isBefore", "prompt": "PersonX slides PersonY's fingers. After that,"}}
{"generation": ["PersonX and PersonY are both in the car"], "references": ["PersonX drives away in PersonY's car"], "input": {"head": "PersonX steals PersonY's car", "relation": "isBefore", "prompt": "PersonX steals PersonY's car. After that,"}}
{"generation": ["PersonX and PersonY will be able to see"], "references": ["PersonX pat PersonX's brother on the back"], "input": {"head": "PersonX helps PersonX's brother", "relation": "isBefore", "prompt": "PersonX helps PersonX's brother. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX goes to the doctor"], "input": {"head": "PersonX burns badly", "relation": "isBefore", "prompt": "PersonX burns badly. After that,"}}
{"generation": ["PersonX will be able to see the person's"], "references": ["PersonX takes dog off leash"], "input": {"head": "PersonX enters PersonX's home", "relation": "isBefore", "prompt": "PersonX enters PersonX's home. After that,"}}
{"generation": ["the player can choose to either attack or defend"], "references": ["PersonX goes to dinner with the girl"], "input": {"head": "PersonX makes a move", "relation": "isBefore", "prompt": "PersonX makes a move. After that,"}}
{"generation": ["he's just a normal guy"], "references": ["PersonX knocks over a glass", "PersonX steals the watch"], "input": {"head": "PersonX sneaks around", "relation": "isBefore", "prompt": "PersonX sneaks around. After that,"}}
{"generation": ["he moved to New York City, where he worked"], "references": ["PersonX organized their dorm room", "PersonX settles into a new house"], "input": {"head": "PersonX moves to cambridge in 2013", "relation": "isBefore", "prompt": "PersonX moves to cambridge in 2013. After that,"}}
{"generation": ["PersonX walks PersonY's dogs"], "references": ["PersonX is paid for their services", "PersonX picks up dog droppings", "PersonX cleans up poop left behind by the dog"], "input": {"head": "PersonX walks PersonY's dogs", "relation": "isBefore", "prompt": "PersonX walks PersonY's dogs. After that,"}}
{"generation": ["he is invited to a party"], "references": ["PersonX loses the competition"], "input": {"head": "PersonX enters a baking competition", "relation": "isBefore", "prompt": "PersonX enters a baking competition. After that,"}}
{"generation": ["he asks the player to go to the \"C"], "references": ["PersonX hides in the closet"], "input": {"head": "PersonX tries to remain calm", "relation": "isBefore", "prompt": "PersonX tries to remain calm. After that,"}}
{"generation": ["I'm not sure what to do"], "references": ["PersonX doesn't care that they don't have any friends", "PersonX is excluded from future parties", "PersonX ends up making a scene"], "input": {"head": "PersonX acts weird", "relation": "isBefore", "prompt": "PersonX acts weird. After that,"}}
{"generation": ["it's a car every other day"], "references": ["PersonX drives the car to work"], "input": {"head": "PersonX uses a car every day", "relation": "isBefore", "prompt": "PersonX uses a car every day. After that,"}}
{"generation": ["PersonY is the one who gets the job done"], "references": ["PersonX goes to a pharmacy"], "input": {"head": "PersonX brings PersonY to the doctor", "relation": "isBefore", "prompt": "PersonX brings PersonY to the doctor. After that,"}}
{"generation": ["the money is lent to the company"], "references": ["PersonX buys the new car"], "input": {"head": "PersonX borrows some money", "relation": "isBefore", "prompt": "PersonX borrows some money. After that,"}}
{"generation": ["I was really disappointed"], "references": ["PersonX onx gets back on the bike"], "input": {"head": "PersonX is really disappointed", "relation": "isBefore", "prompt": "PersonX is really disappointed. After that,"}}
{"generation": ["the host will be able to invite guests to the"], "references": ["PersonX mixes drinks for guests"], "input": {"head": "PersonX hosts a party", "relation": "isBefore", "prompt": "PersonX hosts a party. After that,"}}
{"generation": ["PersonX can send the wallet to PersonY"], "references": ["PersonX goes home to look for wallet"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "isBefore", "prompt": "PersonX loses PersonY's wallet. After that,"}}
{"generation": ["he'll go on to say that he likes a"], "references": ["PersonX invites the girl on a date", "PersonX xonx asks the girl out to dinner"], "input": {"head": "PersonX likes a girl", "relation": "isBefore", "prompt": "PersonX likes a girl. After that,"}}
{"generation": ["the PersonX and PersonY are set to the"], "references": ["PersonX instructs PersonY to proceed again", "PersonX returns PersonY's paper"], "input": {"head": "PersonX corrects PersonY errors", "relation": "isBefore", "prompt": "PersonX corrects PersonY errors. After that,"}}
{"generation": ["the person is no longer a person"], "references": ["PersonX is waiting for the tooth fairy"], "input": {"head": "PersonX puts it under PersonX's pillow", "relation": "isBefore", "prompt": "PersonX puts it under PersonX's pillow. After that,"}}
{"generation": ["he's a producer"], "references": ["PersonX plays the music"], "input": {"head": "PersonX writes music", "relation": "isBefore", "prompt": "PersonX writes music. After that,"}}
{"generation": ["PersonX kisses PersonY's way"], "references": ["PersonX waves goodbye to PersonY"], "input": {"head": "PersonX kisses PersonY's way", "relation": "isBefore", "prompt": "PersonX kisses PersonY's way. After that,"}}
{"generation": ["the new PersonX is used for all the other"], "references": ["PersonX enjoys their new car"], "input": {"head": "PersonX replaces PersonX's old one", "relation": "isBefore", "prompt": "PersonX replaces PersonX's old one. After that,"}}
{"generation": ["the user can choose to send a picture or video"], "references": ["PersonX gets no response"], "input": {"head": "PersonX sends text messages", "relation": "isBefore", "prompt": "PersonX sends text messages. After that,"}}
{"generation": ["PersonX and PersonY are both in the same"], "references": ["PersonX returns dog back to PersonY"], "input": {"head": "PersonX catches PersonY's dog", "relation": "isBefore", "prompt": "PersonX catches PersonY's dog. After that,"}}
{"generation": ["PersonX will be able to drive the car"], "references": ["PersonX enters the car"], "input": {"head": "PersonX finds PersonX's car", "relation": "isBefore", "prompt": "PersonX finds PersonX's car. After that,"}}
{"generation": ["he will go to the store and buy a new"], "references": ["PersonX puts the vegetables in the car"], "input": {"head": "PersonX stops and get vegetables", "relation": "isBefore", "prompt": "PersonX stops and get vegetables. After that,"}}
{"generation": ["we'll see if we can get a win"], "references": ["PersonX receives the highest grade"], "input": {"head": "PersonX has a big test tomorrow", "relation": "isBefore", "prompt": "PersonX has a big test tomorrow. After that,"}}
{"generation": ["the two of them go to the hospital"], "references": ["PersonX takes PersonX's daughter to visit"], "input": {"head": "PersonX tells PersonX's daughter", "relation": "isBefore", "prompt": "PersonX tells PersonX's daughter. After that,"}}
{"generation": ["he wants to learn how to play the guitar"], "references": ["PersonX signs up for lessons"], "input": {"head": "PersonX wants to learn how to play the piano", "relation": "isBefore", "prompt": "PersonX wants to learn how to play the piano. After that,"}}
{"generation": ["the player is given a choice of two options:"], "references": ["PersonX stumbles and falls on the floor"], "input": {"head": "PersonX takes a step", "relation": "isBefore", "prompt": "PersonX takes a step. After that,"}}
{"generation": ["the two of them went their separate ways"], "references": ["PersonX reloaded the gun"], "input": {"head": "PersonX promptly fired", "relation": "isBefore", "prompt": "PersonX promptly fired. After that,"}}
{"generation": ["the person will be able to see the person's"], "references": ["PersonX goes to dinner with PersonY"], "input": {"head": "PersonX meets someone new", "relation": "isBefore", "prompt": "PersonX meets someone new. After that,"}}
{"generation": ["PersonX finds the person who killed his dad"], "references": ["PersonX goes home with PersonX's dad"], "input": {"head": "PersonX finds PersonX's dad", "relation": "isBefore", "prompt": "PersonX finds PersonX's dad. After that,"}}
{"generation": ["the player can move the crane to the right or"], "references": ["PersonX receives thanks from PersonY"], "input": {"head": "PersonX cranes PersonY's neck", "relation": "isBefore", "prompt": "PersonX cranes PersonY's neck. After that,"}}
{"generation": ["he goes to the place where he was born"], "references": ["PersonX packs up his belongings"], "input": {"head": "PersonX finds another place", "relation": "isBefore", "prompt": "PersonX finds another place. After that,"}}
{"generation": ["the player is given the option to either save him"], "references": ["PersonX coughs and sneezes a lot"], "input": {"head": "PersonX becomes very ill", "relation": "isBefore", "prompt": "PersonX becomes very ill. After that,"}}
{"generation": ["PersonX is treated as a PersonY"], "references": ["PersonX sees their next patient"], "input": {"head": "PersonX gives PersonY treatment", "relation": "isBefore", "prompt": "PersonX gives PersonY treatment. After that,"}}
{"generation": ["the game will play the song again"], "references": ["PersonX begins to dance"], "input": {"head": "PersonX plays PersonY's favorite song", "relation": "isBefore", "prompt": "PersonX plays PersonY's favorite song. After that,"}}
{"generation": ["PersonX will be able to use the PersonX"], "references": ["PersonX shows PersonY more exercises"], "input": {"head": "PersonX gets PersonX's juices flowing", "relation": "isBefore", "prompt": "PersonX gets PersonX's juices flowing. After that,"}}
{"generation": ["the person who is the target of the attack will"], "references": ["PersonX leaves store", "PersonX throws the gift away when they see it again"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "isBefore", "prompt": "PersonX puts it in PersonX's purse. After that,"}}
{"generation": ["the player can go to the lake and swim in"], "references": ["PersonX drys off with a towel"], "input": {"head": "PersonX swims in the lake", "relation": "isBefore", "prompt": "PersonX swims in the lake. After that,"}}
{"generation": ["he goes to the kitchen and finds a cockroach"], "references": ["PersonX puts down roach motels under the cupboards"], "input": {"head": "PersonX finds cockroaches at home", "relation": "isBefore", "prompt": "PersonX finds cockroaches at home. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX asks where PersonY was all day"], "input": {"head": "PersonX finds PersonY at home", "relation": "isBefore", "prompt": "PersonX finds PersonY at home. After that,"}}
{"generation": ["he is able to buy a new car"], "references": ["PersonX rides the back roads with the wind in their hair"], "input": {"head": "PersonX buys a new motorcycle", "relation": "isBefore", "prompt": "PersonX buys a new motorcycle. After that,"}}
{"generation": ["I was able to get a job at a company"], "references": ["PersonX finishes with an overall grade of a"], "input": {"head": "PersonX studies as much", "relation": "isBefore", "prompt": "PersonX studies as much. After that,"}}
{"generation": ["he goes to the store and buys a new shirt"], "references": ["PersonX goes into the store"], "input": {"head": "PersonX stops at the store", "relation": "isBefore", "prompt": "PersonX stops at the store. After that,"}}
{"generation": ["he'll be a father"], "references": ["PersonX talks to her husband"], "input": {"head": "PersonX wants a baby", "relation": "isBefore", "prompt": "PersonX wants a baby. After that,"}}
{"generation": ["he was able to get the information he needed"], "references": ["PersonX runs away", "PersonX shares the news with a friend", "PersonX calls 911"], "input": {"head": "PersonX sees what had happened", "relation": "isBefore", "prompt": "PersonX sees what had happened. After that,"}}
{"generation": ["it's up to the rest of us to make"], "references": ["PersonX goes out to eat with his teammates"], "input": {"head": "PersonX is playing ball", "relation": "isBefore", "prompt": "PersonX is playing ball. After that,"}}
{"generation": ["PersonX sends PersonY message"], "references": ["PersonX meets PersonY at the bar"], "input": {"head": "PersonX sends PersonY message", "relation": "isBefore", "prompt": "PersonX sends PersonY message. After that,"}}
{"generation": ["the player can go to the aquarium and talk to"], "references": ["PersonX takes photos to remember the experience"], "input": {"head": "PersonX visits the aquarium", "relation": "isBefore", "prompt": "PersonX visits the aquarium. After that,"}}
{"generation": ["the game was released on the Nintendo 64"], "references": ["PersonX apologizes for jumping ahead of someone"], "input": {"head": "PersonX accidentally cut", "relation": "isBefore", "prompt": "PersonX accidentally cut. After that,"}}
{"generation": ["the game is over"], "references": ["PersonX pays for the lottery tickets in cash"], "input": {"head": "PersonX expects to win", "relation": "isBefore", "prompt": "PersonX expects to win. After that,"}}
{"generation": ["the player can choose to have the player's daughter"], "references": ["PersonX watches the movie with PersonX's daughter"], "input": {"head": "PersonX brings PersonX's daughter", "relation": "isBefore", "prompt": "PersonX brings PersonX's daughter. After that,"}}
{"generation": ["the music will be turned back on"], "references": ["PersonX concentrated more easily"], "input": {"head": "PersonX turns PersonX's music down", "relation": "isBefore", "prompt": "PersonX turns PersonX's music down. After that,"}}
{"generation": ["it's up to you to decide whether to use"], "references": ["PersonX gets in trouble at work"], "input": {"head": "PersonX distributes in forms without permission", "relation": "isBefore", "prompt": "PersonX distributes in forms without permission. After that,"}}
{"generation": ["the player can choose to either eat it or not"], "references": ["PersonX drinks tea to wash it down"], "input": {"head": "PersonX eats it", "relation": "isBefore", "prompt": "PersonX eats it. After that,"}}
{"generation": ["the game is a bit of a mess"], "references": ["PersonX puts on a show for friends", "PersonX gets very dizzy"], "input": {"head": "PersonX twists in the wind", "relation": "isBefore", "prompt": "PersonX twists in the wind. After that,"}}
{"generation": ["he goes to the kitchen and finds a fire"], "references": ["PersonX removes the empty from the burner"], "input": {"head": "PersonX smells something burning", "relation": "isBefore", "prompt": "PersonX smells something burning. After that,"}}
{"generation": ["the player can choose to kill the person or not"], "references": ["PersonX hits the gavel"], "input": {"head": "PersonX putts PersonY to death", "relation": "isBefore", "prompt": "PersonX putts PersonY to death. After that,"}}
{"generation": ["the user is not able to change the user's"], "references": ["PersonX is a new person"], "input": {"head": "PersonX changes without notice", "relation": "isBefore", "prompt": "PersonX changes without notice. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX gives PersonY's cat a treat", "PersonX gets lots of cuts and has to clean them out"], "input": {"head": "PersonX is playing with PersonY's cat", "relation": "isBefore", "prompt": "PersonX is playing with PersonY's cat. After that,"}}
{"generation": ["he is married to another man"], "references": ["PersonX goes on a honeymoon"], "input": {"head": "PersonX marries another man", "relation": "isBefore", "prompt": "PersonX marries another man. After that,"}}
{"generation": ["the player can choose to go to the next level"], "references": ["PersonX scoops up 3 fish in his net", "PersonX throws the net into the water to catch fish", "PersonX frees the bird"], "input": {"head": "PersonX finds the net", "relation": "isBefore", "prompt": "PersonX finds the net. After that,"}}
{"generation": ["PersonX's classes are not found in the class"], "references": ["PersonX fears PersonX's parents will cut off PersonX's funds"], "input": {"head": "PersonX fails PersonX's classes", "relation": "isBefore", "prompt": "PersonX fails PersonX's classes. After that,"}}
{"generation": ["the program will run and the program will print out"], "references": ["PersonX gets everything done"], "input": {"head": "PersonX follows PersonX's instructions", "relation": "isBefore", "prompt": "PersonX follows PersonX's instructions. After that,"}}
{"generation": ["he's going to be a little bit nervous"], "references": ["PersonX talks to the date easing her mind"], "input": {"head": "PersonX is still nervous", "relation": "isBefore", "prompt": "PersonX is still nervous. After that,"}}
{"generation": ["the player can choose to either kill the dog or"], "references": ["PersonX retrieves PersonX's dog from the kennel", "PersonX visits an animal shelter"], "input": {"head": "PersonX misses PersonX's dog", "relation": "isBefore", "prompt": "PersonX misses PersonX's dog. After that,"}}
{"generation": ["the person who finished the meal will be the one"], "references": ["PersonX was very full", "PersonX pays the check for the dinner", "PersonX puts the plate away"], "input": {"head": "PersonX finishes PersonY's meal", "relation": "isBefore", "prompt": "PersonX finishes PersonY's meal. After that,"}}
{"generation": ["he goes to a restaurant"], "references": ["PersonX rides a roller coaster"], "input": {"head": "PersonX goes to an amusement park", "relation": "isBefore", "prompt": "PersonX goes to an amusement park. After that,"}}
{"generation": ["we'll see what happens"], "references": ["PersonX signs a record deal"], "input": {"head": "PersonX is a big success", "relation": "isBefore", "prompt": "PersonX is a big success. After that,"}}
{"generation": ["he goes to sleep"], "references": ["PersonX fells refreshed when they wake up in the morning", "PersonX heals overnight"], "input": {"head": "PersonX goes to bed early", "relation": "isBefore", "prompt": "PersonX goes to bed early. After that,"}}
{"generation": ["he'll ask you to dance with him"], "references": ["PersonX goes out to show off PersonX's moves"], "input": {"head": "PersonX wants to dance", "relation": "isBefore", "prompt": "PersonX wants to dance. After that,"}}
{"generation": ["the song ends"], "references": ["PersonX stops singing"], "input": {"head": "PersonX starts singing", "relation": "isBefore", "prompt": "PersonX starts singing. After that,"}}
{"generation": ["PersonY can use PersonX's information to make"], "references": ["PersonX counts the money happily"], "input": {"head": "PersonX supplies PersonY with information", "relation": "isBefore", "prompt": "PersonX supplies PersonY with information. After that,"}}
{"generation": ["the dog is put to sleep"], "references": ["PersonX saves the dog's life", "PersonX takes the puppy home", "PersonX gives the dog the prescribed medication"], "input": {"head": "PersonX takes it to the vet", "relation": "isBefore", "prompt": "PersonX takes it to the vet. After that,"}}
{"generation": ["he said, \"I'm not sure if you"], "references": ["PersonX almost falls off the chair"], "input": {"head": "PersonX leaned back in PersonY's chair", "relation": "isBefore", "prompt": "PersonX leaned back in PersonY's chair. After that,"}}
{"generation": ["he hears a voice"], "references": ["PersonX someone got in a wreck outside"], "input": {"head": "PersonX hears a loud bang", "relation": "isBefore", "prompt": "PersonX hears a loud bang. After that,"}}
{"generation": ["I'm not sure"], "references": ["PersonX dies of old age"], "input": {"head": "PersonX spends the rest of my life with PersonY", "relation": "isBefore", "prompt": "PersonX spends the rest of my life with PersonY. After that,"}}
{"generation": ["PersonX is a little more open to the idea"], "references": ["PersonX waits for a response from PersonY"], "input": {"head": "PersonX spills PersonX's guts", "relation": "isBefore", "prompt": "PersonX spills PersonX's guts. After that,"}}
{"generation": ["the player is given the option to either kill the"], "references": ["PersonX leaves on time"], "input": {"head": "PersonX says would leave", "relation": "isBefore", "prompt": "PersonX says would leave. After that,"}}
{"generation": ["he is sent to the army's training camp"], "references": ["PersonX serves for 10 years"], "input": {"head": "PersonX serves in the army", "relation": "isBefore", "prompt": "PersonX serves in the army. After that,"}}
{"generation": ["it's a matter of finding the right one"], "references": ["PersonX taps his friend on the shoulder to ask to play one"], "input": {"head": "PersonX plays lots of games", "relation": "isBefore", "prompt": "PersonX plays lots of games. After that,"}}
{"generation": ["PersonZ will be able to see PersonX's"], "references": ["PersonX received thanks from PersonZ"], "input": {"head": "PersonX helps PersonY in PersonZ way", "relation": "isBefore", "prompt": "PersonX helps PersonY in PersonZ way. After that,"}}
{"generation": ["PersonX is given a new name and is given"], "references": ["PersonX experiences a belly button infection"], "input": {"head": "PersonX gets PersonX's belly button pierced", "relation": "isBefore", "prompt": "PersonX gets PersonX's belly button pierced. After that,"}}
{"generation": ["it's a matter of finding the right balance between"], "references": ["PersonX completes a lot of tasks", "PersonX goes home to greet family and friends", "PersonX gets hit by car walking home"], "input": {"head": "PersonX is as good as new", "relation": "isBefore", "prompt": "PersonX is as good as new. After that,"}}
{"generation": ["I'm going to be working on the next game"], "references": ["PersonX sits in the front row of theater"], "input": {"head": "PersonX really looking forward", "relation": "isBefore", "prompt": "PersonX really looking forward. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX runs off the stage to applause"], "input": {"head": "PersonX falls upon PersonY", "relation": "isBefore", "prompt": "PersonX falls upon PersonY. After that,"}}
{"generation": ["he goes to the post office"], "references": ["PersonX buys a stamp"], "input": {"head": "PersonX goes to the post office", "relation": "isBefore", "prompt": "PersonX goes to the post office. After that,"}}
{"generation": ["PersonX will be able to see the person's"], "references": ["PersonX congratulates PersonY on the new job"], "input": {"head": "PersonX gives PersonY the courage", "relation": "isBefore", "prompt": "PersonX gives PersonY the courage. After that,"}}
{"generation": ["we'll be back with more PersonX news"], "references": ["PersonX receives a job offer", "PersonX sends a thank you e-mail to the interview committee"], "input": {"head": "PersonX interviews for PersonX's dream job", "relation": "isBefore", "prompt": "PersonX interviews for PersonX's dream job. After that,"}}
{"generation": ["PersonX tells PersonY a story"], "references": ["PersonX thanks the students for their applause"], "input": {"head": "PersonX tells PersonY a story", "relation": "isBefore", "prompt": "PersonX tells PersonY a story. After that,"}}
{"generation": ["the two of them go to the park and have"], "references": ["PersonX gets out of PersonX's car"], "input": {"head": "PersonX drives PersonY's friends home", "relation": "isBefore", "prompt": "PersonX drives PersonY's friends home. After that,"}}
{"generation": ["the player can choose to either accept or decline"], "references": ["PersonX looks at their new office", "PersonX begins PersonX's first shift the following day", "PersonX accepts the job offer"], "input": {"head": "PersonX is offered the job", "relation": "isBefore", "prompt": "PersonX is offered the job. After that,"}}
{"generation": ["PersonX moves to the next cell"], "references": ["PersonX jabs PersonY with the shot", "PersonX uses the clippers on PersonY's head", "PersonX lets go of PersonY"], "input": {"head": "PersonX holds PersonY still", "relation": "isBefore", "prompt": "PersonX holds PersonY still. After that,"}}
{"generation": ["she's going to be a mother"], "references": ["PersonX reads books on how to be a good mother"], "input": {"head": "PersonX is finally pregnant", "relation": "isBefore", "prompt": "PersonX is finally pregnant. After that,"}}
{"generation": ["the game is a simple matter of running around and"], "references": ["PersonX serves dinner", "PersonX serves the dish to their friends"], "input": {"head": "PersonX follows the recipe", "relation": "isBefore", "prompt": "PersonX follows the recipe. After that,"}}
{"generation": ["PersonX will be sent to the bottom of the"], "references": ["PersonX shields their head from PersonY's fists", "PersonX gets arrested"], "input": {"head": "PersonX sends PersonY over the edge", "relation": "isBefore", "prompt": "PersonX sends PersonY over the edge. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX invites PersonY to the picnic"], "input": {"head": "PersonX wants PersonY to come", "relation": "isBefore", "prompt": "PersonX wants PersonY to come. After that,"}}
{"generation": ["it's just a matter of finding the right place"], "references": ["PersonX retrieves it", "PersonX tells the newspaper"], "input": {"head": "PersonX finds it anywhere", "relation": "isBefore", "prompt": "PersonX finds it anywhere. After that,"}}
{"generation": ["he will give you a gift"], "references": ["PersonX feels good that they had the money to donate"], "input": {"head": "PersonX gives money for christmas", "relation": "isBefore", "prompt": "PersonX gives money for christmas. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX cries and begs for help", "PersonX asks what can be done", "PersonX helps PersonY stand up"], "input": {"head": "PersonX kneels beside PersonY", "relation": "isBefore", "prompt": "PersonX kneels beside PersonY. After that,"}}
{"generation": ["it's a matter of finding the right person to"], "references": ["PersonX sets a new way to get work done", "PersonX goes to the store and guys premade jello"], "input": {"head": "PersonX breaks the mold", "relation": "isBefore", "prompt": "PersonX breaks the mold. After that,"}}
{"generation": ["it's up to you to decide what to do"], "references": ["PersonX aces his test"], "input": {"head": "PersonX knows every detail", "relation": "isBefore", "prompt": "PersonX knows every detail. After that,"}}
{"generation": ["he wants to run a marathon"], "references": ["PersonX trains for the race", "PersonX signs up to run a marathon"], "input": {"head": "PersonX wants to run a marathon", "relation": "isBefore", "prompt": "PersonX wants to run a marathon. After that,"}}
{"generation": ["I was able to get a few more shots of"], "references": ["PersonX rented an log cabin built for vacation hikers"], "input": {"head": "PersonX camps in the woods", "relation": "isBefore", "prompt": "PersonX camps in the woods. After that,"}}
{"generation": ["he's a little more open-minded"], "references": ["PersonX orders the rest to go"], "input": {"head": "PersonX likes fish", "relation": "isBefore", "prompt": "PersonX likes fish. After that,"}}
{"generation": ["he goes to the doctor's office to get his"], "references": ["PersonX leaves doctors"], "input": {"head": "PersonX goes to the doctor for a checkup", "relation": "isBefore", "prompt": "PersonX goes to the doctor for a checkup. After that,"}}
{"generation": ["it's a matter of finding the right balance between"], "references": ["PersonX heads back home"], "input": {"head": "PersonX plays nice", "relation": "isBefore", "prompt": "PersonX plays nice. After that,"}}
{"generation": ["he gets a burger"], "references": ["PersonX throws up afterwards"], "input": {"head": "PersonX gets a burger", "relation": "isBefore", "prompt": "PersonX gets a burger. After that,"}}
{"generation": ["PersonX will be able to talk to PersonY"], "references": ["PersonX receives a thank you from PersonY"], "input": {"head": "PersonX has a party at PersonY's house", "relation": "isBefore", "prompt": "PersonX has a party at PersonY's house. After that,"}}
{"generation": ["it's all about the money"], "references": ["PersonX buys a bigger house"], "input": {"head": "PersonX makes much money", "relation": "isBefore", "prompt": "PersonX makes much money. After that,"}}
{"generation": ["PersonX will be able to see PersonY's"], "references": ["PersonX invites PersonY to their house"], "input": {"head": "PersonX makes contact with PersonY", "relation": "isBefore", "prompt": "PersonX makes contact with PersonY. After that,"}}
{"generation": ["I'm not sure what to do"], "references": ["PersonX receives a bunch of compliments", "PersonX takes a picture to put online"], "input": {"head": "PersonX looks better", "relation": "isBefore", "prompt": "PersonX looks better. After that,"}}
{"generation": ["the game will be a lot more fun"], "references": ["PersonX also loves to give"], "input": {"head": "PersonX really wants", "relation": "isBefore", "prompt": "PersonX really wants. After that,"}}
{"generation": ["he's not going to be able to do anything"], "references": ["PersonX avoids further injury"], "input": {"head": "PersonX is much more careful", "relation": "isBefore", "prompt": "PersonX is much more careful. After that,"}}
{"generation": ["the player can choose to play as either the player"], "references": ["PersonX asks PersonY to blow bubbles too"], "input": {"head": "PersonX blows bubbles", "relation": "isBefore", "prompt": "PersonX blows bubbles. After that,"}}
{"generation": ["PersonX will be pulled towards PersonY"], "references": ["PersonX places a kiss on PersonY's lips"], "input": {"head": "PersonX pulls PersonY closer", "relation": "isBefore", "prompt": "PersonX pulls PersonY closer. After that,"}}
{"generation": ["the car is destroyed"], "references": ["PersonX wipes the car dry"], "input": {"head": "PersonX washes PersonY's car", "relation": "isBefore", "prompt": "PersonX washes PersonY's car. After that,"}}
{"generation": ["PersonX and PersonY were not connected"], "references": ["PersonY is not a good person", "personX is not sure of what they have in common", "personX doesn't know how to approach them", "They have nothing in common"], "input": {"head": "PersonX makes PersonY connection", "relation": "HinderedBy", "prompt": "PersonX makes PersonY connection. This would not happen if"}}
{"generation": ["the person was a woman"], "references": ["PersonX didn't reserve a campground.", "PersonX can't get time off of work to go.", "PersonX is already on the way to a festival", "PersonX has no tent", "PersonX's boss did not grant him time off.", "PersonX is recovering from an injury from an accident.", "PersonX can't find their tent", "PersonX's boss fired him and he has no money to go camping."], "input": {"head": "PersonX is going on a camping trip", "relation": "HinderedBy", "prompt": "PersonX is going on a camping trip. This would not happen if"}}
{"generation": ["the eggs were not cracked"], "references": ["PersonX cannot afford the eggs.", "PersonX does not have a bowl", "PersonY left the eggs out and now they are spoiled", "The eggs are broken.", "There is no hard surface", "PersonY boiled all the eggs", "The eggs are hard boiled", "PersonX has run out of eggs"], "input": {"head": "PersonX cracks the eggs", "relation": "HinderedBy", "prompt": "PersonX cracks the eggs. This would not happen if"}}
{"generation": ["the player was not wearing the armor"], "references": ["PersonX has a heart condition.", "PersonX has anxiety about being too active.", "The waiter gave PersonX caffeinated coffee on accident.", "The doctor just gave PersonX a shot of adrenaline.", "Person X is on meth.", "PersonX is in a wheelchair and can't be active.", "PersonX can't leave their desk.", "They have hyperthyroidism.", "The nurse told PersonX they needed to stay on bed rest.", "Person X is superman.", "They have too much energy."], "input": {"head": "PersonX gets worn out", "relation": "HinderedBy", "prompt": "PersonX gets worn out. This would not happen if"}}
{"generation": ["PersonX was a man"], "references": ["PersonX feels bad for the kids.", "PersonX is too scared of retaliation", "PersonX's husband is violent and would hunt PersonX down.", "PersonX has no money"], "input": {"head": "PersonX leaves PersonX's husband", "relation": "HinderedBy", "prompt": "PersonX leaves PersonX's husband. This would not happen if"}}
{"generation": ["the user had not been given the option to choose"], "references": ["personX does not have the ingredients", "PersonX's stove is not working", "There are other people in the way.", "PersonX doesn't have some of the ingredients he needs", "Person Y is ignoring Person X.", "The stove is broken"], "input": {"head": "PersonX tries a new recipe", "relation": "HinderedBy", "prompt": "PersonX tries a new recipe. This would not happen if"}}
{"generation": ["the person was a robot"], "references": ["PersonX cannot afford new clothing.", "PersonX's spouse does not want PersonX to change.", "PersonX has never seen the thing they want to look like.", "PersonX doesn't know how to sew the costume they need.", "They have too many distinct features.", "PersonX is too much of a human."], "input": {"head": "PersonX looks like something", "relation": "HinderedBy", "prompt": "PersonX looks like something. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["PersonY is too memorable for PersonX to forget.", "PersonX is still married to PersonY."], "input": {"head": "PersonX wipes PersonY away", "relation": "HinderedBy", "prompt": "PersonX wipes PersonY away. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonY's family lives very far and can not travel.", "There is a storm and all planes are grounded.", "PersonY's family has a stomach bug.", "PersonX's car is too small to fit everyone.", "PersonY's family has to work.", "PersonY's family is out of town."], "input": {"head": "PersonX brings PersonY's family", "relation": "HinderedBy", "prompt": "PersonX brings PersonY's family. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["Person Y always stays far away from Person X.", "PersonY has too good of an immune system.", "PersonX does not know how to transmit an illness to someone.", "PersonX doesn't have any poison.", "PersonY lives 5000 miles away.", "Person X is unsure of how to make Person Y sick."], "input": {"head": "PersonX makes PersonY very sick", "relation": "HinderedBy", "prompt": "PersonX makes PersonY very sick. This would not happen if"}}
{"generation": ["PersonX was not a member of PersonY"], "references": ["They broke their foot.", "Person Y does not like Person X.", "they are to faraway", "can't get their attention", "PersonX cannot find PersonY.", "PersonY ran away and hid."], "input": {"head": "PersonX gives PersonY warning", "relation": "HinderedBy", "prompt": "PersonX gives PersonY warning. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX doesn't have a car.", "PersonX broke their nails", "PersonX doesn't have the money.", "PersonX's boss fired her, so she cannot afford a pedicure.", "PersonX's salon owner will not let her in.", "PersonX lost their arm", "PersonX has been preparing a dinner party.", "PersonX's nails got ripped off by a violent man.", "PersonX attends a swimming class."], "input": {"head": "PersonX gets PersonX's nails done", "relation": "HinderedBy", "prompt": "PersonX gets PersonX's nails done. This would not happen if"}}
{"generation": ["PersonX was a person, but if PersonX"], "references": ["PersonY is too close.", "PersonX has binoculars.", "Person Y needs to remain in their eyesight becase Person X is their parent.", "PersonX promised to take care of PersonY.", "PersonY sticks too close to PersonX.", "Person X is bound by the law not to neglect their kids."], "input": {"head": "PersonX loses sight of PersonY", "relation": "HinderedBy", "prompt": "PersonX loses sight of PersonY. This would not happen if"}}
{"generation": ["the player had a good relationship with the NPC"], "references": ["If personX does not listen he will be punichsed.", "PersonX's is required to be in class by the teacher", "The other person is talking to loud.", "PersonX's boss is too loud to ignore", "PersonX is having music blasted into their ear.", "PersonX has to obey his parole officer.", "PersonX is being paid to listen.", "PersonX is being forced to listen."], "input": {"head": "PersonX refuses to listen", "relation": "HinderedBy", "prompt": "PersonX refuses to listen. This would not happen if"}}
{"generation": ["the child was a boy"], "references": ["PersonX can't change time.", "PersonX can't go back in time.", "PersonX is only 4 years old.", "PersonX doesn't have a birthday for 6 months.", "personX is 5 years old.", "PersonX is too old."], "input": {"head": "PersonX is 6 years old", "relation": "HinderedBy", "prompt": "PersonX is 6 years old. This would not happen if"}}
{"generation": ["PersonX was a function"], "references": ["PersonX knows PersonY is on a strict diet.", "PersonY expressed distaste for the item.", "PersonY lives too far away", "PersonX doesn't have enough to share with PersonY"], "input": {"head": "PersonX gives PersonY a bit", "relation": "HinderedBy", "prompt": "PersonX gives PersonY a bit. This would not happen if"}}
{"generation": ["the posters were not for sale"], "references": ["PersonX can afford the materials.", "PersonZ has not emailed the requirements for the signage", "PersonX is not artistic.", "PersonY let the  makers dry up", "Person X doesn't have hands", "The printer is out of ink.", "Person X has no materials to make posters with", "The printer is broken."], "input": {"head": "PersonX makes posters", "relation": "HinderedBy", "prompt": "PersonX makes posters. This would not happen if"}}
{"generation": ["PersonX was not a Person"], "references": ["PersonY is not a maid", "PersonY isn't cleared to play yet", "PersonX doesn't think PersonY is a good worker.", "PersonY hasn't signed the release", "PersonY will refuse", "PersonX doesn't have the money to pay PersonY."], "input": {"head": "PersonX puts PersonY to use", "relation": "HinderedBy", "prompt": "PersonX puts PersonY to use. This would not happen if"}}
{"generation": ["the phone call was made to a person who was"], "references": ["PersonX does not have a phone.", "PersonX left his phone at home", "Their phone has no reception in the mountains", "PersonX accidentally broke their phone", "The battery in PersonX's phone needs to be charged", "PersonX is in the middle of a presentation", "PersonX has a private phone number", "PersonX does not know how to use a phone."], "input": {"head": "PersonX receives a phone call", "relation": "HinderedBy", "prompt": "PersonX receives a phone call. This would not happen if"}}
{"generation": ["PersonX was a dog"], "references": ["The dog keeps coming home.", "PersonY doesn't have a dog", "PersonX is responsible for the dog.", "The dog was returned by a neighbor.", "PersonX doesn't want to get in trouble.", "PersonX is a nice person"], "input": {"head": "PersonX loses PersonY's dog", "relation": "HinderedBy", "prompt": "PersonX loses PersonY's dog. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same object"], "references": ["PersonX has the kids tonight", "PersonX has to work", "PersonY has no things.", "PersonX is blind."], "input": {"head": "PersonX sees PersonY thing", "relation": "HinderedBy", "prompt": "PersonX sees PersonY thing. This would not happen if"}}
{"generation": ["the player had not selected a move"], "references": ["PersonX is too clumsy.", "PersonX's teacher told them to sit down.", "PersonX wasn't invited to the party.", "PersonX has awful stagefright", "PersonX doesn't have any good moves.", "PersonX is very shy", "PersonX has no video recorder.", "PersonX's friend told PersonX their moves were bad."], "input": {"head": "PersonX shows PersonX's moves", "relation": "HinderedBy", "prompt": "PersonX shows PersonX's moves. This would not happen if"}}
{"generation": ["the person was a stranger"], "references": ["PersonX knows PersonY wasn't really sorry.", "PersonY is a pathological liar", "PersonY isn't sorry", "PersonX has no place to speak for PersonY.", "PersonY is offline and unable to communicate.", "PersonY has forgotten their rude behavior.", "PersonY is a bully that doesn't regret anything.", "PersonY refuses to apologize."], "input": {"head": "PersonX says PersonY was sorry", "relation": "HinderedBy", "prompt": "PersonX says PersonY was sorry. This would not happen if"}}
{"generation": ["he had not been so lucky"], "references": ["PersonX cannot get their car to start", "PersonX's home was blocked by snow.", "PersonX is out of gas", "PersonX has to stay late at work", "Their car stopped runnning.", "PersonX's home was foreclosed on.", "They are in the middle of a meeting."], "input": {"head": "PersonX finally got home", "relation": "HinderedBy", "prompt": "PersonX finally got home. This would not happen if"}}
{"generation": ["the player had a weapon"], "references": ["PersonX is too stubborn.", "Person X has to know the truth."], "input": {"head": "PersonX leaves alone", "relation": "HinderedBy", "prompt": "PersonX leaves alone. This would not happen if"}}
{"generation": ["the person was a man"], "references": ["PersonX is too happy to fake being sad.", "PersonX is in love and can't look sad.", "PersonX is not a good actor.", "PersonX's friend keeps making her laugh", "PersonX's friend can read her way too well", "PersonX is actually happy."], "input": {"head": "PersonX looks sad", "relation": "HinderedBy", "prompt": "PersonX looks sad. This would not happen if"}}
{"generation": ["the user was not logged in"], "references": ["PersonX is banned from going.", "PersonX's friend kicked him out.", "PersonX was banned from the store by the manager.", "PersonX is in prison."], "input": {"head": "PersonX often went", "relation": "HinderedBy", "prompt": "PersonX often went. This would not happen if"}}
{"generation": ["the neighbors were not neighbors"], "references": ["PersonX can't afford to buy the house.", "Their wife doesn't want to leave.", "PersonX is stuck overseas in their job.", "Person X cannot afford to move.", "Their husband can't afford to move.", "The house next door isn't for sale.", "Person X does not have the money to buy the house next door."], "input": {"head": "PersonX lives next door", "relation": "HinderedBy", "prompt": "PersonX lives next door. This would not happen if"}}
{"generation": ["the car was not a car"], "references": ["PersonX doesn't have soap", "PersonX's township banned the use of water during the drought.", "PersonX's kids used all of the soap.", "The hose broke and does not work.", "It was too cold outside to wash it.", "PersonX is in a wheelchair and can't reach the car's top.", "PersonX cannot afford a car wash.", "PersonX's spouse took the car.", "PersonX has no access to running water.", "PersonX has no access to soap.", "The car is already clean"], "input": {"head": "PersonX washes the car", "relation": "HinderedBy", "prompt": "PersonX washes the car. This would not happen if"}}
{"generation": ["the person was a man"], "references": ["Person X didn't pay their water bill", "PersonX needs to go to work instead.", "The pipes are frozen", "PersonX doesn't own a shower.", "The water got shut off", "Person X's shower head is broken"], "input": {"head": "PersonX takes a cold shower", "relation": "HinderedBy", "prompt": "PersonX takes a cold shower. This would not happen if"}}
{"generation": ["PersonX was a member of the same team as"], "references": ["PersonX broke the phone.", "PersonY let their phone die.", "PersonX is going out to dinner.", "PersonY is at work.", "PersonX cannot find cell phone service.", "PersonX has a broken phone."], "input": {"head": "PersonX calls PersonY tonight", "relation": "HinderedBy", "prompt": "PersonX calls PersonY tonight. This would not happen if"}}
{"generation": ["PersonX was a member of the same team as"], "references": ["PersonY refuses to turn away.", "PersonX is too compassionate."], "input": {"head": "PersonX turns PersonY's backs", "relation": "HinderedBy", "prompt": "PersonX turns PersonY's backs. This would not happen if"}}
{"generation": ["PersonX was a stranger"], "references": ["PersonY is very elusive.", "PersonY is secretive", "PersonX has too many other assignments.", "Person Y has too many people around them.", "Person X is bashful.", "PersonY is elusive"], "input": {"head": "PersonX gets to know PersonY", "relation": "HinderedBy", "prompt": "PersonX gets to know PersonY. This would not happen if"}}
{"generation": ["the user had not been able to see the user"], "references": ["PersonX has to get back to family.", "Their mother grounded them.", "PersonX lost their social security card.", "There is no work left.", "PersonX is disabled.", "PersonX has a criminal record.", "Their mother told them not to.", "PersonX has no skill set."], "input": {"head": "PersonX finally worked", "relation": "HinderedBy", "prompt": "PersonX finally worked. This would not happen if"}}
{"generation": ["PersonX were a worker"], "references": ["person x is out of money", "PersonY did a bad job.", "PersonX's bank has frozen PersonX's account.", "person y will not take the money", "PersonX has no contact information for PersonY.", "PersonX doesn't have money."], "input": {"head": "PersonX pays PersonY wages", "relation": "HinderedBy", "prompt": "PersonX pays PersonY wages. This would not happen if"}}
{"generation": ["PersonX was not a Person"], "references": ["PersonY's friends don't like PersonX", "Person x does not have their phone numbers", "PersonX does not have the numbers of these people", "There is not enough time to contact everyone", "PersonX doesn't have a list of PersonY's friends", "PersonX does not have access to a phone", "PersonY's friends have different schedules."], "input": {"head": "PersonX gets all PersonY's friends together", "relation": "HinderedBy", "prompt": "PersonX gets all PersonY's friends together. This would not happen if"}}
{"generation": ["the computer was a computer"], "references": ["PersonX doesn't live near a computer store.", "PersonX doesn't have any money.", "PersonX's boss fired him so he cannot afford a computer.", "PersonX is computer illiterate.", "PersonX has no money.", "PersonX can't decide what brand to buy.", "The local technology shop owner banned personX from the store.", "PersonX doesn't know which one to buy.", "PersonX's father will not buy it for him.", "PersonX can't afford it.", "PersonX is Amish and can't use computers."], "input": {"head": "PersonX buys a computer", "relation": "HinderedBy", "prompt": "PersonX buys a computer. This would not happen if"}}
{"generation": ["the author had given permission"], "references": ["PersonX is not allowed on the computer.", "PersonX will be fired", "PersonX's girlfriend told him that it is a bad idea", "PersonX does not know the password.", "PersonX's dad made it impossible", "PersonX is trying to be good.", "PersonX can't get the forms", "PersonX's boss threatened to fire him if he did", "PersonX has no access to the forms"], "input": {"head": "PersonX distributes in forms without permission", "relation": "HinderedBy", "prompt": "PersonX distributes in forms without permission. This would not happen if"}}
{"generation": ["the user had a valid password"], "references": ["PersonX is too much of a perfectionist", "PersonX's math teacher is the best giving classes.", "PersonX's father gave PersonX an order to never fail math.", "because he is a math genius", "Person X is a math prodigy and it would be suspicious if they failed.", "Person X won't graduate without this math class.", "parents would be very angry", "PersonX is too good at math"], "input": {"head": "PersonX fails math", "relation": "HinderedBy", "prompt": "PersonX fails math. This would not happen if"}}
{"generation": ["the person was not a person"], "references": ["Person X is trying to be nice.", "Person X doesn't have a sleeve.", "Person X is not finding it funny.", "PersonX's sleeve is too short.", "PersonX cannot reach their sleeve.", "Person X knows this would be rude."], "input": {"head": "PersonX laughs in PersonX's sleeve", "relation": "HinderedBy", "prompt": "PersonX laughs in PersonX's sleeve. This would not happen if"}}
{"generation": ["the game was a single player game"], "references": ["PersonX likes to cheat", "PersonX was told by her mom that they were bad people", "PersonX is a mean person", "PersonX's friend caused a hostile environment", "It makes them feel good to hit", "PersonX is too mean.", "They have a mental problem that makes them angry", "PersonX's dad ordered her to take them out", "PersonX doesn't have any toys."], "input": {"head": "PersonX plays nice", "relation": "HinderedBy", "prompt": "PersonX plays nice. This would not happen if"}}
{"generation": ["the person was a member of the opposite sex"], "references": ["There is nobody near PersonX.", "PersonX can't find anyone who needs help.", "PersonX must steal to feed his family.", "PersonX is in prison.", "Person X doesn't have the means to be helpful to anyone.", "Person X can't think of a good deed that needs doing."], "input": {"head": "PersonX does a good deed", "relation": "HinderedBy", "prompt": "PersonX does a good deed. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX has no way to get the car to the repair shop.", "There's no way to get the car to a mechanic.", "PersonX doesn't have the money to get the car fixed.", "The repair shop does not have time in their schedule today.", "The repair shop is not open today.", "PersonX doesn't have the right tools.", "PersonY doesn't want PersonX to fix it.", "The car needs a part that will have to be ordered."], "input": {"head": "PersonX gets PersonY's car fixed", "relation": "HinderedBy", "prompt": "PersonX gets PersonY's car fixed. This would not happen if"}}
{"generation": ["PersonX was a different color"], "references": ["They're too drunk and can't see properly.", "Person X is with their friends.", "Person X has too much respect for Person Y", "Person Y is of the opposite sex.", "Person Y ran away.", "Person X is not a fighter.", "Persony ran off", "Person X will be in a lot of trouble"], "input": {"head": "PersonX hits PersonY's face", "relation": "HinderedBy", "prompt": "PersonX hits PersonY's face. This would not happen if"}}
{"generation": ["he was a vegan"], "references": ["PersonX doesn't know about health.", "PersonX is too poor to afford healthy food.", "PersonX doesn't know what to purchase.", "The grocery bill will be to high for Person X.", "PersonX's boss keeps catering pizza at work lunches.", "PersonX's mother is in charge of cooking and she likes junk.", "The store didn't stock the shelves before PersonX arrived.", "Person  X  boyfriend will not support Person  X."], "input": {"head": "PersonX eats healthy food", "relation": "HinderedBy", "prompt": "PersonX eats healthy food. This would not happen if"}}
{"generation": ["the player was not in the same room as the"], "references": ["Person X's doctor gave Person X medicine to stay calm and peaceful.", "PersonX is in the middle of court.", "Person X's spouse makes sure Person X's day goes by flawlessly.", "PersonX is giving a speech.", "PersonX is compassionate.", "PersonX is a calm person.", "PersonX is too patient.", "PersonX went to anger management.", "Person X's work team keeps making stellar presentations."], "input": {"head": "PersonX becomes very frustrated", "relation": "HinderedBy", "prompt": "PersonX becomes very frustrated. This would not happen if"}}
{"generation": ["the cat was not adopted"], "references": ["They are allergic", "the vet doesn't think person x can take care of a cat", "person x is not allowed to have animals at their house", "the doctor told person x they're allergic to cats", "person x is allergic to cats", "They cant afford the shots", "They have two dogs", "does not have income to take care of the cat.", "does not have a big enough apartment"], "input": {"head": "PersonX decides to adopt the cat", "relation": "HinderedBy", "prompt": "PersonX decides to adopt the cat. This would not happen if"}}
{"generation": ["the game was a simple action game"], "references": ["PersonX has to get a promotion first.", "PersonX has low confidence.", "PersonX's dad did not teach him well enough.", "PersonX's teacher did not set him up for success.", "PersonX doesn't know who they are.", "PersonX is immature.", "PersonX has too many years of college left.", "PersonX's mom will not let him succeed.", "PersonX is young."], "input": {"head": "PersonX comes into PersonX's own", "relation": "HinderedBy", "prompt": "PersonX comes into PersonX's own. This would not happen if"}}
{"generation": ["the friend was not a friend"], "references": ["PersonX's friends all live very far away.", "PersonX needs to stay late at work.", "PersonX has to work overtime.", "PersonX doesn't have a car to get there.", "PersonX's friend wants some alone time.", "PersonX doesn't own a car.", "PersonX's friend is in prison and it is on lock down and not accepting visitors."], "input": {"head": "PersonX visits a friend", "relation": "HinderedBy", "prompt": "PersonX visits a friend. This would not happen if"}}
{"generation": ["PersonX was not in the car"], "references": ["PersonX is too drunk to open the door", "PersonX's car is locked", "PersonX's car was wrecked.", "PersonX's keys are locked in the car.", "PersonX's car is stuck in a closed parking garage.", "PersonX's car didn't qualify."], "input": {"head": "PersonX enters PersonX's car", "relation": "HinderedBy", "prompt": "PersonX enters PersonX's car. This would not happen if"}}
{"generation": ["PersonX was a function"], "references": ["PersonY has not offered thanks", "PersonX is ungrateful", "PersonX is ashamed of themselves", "PersonX's boss doesn't let employees engage in social interactions on company time.", "PersonX feels guilty", "PersonY's family is too proud to let PersonY show gratitude to PersonX.", "PersonX can't talk because of illness.", "Person Y didn't send the thank you card.", "PersonX didn't hear the thanks.", "Person Y didn't thank them."], "input": {"head": "PersonX accepts PersonY thanks", "relation": "HinderedBy", "prompt": "PersonX accepts PersonY thanks. This would not happen if"}}
{"generation": ["the user had a different name"], "references": ["PersonX shift is almost over.", "PersonX is sick in bed.", "PersonX has other responsibilities", "PersonX has been given bad genetics from his mom", "PersonX is too turned on by Julie", "PersonX has been denied sex from Julie for a month", "PersonX hasn't had enough sleep"], "input": {"head": "PersonX lasts all day", "relation": "HinderedBy", "prompt": "PersonX lasts all day. This would not happen if"}}
{"generation": ["the game was played with the default settings"], "references": ["PersonX didn't practice a lot.", "PersonX is being sat on by Sally", "PersonX was disqualified for penaties.", "PersonX injured their arm in the last round.", "PersonX is injured.", "PersonX is being held down by Julie", "Personx is too sick to play.", "PersonX's friend has his foot", "PersonX isn't very good at the game."], "input": {"head": "PersonX wins the game for PersonX's team", "relation": "HinderedBy", "prompt": "PersonX wins the game for PersonX's team. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["Person x is too sick to work.", "Person x is poor.", "PersonX doesn't have enough money.", "PersonX has too many bills to pay.", "PersonX isn't allowed to make decisions.", "PersonX is stuck in a dead-end job."], "input": {"head": "PersonX improves PersonX's conditions", "relation": "HinderedBy", "prompt": "PersonX improves PersonX's conditions. This would not happen if"}}
{"generation": ["the user had a wallet with a balance of 0"], "references": ["Their boss made them work late.", "PersonX account is empty.", "Their brother hid the money.", "PersonX is homeless.", "The bank is closed.", "PersonX forgot their pin code."], "input": {"head": "PersonX withdraws money", "relation": "HinderedBy", "prompt": "PersonX withdraws money. This would not happen if"}}
{"generation": ["the dolphin was a human"], "references": ["The tour was canceled by the governor.", "PersonX lives in the desert and has no transportation to the sea.", "PersonX has a fear of water so cannot be anywhere near dolphins.", "PersonY poked PersonX in the eye.", "PersonX isn't allowed anywhere near water.", "PersonX doesn't live anywhere near the ocean."], "input": {"head": "PersonX sees dolphins", "relation": "HinderedBy", "prompt": "PersonX sees dolphins. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same object"], "references": ["PersonY has never had a steady home life.", "PersonY is too flighty and spontaneous."], "input": {"head": "PersonX creates PersonY structure", "relation": "HinderedBy", "prompt": "PersonX creates PersonY structure. This would not happen if"}}
{"generation": ["PersonX was not in the backpack"], "references": ["PersonX's backpack was stolen.", "The train already took off.", "It is dark, and the backpack can't be seen.", "The bag is too heavy.", "PersonX is too far away.", "They left it on the airplane and can't go back in."], "input": {"head": "PersonX grabs PersonX's backpack", "relation": "HinderedBy", "prompt": "PersonX grabs PersonX's backpack. This would not happen if"}}
{"generation": ["the user was not a member of the group"], "references": ["PersonX's father taught him not to be rude.", "PersonX wants to avoid confrontation with a huge guy.", "PersonX is the joker's boss with a reputation for harshly criticizing subordinates.", "PersonX realizes the prank was good-natured and shouldn't be escalated.", "PersonX had to accept defeat.", "PersonX is a subordinate of the joker.", "PersonX's wife will kill him if he does.", "PersonX couldn't figure out an angle.", "PersonX's friend told him the tables were glued to the ground.", "The kids are too smart.", "PersonX has no proof."], "input": {"head": "PersonX turns the tables", "relation": "HinderedBy", "prompt": "PersonX turns the tables. This would not happen if"}}
{"generation": ["the cat was a human"], "references": ["PersonX is in a cast.", "PersonX has braces on his legs.", "PersonX is indoors and the cat isn't.", "PersonX is allergic to cats.", "PersonX's cat refuses to play.", "PersonX has a broken leg."], "input": {"head": "PersonX chases the cat", "relation": "HinderedBy", "prompt": "PersonX chases the cat. This would not happen if"}}
{"generation": ["the person were a robot"], "references": ["PersonX couldn't get the funds to go to college and is only a blue collar worker.", "PersonX lives in a cheap apartment in the poor side of town.", "PersonX has really bad amnesia.", "PersonX's dementia prevents them from giving an account of themselves.", "PersonX doesn't know themselves.", "PersonX has disassociative personality disorder."], "input": {"head": "PersonX gives a good account of oneself", "relation": "HinderedBy", "prompt": "PersonX gives a good account of oneself. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["PersonY is too busy.", "PersonY is in another country at war.", "PersonY is about to fall off of a cliff and needs to be warned.", "PersonY has too much going on.", "PersonX is angry at PersonY for cheating on him.", "PersonX is PersonY's supervisor."], "input": {"head": "PersonX gives PersonY peace", "relation": "HinderedBy", "prompt": "PersonX gives PersonY peace. This would not happen if"}}
{"generation": ["the game was a straight-up action game"], "references": ["PersonX is not a good actor.", "They do not have great acting skills.", "PersonX has no auditioned.", "PersonX does not have the skill for the lead role", "PersonX did  not practice the lines.", "They don't have enough experience.", "the director chose another actor for the role", "The other actor dressed the part really well and got the job"], "input": {"head": "PersonX gets the lead role", "relation": "HinderedBy", "prompt": "PersonX gets the lead role. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["Person X has arthritis.", "PersonY's watch clasp is stuck", "PersonY is blocking PersonX's hands.", "PersonX's hands are too full to take the watch off", "PersonY is holding their hands above and PersonX cannot reach it.", "Person Y arm isn\u9225\u6a9b available.", "PersonX's fingers are too large to remove the watch"], "input": {"head": "PersonX takes PersonY's watch off", "relation": "HinderedBy", "prompt": "PersonX takes PersonY's watch off. This would not happen if"}}
{"generation": ["the cupboard was empty"], "references": ["They can't get the door open.", "PersonXs wife is standing in his way", "the cupboard door hinge is broken and won't budge", "The workers install the shelves too high", "The cupboard got blown away.", "the cupboard door is locked tight", "The cupboard is locked.", "PersonX can't reach."], "input": {"head": "PersonX looks in PersonX's cupboard", "relation": "HinderedBy", "prompt": "PersonX looks in PersonX's cupboard. This would not happen if"}}
{"generation": ["they were not in love"], "references": ["PersonX is not dating anyone.", "his love interest doesn't love him back", "PersonX is not in love.", "PersonX was sent to juvenile detention.", "PersonX already graduated.", "Nobody likes PersonX", "PersonX is homeschooled", "His love interest has a boyfriend"], "input": {"head": "PersonX is highschool sweethearts", "relation": "HinderedBy", "prompt": "PersonX is highschool sweethearts. This would not happen if"}}
{"generation": ["PersonX were a class that was not a subclass"], "references": ["nothing they try feels right for them", "PersonX's government has forced them into military service.", "PersonX keeps changing their purpose.", "they aren't sure where to start", "PersonX is unsure what their purpose is.", "they are not as motivated", "PersonX's parents have confused them about their purpose.", "they are preoccupied with other things"], "input": {"head": "PersonX achieves PersonX's purpose", "relation": "HinderedBy", "prompt": "PersonX achieves PersonX's purpose. This would not happen if"}}
{"generation": ["the user was not a member of the group"], "references": ["The customer said no.", "Their boss doesn't allow hold.", "PersonX has to keep the line moving.", "PersonX is in a hurry."], "input": {"head": "PersonX holds the line", "relation": "HinderedBy", "prompt": "PersonX holds the line. This would not happen if"}}
{"generation": ["PersonX was not a member of the group"], "references": ["PersonY won't let their parents talk to PersonX.", "PersonY's parents don't trust PersonX.", "PersonY's parents won't answer their phones.", "PersonY's parents are not buying PersonX's story."], "input": {"head": "PersonX convinces PersonY's parents", "relation": "HinderedBy", "prompt": "PersonX convinces PersonY's parents. This would not happen if"}}
{"generation": ["the game was a single-player game"], "references": ["person x cannot get close enogh to start", "PersonX's sharp scratching tool broke.", "person x has no idea where to start", "The surface is pure marble and very hard to scratch."], "input": {"head": "PersonX scratches the surface", "relation": "HinderedBy", "prompt": "PersonX scratches the surface. This would not happen if"}}
{"generation": ["PersonX was a different type"], "references": ["There's no one to battle with", "The lance is made of unbreakable material and can't be broken.", "PersonX is too weak.", "they don't have the strength to break it", "PersonY his it from PersonX.", "PersonX is afraid of retaliation"], "input": {"head": "PersonX breaks PersonX's lance", "relation": "HinderedBy", "prompt": "PersonX breaks PersonX's lance. This would not happen if"}}
{"generation": ["the user had not been logged in"], "references": ["There is a hurricane warning and PersonX's job is shut down.", "Person X got laid off at work.", "PersonX did not get enough sleep.", "PersonX does not have flexibility in his work schedule.", "Person X is sick.", "PersonX woke up sick with the flu."], "input": {"head": "PersonX works this morning", "relation": "HinderedBy", "prompt": "PersonX works this morning. This would not happen if"}}
{"generation": ["the user had a good understanding of the system"], "references": ["PersonX does not want to lose the job.", "PersonX only wants to do good."], "input": {"head": "PersonX is even worse", "relation": "HinderedBy", "prompt": "PersonX is even worse. This would not happen if"}}
{"generation": ["I was a man"], "references": ["PersonX is going on a work trip and can't take the family.", "The family does not want to be taken.", "one cannot take someones family away", "The governor has issued a lockdown so nobody can leave their homes.", "Kidnapping people is illegal.", "my family will never leave me", "The car service failed to send a ride.", "PersonX can't afford to take the whole family with them."], "input": {"head": "PersonX takes my family", "relation": "HinderedBy", "prompt": "PersonX takes my family. This would not happen if"}}
{"generation": ["the player was in a party"], "references": ["There is no one to take PersonX's place.", "PersonX is on a time schedule, and time is almost up.", "PersonX knows if they stop they will not finish.", "PersonX knows they need to work straight through to meet the deadline.", "PersonX is trying to impress their boss", "PersonX is behind on work.", "PersonX is working a double shift", "PersonX has a dentist appointment."], "input": {"head": "PersonX takes a break", "relation": "HinderedBy", "prompt": "PersonX takes a break. This would not happen if"}}
{"generation": ["PersonX and PersonY were not the same person"], "references": ["PersonX is a sociopath.", "PersonX never sees PersonY anymore.", "PersonX is already in love.", "PersonY is not PersonX's type.", "PersonY is married.", "PersonX has a boyfriend already."], "input": {"head": "PersonX falls in love with PersonY", "relation": "HinderedBy", "prompt": "PersonX falls in love with PersonY. This would not happen if"}}
{"generation": ["the PersonX and PersonY were the same person"], "references": ["PersonX does not have the proper credentials.", "PersonY has a criminal record.", "Theres no free time to interview them.", "PersonY does not have a degree.", "PersonY cancelled.", "Persony has an interview somewhere else."], "input": {"head": "PersonX gets PersonY interview", "relation": "HinderedBy", "prompt": "PersonX gets PersonY interview. This would not happen if"}}
{"generation": ["the game was a single player game"], "references": ["Person X never has time to practice", "PersonX lacks medical insurance.", "PersonX's condition is untreatable.", "PersonX has a learning disability.", "PersonX has cancer.", "Person X is too tired all the time"], "input": {"head": "PersonX gets much better", "relation": "HinderedBy", "prompt": "PersonX gets much better. This would not happen if"}}
{"generation": ["PersonX was not a boat"], "references": ["It is lightning out.", "The docks are closed.", "PersonX's boat isn't working properly.", "PersonX doesn't have a boating license.", "There is a hurricane in the area.", "The boat has a hole and will sink.", "PersonX doesn't have a truck to tow it to the lake."], "input": {"head": "PersonX takes PersonX's boat out", "relation": "HinderedBy", "prompt": "PersonX takes PersonX's boat out. This would not happen if"}}
{"generation": ["the person was a woman"], "references": ["PersonX's teacher doesn't let anyone speak", "PersonX does not have a sense of humor.", "PersonX is not a social person.", "PersonX is not a funny person", "The jokes PersonX wants to make are racist.", "No one listens to PersonX", "PersonX doesn't know anything good", "PersonX finds the jokes and comments offensive."], "input": {"head": "PersonX makes a joke", "relation": "HinderedBy", "prompt": "PersonX makes a joke. This would not happen if"}}
{"generation": ["PersonX was a real person"], "references": ["PersonY is scarred of needles.", "PersonY has an infection currently.", "PersonX is too far away from PersonY.", "PersonY puts their tongue back in too quickly."], "input": {"head": "PersonX sticks PersonY's tongue", "relation": "HinderedBy", "prompt": "PersonX sticks PersonY's tongue. This would not happen if"}}
{"generation": ["the user had to go through the entire process of"], "references": ["All of the good places are already taken.", "All the good places are occupied by other people.", "Strangers have taken all the good spots.", "There are no vacancies in the area", "The location PersonX is looking only has run down places.", "A dog pooped in the only spot left.", "PersonX is in prison", "PersonX does not have money for a good place."], "input": {"head": "PersonX finds a good place", "relation": "HinderedBy", "prompt": "PersonX finds a good place. This would not happen if"}}
{"generation": ["the user had a good reason to be angry"], "references": ["PersonX's dad hid his gun", "There is a union in place.", "PersonX's mom took all his ammo", "HR has a longer than needed process.", "PersonX is not a boss.", "PersonX is in prison.", "PersonX's friend told him not to"], "input": {"head": "PersonX promptly fired", "relation": "HinderedBy", "prompt": "PersonX promptly fired. This would not happen if"}}
{"generation": ["PersonX was not in the house"], "references": ["Person Y does not deserve it.", "PersonX doesn't know where PersonY's home is", "their mother won't let them.", "PersonX is just not looking hard enough.", "PersonY is hiding from PersonX.", "PersonY is not at home", "PersonY is in the bathroom, with the door closed."], "input": {"head": "PersonX finds PersonY at home", "relation": "HinderedBy", "prompt": "PersonX finds PersonY at home. This would not happen if"}}
{"generation": ["PersonX was a function"], "references": ["Person X is having trouble remembering things.", "Person X was diagnosed with Alzheimer's."], "input": {"head": "PersonX keeps PersonX's head", "relation": "HinderedBy", "prompt": "PersonX keeps PersonX's head. This would not happen if"}}
{"generation": ["PersonX was not a parent"], "references": ["PersonX's dad is in a foreign country", "PersonX's dad is dead.", "Their dad has been kidnapped.", "PersonX doesn't know their dad's name.", "PersonX doesn't know their dad's address.", "PersonX is lost in the woods"], "input": {"head": "PersonX finds PersonX's dad", "relation": "HinderedBy", "prompt": "PersonX finds PersonX's dad. This would not happen if"}}
{"generation": ["PersonX was a real person"], "references": ["PersonX was told by his girlfriend that she would never talk to him again", "no one is around to talk to", "PersonX is a mute and cannot speak", "PersonX has lost their voice", "PersonX has nobody to talk to", "PersonX didn't do anything wrong", "PersonX is being told by his mom that this is a terrible idea", "PersonX is afraid of getting into trouble", "PersonX was told by the cop that he will get arrested"], "input": {"head": "PersonX spills PersonX's guts", "relation": "HinderedBy", "prompt": "PersonX spills PersonX's guts. This would not happen if"}}
{"generation": ["PersonX was a robot"], "references": ["PersonX is too short.", "PersonY is missing.", "PersonX is too short to look at PersonY's eyes.", "Person X is blind.", "PersonY won't open their eyes.", "Person Y is not above Person X."], "input": {"head": "PersonX looks up into PersonY's eyes", "relation": "HinderedBy", "prompt": "PersonX looks up into PersonY's eyes. This would not happen if"}}
{"generation": ["the rodeo was a private event"], "references": ["he does not have the money for it", "PersonX has no transportation.", "PersonX has no money for admission.", "they will not let him in"], "input": {"head": "PersonX is to the rodeo", "relation": "HinderedBy", "prompt": "PersonX is to the rodeo. This would not happen if"}}
{"generation": ["the user had not opened the lid"], "references": ["PersonX doesn't have a can opener.", "The lid is too tight.", "PersonX isn't strong enough.", "The kid swiped it away.", "They're too weak.", "The attacker broke PersonX's hand.", "The lid is frozen in place.", "There is pressure built up that makes it dangerous.", "The wife covered it in jelly."], "input": {"head": "PersonX opens the lid", "relation": "HinderedBy", "prompt": "PersonX opens the lid. This would not happen if"}}
{"generation": ["PersonX was a real person"], "references": ["PersonX's friends ignore the jokes", "PersonX's teacher put him in detention", "Personx is unavailable now.", "PersonX forgot most of the jokes.", "Person X is in a serious business meeting.", "PersonX must be quiet in class.", "Person X passed out and is in the hospital unconsious.", "PersonX has inappropriate jokes."], "input": {"head": "PersonX tells PersonX's jokes", "relation": "HinderedBy", "prompt": "PersonX tells PersonX's jokes. This would not happen if"}}
{"generation": ["he was a normal person"], "references": ["PersonX's mom does not buy his fake illness.", "PersonX has an incurable illness.", "PersonX's mom said he has no symptoms.", "PersonX's doctor told him he is in good shape.", "PersonX doesn't know how to fake having a fever", "PersonX is sick.", "PersonX isn't a good liar"], "input": {"head": "PersonX does n't feel well", "relation": "HinderedBy", "prompt": "PersonX does n't feel well. This would not happen if"}}
{"generation": ["the film was a straight-up action film"], "references": ["PersonX has no goals that PersonX is trying to achieve.", "Their girlfriend dumped them before the moment.", "PersonX is a pessimist.", "PersonX lacks courage.", "The waiter interrupted at exactly the wrong time", "PersonX has no drama in their life."], "input": {"head": "PersonX culminates into a magically climatic moment", "relation": "HinderedBy", "prompt": "PersonX culminates into a magically climatic moment. This would not happen if"}}
{"generation": ["the game was a success"], "references": ["This is the last year of the event.", "PersonX's coach cut him from the team after the season ended.", "There will be no more chances next year", "This is the last year before the thing they want to try ends forever.", "PersonX's doctor told him he will die before then.", "PersonX will no longer be eligible.", "PersonX will be too old next year", "PersonX is moving to another place next year where they won't be able to try."], "input": {"head": "PersonX tries again next year", "relation": "HinderedBy", "prompt": "PersonX tries again next year. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["PersonX has too many things to get done.", "PersonX has a mandatory meeting.", "PersonX has work deadlines to meet", "PersonX is being evaluated by their boss today.", "PersonX has reports due today and can't blow them off.", "PersonY is not answering PersonX's phone calls"], "input": {"head": "PersonX wastes PersonX's day", "relation": "HinderedBy", "prompt": "PersonX wastes PersonX's day. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonY wont listen to PersonX.", "PersonX is too embarrassed to ask.", "There are too many people around PersonY for PersonX to ask what happened.", "PersonX is grounded from PersonY.", "PersonX knows it is rude to ask what happened and does not want to do that.", "PersonY is asleep.", "PersonX does not have PersonY's phone number to call and ask them what happened."], "input": {"head": "PersonX asks PersonY what happened", "relation": "HinderedBy", "prompt": "PersonX asks PersonY what happened. This would not happen if"}}
{"generation": ["PersonX was a person, but PersonX is"], "references": ["PersonY is on a business trip out of town, and can't take calls.", "PersonX's phone was stolen."], "input": {"head": "PersonX tells PersonY to make", "relation": "HinderedBy", "prompt": "PersonX tells PersonY to make. This would not happen if"}}
{"generation": ["PersonX was wearing a different pair of boots"], "references": ["Their bother borrowed the boots.", "They lost their boots.", "They don't own any boots.", "Their mother hid them.", "The boots are too small for PersonX.", "The boots aren't office appropriate", "Someone stole the boots.", "The boots are too small"], "input": {"head": "PersonX wears PersonX's boots", "relation": "HinderedBy", "prompt": "PersonX wears PersonX's boots. This would not happen if"}}
{"generation": ["the user had a different set of preferences"], "references": ["PersonX doesn't have any money.", "It is impossible to get everything.", "PersonX has nowhere to put it all.", "PersonX's hands are full.", "PersonX's kid is sick and needs to go home.", "PersonX can't afford it."], "input": {"head": "PersonX gets everything", "relation": "HinderedBy", "prompt": "PersonX gets everything. This would not happen if"}}
{"generation": ["PersonX was a singleton"], "references": ["PersonX's friend took his pants from him.", "PersonX is wearing a skirt", "PersonX is bed ridden", "PersonX's wife fed him too much and they do not fit anymore.", "PersonX's wife was hemming his pants and ripped them by accident.", "PersonX has an injured leg.", "PersonX can't find the pants"], "input": {"head": "PersonX puts PersonX's pants on PersonX leg at a time", "relation": "HinderedBy", "prompt": "PersonX puts PersonX's pants on PersonX leg at a time. This would not happen if"}}
{"generation": ["the person was not a person"], "references": ["PersonX stays home every night", "PersonX was seen by Jane as a predetor", "PersonX is afraid to meet new people.", "PersonX lives in the middle of nowhere.", "PersonX was told by Mary that he is creepy", "PersonX has to work all the time.", "PersonX was dumped by his girlfriend", "PersonX does not know who they are.", "PersonX isn't over their ex"], "input": {"head": "PersonX meets the love of PersonX's life", "relation": "HinderedBy", "prompt": "PersonX meets the love of PersonX's life. This would not happen if"}}
{"generation": ["the user had a choice"], "references": ["Someone else already ate it", "PersonX had stomach surgery.", "They filled up on appetizerss", "PersonY kept taking bites", "The baby drool on PersonX's food", "PersonX is full."], "input": {"head": "PersonX eats the whole thing", "relation": "HinderedBy", "prompt": "PersonX eats the whole thing. This would not happen if"}}
{"generation": ["the game was not so good"], "references": ["Their boss is never satisfied with their work.", "PersonX got sick before the exam.", "PersonX is bad at math", "Their brother messes up everything.", "PersonX is too lax in being perfect.", "PersonX has no training on the matter.", "PersonX is still trying to perfect their talents.", "PersonX is not able to stay until the end.", "Their mom keeps telling them to do something else."], "input": {"head": "PersonX has done a great job", "relation": "HinderedBy", "prompt": "PersonX has done a great job. This would not happen if"}}
{"generation": ["PersonX was a real person"], "references": ["person X doesn't have time to meet her.", "PersonX was adopted and doesn't know who their real mom is.", "Mom won't allow person X to come over.", "PersonX's car broke down and PersonX is stuck waiting for a tow truck.", "PersonX's mom is busy at work.", "PersonX and PersonX's mom got into a huge argument and now aren't speaking to each-other."], "input": {"head": "PersonX meets PersonX's mom", "relation": "HinderedBy", "prompt": "PersonX meets PersonX's mom. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonY's husband won't allow it.", "They don't want to betray Y.", "PersonX doesn't know the name", "PersonX has to work", "PersonY's boyfriend won't allow it.", "They don't want to hurt Y."], "input": {"head": "PersonX sees PersonY's crush", "relation": "HinderedBy", "prompt": "PersonX sees PersonY's crush. This would not happen if"}}
{"generation": ["the person was not happy"], "references": ["PersonX keeps getting sick and depressed.", "PersonX's brain doesn't make enough neurotransmitters for happiness.", "PersonX has a chronic disease", "PersonX lost his wife", "PersonX is happy being miserable.", "PersonX has a broken ankle."], "input": {"head": "PersonX becomes happy", "relation": "HinderedBy", "prompt": "PersonX becomes happy. This would not happen if"}}
{"generation": ["the test was not designed to measure the ability to"], "references": ["PersonX doesn't have the text book.", "PersonX's parents did not help them study for the test.", "PersonX missed the final.", "The class was cancelled.", "The teacher surprised them with a test about subjects they haven't learned yet.", "PersonX didn't study", "PersonX's teacher did not teach the material properly.", "The test contains a trick question."], "input": {"head": "PersonX does well on the test", "relation": "HinderedBy", "prompt": "PersonX does well on the test. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["Grandma doesn't want to see them.", "PersonX's grandma has the flu.", "PersonX's grandma currently does not like PersonX and does not want to see them.", "PersonX is blind.", "PersonX's grandmother moved out of the country.", "They are too far away."], "input": {"head": "PersonX sees PersonX's grandma", "relation": "HinderedBy", "prompt": "PersonX sees PersonX's grandma. This would not happen if"}}
{"generation": ["the player had to manually set up the game"], "references": ["There are missing pieces.", "Their mother keeps moving things.", "The cat won't get out of the suitcase.", "PersonX got held up in traffic on the way to the store.", "PersonX has to work overtime.", "PersonX is lazy.", "The task is too great.", "PersonX couldn't find any clothing that sparked joy."], "input": {"head": "PersonX gets everything together", "relation": "HinderedBy", "prompt": "PersonX gets everything together. This would not happen if"}}
{"generation": ["PersonX was a player"], "references": ["PersonX is not in the same country.", "PersonX is too weak.", "PersonY has restraints on their legs.", "PersonX isn't strong enough.", "PersonX is not in the same state.", "PersonX is not in the same room.", "PersonY's legs are already open.", "PersonX is scarred what people will think."], "input": {"head": "PersonX opens PersonY's legs", "relation": "HinderedBy", "prompt": "PersonX opens PersonY's legs. This would not happen if"}}
{"generation": ["PersonX was a different color"], "references": ["He has to go to work.", "They're afraid it might break off.", "X has no money to buy products at the store.", "He doesnt have any bleach.", "Persony wont let him.", "They've never done it before and are afraid of the results.", "PersonY doesnt have hair", "X's mother forbade it."], "input": {"head": "PersonX bleaches PersonY's hair", "relation": "HinderedBy", "prompt": "PersonX bleaches PersonY's hair. This would not happen if"}}
{"generation": ["the person was not wearing a helmet"], "references": ["Person X is sleeping.", "PersonX is in a sound proof room.", "Person X is deaf.", "Person X has ear plugs in.", "PersonX is deaf.", "Person X is listening to music.", "PersonX has headphones on."], "input": {"head": "PersonX hears a loud noise", "relation": "HinderedBy", "prompt": "PersonX hears a loud noise. This would not happen if"}}
{"generation": ["PersonX was a subclass of PersonY"], "references": ["PersonX has the flu.", "Person X is lost in the school.", "The class is across campus.", "PersonX doesn't know their way across campus.", "PersonY's class is in another state.", "Person X is blind."], "input": {"head": "PersonX finds PersonY's class", "relation": "HinderedBy", "prompt": "PersonX finds PersonY's class. This would not happen if"}}
{"generation": ["the game was a single-player game"], "references": ["The TSA won't let it through security.", "Needs to stay home.", "Person X can't lift it.", "It's owner won't let PersonX take it out of the house.", "The item was confiscated by police.", "Stores do not allow it.", "There are restrictions in public areas.", "PersonY keeps it locked in t heir room."], "input": {"head": "PersonX takes it everywhere", "relation": "HinderedBy", "prompt": "PersonX takes it everywhere. This would not happen if"}}
{"generation": ["the person was not a member of the group"], "references": ["PersonX still lives in the same small town they grew up in.", "PersonX has agorophobia.", "PersonX is remote", "personX doesn't have transportation to the party", "PersonX's partner won't let him go out.", "PersonX is isolated", "personX is in the hospital with a contagious disease", "PersonX's doctor has him in quarantine."], "input": {"head": "PersonX meets some new people", "relation": "HinderedBy", "prompt": "PersonX meets some new people. This would not happen if"}}
{"generation": ["PersonX was a string"], "references": ["PersonX has a name that's too long.", "A name was already picked", "The baby is not PersonX's to name.", "It is not the right gender", "The dog is not PersonX's to name.", "The boat does not belong to PersonX.", "The cat does not belong to PersonX.", "The document requires two people to be on it."], "input": {"head": "PersonX gives it PersonX's name", "relation": "HinderedBy", "prompt": "PersonX gives it PersonX's name. This would not happen if"}}
{"generation": ["you were a man"], "references": ["PersonX doesn't have enough people around them", "PersonX's jealous boyfriend punishes them whenever they seek attention.", "PersonX isn't attractive enough for anyone to pay attention to them.", "PersonX is too shy"], "input": {"head": "PersonX attention whores", "relation": "HinderedBy", "prompt": "PersonX attention whores. This would not happen if"}}
{"generation": ["the dog was a puppy"], "references": ["It's the weekend and the vet is closed.", "The vet would cost too much.", "PersonX can't afford the vet fees.", "PersonX's car won't start.", "There isn't a vet in the area.", "PersonX doesn't have a car to get to the vet."], "input": {"head": "PersonX takes it to the vet", "relation": "HinderedBy", "prompt": "PersonX takes it to the vet. This would not happen if"}}
{"generation": ["PersonX was not working hard at PersonX's"], "references": ["PersonX is sick in bed at home.", "PersonX was sent home sick.", "PersonX is lazy.", "PersonX has been called for jury duty.", "PersonX was injured at work and is in the hospital.", "Their boss didn't give them the full instructions.", "PersonX is unmotivated.", "Their boss won't give them a raise."], "input": {"head": "PersonX is working hard at PersonX's job", "relation": "HinderedBy", "prompt": "PersonX is working hard at PersonX's job. This would not happen if"}}
{"generation": ["PersonX was a different color"], "references": ["PersonY is not near PersonX", "PersonY told PersonX not to touch PersonY.", "PersonY is protected by armed guards.", "PersonY lives in a different state.", "PersonY ran away from PersonX.", "PersonX's hands are tied", "PersonY ducked under PersonX's hands."], "input": {"head": "PersonX shields PersonY's eyes", "relation": "HinderedBy", "prompt": "PersonX shields PersonY's eyes. This would not happen if"}}
{"generation": ["the person was a robot"], "references": ["The stove won't turn on", "PersonX's mother won't give them the spaghetti recipe.", "The stove is broken", "PersonX forgot to buy spaghetti at the grocery store.", "PersonX can't boil water", "PersonX does not have a stove.", "The pot is already dirty", "PersonX's roommate is hogging the kitchen.", "PersonX's partner didn't buy the noodles they asked for."], "input": {"head": "PersonX cooks spaghetti", "relation": "HinderedBy", "prompt": "PersonX cooks spaghetti. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["The court allows only Person Y to get the ticket.", "PersonX can't find PersonY.", "Person X has no documentation to get the ticket.", "PersonX can't find the ticket.", "Persony keeps their ticket on them at all times.", "personx is too clumsy to take it away from them."], "input": {"head": "PersonX gets PersonY's ticket", "relation": "HinderedBy", "prompt": "PersonX gets PersonY's ticket. This would not happen if"}}
{"generation": ["PersonX was a child of PersonY"], "references": ["PersonX can't reach PersonY in the king-sized bed", "PersonX does not want to force PersonY to do something they don't want to do", "They have frozen shoulder.", "personY is too far away from personX."], "input": {"head": "PersonX wraps PersonY's arm around PersonY", "relation": "HinderedBy", "prompt": "PersonX wraps PersonY's arm around PersonY. This would not happen if"}}
{"generation": ["the people were not there"], "references": ["PersonX has no manners.", "PersonX was sentenced to life-long solitary confinement by the judge", "A kidnapper dropped PersonX off on a deserted island", "PersonX doesn't like people.", "PersonX is contagious.", "PersonX has social anxiety.", "PersonX is a rat.", "PersonX is a recluse."], "input": {"head": "PersonX lives among people", "relation": "HinderedBy", "prompt": "PersonX lives among people. This would not happen if"}}
{"generation": ["the player had chosen to play as the character"], "references": ["Person X is racked with indecision.", "Person X wants to bring both kittens home.", "It isn't PersonX's turn yet", "They like them all", "They all cost the same", "PersonX isn't allowed to have one"], "input": {"head": "PersonX chooses one", "relation": "HinderedBy", "prompt": "PersonX chooses one. This would not happen if"}}
{"generation": ["I had not been given the opportunity to try it"], "references": ["The food is not ready yet.", "The food came out spoiled.", "PersonX had oral surgery and cant eat", "PersonX is on a liquid diet.", "PersonX is sick and can not eat off me or they would get me sick", "PersonY stole the sandwich.", "PersonX has allergies to the food.", "PersonY knocked PersonX's teeth out."], "input": {"head": "PersonX takes my first bite", "relation": "HinderedBy", "prompt": "PersonX takes my first bite. This would not happen if"}}
{"generation": ["PersonX was not a parent"], "references": ["PersonY's dad is not at home.", "PersonY's dad is deaf and PersonX doesn't know sign", "PersonY's dad doesn't help people", "PersonY's dad is too busy", "PersonY's dad speaks a language PersonX doesn't know.", "PersonY's dad won't answer the phone."], "input": {"head": "PersonX asks PersonY's dad for help", "relation": "HinderedBy", "prompt": "PersonX asks PersonY's dad for help. This would not happen if"}}
{"generation": ["PersonX was a function"], "references": ["Person X suffers from a disorder, and is not in control of themselves.", "PersonX has brain damage and lost the part that deals with self control.", "a doctor put person x on psychological drugs", "person x's wife keeps making them angry on purpose", "Person X is a addictited, and cannot stop themselves.", "PersonX is lazy.", "PersonX is a slave whose actions are forced by another person.", "PersonX is unmotivated."], "input": {"head": "PersonX changes PersonX's behavior", "relation": "HinderedBy", "prompt": "PersonX changes PersonX's behavior. This would not happen if"}}
{"generation": ["the car was not a car"], "references": ["he has no car right now", "PersonX doesn't want to get into trouble.", "The doctor has PersonX locked in a room", "PersonX does not own a car.", "PersonX doesn't want to risk it.", "his car has too many safety features", "PersonX does not have a license.", "PersonXs wife took the car keys"], "input": {"head": "PersonX gets into a car accident", "relation": "HinderedBy", "prompt": "PersonX gets into a car accident. This would not happen if"}}
{"generation": ["the message was delivered to the wrong person"], "references": ["The post office is closed today.", "They lost the note", "The cell phone died.", "The internet went out.", "PersonY won't allow PersonX to speak or write.", "PersonX's boss won't let them leave their desk.", "The systems are down", "PersonX needs to buy stamps first."], "input": {"head": "PersonX delivers PersonX's message", "relation": "HinderedBy", "prompt": "PersonX delivers PersonX's message. This would not happen if"}}
{"generation": ["the user had not decided to purchase it"], "references": ["Person X has maxed out all credit cards.", "It is not for sale", "Person X does not have enough money.", "The online store is sold out.", "PersonX's credit card is missing.", "PersonX does not have any money"], "input": {"head": "PersonX decides to purchase it", "relation": "HinderedBy", "prompt": "PersonX decides to purchase it. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX's brother is on life support.", "They have too much homework", "PersonX is out of town.", "PersonX's brother is out of state.", "PersonX has to work.", "They don't understand it"], "input": {"head": "PersonX helps PersonX's brother", "relation": "HinderedBy", "prompt": "PersonX helps PersonX's brother. This would not happen if"}}
{"generation": ["he was not a man"], "references": ["PersonX was drugged by his mom", "person x is on medication", "PersonX took anxiety medicine already.", "PersonX took medicine.", "person x is drunk", "PersonX was talked up by Dave", "PersonX was given a pep talk by his Dad", "PersonX found a friend in the crowd.", "PersonX knows there's nothing to worry about."], "input": {"head": "PersonX is still nervous", "relation": "HinderedBy", "prompt": "PersonX is still nervous. This would not happen if"}}
{"generation": ["PersonX was a member of the same group as"], "references": ["PersonY is wearing noise cancelling headphones.", "PersonY already left for work.", "PersonY ran away.", "PersonX is being held hostage", "PersonX cannot speak.", "PersonY isn't near by to warn"], "input": {"head": "PersonX gives PersonY a warning", "relation": "HinderedBy", "prompt": "PersonX gives PersonY a warning. This would not happen if"}}
{"generation": ["PersonX was a player"], "references": ["PersonX tripped on the court.", "PersonY ran away.", "PersonX is bad at this.", "PERSON Y BALL ROLLED UNDERNEATH A CAR", "PersonX was too far away from the ball.", "PERSON Y BALL ROLLED INTO THE STREET"], "input": {"head": "PersonX gets PersonY's ball", "relation": "HinderedBy", "prompt": "PersonX gets PersonY's ball. This would not happen if"}}
{"generation": ["PersonX were a real person"], "references": ["PersonX's wife will slap him if he stays silent.", "PersonX just can't stop talking.", "PersonX is being held captive by a criminal.", "PersonX urgently needs to communicate something.", "PersonX's must speak because the judge told him to."], "input": {"head": "PersonX saves PersonX's breath", "relation": "HinderedBy", "prompt": "PersonX saves PersonX's breath. This would not happen if"}}
{"generation": ["we were a closed system"], "references": ["PersonX's apartment does not allow get-togethers", "not enough resources", "PersonX does not know anyone's address", "PersonX's phone is broken", "no room", "PersonX does not have anyone's phone number"], "input": {"head": "PersonX invites people", "relation": "HinderedBy", "prompt": "PersonX invites people. This would not happen if"}}
{"generation": ["PersonX was a player"], "references": ["PersonX doesn't know where they are going.", "PersonY is too far away to hear", "PersonY has a hearing impairment.", "PersonX has no authority over PersonY", "PersonX lost his/her voice.", "PersonY doesn't have a car."], "input": {"head": "PersonX tells PersonY to follow", "relation": "HinderedBy", "prompt": "PersonX tells PersonY to follow. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same object"], "references": ["PersonY never met PersonX.", "PersonX is sworn to secrecy by PersonY."], "input": {"head": "PersonX provides PersonY description", "relation": "HinderedBy", "prompt": "PersonX provides PersonY description. This would not happen if"}}
{"generation": ["the government were to take a more active role in"], "references": ["Has a broken neck.", "Personx's head is stuck secured into a vice.", "person x is too much a part of the situation", "person x is enthralled"], "input": {"head": "PersonX looks the other way", "relation": "HinderedBy", "prompt": "PersonX looks the other way. This would not happen if"}}
{"generation": ["the government had not been so stupid"], "references": ["Person X's spouse took the car that he was going to use to get to work.", "Today is a snow day.", "Person X has a broken toe.", "It is raining.", "PersonX has a doctor appointment today.", "PersonX is coming off a flu.", "PersonX's boss called and told them not to come in.", "Today is a federal holiday day off."], "input": {"head": "PersonX goes to work today", "relation": "HinderedBy", "prompt": "PersonX goes to work today. This would not happen if"}}
{"generation": ["the user was not a member of the group"], "references": ["PersonX's kids are there which make her happy", "PersonX is very peaceful", "PersonX is very tranquil by nature", "PersonX's mom is calming her down by singing", "Everyone is being nice.", "PersonX's husband bought her a ring", "PersonX sees the other person's point", "It\u9225\u6a9a not a bad day.", "PersonX went to anger management."], "input": {"head": "PersonX gets angry", "relation": "HinderedBy", "prompt": "PersonX gets angry. This would not happen if"}}
{"generation": ["PersonX was a member of the commission"], "references": ["PersonX doesn't know how to read.", "PersonX has no authority.", "PersonY made an account separate from personX.", "PersonX does not have enough votes", "PersonX is not the boss.", "PersonY has more people on their side", "PersonX is in love with Person Y.", "PersonX does not have a pen", "PersonX's boss told him to stay away from PersonY.", "PersonX does not have enough money to pay"], "input": {"head": "PersonX resigns PersonY's commission", "relation": "HinderedBy", "prompt": "PersonX resigns PersonY's commission. This would not happen if"}}
{"generation": ["PersonX was not a member of the group"], "references": ["personX has no finances to pay for their part of the deal", "PersonX is too busy with family.", "personX feels the offer is too good to be true", "PersonX works with PersonY."], "input": {"head": "PersonX takes PersonY up on the offer", "relation": "HinderedBy", "prompt": "PersonX takes PersonY up on the offer. This would not happen if"}}
{"generation": ["the person was a woman"], "references": ["PersonX has Huntington's Disease and will die before the age most people develop cancer.", "PersonX lives somewhere with no access to carcinogens."], "input": {"head": "PersonX gets cancer", "relation": "HinderedBy", "prompt": "PersonX gets cancer. This would not happen if"}}
{"generation": ["PersonX was wearing a belt"], "references": ["Person X is in a relationship with someone else.", "PersonX doesn't know how it unbuckles", "PersonX hands are in a cast.", "Person Y does not like Person X.", "PersonX can't reach it", "PersonY did not get consent to this."], "input": {"head": "PersonX unbuckles PersonY's belt", "relation": "HinderedBy", "prompt": "PersonX unbuckles PersonY's belt. This would not happen if"}}
{"generation": ["PersonX was a child of PersonY"], "references": ["Person Y has a broken arm.", "PersonY is bigger than them.", "PersonX can't find PersonY.", "Person X is afraid of Person Y.", "PersonY is moving too fast.", "PersonX has no free hands."], "input": {"head": "PersonX seizes PersonY by the arm", "relation": "HinderedBy", "prompt": "PersonX seizes PersonY by the arm. This would not happen if"}}
{"generation": ["the player had not been killed"], "references": ["The place is permanently closed.", "PersonX was banned.", "The store owner banned personX.", "PersonX's wife kicked him out of the house.", "Person X is busy later.", "PersonX is on a tight schedule.", "PersonX fell asleep at the wheel.", "Person X has prior engagments with his work."], "input": {"head": "PersonX comes back later", "relation": "HinderedBy", "prompt": "PersonX comes back later. This would not happen if"}}
{"generation": ["PersonX was a person, and PersonY was"], "references": ["Someone is forcing PersonX to help PersonY.", "PersonY needs PersonX.", "PersonX really need PersonY's help with something.", "PersonX and PersonY are related.", "PersonX loves PersonY.", "PersonX has a debt to repay to PersonY"], "input": {"head": "PersonX not does PersonY any favours", "relation": "HinderedBy", "prompt": "PersonX not does PersonY any favours. This would not happen if"}}
{"generation": ["the PersonX and PersonY were the same person"], "references": ["persony hired someone else already.", "personx doesn't have the right qualifications", "PErsonX needs a degree.", "They are not hiring."], "input": {"head": "PersonX becomes PersonY engineer", "relation": "HinderedBy", "prompt": "PersonX becomes PersonY engineer. This would not happen if"}}
{"generation": ["PersonX was not a Person"], "references": ["PersonX can't access a shave.", "PersonX can't access a shower.", "PersonY stole PersonX's makeup", "PersonX can't buy new clothes.", "PersonX is too ugly to be improved.", "PersonY cut Personx's face", "PersonX can't afford beauty products.", "PersonX doesn't know how to dress fashionably", "PersonX can't afford to pay the barber.", "PersonX doesn't know how to lose weight"], "input": {"head": "PersonX improves PersonX's appearance", "relation": "HinderedBy", "prompt": "PersonX improves PersonX's appearance. This would not happen if"}}
{"generation": ["the user had a good understanding of the system"], "references": ["PersonX is sick.", "PersonX's stove is not working.", "The gas to PersonX's house has been turned off.", "It is a cloudy day to sunbathe."], "input": {"head": "PersonX gets burned", "relation": "HinderedBy", "prompt": "PersonX gets burned. This would not happen if"}}
{"generation": ["the player was standing on the ground"], "references": ["PersonY is resistant.", "PersonY is uncomfortable.", "PersonX is in a wheel chair.", "PersonY is tense.", "PersonY won't allow it.", "PersonX can't find PersonY"], "input": {"head": "PersonX arches PersonY's back", "relation": "HinderedBy", "prompt": "PersonX arches PersonY's back. This would not happen if"}}
{"generation": ["the game was a simple, linear, and linear"], "references": ["PersonX can only walk backwards", "The buzzer hasn't rang yet", "PersonX is being held down by Jack", "Person X 's foot is stuck to the floor.", "Person X is unable to mov.", "The property above PersonX is private", "PersonX is being held down by Julie", "PersonX's friend has his foot", "PersonX is always fumbling"], "input": {"head": "PersonX takes a step forward", "relation": "HinderedBy", "prompt": "PersonX takes a step forward. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX doesn't know what PersonY likes.", "PersonY feels no emotional connection to PersonX.", "PersonY is a sociopath who feels nothing.", "PersonY doesn't feel the same way."], "input": {"head": "PersonX gives PersonY a feeling", "relation": "HinderedBy", "prompt": "PersonX gives PersonY a feeling. This would not happen if"}}
{"generation": ["he was a woman"], "references": ["PersonX can't grow facial hair.", "PersonX's dad's sperm created her into a woman", "PersonX has adult female sexual characteristics.", "PersonX was born a female.", "Person X has long hair and wide hips.", "PersonX is unable to obtain testosterone.", "Person X has large breasts.", "PersonX's mom's genetics effect her strongly in her facial features", "PersonX's parents never taught her how to look like the opposite sex"], "input": {"head": "PersonX looks like a man", "relation": "HinderedBy", "prompt": "PersonX looks like a man. This would not happen if"}}
{"generation": ["the old one was not removed"], "references": ["The old ones are too pricey to buy.", "They don't have any replacements in stock.", "Their boss has not paid them yet.", "PersonX has no money.", "PersonX cannot find an adequate replacement.", "personX has other bills to pay first", "personX can't afford a new one", "Their mother likes the old one."], "input": {"head": "PersonX replaces the old one", "relation": "HinderedBy", "prompt": "PersonX replaces the old one. This would not happen if"}}
{"generation": ["the user had a password"], "references": ["Always gets involved", "Is a perfectionist", "PersonX is hot headed.", "PersonX has a bad temper.", "PersonX is certain they're right.", "PersonX can't afford to lose the job.", "See potential for too much damage"], "input": {"head": "PersonX leaves it be", "relation": "HinderedBy", "prompt": "PersonX leaves it be. This would not happen if"}}
{"generation": ["the show was a hit"], "references": ["He has to work that day.", "Person X has no ticket", "THE SHOW TICKETS ARE SOLD OUT", "It's he and his wife's anniversary and she wants to go to the beach.", "The usher refuses to let them in until after intermission", "The taxi driver arrived to pick them up too ate", "Person X has to work", "PERSON X IS BLIIND"], "input": {"head": "PersonX sees the show", "relation": "HinderedBy", "prompt": "PersonX sees the show. This would not happen if"}}
{"generation": ["the player was in the middle of a fight"], "references": ["PersonX has not scissor.", "Person X doesn't have a saw.", "The item is impenetrable.", "X does not have the tools.", "PersonX does not work outside of the house.", "PersonX's nemesis sprained PersonX's fingers in a fight", "Person X doesn't have a battery to power their saw.", "PersonX's sister hid the scissors"], "input": {"head": "PersonX cuts a hole", "relation": "HinderedBy", "prompt": "PersonX cuts a hole. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PersonY's face is buried in a pillow.", "PersonY is wearing a mask and has a gun.", "PersonX is mad with PersonY.", "PersonX is under gunpoint.", "PersonX is blind.", "PersonY did something mean to PersonX.", "PersonX thinks PersonY is ugly."], "input": {"head": "PersonX looks PersonY in the face", "relation": "HinderedBy", "prompt": "PersonX looks PersonY in the face. This would not happen if"}}
{"generation": ["PersonX was a player"], "references": ["PersonY has run away.", "PersonX isn't strong enough.", "PersonX has a pair of broken hands.", "PersonY is too heavy to be pushed.", "PersonY is too big for PersonX.", "The teacher is watching them."], "input": {"head": "PersonX shoves PersonY back", "relation": "HinderedBy", "prompt": "PersonX shoves PersonY back. This would not happen if"}}
{"generation": ["PersonX was a function"], "references": ["PersonX has to get the component before a set time.", "PersonY cannot receive more time than they already have.", "PersonX is too busy to ask later.", "PersonX has to run on a tight schedule.", "PersonX cannot meet PersonY at a later time.", "PersonX has too much stuff for PersonY to do."], "input": {"head": "PersonX leaves PersonY time", "relation": "HinderedBy", "prompt": "PersonX leaves PersonY time. This would not happen if"}}
{"generation": ["PersonX was a stranger"], "references": ["PersonX is unimpressive.", "PersonY won't pay attention to PersonX.", "PersonX is not interesting.", "PersonY is busy with something else.", "PersonX is painfully shy.", "PersonY has a short attention span."], "input": {"head": "PersonX holds PersonY's attention", "relation": "HinderedBy", "prompt": "PersonX holds PersonY's attention. This would not happen if"}}
{"generation": ["I was not a woman"], "references": ["PersonX is depressed.", "PersonX is too cynical to fall in love.", "PersonX already has a spouse.", "PersonY hates PersonX."], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "HinderedBy", "prompt": "PersonX loves PersonY with all my heart. This would not happen if"}}
{"generation": ["PersonX was a different color"], "references": ["PersonX doesn't know the whole story", "PersonY ran off"], "input": {"head": "PersonX tans PersonY's hide", "relation": "HinderedBy", "prompt": "PersonX tans PersonY's hide. This would not happen if"}}
{"generation": ["the player had not been given the option to choose"], "references": ["PersonX is too good at the game.", "The other player is really bad at games.", "PersonX has money on the game.", "PersonX's coach trained him too well.", "PersonX is talented.", "PersonX will get killed by his bookie if he loses.", "PersonX is not playing tonight.", "Person X is really really lucky."], "input": {"head": "PersonX loses the first game", "relation": "HinderedBy", "prompt": "PersonX loses the first game. This would not happen if"}}
{"generation": ["PersonX was a non-player character"], "references": ["PersonX is far behind of PersonY as to where they cannot catch up.", "PersonX is too nice.", "PersonY is better than them.", "PersonX depends on PersonY for their success.", "PersonY is too fast for PersonX.", "PersonY is stronger than personX.", "PersonY is already too far ahead.", "PersonY doesn't take PersonX seriously.", "PersonY is more determined than PersonX.", "PersonX cannot find personX because a stranger is protecting her."], "input": {"head": "PersonX impedes PersonY's progress", "relation": "HinderedBy", "prompt": "PersonX impedes PersonY's progress. This would not happen if"}}
{"generation": ["he had not been so careless"], "references": ["Their kids have done nothing wrong.", "Their mother is not in the hospital.", "PersonX has nothing to worry about.", "Person X is bipolar and is incapable of  emotions", "Person X has no reason to worry so they do not.", "PersonX is taking their anxiety medicine."], "input": {"head": "PersonX starts to worry", "relation": "HinderedBy", "prompt": "PersonX starts to worry. This would not happen if"}}
{"generation": ["the player was a vegetarian"], "references": ["PersonY dropped PersonX's cheeseburgers on the floor.", "PersonX doesn't have any ground beef in the house.", "PersonX is a vegan.", "The cheeseburger place burned down.", "PersonX is allergic to cheese.", "PersonX has a stomach ache.", "Cheeseburgers make PersonX sick.", "PersonX's doctor told them to stop eating meat."], "input": {"head": "PersonX eats cheeseburgers", "relation": "HinderedBy", "prompt": "PersonX eats cheeseburgers. This would not happen if"}}
{"generation": ["the player was in a safe area"], "references": ["PersonX is in the back of a cop car.", "PersonX is stuck in the car.", "PersonX's parents keep talking to them.", "PersonX is pinned down by the police.", "PersonX legs got chopped off so they are trapped at the scene.", "PersonX is held at gunpoint by a robber.", "PersonX has been arrested.", "PersonX's friend spotted them already."], "input": {"head": "PersonX flees the scene", "relation": "HinderedBy", "prompt": "PersonX flees the scene. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["Person Y has a hard to pronounce name", "PersonY has a terrible name.", "PersonX has a mother with the same name and he does not like his mother", "PersonX has a sister with the same name and he does not like his sister", "Person Y has an offensive name", "PersonY's name reminds PersonX of a former lover."], "input": {"head": "PersonX likes PersonY's name", "relation": "HinderedBy", "prompt": "PersonX likes PersonY's name. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["PersonY has no phone to be contacted for advice", "PersonX can't find PersonY.", "PersonY is not answering their phone.", "PersonY is missing.", "PersonX does not have the contact information for PersonY", "PersonY is asleep already."], "input": {"head": "PersonX asks PersonY advice", "relation": "HinderedBy", "prompt": "PersonX asks PersonY advice. This would not happen if"}}
{"generation": ["the user had not been granted permission to access the"], "references": ["The store is closed for the night.", "Their mother will not take them.", "The door is jammed shut.", "PersonX lost their ID", "Their wife broke their phone.", "The bar is for adults and personX is 17."], "input": {"head": "PersonX tries to get in", "relation": "HinderedBy", "prompt": "PersonX tries to get in. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PersonX has been barred from the premises and cannot collect anyone else's share", "PersonY is a selfish person.", "PersonY refuses to share", "PersonX is not interested in what PersonY has all the time."], "input": {"head": "PersonX gets PersonY's share", "relation": "HinderedBy", "prompt": "PersonX gets PersonY's share. This would not happen if"}}
{"generation": ["the game was not fun"], "references": ["No one will buy their record.", "their music sucks", "PersonX can't get any attention.", "The audience doesn't like them.", "What PersonX has is not any good.", "PersonX has no special talents.", "they can't act", "No one is interested."], "input": {"head": "PersonX is a huge hit", "relation": "HinderedBy", "prompt": "PersonX is a huge hit. This would not happen if"}}
{"generation": ["the puppy was not a puppy"], "references": ["The vet deemed personX unfit to watch the puppy.", "PersonX's friend took the puppy from him.", "The dog doesn't like people.", "The puppy bite them.", "A criminal took the puppy from personX.", "They are a cat person", "PersonX is allergic to dogs.", "They are afraid of dogs", "The puppy is causing a big mess.", "The puppy bit them"], "input": {"head": "PersonX loves the puppy", "relation": "HinderedBy", "prompt": "PersonX loves the puppy. This would not happen if"}}
{"generation": ["the game was a simple, linear shooter"], "references": ["PersonX does not have heavy machinery.", "PersonX doesn't think they're good enough", "The performer before PersonX already did it!", "The agent cancelled PersonXs' contract before the show", "PersonX would be sent to jail if he did so.", "PersonX isn't very talented", "PersonX lives with their mom", "PersonX does not have a house"], "input": {"head": "PersonX brings down the house", "relation": "HinderedBy", "prompt": "PersonX brings down the house. This would not happen if"}}
{"generation": ["PersonX was a different person"], "references": ["PersonX isnt brave enough.", "PersonY is too far away.", "PersonX doesn't want to hurt PersonY.", "PersonX is dead.", "PersonY is standing up.", "PersonX is not near PersonY.", "PersonX doesn't want to be mean.", "PersonY runs away."], "input": {"head": "PersonX falls on PersonY's neck", "relation": "HinderedBy", "prompt": "PersonX falls on PersonY's neck. This would not happen if"}}
{"generation": ["the player was not a member of the player's"], "references": ["PersonX has to stay with their grandma all summer.", "PersonX's boss would not give her time off for holiday", "PersonX has to work all summer.", "The contractor is not done with PersonX's renovations"], "input": {"head": "PersonX spends the summer", "relation": "HinderedBy", "prompt": "PersonX spends the summer. This would not happen if"}}
{"generation": ["the player had not been killed"], "references": ["There is a storm outside.", "Person X doesn't know the way back", "PersonX was told they have to work over.", "The roads are really icy.", "PersonXs was shot by an enemy soldier", "Person X has no means with which to make it back", "The driver in front of PersonX is blocking his way", "PersonX is lost."], "input": {"head": "PersonX makes it back", "relation": "HinderedBy", "prompt": "PersonX makes it back. This would not happen if"}}
{"generation": ["the date was not in the database"], "references": ["PersonX doesn't know anyone single", "No one likes PersonX's tinder profile", "PersonX has no prospect dates.", "PersonX can't find anybody he wants to date.", "PersonX is afraid to talk to people.", "PersonX is extremely ugly."], "input": {"head": "PersonX finds a date", "relation": "HinderedBy", "prompt": "PersonX finds a date. This would not happen if"}}
{"generation": ["the person was a woman"], "references": ["PersonX's car's heater isn't working.", "PersonX has to go to a meeting.", "PersonX has no place to go.", "PersonXs' jacket was stolen.", "PersonX's mom is washing their coat.", "PersonX had their power die, and have no heat.", "PersonX is locked outside their house in the winter."], "input": {"head": "PersonX gets warm", "relation": "HinderedBy", "prompt": "PersonX gets warm. This would not happen if"}}
{"generation": ["the book was a real book"], "references": ["PersonX has two sprained wrists.", "PersonX is being dragged out of there by Joe", "The book weighs a ton.", "PersonX is being restrained by the bouncer", "PersonX lost their arms in an accident.", "The book has a value of a million dollars.", "Person X's parents took the book", "The book is too heavy.", "The book has a sentimental value."], "input": {"head": "PersonX throws the book", "relation": "HinderedBy", "prompt": "PersonX throws the book. This would not happen if"}}
{"generation": ["the job was not a job"], "references": ["there are no jobs available", "they have no experience", "Person isn\u9225\u6a9b able to work due to mental issues.", "PersonY requires different skills", "They plant manager isn't hiring", "No one is hiring.", "PersonX does not have the right skills.", "Person is incapable of having an interview."], "input": {"head": "PersonX lands a job", "relation": "HinderedBy", "prompt": "PersonX lands a job. This would not happen if"}}
{"generation": ["PersonX was a man"], "references": ["Personx is too ugly to impress.", "PersonY's girlfriend is madly in love with PersonY.", "PersonY's girlfriend is too much in love with PersonY.", "PersonX is extremely unlikeable.", "Persony's girlfriend hates personx", "PersonY's girlfriend is not attracted to PersonX."], "input": {"head": "PersonX gets PersonY's girlfriend", "relation": "HinderedBy", "prompt": "PersonX gets PersonY's girlfriend. This would not happen if"}}
{"generation": ["the user was not a member of the group"], "references": ["PersonX does not want to have to wash their clothes afterwards.", "The toilet is broken.", "PersonX cannot fit down a toilet hole.", "PersonX is a toddler and his parents will not allow him to go down the toilet.", "PersonX's friend is watching and will not let him.", "The toilet is too small.", "PersonX psychiatrist told him he is not thin enough.", "PersonX is too large to fit down the toilet."], "input": {"head": "PersonX goes down the toilet", "relation": "HinderedBy", "prompt": "PersonX goes down the toilet. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["personX has no finances", "personX is in debt and has bad credit", "PersonX doesn't have enough money.", "PersonX doesn't have a job.", "PersonY was already gifted the one.", "PersonX has no savings."], "input": {"head": "PersonX buys PersonY's one", "relation": "HinderedBy", "prompt": "PersonX buys PersonY's one. This would not happen if"}}
{"generation": ["the couch was not a couch"], "references": ["It is against the house rules", "PersonX's friends are loud and keep her up.", "PersonX is too long for the couch and doesn\u9225\u6a9b fit", "the children are playing", "PersonX's mother will not let him sleep.", "The couch is too hard", "The cushions have just been steam cleaned", "The couch is uncomfortable", "PersonX can't relax", "The dog is taking up all the room"], "input": {"head": "PersonX falls asleep on the couch", "relation": "HinderedBy", "prompt": "PersonX falls asleep on the couch. This would not happen if"}}
{"generation": ["the player was a normal NPC"], "references": ["PersonX is sick and unable to work.", "PersonX's kids take all their time.", "PersonX cannot get hired by anyone.", "PersonX has no transportation.", "PersonX works twelve hour shifts.", "PersonX broke their leg."], "input": {"head": "PersonX does odd jobs", "relation": "HinderedBy", "prompt": "PersonX does odd jobs. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PersonX is grounded from going out by their parents", "PersonY has left the country", "PersonY is in the hospital in intensive care.", "PersonY is an expert diplomat who always smooths over the conflict.", "PersonY's phone and Internet have been disconnected and PersonX can't reach them.", "PersonX is not able to locate PersonY."], "input": {"head": "PersonX brings PersonY into conflict", "relation": "HinderedBy", "prompt": "PersonX brings PersonY into conflict. This would not happen if"}}
{"generation": ["the user was not watching tv"], "references": ["PersonX is at work for a few more hours.", "PersonX had their cable turned off.", "They don't own a TV.", "The TV is broken.", "The cable company discontinued his service", "Their eyes hurt.", "PersonX has to work late.", "The neighbor is blasting his radio"], "input": {"head": "PersonX is watching tv", "relation": "HinderedBy", "prompt": "PersonX is watching tv. This would not happen if"}}
{"generation": ["PersonX had a different name"], "references": ["PersonX's glasses are tied with a string to his face.", "PersonY has ran away.", "PersonX lost their glasses.", "PersonX can't see without glasses.", "PersonX is blind.", "PersonY has hidden the glasses.", "PersonX can't pay for their glasses.", "PersonY has a neck chain for the eyeglasses."], "input": {"head": "PersonX takes PersonX's glasses", "relation": "HinderedBy", "prompt": "PersonX takes PersonX's glasses. This would not happen if"}}
{"generation": ["you were a man"], "references": ["They just bathed", "PersonXs  wife pours liquid soap on him", "PersonX just took a shower.", "They are indoors", "PersonXs friend sprays perfume on him", "PersonX put on cologne."], "input": {"head": "PersonX smells terrible", "relation": "HinderedBy", "prompt": "PersonX smells terrible. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["PersonY is in a different state.", "PersonX works in a different building.", "PersonY is holding their coffee so it cannot spill.", "PersonX cannot reach personY's coffee.", "PersonX doesn't want to be slapped by PersonY.", "PersonX can't afford to replace PersonY's coffee."], "input": {"head": "PersonX spills PersonY's coffee", "relation": "HinderedBy", "prompt": "PersonX spills PersonY's coffee. This would not happen if"}}
{"generation": ["PersonX was a person, but if PersonX"], "references": ["PersonX doesn't have their contacts in", "PersonX is unsure how to do so", "PersonY is stronger", "PersonY doesn't trust PersonX.", "PersonX doesn't know where to go.", "Its too dark for them to see"], "input": {"head": "PersonX directs PersonY's steps", "relation": "HinderedBy", "prompt": "PersonX directs PersonY's steps. This would not happen if"}}
{"generation": ["PersonX was a real person"], "references": ["PersonY told PersonX their parents would do the opposite if begged.", "PersonY told PersonX not to beg their parents.", "X left his phone at home.", "PersonX is too embarrassed to beg PersonY's parents.", "PersonX can't get in touch with the parents.", "PersonY's parents are out of town.", "Y's parent's won't let X talk to them.", "PersonX is too proud."], "input": {"head": "PersonX begs PersonY's parents", "relation": "HinderedBy", "prompt": "PersonX begs PersonY's parents. This would not happen if"}}
{"generation": ["he was not a good person"], "references": ["PersonX has personal obligations.", "PersonX has to travel.", "Person X is disabled.", "PersonX's employer is closed.", "PersonX cannot find a job.", "PersonX has a lazy mindset.", "Person X can't find a job.", "PersonX's internet is down.", "PersonX has a disability and cannot work.", "PersonX is exhausted and can't stay awake."], "input": {"head": "PersonX works tirelessly", "relation": "HinderedBy", "prompt": "PersonX works tirelessly. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX schedule is too hectic.", "PersonX dropped out of school.", "PersonX doesn't have any financial aid left available.", "PersonX was fired from their job."], "input": {"head": "PersonX pursues PersonX's course", "relation": "HinderedBy", "prompt": "PersonX pursues PersonX's course. This would not happen if"}}
{"generation": ["the doctor was a man"], "references": ["The doctor is not answering the phone.", "The doctor is out of the office.", "The patient hasn't given permission for PersonX to hear about their medical history.", "The doctor was not in the office that day.", "PersonX's kid broke the phone", "Person X was unable to get an appointment.", "The doctor is out of town.", "The doctor is out of town for a month"], "input": {"head": "PersonX asks the doctor", "relation": "HinderedBy", "prompt": "PersonX asks the doctor. This would not happen if"}}
{"generation": ["PersonX was a bad product"], "references": ["PersonX's boss is too degrading to allow him to focus.", "The sales have been going down in general.", "PersonX's coworkers will not help him.", "personX has no skills in sale", "personX is not employed in sales any longer", "PersonX needs to get their own sales.", "PersonX lacks initiative.", "There are not enough consumers.", "PersonX is unmotivated."], "input": {"head": "PersonX improves PersonX's sales", "relation": "HinderedBy", "prompt": "PersonX improves PersonX's sales. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX has no camera.", "PersonX can't find PersonY.", "PersonY will not pose for a picture.", "PersonX and PersonY are mad at each other", "PersonX does not have a camera.", "PersonX can't find PersonY"], "input": {"head": "PersonX gets PersonY's picture taken", "relation": "HinderedBy", "prompt": "PersonX gets PersonY's picture taken. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX dislikes PersonY very much.", "PersonY is not even fazed by the loss", "they didn't know who they were really", "they did bad things before they died", "PersonY's loss isn't very sad.", "PersonY is not acquainted with PersonX"], "input": {"head": "PersonX mourns PersonY's loss", "relation": "HinderedBy", "prompt": "PersonX mourns PersonY's loss. This would not happen if"}}
{"generation": ["PersonX was a robot"], "references": ["Person Y has closed their eyes.", "The room is filled with smoke.", "PersonY is staring at someone else.", "PersonY won't look in PersonX's direction.", "Person Y is too far away.", "PersonX is facing the opposite direction of PersonY.", "PersonY is asleep."], "input": {"head": "PersonX makes eye contact with PersonY", "relation": "HinderedBy", "prompt": "PersonX makes eye contact with PersonY. This would not happen if"}}
{"generation": ["the game was a commercial success"], "references": ["PersonX's friends and family are busy and not available for talking.", "They don't know the full story.", "PersonX has lost his voice", "They're too afraid to say anything", "PersonX's boss has forbidden PersonX from telling anyone the news.", "Nobody is listening to PersonX"], "input": {"head": "PersonX breaks the news", "relation": "HinderedBy", "prompt": "PersonX breaks the news. This would not happen if"}}
{"generation": ["PersonX was not in the car"], "references": ["Does not have permission", "PersonX doesn't know how to drive stick shift", "Does not have the keys", "PersonX doesn't know where the car is", "PersonX doesn't know how to drive", "PErsonX doesn't have PersonY's car keys."], "input": {"head": "PersonX moves PersonY's car", "relation": "HinderedBy", "prompt": "PersonX moves PersonY's car. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX doesn't have a map to tell them the way", "PersonY will not follow PersonX.", "PersonX is not the one in charge.", "PersonX's GPS is broken", "PersonY keeps following someone else.", "PersonX cannot find PersonY."], "input": {"head": "PersonX leads PersonY back", "relation": "HinderedBy", "prompt": "PersonX leads PersonY back. This would not happen if"}}
{"generation": ["he had a lot of money"], "references": ["PersonY died and left PersonX all their money", "PersonX's mom keeps giving a large allowance", "PersonX is in the practice of saving money.", "PersonX is too good at making money."], "input": {"head": "PersonX does not have a lot of money", "relation": "HinderedBy", "prompt": "PersonX does not have a lot of money. This would not happen if"}}
{"generation": ["the user had to manually enter the password"], "references": ["PersonX is sick and can't get to work", "PersonX doesn't have the skills to do the job.", "PersonX is sad.", "PersonY makes PersonX work crappy jobs.", "PersonX got fired and has no job.", "PersonX has a health condition.", "PersonY fires PersonX.", "PersonX has no transportation to get to work"], "input": {"head": "PersonX works great", "relation": "HinderedBy", "prompt": "PersonX works great. This would not happen if"}}
{"generation": ["the game was not a success"], "references": ["PersonX is a trust fund baby.", "PersonX was born into a wealthy family.", "PersonX has a trust fund.", "PersonX was born rich.", "PersonX won the lottery.", "PersonX just won the lottery.", "PersonX married a rich lady.", "PersonX is filthy rich."], "input": {"head": "PersonX is in dire need of money", "relation": "HinderedBy", "prompt": "PersonX is in dire need of money. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX doesn\u9225\u6a9b have an attorney.", "PersonX cannot afford a lawyer", "The statute of limitations for the crime in question has run out.", "Person X has no proof of Person Y's guilt", "PersonY fled the country", "PersonY is too powerful.", "PersonX doesn\u9225\u6a9b have enough money to file a case."], "input": {"head": "PersonX brings PersonY to trial", "relation": "HinderedBy", "prompt": "PersonX brings PersonY to trial. This would not happen if"}}
{"generation": ["the game was a game of skill"], "references": ["PersonX has no money for lessons.", "Person X has too many things to do", "PersonX's mother told him that dance is a waste of time.", "Person X has a bad hip", "Theres no spots left in the class", "Dance class requires shoes PersonX can't afford.", "PersonX's parents will not pay for it.", "PersonX's dance teacher kicked him out of class.", "They can't afford the class fee."], "input": {"head": "PersonX takes dance", "relation": "HinderedBy", "prompt": "PersonX takes dance. This would not happen if"}}
{"generation": ["the baby was a boy"], "references": ["PersonX does not have a stable life to provide for a child.", "PersonX can't get pregnant.", "PersonX's partner has demanded a boy.", "PersonX has fertility issues.", "PersonX is having a boy.", "X has passed menapause.", "X is infertile.", "PersonX has had their tubes tied by a doctor."], "input": {"head": "PersonX has a baby girl", "relation": "HinderedBy", "prompt": "PersonX has a baby girl. This would not happen if"}}
{"generation": ["the player had not been given the option to leave"], "references": ["PersonX's car broke down.", "PersonX's plane is delayed.", "The road ahead is closed by a rockfall.", "The airport has been closed for bad weather.", "PersonX is stuck at work working on a project.", "PersonX is stuck in traffic."], "input": {"head": "PersonX arrives shortly", "relation": "HinderedBy", "prompt": "PersonX arrives shortly. This would not happen if"}}
{"generation": ["PersonX was not a brother"], "references": ["PersonX's brother won't answer the phone.", "PersonX lost his phone and can't call.", "PersonX doesn't speak the language of the brother.", "PersonX is painfully shy.", "PersonX has no money to go out.", "PersonX is busy."], "input": {"head": "PersonX asks PersonX's brother", "relation": "HinderedBy", "prompt": "PersonX asks PersonX's brother. This would not happen if"}}
{"generation": ["the person was not a man"], "references": ["PersonX skipped going to the gym", "PersonX is weak", "PersonY administered anti-inflammatory meds to PersonX.", "PersonX wasn't stung or bitten by anything.", "PersonX isn't allergic.", "PersonY is applying compression to PersonX."], "input": {"head": "PersonX starts to swell", "relation": "HinderedBy", "prompt": "PersonX starts to swell. This would not happen if"}}
{"generation": ["the game was a simple, linear, and linear"], "references": ["PersonX can't see past the fake person.", "PersonX is too scarred to speak up.", "PersonX is a sucker.", "PersonX is promised the incident will never happen again.", "PersonX cannot afford to quit their job now.", "PersonX needs the money."], "input": {"head": "PersonX decides enough was enough", "relation": "HinderedBy", "prompt": "PersonX decides enough was enough. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same object"], "references": ["PersonX was raised to believe certain things.", "PersonX doesn't understand their view", "PersonX feels personally offended by PersonY.", "PersonX is very close minded.", "PersonX's religious beliefs conflict with PersonY's view", "PersonX needs the view explained better to them"], "input": {"head": "PersonX takes PersonY view", "relation": "HinderedBy", "prompt": "PersonX takes PersonY view. This would not happen if"}}
{"generation": ["he was a normal person"], "references": ["Police keep driving by with their sirens blaring", "Their husband keeps snoring.", "Their kids are playing music too loud.", "PersonX took too much cocaine.", "their mother won't let them.", "The cat is already in it.", "PersonX has insomnia.", "The coyotes are howling too loud.", "PersonX drank too much coffee", "PersonX has a toothache", "PersonX is in pain"], "input": {"head": "PersonX falls asleep at night", "relation": "HinderedBy", "prompt": "PersonX falls asleep at night. This would not happen if"}}
{"generation": ["they were not friends"], "references": ["PersonX's partner is stuck in another city.", "PersonX does not have friends.", "PersonX is too sleepy for company.", "PersonXs wife can't take off work."], "input": {"head": "PersonX enjoys each other 's company", "relation": "HinderedBy", "prompt": "PersonX enjoys each other 's company. This would not happen if"}}
{"generation": ["the game was not a success"], "references": ["PersonX is 90 years old.", "PersonX has scars all of PersonX's body.", "PersonX has a serious injury.", "PersonX can't afford to go to the doctor.", "PersonX is tired."], "input": {"head": "PersonX is as good as new", "relation": "HinderedBy", "prompt": "PersonX is as good as new. This would not happen if"}}
{"generation": ["the game was a traditional RPG"], "references": ["PersonX has no hammer.", "PersonX doesn't want to have to pay for the mold.", "PersonX's friend refused to help him", "PersonX doesn't own the mold.", "PersonX is too ordinary.", "Person X is shy.", "PersonX's ideas were all already implemented by Sam", "Person X has no money.", "PersonX is being held down by the man"], "input": {"head": "PersonX breaks the mold", "relation": "HinderedBy", "prompt": "PersonX breaks the mold. This would not happen if"}}
{"generation": ["the user had not been given the option to wait"], "references": ["PersonX is on anxiety medication.", "PersonX is waiting on the doctor.", "PersonX was trained by monks", "PersonX was given everything in the world by his mom", "PersonX is naturally very calm.", "PersonX is meditating.", "PersonX is a monk.", "PersonX meditates due to Sally making him each morning", "PersonX is having a baby at the hospital."], "input": {"head": "PersonX becomes impatient", "relation": "HinderedBy", "prompt": "PersonX becomes impatient. This would not happen if"}}
{"generation": ["the movie was a real movie"], "references": ["PersonX has to finish their homework.", "the electric went off", "PersonX lost power and the movie was taken off Netflix.", "PersonX's child needs the computer to do their schoolwork.", "PersonX doesn't have enough time", "someone kept screaming during the movie", "PersonX's wife forgot to pay the Netflix bill.", "PersonX found out the movie is broken"], "input": {"head": "PersonX finishes the movie", "relation": "HinderedBy", "prompt": "PersonX finishes the movie. This would not happen if"}}
{"generation": ["the music was not playing"], "references": ["PersonX broke the tuning knob on the stereo", "PersonX is in their parents car, and the parents control the radio.", "PersonX's friend is controlling the radio.", "PersonX's parent grounded PersonX from listening to music.", "PersonX's child broke the radio."], "input": {"head": "PersonX turns the music", "relation": "HinderedBy", "prompt": "PersonX turns the music. This would not happen if"}}
{"generation": ["the user had a different name"], "references": ["PersonX was raised to be nervous in these situations by his mom", "PersonX is being laughed at by Joe", "PersonX noticed that Scott is watching him pee", "personX struggles to stay confident in social situations", "PersonX didn't prepare properly.", "PersonX doesn't know the rules.", "PersonX made a mistake.", "personX has bad social skills and makes mistakes", "PersonX isn't very organized."], "input": {"head": "PersonX goes perfectly", "relation": "HinderedBy", "prompt": "PersonX goes perfectly. This would not happen if"}}
{"generation": ["they were not friends"], "references": ["PersonX's parents won't let them hang out with other kids.", "The other person does not want to be best friends.", "The other person moved away", "The other person does not like them", "The kids at school don't want to be PersonX's friend.", "The other person already has a best friend."], "input": {"head": "PersonX is now best friends", "relation": "HinderedBy", "prompt": "PersonX is now best friends. This would not happen if"}}
{"generation": ["the game was a \"real\" game"], "references": ["PersonX messes up everything", "PersonX doesn't have the skills to do it right.", "Their friend keeps telling them they're wrong.", "PersonX doesn't have the experience to know how to do it.", "The teacher won't help them study.", "PersonX doesn't have the instruction manual nearby.", "PersonX is unsure of the method", "PersonX makes too many mistakes", "The boss keeps changing the rules.", "PersonX is always wrong"], "input": {"head": "PersonX gets it right", "relation": "HinderedBy", "prompt": "PersonX gets it right. This would not happen if"}}
{"generation": ["the cat was a human"], "references": ["The pigeons will fly off.", "The pigeons will peck the cat.", "The cat will chase the pigeons off.", "The cat ate all the pigeons and there are no more.", "The pigeons fly off.", "The cat ran away and can't be found.", "The cat scratched them."], "input": {"head": "PersonX puts the cat among the pigeons", "relation": "HinderedBy", "prompt": "PersonX puts the cat among the pigeons. This would not happen if"}}
{"generation": ["the user had a time-based job"], "references": ["They hurt their back an cannot sit.", "Their taxi arrived late.", "Their garage door wont open to get the car out.", "PersonX depends on public transportation and sometimes it runs late.", "PersonX's carpool partner drives too slow.", "Person X has no money."], "input": {"head": "PersonX gets to work on time", "relation": "HinderedBy", "prompt": "PersonX gets to work on time. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PersonY is surrounded by friends.", "PersonX is a registered sex offender and can't be alone with PersonY", "Person Y does not like Person X.", "Person X is shy.", "PersonY avoids being alone with PersonX", "PersonY is scared of PersonX."], "input": {"head": "PersonX sees PersonY alone", "relation": "HinderedBy", "prompt": "PersonX sees PersonY alone. This would not happen if"}}
{"generation": ["the person was a man"], "references": ["PersonX's family are strict about gender norms.", "PersonX has too many manly features.", "PersonX's doctor refuses to prescribe them estrogen.", "PersonX is too masculine.", "PersonX has short hair and it will not grow.", "PersonX is not allowed to be transgender.", "PersonX cannot afford reproductive surgery.", "PersonX is a big, burly man.", "PersonX is very masculine.", "PersonX's religious leader requires them to have facial hair."], "input": {"head": "PersonX looks like a woman", "relation": "HinderedBy", "prompt": "PersonX looks like a woman. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PersonX doesn't have the necessary tools to come up with an estimate.", "PersonX lacks the skills to provide the estimate.", "Person Y won't talk to Person X.", "Person Y got an estimate from someone else."], "input": {"head": "PersonX provides PersonY estimate", "relation": "HinderedBy", "prompt": "PersonX provides PersonY estimate. This would not happen if"}}
{"generation": ["the person was a woman"], "references": ["PersonX has been called into work by his boss", "PersonX has to study for an exam tomorrow.", "PersonX is being told by his girlfriend that they have to stay up", "The baby is still up and crying.", "The neighbors are having a loud party.", "PersonX's bed is occupied by a large man", "PersonX has to work late", "PersonX is on the phone with a client.", "PersonX has to study for a big test", "PersonX has to work on their book report."], "input": {"head": "PersonX goes to bed early", "relation": "HinderedBy", "prompt": "PersonX goes to bed early. This would not happen if"}}
{"generation": ["the rainbows were not there"], "references": ["PersonX is blind and can't see rainbows.", "Others have dashed PersonX's dreams and hopes.", "It is dark out.", "The sky is completely sunny.", "PersonX is bed ridden for ever."], "input": {"head": "PersonX chases rainbows", "relation": "HinderedBy", "prompt": "PersonX chases rainbows. This would not happen if"}}
{"generation": ["the actor was not a player"], "references": ["PersonX can never remember their lines", "PersonX's mom will not take them to acting class.", "Person X doesn't remember lines that well.", "PersonX does not have an agent.", "The casting director will not hire PersonX.", "PersonX has terrible stagefright", "Person X can't read the lines, Person  X  is illiterate.", "PersonX is not good at acting."], "input": {"head": "PersonX becomes an actor", "relation": "HinderedBy", "prompt": "PersonX becomes an actor. This would not happen if"}}
{"generation": ["PersonX was not a member of the Mafia"], "references": ["PersonX doesn't have a way to commit the act", "PersonX can't get inside PersonY's home"], "input": {"head": "PersonX is found dead morning at PersonY's home in", "relation": "HinderedBy", "prompt": "PersonX is found dead morning at PersonY's home in. This would not happen if"}}
{"generation": ["PersonX was a member of the group"], "references": ["Person x bit their tongue and now it is too painful to hollar", "Person X has food in their mouth", "PersonY was too far away.", "Person x forgot the other person's name", "PersonX lost voice.", "Person x has strep throat and has lost their voice", "Person x doesn't want to be loud and wake the baby", "Person X lost their voice"], "input": {"head": "PersonX calls out PersonY's name", "relation": "HinderedBy", "prompt": "PersonX calls out PersonY's name. This would not happen if"}}
{"generation": ["the tree was not a tree"], "references": ["The tree is a toy smaller than PersonX.", "it will hurt", "PersonX cannot climb the tree.", "PersonX is wearing a protective rig.", "PersonX needs help walking.", "they don't want injuries"], "input": {"head": "PersonX falls from the tree", "relation": "HinderedBy", "prompt": "PersonX falls from the tree. This would not happen if"}}
{"generation": ["the user had to manually add the ingredients to the"], "references": ["PersonX doesn't have money to buy ingredients.", "The blender no longer works.", "They have no blender.", "PersonX's friend broke PersonX's blender.", "PersonX's daughter ate all of their fruit.", "PersonX has no ingredients to make a smoothie.", "They have no fruit.", "PersonX doesn't have a blender."], "input": {"head": "PersonX makes smoothies", "relation": "HinderedBy", "prompt": "PersonX makes smoothies. This would not happen if"}}
{"generation": ["the game was a success"], "references": ["PersonX has to go to work.", "PersonX's wife is making him go.", "PersonX has an obligation to go to a meeting.", "PersonX's dad will kill him if he is late.", "PersonX's was gifted a car by his boss that is too fast."], "input": {"head": "PersonX never got around", "relation": "HinderedBy", "prompt": "PersonX never got around. This would not happen if"}}
{"generation": ["PersonX was a man"], "references": ["PersonY is wearing protective eye gear.", "Person X does not know what to say to Person Y.", "PersonY told PersonX to stop.", "Person Y does not listen to person X.", "PersonX is tied up.", "PersonY is determined to watch to the end."], "input": {"head": "PersonX tears PersonY's eyes away", "relation": "HinderedBy", "prompt": "PersonX tears PersonY's eyes away. This would not happen if"}}
{"generation": ["PersonX was a man and PersonY was a"], "references": ["PersonX has no money.", "PersonY doesn't like dogs", "PersonX doesn't have any money", "PersonY is allergic to dogs.", "PersonY does not have time to care for a pet.", "PersonY is not okay with this."], "input": {"head": "PersonX buys PersonY a dog", "relation": "HinderedBy", "prompt": "PersonX buys PersonY a dog. This would not happen if"}}
{"generation": ["he was not a coward"], "references": ["PersonX is a very depressed person.", "PersonX has anxiety.", "The area kids keep setting off fireworks late at night", "PersonX's date took them to watch a horror film"], "input": {"head": "PersonX is n't scared anymore", "relation": "HinderedBy", "prompt": "PersonX is n't scared anymore. This would not happen if"}}
{"generation": ["the pizza was not a pizza"], "references": ["PersonX has no money to buy pizza", "PersonX has a food allergy.", "It's too hot.", "PersonX's friend ate all the pizza", "PersonX has no pizza available", "The employee won't giver PersonX pizza if he doesn't have money", "It isn't done yet.", "The pizza belongs to someone else.", "PersonX has no teeth", "PersonX is allergic to cheese"], "input": {"head": "PersonX eats the pizza", "relation": "HinderedBy", "prompt": "PersonX eats the pizza. This would not happen if"}}
{"generation": ["PersonX was a real person"], "references": ["it actually wasnt broken afterall", "They are afraid they will be mad.", "person Y doesnt speak english", "PersonY is out of town", "They don't have a phone", "PersonX is afraid of hurting PersonY"], "input": {"head": "PersonX tells PersonY it was broken", "relation": "HinderedBy", "prompt": "PersonX tells PersonY it was broken. This would not happen if"}}
{"generation": ["the user had not been given the option to do"], "references": ["PersonX's spouse is still getting ready.", "PersonX slept in too late and can't get ready on time", "PersonX is extremely disorganized", "PersonX is running late.", "PersonX isnt even dressed yet", "PersonX can't find their keys"], "input": {"head": "PersonX is ready to go", "relation": "HinderedBy", "prompt": "PersonX is ready to go. This would not happen if"}}
{"generation": ["the band was a single entity"], "references": ["PersonX's landlord said no bands allowed.", "PersonX has no friends", "They cant decide what genre of music they'll player", "They can't find any members", "PersonX's friends won't join them.", "PersonX doesn't know any musicians to form a band with.", "PersonX has no musical skill", "PersonX doesn't play a musical instrument."], "input": {"head": "PersonX forms a band", "relation": "HinderedBy", "prompt": "PersonX forms a band. This would not happen if"}}
{"generation": ["the person was a man"], "references": ["They don't have enough money for lunch.", "They are running late for work.", "PersonX can't find a place.", "PersonX's wife packed him a lunch.", "PersonX can't afford to stop for lunch.", "PersonX is busy at work."], "input": {"head": "PersonX stops for lunch", "relation": "HinderedBy", "prompt": "PersonX stops for lunch. This would not happen if"}}
{"generation": ["the game was a single player game"], "references": ["PersonX is being ignored", "PersonX has two broken arms.", "PersonX cannot find something to say", "They are too scared", "PersonX's victim walked away.", "The other person doesn't want to fight"], "input": {"head": "PersonX picks a fight", "relation": "HinderedBy", "prompt": "PersonX picks a fight. This would not happen if"}}
{"generation": ["PersonX was a different color"], "references": ["PersonY isn't around", "PersonX is 100 miles away from PersonY.", "The device is too big for PersonY.", "PersonY isn't laying down", "PersonX is having an operation.", "PersonY's back is too small."], "input": {"head": "PersonX lands on PersonY's back", "relation": "HinderedBy", "prompt": "PersonX lands on PersonY's back. This would not happen if"}}
{"generation": ["PersonX was a subclass of Person"], "references": ["PersonX has to pay bills instead.", "PersonX doesn't have enough money.", "PersonX's boss fired him, so he has no money to do so.", "There are no new ones available", "PersonX needs more money first", "PersonX cannot afford to replace it", "PersonX's friend will not let him replace it.", "PersonX knows it still works fine"], "input": {"head": "PersonX replaces PersonX's old one", "relation": "HinderedBy", "prompt": "PersonX replaces PersonX's old one. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same object"], "references": ["PersonX is afraid of being a parent", "PersonX has no children.", "PersonX is sterile", "PersonY is in a coma.", "PersonY does not want to have anything to do with PersonX"], "input": {"head": "PersonX gives PersonY children", "relation": "HinderedBy", "prompt": "PersonX gives PersonY children. This would not happen if"}}
{"generation": ["PersonX had not been using the phone"], "references": ["Their parents took their phone when they grounded them.", "The teacher confiscated their phone.", "PersonX's brother keeps personX's phone in a lock box.", "PersonX needs their phone since they're expecting an important call.", "PersonX's mom keeps his phone with her.", "PersonX doesn't want to have to search for their phone."], "input": {"head": "PersonX has lost PersonX's phone", "relation": "HinderedBy", "prompt": "PersonX has lost PersonX's phone. This would not happen if"}}
{"generation": ["PersonX was a robot"], "references": ["PersonX was born without arms.", "PersonX is unable to get a glass from the bartender", "PersonX cannot find PersonY", "PersonX broke their hand last week", "PersonX doesn't know where PersonY keeps the glasses", "PersonY is in another country."], "input": {"head": "PersonX hands PersonY a glass", "relation": "HinderedBy", "prompt": "PersonX hands PersonY a glass. This would not happen if"}}
{"generation": ["the game was a success"], "references": ["PersonX is over half way there.", "PersonX is already almost finished.", "PersonX only has a few minutes left in the race.", "PersonX is only a few feet from the finish line of the race.", "PersonX only has few minutes left before PersonX's retirement speech."], "input": {"head": "PersonX has a long way to go", "relation": "HinderedBy", "prompt": "PersonX has a long way to go. This would not happen if"}}
{"generation": ["the buyer was a person"], "references": ["Their mom wouldn't give them money.", "PERSON X  HAS NO MONEY", "The dog ate the money.", "PersonX has no money.", "The bank will not accept their paycheck.", "The boss hasn't paid them yet.", "PersonX needs to wait for payday.", "PersonX has not received the weekly check yet.", "PERSON X IS SUPER FRUGAL"], "input": {"head": "PersonX buys some things", "relation": "HinderedBy", "prompt": "PersonX buys some things. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["Person Y stays out at all hours of the night", "PersonY's work is bad.", "It is not PersonX's passion.", "Person Y gets hit on all the time"], "input": {"head": "PersonX loves PersonY's work", "relation": "HinderedBy", "prompt": "PersonX loves PersonY's work. This would not happen if"}}
{"generation": ["he was a normal person"], "references": ["PersonY pushed PersonX's chair against the wall", "PersonX recently injured their back and leaning would hurt.", "PersonX has a stiff back", "PersonX is sitting on the edge of a cliff", "The chair does not have a back", "PersonY push the other chair up against PersonX", "Another person is sitting behind PersonX.", "Therer is a wall right behind PersonX.", "They are standing in a line, and leaning back would hit someone."], "input": {"head": "PersonX leans back", "relation": "HinderedBy", "prompt": "PersonX leans back. This would not happen if"}}
{"generation": ["the game was a single player game"], "references": ["PersonX hasn't gotten dressed yet.", "Person X is nursing an injury, and has to take it slow.", "PersonX tripped on their shoelaces.", "The neighbors are standing in front of the blocks so PersonX can't push through.", "Person X loses their footing, and stumbles.", "PersonX is hampered by an injury.", "PersonX isn't using blocks to start the race.", "PersonY stacked the blocks too high.", "PersonY is holding the blocks up."], "input": {"head": "PersonX storms out of the blocks", "relation": "HinderedBy", "prompt": "PersonX storms out of the blocks. This would not happen if"}}
{"generation": ["the player had a male character"], "references": ["PersonX suffers from social anxiety.", "There are no resturants in their town", "The resturant won't hire PersonX.", "The governor shut PersonX's resturant down.", "The restaurant won't hire PersonX.", "PersonX is too young", "They cannot work the carzy hours", "PersonX is a full time student"], "input": {"head": "PersonX works as a waitress", "relation": "HinderedBy", "prompt": "PersonX works as a waitress. This would not happen if"}}
{"generation": ["the player had not been killed"], "references": ["PersonX broke an ankle.", "PersonX is on bedrest.", "PersonX does not have running shoes.", "PersonX is too tired.", "PersonX's doctor forbids it", "PersonX is out of shape"], "input": {"head": "PersonX starts running again", "relation": "HinderedBy", "prompt": "PersonX starts running again. This would not happen if"}}
{"generation": ["PersonX was not in the scene"], "references": ["PersonY hates PersonX.", "PersonY asked for space from PersonX", "PersonX is in a different state than PersonY.", "PersonY refuses to talk or see PersonX.", "PersonY is too heavy.", "PersonY didn't show up to work today.", "PersonX is too far away from PersonY.", "PersonX is making dinner."], "input": {"head": "PersonX pulls PersonY close", "relation": "HinderedBy", "prompt": "PersonX pulls PersonY close. This would not happen if"}}
{"generation": ["the bill was paid by the person who was the"], "references": ["PersonX lost their checkbook somewhere", "PersonX has no money.", "Person X's bill is not due yet.", "Person X cannot find the bill.", "PersonX ran out of checks.", "PersonX is on hold"], "input": {"head": "PersonX pays the bill", "relation": "HinderedBy", "prompt": "PersonX pays the bill. This would not happen if"}}
{"generation": ["the music was not there"], "references": ["PersonX is working overtime.", "PersonX doesn't know how to write music", "Someone stole PersonX's guitar.", "PersonX doesn't know how to write music.", "PersonX has no sheet music", "PersonX can never remember the notes on the scale."], "input": {"head": "PersonX writes music", "relation": "HinderedBy", "prompt": "PersonX writes music. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX's grandmother has passed away.", "PersonX does not want to hurt PersonX's grandmother's feelings.", "PersonX's grandmother is on vacation.", "PersonX's  grandmother doesn't have a telephone.", "PersonX's grandmother stays far away in a nursing home.", "PersonX's grandmother does not remember anything because of Alzheimer's disease.", "PersonX's grandmother doesn't have a phone.", "PersonX's grandmother has dementia."], "input": {"head": "PersonX asks PersonX's grandmother", "relation": "HinderedBy", "prompt": "PersonX asks PersonX's grandmother. This would not happen if"}}
{"generation": ["the child was not a child"], "references": ["Person X is paralyzed", "PersonX has carpal tunnel.", "PersonX has no hands", "PersonX's dad did not let him learn.", "PersonX has a bad memory", "Person X has no yarn.", "Person X is broke.", "Person X has a phobia of needles.", "PersonX's mom never taught him.", "PersonX is needlephobic."], "input": {"head": "PersonX learns to knit", "relation": "HinderedBy", "prompt": "PersonX learns to knit. This would not happen if"}}
{"generation": ["PersonX was not a member of the Mafia"], "references": ["PersonX cannot find a knife.", "PersonX doesn't have a knife", "PersonX is wearing a straight jacket", "The cops put PersonX in handcuffs", "PersonX is in handcuffs.", "The doctors put PersonX in a straight Jacket", "PersonX is in a padded cell.", "PersonX is handcuffed."], "input": {"head": "PersonX cuts PersonX's throat", "relation": "HinderedBy", "prompt": "PersonX cuts PersonX's throat. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX doesn't have any spare money to give their son.", "PersonX is too far away to be of help.", "PersonX does not know how to help.", "PersonX's son won't accept help."], "input": {"head": "PersonX helps PersonX's son", "relation": "HinderedBy", "prompt": "PersonX helps PersonX's son. This would not happen if"}}
{"generation": ["PersonX was a random person"], "references": ["PersonX isn't trained well enough to train someone else.", "PersonY is transferring to another office", "PersonY isn't interested in training.", "PersonY does not have enough money.", "PersonX isn't advanced enough to teach PersonY", "PersonX does not have time for PersonY."], "input": {"head": "PersonX gives PersonY training", "relation": "HinderedBy", "prompt": "PersonX gives PersonY training. This would not happen if"}}
{"generation": ["he had not been in the dream"], "references": ["PersonY kept PersonX up very late", "PersonX is too tired.", "PersonX took too much sleeping medication.", "PersonX is depressed.", "PersonY shut off the alarm clock"], "input": {"head": "PersonX wakes up the next morning", "relation": "HinderedBy", "prompt": "PersonX wakes up the next morning. This would not happen if"}}
{"generation": ["he was a normal person"], "references": ["Person X ripped their tent.", "It's too cold this time of year.", "PersonX can't find the tent.", "PersonX's boss is making him work.", "PersonX couldn't take time off.", "PersonX has to work.", "PersonX's wife will not let him go.", "There is a rainstorm so PersonX can't camp.", "A park officer told personX to stay out of the woods."], "input": {"head": "PersonX is camping in the woods", "relation": "HinderedBy", "prompt": "PersonX is camping in the woods. This would not happen if"}}
{"generation": ["the person was not a person"], "references": ["PersonX has been told to leave it alone.", "PersonX isn't educated enough to do it.", "PersonX's security clearance has been revoked", "PersonX doesn't have the passcode", "PersonX doesn't know how to fix the situation.", "PersonX is in jail and not allowed to have contact with others."], "input": {"head": "PersonX takes matters into PersonX's hands", "relation": "HinderedBy", "prompt": "PersonX takes matters into PersonX's hands. This would not happen if"}}
{"generation": ["the temperature of the air was not changing"], "references": ["PersonX just met Taylor Swift.", "PersonX's friend closed the window.", "it is too hot outside", "PersonX's mother turned the air conditioner off.", "their pool water has been drained", "Y is just too irritating", "PersonX just found out PersonX won the lottery.", "They have a short fuse", "PersonX's spouse turned the heat up."], "input": {"head": "PersonX stays cool", "relation": "HinderedBy", "prompt": "PersonX stays cool. This would not happen if"}}
{"generation": ["the player was in the right side"], "references": ["PersonX has a bed against the wall.", "PersonX sleeps on the ground.", "PersonX's spouse is on that side and is blocking the way.", "PersonX's dog  is sleeping on the wrong side of the bed.", "PersonX has only one side to get out of bed.", "PersonX does not know which side is the wrong side.", "PersonX sleeps on a floor."], "input": {"head": "PersonX gets out of bed on the wrong side", "relation": "HinderedBy", "prompt": "PersonX gets out of bed on the wrong side. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX has never studied the material.", "PersonX is too busy with their job.", "PersonY can't afford to take lessons.", "PersonX has not studied enough.", "PersonY does not want to be taught by PersonX.", "PersonX isn't ready to teach lessons yet."], "input": {"head": "PersonX gives PersonY lessons", "relation": "HinderedBy", "prompt": "PersonX gives PersonY lessons. This would not happen if"}}
{"generation": ["the coupons were not redeemable"], "references": ["People are judging PersonX.", "All the coupons expired that PersonX had.", "PersonX wife tells him the coupons are expired", "The store doesn't accept coupons", "The coupons are expired", "Personx forgot his coupons at home.", "the cashier tells PersonX the coupons aren't redeemable at their store", "the item PersonX wants doesn't have a coupon"], "input": {"head": "PersonX uses coupons", "relation": "HinderedBy", "prompt": "PersonX uses coupons. This would not happen if"}}
{"generation": ["the lawyer was a member of the firm"], "references": ["PersonX does not have enough money.", "he does not have the money", "PersonX's boss fired PersonX and now they have no money.", "he can not find one he likes", "the available lawyers won't take the case", "PersonX's spouse took all of PersonX's money.", "PersonX's parents cannot afford it.", "PersonX lacks the budget necessary", "PersonX has ruined their reputation with all nearby lawyers."], "input": {"head": "PersonX hires a lawyer", "relation": "HinderedBy", "prompt": "PersonX hires a lawyer. This would not happen if"}}
{"generation": ["the user had a valid reason to be in the"], "references": ["Person X is the boss", "PersonX's mom knew she was lying", "PersonX's boss was watching her", "PersonX's coworker saw her in the video", "PersonX isn't a good liar", "PersonX doesn't know what to say", "PersonX has too much integrity.", "PersonX already told the truth.", "Person X has signed an ethics agreement"], "input": {"head": "PersonX fudges the issue", "relation": "HinderedBy", "prompt": "PersonX fudges the issue. This would not happen if"}}
{"generation": ["the two were not related"], "references": ["Personx can't afford to impress persony.", "PersonX has trouble trusting others.", "PersonX doesn't have their act together.", "Persony's", "PersonY has too high standards.", "PersonX has too many secrets."], "input": {"head": "PersonX is good enough for PersonY", "relation": "HinderedBy", "prompt": "PersonX is good enough for PersonY. This would not happen if"}}
{"generation": ["PersonX was a function"], "references": ["PersonY is the only person authorized to get the order.", "PersonX cannot hear the order.", "PersonY would not allow them to get their order.", "PersonX is handling another customer.", "PersonX has to be at a wedding in ten minutes.", "PersonX does not know how."], "input": {"head": "PersonX gets PersonY's order", "relation": "HinderedBy", "prompt": "PersonX gets PersonY's order. This would not happen if"}}
{"generation": ["PersonX was a dog"], "references": ["PersonX is a cat person.", "PersonY's dog is too mean", "PersonY does not have a dog", "PersonY's dog always bites him.", "PersonX is allergic to dogs", "PersonX is allergic to dogs.", "PersonY has a really mean dog."], "input": {"head": "PersonX loves PersonY's dog", "relation": "HinderedBy", "prompt": "PersonX loves PersonY's dog. This would not happen if"}}
{"generation": ["he was a normal person"], "references": ["PersonX is experiencing PersonX's worst fear", "Is having a panic attack", "PersonX had an accident.", "PersonX has severe anxiety", "Has adrenaline flowing", "PersonX has an emergency.", "Is worked up"], "input": {"head": "PersonX tries to remain calm", "relation": "HinderedBy", "prompt": "PersonX tries to remain calm. This would not happen if"}}
{"generation": ["PersonX was not in the ball's way"], "references": ["It is night time out", "PersonY's ball went far into the ocean.", "The rain washed the ball miles away.", "It is raining out", "The ball is in the neighords yard", "The ball dropped into the water"], "input": {"head": "PersonX finds PersonY's ball", "relation": "HinderedBy", "prompt": "PersonX finds PersonY's ball. This would not happen if"}}
{"generation": ["the game was a single-player experience"], "references": ["PersonX is contractually obligated to stay at their current job.", "PersonX is too nervous.", "PersonX doesn't have the money to relocate for the opportunity.", "PersonX cannot get an interview.", "PersonX has no time for this.", "PersonX has no transportation.", "Their dad will not pay for it.", "Their brother took the opportunity."], "input": {"head": "PersonX takes advantage of this opportunity", "relation": "HinderedBy", "prompt": "PersonX takes advantage of this opportunity. This would not happen if"}}
{"generation": ["the water was turned on"], "references": ["PersonX's child has locked the bathroom door.", "The water main is broken", "The faucet is broken.", "The faucet is broken", "Their roommate is taking a shower.", "PersonX doesn't have the strength to turn the handle.", "The landlord has asked that renters keep the faucet dripping to avoid frozen pipes.", "The water pressure is too high.", "Their roommate is washing the dishes."], "input": {"head": "PersonX turns the water off", "relation": "HinderedBy", "prompt": "PersonX turns the water off. This would not happen if"}}
{"generation": ["PersonX had a different set of needs"], "references": ["person x's neighbor keeps stealing their supplies", "PersonX is indecisive.", "the store owner hoarded his stock leaving none for person x", "Person X cannot change who they are.", "PersonX lacks initiative.", "PersonX is dissatisfied with themselves", "Person X doesn't know what Person X wants.", "PersonX is afraid of physical contact"], "input": {"head": "PersonX fits PersonX's needs", "relation": "HinderedBy", "prompt": "PersonX fits PersonX's needs. This would not happen if"}}
{"generation": ["the dog was a human"], "references": ["PersonX's apartment doesn't allow dogs.", "PersonX likes dogs and cats.", "PersonX doesn't have a fenced yard for a dog.", "PersonX's property doesn't allow dogs", "PersonX already has 3 dogs.", "PersonX is allergic to dogs.", "PersonX is broke."], "input": {"head": "PersonX decides to get a dog", "relation": "HinderedBy", "prompt": "PersonX decides to get a dog. This would not happen if"}}
{"generation": ["the user had a good understanding of the system"], "references": ["PersonX knows that the time is now.", "PersonX is mellowed out by valium.", "PersonX's doctor has him taking mood stabilizing medication.", "PersonX is a naturally patient person.", "PersonX knows that getting impatient will not lead to anything good.", "PersonX's spouse reminds them to be patient because their child is young."], "input": {"head": "PersonX gets impatient", "relation": "HinderedBy", "prompt": "PersonX gets impatient. This would not happen if"}}
{"generation": ["the user had not been given the option to delete"], "references": ["They hold grudges.", "The other person does not want to forget the wrong.", "PersonX found a video of his girlfriend having sex with his father", "PersonX is still upset their boyfriend was stolen.", "PersonY stepped on PersonX's foot and broke it", "The other person does not forgive PersonX.", "PersonX had his wallet stolen by Sam", "PersonX holds grudges easily.", "They're very angry."], "input": {"head": "PersonX lets bygones be bygones", "relation": "HinderedBy", "prompt": "PersonX lets bygones be bygones. This would not happen if"}}
{"generation": ["PersonX was a stranger"], "references": ["PersonX is babysitting PersonY.", "PersonY has thrown wild parties before when left alone.", "PersonY is a baby", "PersonY gets into trouble when they stay home alone.", "PersonY is senile", "PersonY isn't old enough to be left home alone.", "PersonX needs to use PersonY's car, so they have to tag along.", "PersonX and PersonY are going to the same place and there's only one car in the family to share.", "PersonY has been known to steal stuff."], "input": {"head": "PersonX leaves PersonY at home", "relation": "HinderedBy", "prompt": "PersonX leaves PersonY at home. This would not happen if"}}
{"generation": ["the beard was a part of the character's face"], "references": ["Person X is a woman.", "PersonX is a woman", "Their mother makes them shave.", "Their boss will fire them.", "Person X is 15.", "Person Xs work won't allow it.", "Person X has a medical condition.", "PersonX is too young.", "PersonX is a woman.", "PersonX is too young to grow facial hair", "PersonX is too old."], "input": {"head": "PersonX grows a beard", "relation": "HinderedBy", "prompt": "PersonX grows a beard. This would not happen if"}}
{"generation": ["the game was not a game"], "references": ["PersonX is babysitting", "The dance club is closed", "The party is over.", "PersonX's body is shutting down.", "PersonX is too sleepy.", "PersonX broke their leg."], "input": {"head": "PersonX dances the night away", "relation": "HinderedBy", "prompt": "PersonX dances the night away. This would not happen if"}}
{"generation": ["PersonX was a person, and PersonY was"], "references": ["PersonY isn't sitting down.", "PersonX can't find PersonY.", "PersonX is at the wrong location.", "PersonX has an assigned seat in class.", "PersonX can't place a call to PersonY.", "PersonY is at the wrong restaurant.", "PersonY keeps moving away from PersonX.", "PersonX has a fractured tailbone."], "input": {"head": "PersonX sits down across from PersonY", "relation": "HinderedBy", "prompt": "PersonX sits down across from PersonY. This would not happen if"}}
{"generation": ["she was a man"], "references": ["PersonX doesn't know how to do makeup", "PersonX's parent forbid the wearing of makeup", "because person x has no makeup to wear", "because person x has a strict dress code at work", "PersonX does not own makeup.", "PersonX doesn't own makeup", "PersonX is too young.", "PersonX's religious leader forbids the wearing of makeup."], "input": {"head": "PersonX wears makeup", "relation": "HinderedBy", "prompt": "PersonX wears makeup. This would not happen if"}}
{"generation": ["the player had not been given the option to move"], "references": ["PersonX's wife kicked him out.", "PersonX's boss fired him so he cannot afford the mortgage.", "PersonX has to wait until they get a new job.", "They were outbid on the house they wanted", "Can't afford to move.", "The movers never showed up.", "PersonX's girlfriend dumped him so he had to leave.", "PersonX can't get a loan.", "PersonX is busy at work."], "input": {"head": "PersonX moves to a new house", "relation": "HinderedBy", "prompt": "PersonX moves to a new house. This would not happen if"}}
{"generation": ["the player was standing on the floor"], "references": ["PersonX will get fired if they do.", "Someone put superglue on it as a prank before PersonX picked it up.", "PersonX's mom has tied it down.", "If PersonX drops it, then the boss will fire them.", "PersonX is being watched by others.", "PersonX is holding on to the item.", "PersonX is giving the item to another person safely.", "The hotel manager had it bolted to the table."], "input": {"head": "PersonX drops it on the floor", "relation": "HinderedBy", "prompt": "PersonX drops it on the floor. This would not happen if"}}
{"generation": ["PersonX was a robot"], "references": ["They are safety conscious", "PersonX is not smart.", "PersonX has been restrained by hospital staff.", "PersonX is weak.", "Nurses have administered sedatives to PersonX.", "They take good care of themselves"], "input": {"head": "PersonX breaks PersonX's hip", "relation": "HinderedBy", "prompt": "PersonX breaks PersonX's hip. This would not happen if"}}
{"generation": ["he was a normal person"], "references": ["PersonX's father was a skydiver and taught him not to be afraid.", "PersonX doesn't have a fear in their brain.", "Everyone is going hill climbing and being afraid would have been the best excuse to not go", "PersonX has been a pilot for far too long", "PersonX is too short to ride rollercoasters.", "PersonX has mental issues.", "PersonX's dad exposed him to heights all his life.", "PersonX's mom told him he can never be afraid.", "PersonX is stuck in a wheelchair."], "input": {"head": "PersonX has a fear of heights", "relation": "HinderedBy", "prompt": "PersonX has a fear of heights. This would not happen if"}}
{"generation": ["PersonX was not a human"], "references": ["Someone else in the house has taken all the kleenex from PersonX", "PersonX's hands are tied behind their back.", "PersonX has nothing to dry them with.", "PersonX was chopping jalepeno peppers and got the juice on their hands.", "PersonX's girlfriend already did it for him.", "PersonX can't stop crying.", "PersonX has no tissues.", "PersonX got his tissues stolen by a stranger.", "PersonY keeps putting pepper up PersonX's nose, making him sneeze.", "PersonX is so hysterical that they cannot stop crying."], "input": {"head": "PersonX dries PersonX's eyes", "relation": "HinderedBy", "prompt": "PersonX dries PersonX's eyes. This would not happen if"}}
{"generation": ["the child was not a member of the same sex"], "references": ["PersonX was just born.", "Person X is already older.", "Person X can't turn back time.", "PersonX is a senior."], "input": {"head": "PersonX is 5 years old", "relation": "HinderedBy", "prompt": "PersonX is 5 years old. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PersonX does not have enough money", "PersonY does not want the item.", "PersonX doesn't have enough money.", "PersonX doesn't have any money", "PersonX doesn't trust the item's warranty.", "The product has been sold out", "The item has sold out.", "PersonX doesn't know what they like"], "input": {"head": "PersonX buys one for PersonY", "relation": "HinderedBy", "prompt": "PersonX buys one for PersonY. This would not happen if"}}
{"generation": ["the class was not top-heavy with people who"], "references": ["PersonX is dumb.", "The teacher thinks PersonX needs a tutor.", "PersonX is failing a class.", "PersonX got sick for a long time.", "Their mom held them back too much.", "PersonX skipped too many school days.", "PersonX didn't study hard enough.", "Other people voted for the top person.", "Someone else got the spot."], "input": {"head": "PersonX graduates top of PersonX's class", "relation": "HinderedBy", "prompt": "PersonX graduates top of PersonX's class. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same object"], "references": ["PersonX doesn't know their real name.", "PersonY isn't a person."], "input": {"head": "PersonX derives PersonY's name", "relation": "HinderedBy", "prompt": "PersonX derives PersonY's name. This would not happen if"}}
{"generation": ["the player was a robot"], "references": ["No one will throw them the ball.", "PersonX can't throw very far.", "PersonX is in a wheelchair.", "PersonX misses the basket every time.", "PersonX isn't on the basketball court.", "PersonX does not have a basketball.", "PersonX isn't very good at aiming the basketball.", "The other team keeps getting the ball.", "PersonX can't see the hoop."], "input": {"head": "PersonX shoots a three pointer", "relation": "HinderedBy", "prompt": "PersonX shoots a three pointer. This would not happen if"}}
{"generation": ["PersonX was not in the car"], "references": ["PersonX doesn't have the keys", "PersonX locked the keys in the car.", "The car won't start.", "Their mother is blocking them in.", "The keys are lost.", "PersonX was blocked in by two other cars.", "There is too much snow around.", "It has a flat tire", "Their brother lost their keys."], "input": {"head": "PersonX moves PersonX's car", "relation": "HinderedBy", "prompt": "PersonX moves PersonX's car. This would not happen if"}}
{"generation": ["the snake was a person"], "references": ["The snakes are hibernating", "PersonX lives in high sea.", "PersonX can't see.", "PersonX doesn't have a snake.", "PersonX lives in Canada.", "their mother won't let person x out of the car to look at the snake", "They missed the trip to the zoo", "person z says the snake is too poisonous to be around"], "input": {"head": "PersonX sees a snake", "relation": "HinderedBy", "prompt": "PersonX sees a snake. This would not happen if"}}
{"generation": ["the food was not contaminated"], "references": ["The chef washed PersonX's food throughly.", "PersonX wants to get sympathy.", "PersonX ate at the restaurant that was very sanitary.", "PersonX's mom prepared meals diligently.", "PersonX can't find contaminated food.", "PersonX wants to be sick so they can miss work.", "PersonX has a strong stomach.", "PersonX would feel foolish getting sick with friends just to show solidarity."], "input": {"head": "PersonX has food poisoning", "relation": "HinderedBy", "prompt": "PersonX has food poisoning. This would not happen if"}}
{"generation": ["the sun was a black hole"], "references": ["PersonX was told to work late this evening.", "The weather has been foggy for two days.", "PersonX is in a thick forest.", "An attacker blinded PersonX.", "PersonX is blind.", "It's night outside.", "PersonY closed the blinds.", "PersonX was blinded in an accident.", "PersonX's doctor was unable to restore PersonX's sight.", "they are stuck inside", "they are blind and can't see"], "input": {"head": "PersonX watches the sunset", "relation": "HinderedBy", "prompt": "PersonX watches the sunset. This would not happen if"}}
{"generation": ["PersonX was a function"], "references": ["Person Y is no where to be found.", "Nothing has happened that needs to happen.", "PersonX has not finished painting the sign.", "Y is blindfolded.", "X's hands are tied behind his back.", "Person Y moved away.", "Person X lost the sign.", "Person X kept the sign."], "input": {"head": "PersonX gives PersonY a sign", "relation": "HinderedBy", "prompt": "PersonX gives PersonY a sign. This would not happen if"}}
{"generation": ["PersonX was not in the hat"], "references": ["PersonX can't find the hat.", "The person who owns the hat tells PersonX the hat is full", "PersonX is PersonX.", "PersonX can't write.", "PersonX does not have a hat.", "PersonX doesn't have a hat or pencil.", "Personx doesn't know what the drawing is for.", "The hat owner placed the hat out of the reach of PersonX", "PersonX is too embarrassed to add their name.", "PersonX thinks it's not the right decision."], "input": {"head": "PersonX puts PersonX's name in the hat", "relation": "HinderedBy", "prompt": "PersonX puts PersonX's name in the hat. This would not happen if"}}
{"generation": ["the player had not been given the option to choose"], "references": ["PersonX is going on a vacation they already paid for", "They still love their husband.", "They want to try to make it work.", "PersonX's spouse keeps showing up everywhere", "They feel guilty about it.", "PersonX is afraid of the secrets that will come out", "PersonX's spouse won't let her go", "They are too scared of what could happen"], "input": {"head": "PersonX ends things", "relation": "HinderedBy", "prompt": "PersonX ends things. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX does not know the address", "Persony isn't speaking to personx", "Street workers have blocked off PersonX's view", "PersonX has laryngitis.", "PersonX can't find their phone.", "PersonX doesn't know persony phone number.", "Persony never showed up for them to tell", "PersonX has a dead cellphone", "PersonX has a dead phone.", "PersonX's brother accidentally locked them out of the house"], "input": {"head": "PersonX tells PersonY had come", "relation": "HinderedBy", "prompt": "PersonX tells PersonY had come. This would not happen if"}}
{"generation": ["the player was inside the house"], "references": ["PersonX's teacher wants him to finish his make-up work by midnight.", "PersonX has to work all day.", "PersonX's parents said it was time to do homework.", "It is snowing too hard and it is too cold.", "they have to much homework", "PersonX is very susceptible to sickness", "they have to do chores", "PersonX is sick with a cold"], "input": {"head": "PersonX is outside playing", "relation": "HinderedBy", "prompt": "PersonX is outside playing. This would not happen if"}}
{"generation": ["the PersonX object was not a Person object"], "references": ["They will need to buy hair bleach first", "PersonX's job won't allow pink hair", "No hair dye will work one personX's hair.", "It is forbidden at their school", "PersonX has no access to hair dye.", "PersonX doesn't have any hair dye"], "input": {"head": "PersonX dyes PersonX's hair pink", "relation": "HinderedBy", "prompt": "PersonX dyes PersonX's hair pink. This would not happen if"}}
{"generation": ["the person was a member of the public"], "references": ["PersonX cannot afford to go to college", "PersonX couldn't pass the bar exam.", "PersonX can't pass the bar", "PersonX is dumb.", "PersonX got kicked out of school by the principal.", "PersonX was told that he could not by his dad.", "PersonX can't afford law school.", "PersonX's professor failed him on a critical exam.", "PersonX is unemployed."], "input": {"head": "PersonX becomes a lawyer", "relation": "HinderedBy", "prompt": "PersonX becomes a lawyer. This would not happen if"}}
{"generation": ["he was the one who had been kidnapped"], "references": ["Person X is too sad.", "PersonX can't accept the decision.", "PersonX's boss is threatening to fire him if he isn't enthusiastic", "PersonX is too angry.", "PersonX's friend made him promise he'll let her accept instead", "PersonX wants to hold a grudge."], "input": {"head": "PersonX reluctantly accepted", "relation": "HinderedBy", "prompt": "PersonX reluctantly accepted. This would not happen if"}}
{"generation": ["the person was not a business"], "references": ["PersonY won't approve PersonX's advertisement.", "PersonX can't find an ad company to work with.", "They cannot afford to print out quality ads.", "There are government restrictions on displaying advertisements.", "Person X does not have internet.", "PersonY's graphic designer won't finish the advertisement.", "Person X can't afford it.", "PersonX can't afford to pay for advertisement"], "input": {"head": "PersonX advertises PersonX's business", "relation": "HinderedBy", "prompt": "PersonX advertises PersonX's business. This would not happen if"}}
{"generation": ["PersonX was a normal person"], "references": ["The bank manager has threatening to freeze business funding otherwise", "The situation is not threatening.", "PersonX is surrounded by strong people.", "PersonX has their stuff together.", "PersonX's business partner has thrust them into the spotlight", "PersonX is too calm."], "input": {"head": "PersonX loses PersonX's nerve", "relation": "HinderedBy", "prompt": "PersonX loses PersonX's nerve. This would not happen if"}}
{"generation": ["the game was a simple, linear shooter"], "references": ["PersonX is truthfully disappointed", "PersonX's mom taught him to never be satisfied.", "PersonX has seasonal affective disorder", "PersonX is stubborn.", "PersonX is angry.", "PersonX cannot decide what they want.", "PersonX's dad will not let him.", "PersonX expected better."], "input": {"head": "PersonX is quite pleased", "relation": "HinderedBy", "prompt": "PersonX is quite pleased. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["Someone else is behind PersonY.", "PersonY is to far ahead of PersonX."], "input": {"head": "PersonX closes behind PersonY", "relation": "HinderedBy", "prompt": "PersonX closes behind PersonY. This would not happen if"}}
{"generation": ["the person was not a person"], "references": ["They don't have time to study", "The dean expelled PersonX.", "PersonX has a low IQ", "PersonX cannot afford schooling", "The teacher kicked PersonX out.", "PersonX doesn't have a mentor to help him.", "PersonX doesn't know how to study.", "No one will tell them", "The principal suspended PersonX."], "input": {"head": "PersonX knows much", "relation": "HinderedBy", "prompt": "PersonX knows much. This would not happen if"}}
{"generation": ["the person was not a person"], "references": ["PersonX does not have the expertise in this area.", "PersonY is currently in prison", "PersonY does not want help.", "PersonY is too far gone.", "PersonX has given up on PersonY.", "PersonY refuses any help.", "PersonY will not listen to anyone"], "input": {"head": "PersonX turns PersonY's life around", "relation": "HinderedBy", "prompt": "PersonX turns PersonY's life around. This would not happen if"}}
{"generation": ["the person was a man"], "references": ["PersonX doesn't like the coffee available at work.", "PersonX has already drank too much coffee.", "PersonX has to go to bed soon.", "PersonX is about to have a medical procedure that requires fasting.", "PersonX needs to go to sleep right now.", "There is no coffee available at PersonX's house.", "PersonX gave up coffee for lent."], "input": {"head": "PersonX drinks some coffee", "relation": "HinderedBy", "prompt": "PersonX drinks some coffee. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PersonY does not understand PersonX.", "PersonY hates learning.", "PersonY was instructed to learn it on their own", "PersonX was forbidden from assisting", "PersonX is a terrible teacher.", "PersonY is stubborn and does not listen."], "input": {"head": "PersonX gives PersonY knowledge", "relation": "HinderedBy", "prompt": "PersonX gives PersonY knowledge. This would not happen if"}}
{"generation": ["the job was a \"real\" job"], "references": ["The hiring manager did not accept PersonX's application.", "PersonX doesn't have time for an interview", "PersonX did not get a call back.", "PersonY cancelled PersonX's interview.", "because person x already has a job", "because person x hasnt applied anywhere", "PersonX already has a job", "because no one is hiring", "PersonX has not applied for jobs yet."], "input": {"head": "PersonX has a job interview", "relation": "HinderedBy", "prompt": "PersonX has a job interview. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["PersonX is busy recording the scene for evidence", "Person Y is unable to hear Person X.", "PersonY is standing just out of PersonX's reach", "Person Y does not listen to Person X.", "Personx's eyes are glued open.", "PersonY is talking with someone else at the scene", "Someone is holding personx's head", "PersonY has just had eye surgery and cannot blink"], "input": {"head": "PersonX averts PersonY's eyes", "relation": "HinderedBy", "prompt": "PersonX averts PersonY's eyes. This would not happen if"}}
{"generation": ["he was a normal person"], "references": ["PersonX is currently pregnant.", "PersonX's family only prepares unhealthy meals for them.", "PersonX eats too much", "PersonX has bad genes.", "PersonX's doctor says they need to gain weight.", "PersonX has no self control", "PersonX can't exercise due to an injury.", "PersonX is too sick to exercise."], "input": {"head": "PersonX loses thirty pounds", "relation": "HinderedBy", "prompt": "PersonX loses thirty pounds. This would not happen if"}}
{"generation": ["the phone was in the pocket of the person who"], "references": ["Their mother will not buy them a new one.", "PersonX has big pockets.", "PersonX is not clumsy.", "Someone glued the handle of the phone before PersonX used it.", "The phone is attached to PersonX.", "PersonX has sticky fingers.", "Someone else is holding the phone for PersonX since they broke their hand.", "Their brother caught the phone."], "input": {"head": "PersonX drops the phone", "relation": "HinderedBy", "prompt": "PersonX drops the phone. This would not happen if"}}
{"generation": ["the person was not a member of the group"], "references": ["PersonX has no money for a trip.", "PersonX is stuck at work with no vacation time", "PersonX can't afford a trip", "PersonX's girlfriend told him not to go.", "PersonX is busy babysitting.", "PersonX's boss fired him, so he has no money to do so.", "The weather will not allow for a trip", "PersonX's friend will not let him go.", "PersonX has too many responsibilities.", "PersonX knows there's no vacation time left this year."], "input": {"head": "PersonX is planning a trip", "relation": "HinderedBy", "prompt": "PersonX is planning a trip. This would not happen if"}}
{"generation": ["he was not a good player"], "references": ["feels very tired and worn out", "PersonX's mom was yelling at them to come home.", "PersonX sprained their ankle.", "has developed a cramp and can't cpontinue", "The instrument needs to be retuned.", "The gym is closing"], "input": {"head": "PersonX keeps practicing", "relation": "HinderedBy", "prompt": "PersonX keeps practicing. This would not happen if"}}
{"generation": ["the player had not been given the recipe"], "references": ["PersonX has no knowledge of how to make lasagna.", "PersonX doesn't know how to cook", "PersonX has no lasagna noodles.", "PersonX is a terrible cook.", "PersonX isn't allowed to operate the oven", "PersonX's oven is broken."], "input": {"head": "PersonX makes lasagna", "relation": "HinderedBy", "prompt": "PersonX makes lasagna. This would not happen if"}}
{"generation": ["PersonX was a different type"], "references": ["PersonX doesn't have a hat.", "The hat shrank in the wash", "PersonX's hat doesn't fit them anymore.", "Their head go too fat", "The hat is far too small.", "PersonX can't wear a hat at work."], "input": {"head": "PersonX puts on PersonX's hat", "relation": "HinderedBy", "prompt": "PersonX puts on PersonX's hat. This would not happen if"}}
{"generation": ["the time of day was set to the current time"], "references": ["PersonX's friend has PersonX's watch.", "PersonX does not know how to tell time.", "PersonX has lost their watch.", "PersonX's teacher took their watch away.", "PersonX phone died.", "PersonX left calendar at home.", "PersonX has to keep working.", "PersonX has no time to spare."], "input": {"head": "PersonX gives the time of day", "relation": "HinderedBy", "prompt": "PersonX gives the time of day. This would not happen if"}}
{"generation": ["the player was in a single-player game"], "references": ["A looming deadline will interrupt this period", "PersonX is too old to plan for the long term"], "input": {"head": "PersonX takes place over a period", "relation": "HinderedBy", "prompt": "PersonX takes place over a period. This would not happen if"}}
{"generation": ["PersonX was not a person"], "references": ["PersonX is far away from PersonY", "PersonX cannot find PersonY\u9225\u6a9a phone.", "PersonY has hidden their phone.", "PersonY's phone fell in the waters.", "PersonY will not let PersonX near them.", "PersonX  doesn't  know how to use PersonY's smart phone.", "PersonY has their phone locked away"], "input": {"head": "PersonX takes PersonY's phone", "relation": "HinderedBy", "prompt": "PersonX takes PersonY's phone. This would not happen if"}}
{"generation": ["the person was a normal person"], "references": ["PersonX's nose is clogged.", "PersonX lost their sense of smell after drinking bleach.", "PersonX's nose is blocked", "PersonX has uncommonly congested cold.", "PersonX's allergies caused congestion.", "PersonX is sick and has trouble smelling", "There are too many smells in the room currently", "PersonX has allergies"], "input": {"head": "PersonX notices a strange smell", "relation": "HinderedBy", "prompt": "PersonX notices a strange smell. This would not happen if"}}
{"generation": ["PersonX were not a Person"], "references": ["PersonX doesn't want to come off too strongly.", "PersonX is not familiar enough with the issue to take a position", "PersonX doesn't want to seem pushy", "PersonX is new to the company and has to earn their place", "PersonX doesn't have much influence", "PersonX doesn't want to hurt their feelings."], "input": {"head": "PersonX exerts PersonX's influence", "relation": "HinderedBy", "prompt": "PersonX exerts PersonX's influence. This would not happen if"}}
{"generation": ["the player had not already met PersonX"], "references": ["PersonX gained weight since purchasing the dress.", "PersonX's jeans would look terrible with a dress.", "The prom dress has been cut to pieces.", "PersonX's earrings don't match the dress."], "input": {"head": "PersonX wears with PersonX's prom dress", "relation": "HinderedBy", "prompt": "PersonX wears with PersonX's prom dress. This would not happen if"}}
{"generation": ["the player was a waiter"], "references": ["There are no diners around PersonX to work in.", "PersonX needs to go to work.", "the diner owner doesn't like person x", "No diners will hire PersonX.", "PersonX goes to boarding school.", "the mayor ordered all restaurants closed", "PersonX is a toddler.", "PersonX has school."], "input": {"head": "PersonX is working at a diner", "relation": "HinderedBy", "prompt": "PersonX is working at a diner. This would not happen if"}}
{"generation": ["PersonX was a man"], "references": ["PersonX has a deadline that must be met.", "PersonX's husband's plane was delayed", "PersonX's meeting is longer than expected and they can't leave.", "PersonX's husband is stuck in another town during a storm"], "input": {"head": "PersonX meets PersonX's husband", "relation": "HinderedBy", "prompt": "PersonX meets PersonX's husband. This would not happen if"}}
{"generation": ["PersonX was a stranger"], "references": ["PersonY is a person on TV that PersonX will never know.", "PersonY is a celebrity and PersonX is a prisoner", "PersonX does not have the proper education.", "PersonY isn't aware PersonX even exists", "PersonX lives too far away from PersonY.", "PersonX lives too far away."], "input": {"head": "PersonX affects PersonY's lives", "relation": "HinderedBy", "prompt": "PersonX affects PersonY's lives. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PersonX needs to stay at home to entertain friends.", "there is a restraining order against PersonX", "PersonY is busy", "PersonX has to work", "PersonY is out of town", "PersonY isn't in town."], "input": {"head": "PersonX sees PersonY tonight", "relation": "HinderedBy", "prompt": "PersonX sees PersonY tonight. This would not happen if"}}
{"generation": ["PersonX was a person"], "references": ["PersonX's son ran the car out of gas the night before.", "the car broke down", "There is a hurricane coming.", "PersonX is stuck in a traffic.", "there is a multi car accident blocking the road", "PersonX hits a person on the way.", "the flight was delayed", "the roads are flooded due to a storm", "Somebody crashed into PersonX's car.", "PersonX was stopped by a policeman.", "PersonX cannot take a day off from work."], "input": {"head": "PersonX arrives at PersonX's destination", "relation": "HinderedBy", "prompt": "PersonX arrives at PersonX's destination. This would not happen if"}}
{"generation": ["PersonX was a different color"], "references": ["PersonY is too fat", "Person Y is glaring at Person X.", "Person X feels like it would be awkward.", "PersonX's arms aren't long enough.", "PersonX doesn't have long enough arms", "PersonY's back is against the wall."], "input": {"head": "PersonX reaches behind PersonY", "relation": "HinderedBy", "prompt": "PersonX reaches behind PersonY. This would not happen if"}}
{"generation": ["the player was in the same room as the monster"], "references": ["person h inflated the item and it won't fit through the door", "PersonX is locked inside.", "The person PersonX is having a dispute with refuses to go outside.", "person z made the item to heavy to carry outside", "the item is too heavy for PersonX to pick up", "PersonX is afraid to go outside"], "input": {"head": "PersonX takes it outside", "relation": "HinderedBy", "prompt": "PersonX takes it outside. This would not happen if"}}
{"generation": ["the user had a good memory"], "references": ["They want to go for the gold.", "Nothing isn't a physical object.", "PersonX was forced to hold everything by their parents", "PersonX is holding a baby and it will cry if they put it down.", "PersonX was handed things by their boss", "Nothing doesn't exist so it can't be held.", "PersonX can't grab nothing.", "They want to have an experience."], "input": {"head": "PersonX holds onto nothing", "relation": "HinderedBy", "prompt": "PersonX holds onto nothing. This would not happen if"}}
{"generation": ["PersonX was a player"], "references": ["PersonY doesn't believe in healing via the laying on of hands.", "PersonY is too resistant."], "input": {"head": "PersonX places PersonY's hand", "relation": "HinderedBy", "prompt": "PersonX places PersonY's hand. This would not happen if"}}
{"generation": ["the child was adopted by a man"], "references": ["PersonX's spouse will not agree to it.", "PersonX does not meet the financial requirements.", "PersonX is not old enough to adopt.", "Because he/she doesn't have a lawyer", "PersonX didn't pass the requirements.", "Person X is a felon"], "input": {"head": "PersonX adopts a little girl", "relation": "HinderedBy", "prompt": "PersonX adopts a little girl. This would not happen if"}}
{"generation": ["the puppy was a male"], "references": ["PersonX's lease does not allow animals.", "The puppy ran away.", "The puppy can't ride in a car that long.", "PersonX has no time for pets.", "PersonX is allergic to dogs.", "The place doesn't allow dogs."], "input": {"head": "PersonX takes the puppy", "relation": "HinderedBy", "prompt": "PersonX takes the puppy. This would not happen if"}}
{"generation": ["PersonX had a laptop"], "references": ["PersonX's spouse left with it in the car.", "PersonX lent their laptop to a friend.", "A thief stole it.", "PersonX had their laptop stolen.", "The cashier still needs personX to pay for it."], "input": {"head": "PersonX takes PersonX's laptop", "relation": "HinderedBy", "prompt": "PersonX takes PersonX's laptop. This would not happen if"}}
{"generation": ["the user had to enter a password"], "references": ["PersonX's reputation precedes them", "Person is still in prison.", "PersonX has dirty sheets", "Person doesn\u9225\u6a9b have a shower available.", "PersonX has a bad reptuation", "PersonX doesn't have clean sheets"], "input": {"head": "PersonX starts with a clean sheet", "relation": "HinderedBy", "prompt": "PersonX starts with a clean sheet. This would not happen if"}}
{"generation": ["the game was already in development"], "references": ["Person x is stuck in their old ways", "Person x is afraid of change", "They are too old.", "They have seen too much."], "input": {"head": "PersonX is brand new", "relation": "HinderedBy", "prompt": "PersonX is brand new. This would not happen if"}}
{"generation": ["the cows were not there"], "references": ["The cows got free from their pen.", "The cows belong to a farmer and PersonX was told not to go near them.", "PersonX's neighbor stole their cows.", "PersonX's wife brought the cows to the vet.", "The cows are bulls.", "The cows are too sick to be milked.", "PersonX doesn't have permission.", "The milk pump was damaged when they moved.", "PersonX's partner woke early to milk the cows first."], "input": {"head": "PersonX milks the cows", "relation": "HinderedBy", "prompt": "PersonX milks the cows. This would not happen if"}}
{"generation": ["PersonX was a stranger"], "references": ["PersonX doesn't want to start an affair.", "The husband is against it.", "the boat has already left to her house", "PersonX's wife will not let him.", "the roads are closed", "PersonY's wife refuses to see him again."], "input": {"head": "PersonX sees PersonY's wife", "relation": "HinderedBy", "prompt": "PersonX sees PersonY's wife. This would not happen if"}}
{"generation": ["PersonX was a robot"], "references": ["PersonX didn't wash feet.", "PersonX must use hands."], "input": {"head": "PersonX votes with PersonX's feet", "relation": "HinderedBy", "prompt": "PersonX votes with PersonX's feet. This would not happen if"}}
{"generation": ["the person was a woman"], "references": ["the victim is calling PersonX by name and begging him to assist", "the kids are yelling at PersonX to come help", "PersonX's boss is looking to make sure it gets done", "person x is too involved not to care", "Personx is a member of the armed forces.", "person x wants to help too much", "Personx's friend got horribly injured."], "input": {"head": "PersonX turns a blind eye", "relation": "HinderedBy", "prompt": "PersonX turns a blind eye. This would not happen if"}}
{"generation": ["the person was a woman"], "references": ["PersonX is too out of shape.", "PersonX's doctor forbade them from running.", "PersonX cant run because of shin splints.", "PersonX didn't train in time for it.", "PersonX can't be on time when the marathom starts.", "PersonX can't run that fast.", "PersonX has not trained for the marathon.", "PersonX's mother forgot to send in the registration form.", "PersonX has a broken leg.", "PersonX does not have the fee to participate."], "input": {"head": "PersonX runs a marathon", "relation": "HinderedBy", "prompt": "PersonX runs a marathon. This would not happen if"}}
{"generation": ["the game was a lot more fun"], "references": ["PersonX is a selfish person.", "PersonX needs to work to support family.", "PersonX needs a lot more practice.", "PersonX was raised in an aggressive home.", "PersonX has severe depression and can't afford medication or therapy.", "PersonX doesn't have any social support to encourage them to keep trying."], "input": {"head": "PersonX is a lot better", "relation": "HinderedBy", "prompt": "PersonX is a lot better. This would not happen if"}}
{"generation": ["he was not a chef"], "references": ["Cooking is work to Person X.", "It makes her feel like a slave.", "Person X hates all the time cooking takes.", "PersonX's husband is rude and critical of their cooking.", "PersonX's family complains that their cooking stinks.", "Person X is not talented at cooking.", "Person X is not good at cooking.", "Person X sees it as a job.", "Person X enjoys eating out too much.", "It brings back bad memories.", "PersonX's children get sick when they cook."], "input": {"head": "PersonX loves to cook", "relation": "HinderedBy", "prompt": "PersonX loves to cook. This would not happen if"}}
{"generation": ["the post office was a private company"], "references": ["PersonX doesn't have transportation there.", "The post office is closed on Sunday", "PersonX got called into work early.", "The post office closed because of bad weather.", "The governor has quarentined PersonX.", "The post office is closed on government holidays", "PersonX had their car break down, and can't go anywhere.", "The Mail Clerk locked the door in PersonX's face.", "The post office burned down."], "input": {"head": "PersonX goes to the post office", "relation": "HinderedBy", "prompt": "PersonX goes to the post office. This would not happen if"}}
{"generation": ["the character was wearing glasses"], "references": ["PersonX is wearing contact lenese.", "it is not safe to have them at his job", "PersonX has perfect vision.", "PersonX's optometrist prescribed her contacts instead", "PersonX can't afford glasses.", "he has lost his glasses", "PersonX can't find a place to buy glasses.", "PersonX's friend broke her glasses"], "input": {"head": "PersonX wears glasses", "relation": "HinderedBy", "prompt": "PersonX wears glasses. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same object"], "references": ["They do not have access to PersonY", "PersonX doesn't know what situation.", "PersonX doesn't know what situation PersonY wants.", "PersonY is surrounded by bodyguards all the time", "PersonY does not have a situation to create."], "input": {"head": "PersonX creates PersonY situation", "relation": "HinderedBy", "prompt": "PersonX creates PersonY situation. This would not happen if"}}
{"generation": ["the game was a simple clone of the original"], "references": ["PersonX is sleeping due to Jane keeping her up too late", "Funds are tight.", "There is a recession.", "PersonX got sick from Dale and cannot get out of bed", "PersonX was hit in the head by Scott and is unable to work", "PersonX has to keep doing their monotonous work.", "PersonX doesn't have time to take classes to further their career."], "input": {"head": "PersonX keeps pace with the growth", "relation": "HinderedBy", "prompt": "PersonX keeps pace with the growth. This would not happen if"}}
{"generation": ["the class were a single person"], "references": ["PersonX got expelled.", "PersonX is a teacher, not a student.", "PersonX doesn't go to that school anymore.", "PersonX got kicked out of highschool.", "The have been told that they don't have enough skill.", "There are other people in the way.", "PersonX has terrible grades.", "Person X has laryngitis.", "There are too many people running for the job.", "PersonX had to get a job."], "input": {"head": "PersonX runs for class president", "relation": "HinderedBy", "prompt": "PersonX runs for class president. This would not happen if"}}
{"generation": ["PersonX was not present"], "references": ["PersonX doesn't have any money.", "Has no money", "PersonX doesn't have the material.", "PersonY will not accept the present.", "PersonX lives too far away from PersonY.", "PersonX is not crafty"], "input": {"head": "PersonX makes PersonY a present", "relation": "HinderedBy", "prompt": "PersonX makes PersonY a present. This would not happen if"}}
{"generation": ["the puppy was not a puppy"], "references": ["PersonX's landlord does now allow pets.", "PersonX travels a lot and would not be home", "The puppy is too expensive.", "PersonX is allergic to puppies.", "Someone else decided to take the puppy.", "PersonX is allergic to dogs", "PersonX doesn't want to separate the puppy from their mother.", "PersonX lives in an apartment that doesn't allow animals", "PersonX's residency doesn't allow pets.", "PersonX does not know how to take care of dogs"], "input": {"head": "PersonX brings the puppy home", "relation": "HinderedBy", "prompt": "PersonX brings the puppy home. This would not happen if"}}
{"generation": ["the player was a woman"], "references": ["All the beer is gone.", "PersonX is underage.", "PersonX is in the shower", "The market is closed", "Person X's mother would get really upset if they had a beer", "Person X's Doctor has forbidden them from drinking", "They're underage and can't buy alcohol", "A Judge has forbidden drinking as a condition of Person X's parole", "PersonX lives in a dry town"], "input": {"head": "PersonX gets a beer", "relation": "HinderedBy", "prompt": "PersonX gets a beer. This would not happen if"}}
{"generation": ["the dragon was not a dragon"], "references": ["PersonX's dad told him that dragons are not real.", "PersonX wants to live.", "The dragon does not exist.", "Dragons are not real.", "PersonX is afraid of fire.", "Dragons don't exist.", "The dragon set PersonX on fire.", "The dragons owner told personX to stay away.", "The dragon is not friendly.", "The zookeeper banned personX from the zoo.", "The dragon would wake up."], "input": {"head": "PersonX tickles the dragons tail", "relation": "HinderedBy", "prompt": "PersonX tickles the dragons tail. This would not happen if"}}
{"generation": ["the ship was a passenger ship"], "references": ["PersonX is terrified of water due to his mom", "PersonX can't afford a cruise.", "PersonX doesn't have the money.", "PersonX has no vacation time at work.", "PersonX was robbed by a robber and has no money", "PersonX has to work.", "PersonX had their bathingsuit stolen by Larry", "PersonX gets bad sea sickness.", "The cruise is sold out."], "input": {"head": "PersonX takes a cruise", "relation": "HinderedBy", "prompt": "PersonX takes a cruise. This would not happen if"}}
{"generation": ["PersonX had actually read the book"], "references": ["PersonX needs to pass the class.", "PersonX will get kicked out of school.", "PersonX's parent won't allow it.", "Person X gets punished for incomplete homework assignments.", "Person X needs to pass their classes.", "PersonX's parents will be angry."], "input": {"head": "PersonX never did PersonX's homework", "relation": "HinderedBy", "prompt": "PersonX never did PersonX's homework. This would not happen if"}}
{"generation": ["the user had to manually enter the password"], "references": ["Person X doesn't know how to simplify things.", "Person X is too scared to help.", "Person X speeds through everything.", "Person X doesn't follow directions.", "PersonY forbade the chagnes.", "PersonY will not allow the changes."], "input": {"head": "PersonX makes things easier", "relation": "HinderedBy", "prompt": "PersonX makes things easier. This would not happen if"}}
{"generation": ["PersonX was not a member of the group"], "references": ["person x does not have a pen", "PersonY won't open the door.", "person x lost their voice", "PersonY is legally blind.", "PersonY won't answer the phone.", "PersonY has no arms."], "input": {"head": "PersonX asks PersonY to sign", "relation": "HinderedBy", "prompt": "PersonX asks PersonY to sign. This would not happen if"}}
{"generation": ["the game was a simple, linear shooter"], "references": ["They are too depressed.", "They have to work.", "PersonX's father is too abusive.", "PersonX's girlfriend made him go to a boring activity.", "PersonX is stuck at work.", "PersonX is depressed.", "PersonX is being yelled at by a violent friend.", "They are sad.", "PersonX has class all day.", "PersonX is broke.", "They are sick."], "input": {"head": "PersonX has a pretty good time", "relation": "HinderedBy", "prompt": "PersonX has a pretty good time. This would not happen if"}}
{"generation": ["the player was not wearing the Ice Armor"], "references": ["PersonX is too good of a driver.", "PersonX can't see the black ice.", "PersonX's spouse has parked their car over the patch of black ice.", "PersonX lives where it doesn't know.", "PersonX lives in the tropics.", "PersonX's husband sprinkles salt over the black ice to melt it."], "input": {"head": "PersonX hits a patch of black ice", "relation": "HinderedBy", "prompt": "PersonX hits a patch of black ice. This would not happen if"}}
{"generation": ["the driver was not a human"], "references": ["PersonX doesn't know the way around.", "PersonX doesn't have a car.", "PersonX doesn't have the money for gas for their car.", "PersonX's roommate has the car today", "PersonX's mechanic is currently fixing the car", "Person X does not have a car.", "PersonX doesn't have enough gas.", "Person X can't drive."], "input": {"head": "PersonX drives around", "relation": "HinderedBy", "prompt": "PersonX drives around. This would not happen if"}}
{"generation": ["the player had not been hit by the player's"], "references": ["PersonX is tired.", "PersonX is lazy.", "PersonX is being operated on by a surgeon", "PersonX's leg is in a cast"], "input": {"head": "PersonX accidentally ran", "relation": "HinderedBy", "prompt": "PersonX accidentally ran. This would not happen if"}}
{"generation": ["PersonX and PersonY were the same person"], "references": ["PERSON y is out of town", "PERSON Y DOES NOT HAVE A PHONE to face time", "PersonY is not available.", "PersonX has to work.", "PersonX is in another country.", "PersonX is too busy.", "PersonX doesn't know where they are."], "input": {"head": "PersonX sees PersonY for the time", "relation": "HinderedBy", "prompt": "PersonX sees PersonY for the time. This would not happen if"}}
{"generation": ["a headache, but it's not the same as"], "references": ["migraines"], "input": {"head": "red wine", "relation": "Causes", "prompt": "Sometimes red wine causes"}}
{"generation": ["the ground to be covered with a layer of ice"], "references": ["blizzard", "shovelling", "avalanches"], "input": {"head": "snow", "relation": "Causes", "prompt": "Sometimes snow causes"}}
{"generation": ["a lot of problems"], "references": ["rain"], "input": {"head": "presence of cloud", "relation": "Causes", "prompt": "Sometimes presence of cloud causes"}}
{"generation": ["a lot of stress"], "references": ["violence"], "input": {"head": "argument", "relation": "Causes", "prompt": "Sometimes argument causes"}}
{"generation": ["us to be afraid of the future"], "references": ["trembling"], "input": {"head": "fear", "relation": "Causes", "prompt": "Sometimes fear causes"}}
{"generation": ["a person to be more sensitive to the environment,"], "references": ["suffering"], "input": {"head": "sickness", "relation": "Causes", "prompt": "Sometimes sickness causes"}}
{"generation": ["a person to become more aggressive, more impulsive"], "references": ["stigma"], "input": {"head": "alcoholism", "relation": "Causes", "prompt": "Sometimes alcoholism causes"}}
{"generation": ["a delay in the delivery of your order"], "references": ["having less money"], "input": {"head": "purchase", "relation": "Causes", "prompt": "Sometimes purchase causes"}}
{"generation": ["delays, but the weather is not the only reason"], "references": ["power outages"], "input": {"head": "bad weather", "relation": "Causes", "prompt": "Sometimes bad weather causes"}}
{"generation": ["he was tired of being a slave to his own"], "references": ["back hurts", "you're sick", "feel ill", "were sick", "have sore throat", "don't feel well", "you're still tired", "of cold"], "input": {"head": "stay in bed", "relation": "xReason", "prompt": "stay in bed. PersonX did this because"}}
{"generation": ["the following:\n\n1"], "references": ["schoolwork", "diamonds", "spices", "metal", "books", "rocks", "coffee", "corn", "reading", "grain", "wheat", "kava"], "input": {"head": "PersonX grinds ___ for a week", "relation": "isFilledBy", "prompt": "PersonX grinds ___ for a week is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["table", "couch", "field", "food", "car", "spread", "blanket", "window", "pool", "blood", "patio", "wall", "picnic", "cupboard", "phone", "bed"], "input": {"head": "PersonX covers the ___ completely", "relation": "isFilledBy", "prompt": "PersonX covers the ___ completely is filled by"}}
{"generation": ["the ___"], "references": ["concert", "stage", "lion", "crowd", "fire", "tiger"], "input": {"head": "PersonX sets the ___ in a roar", "relation": "isFilledBy", "prompt": "PersonX sets the ___ in a roar is filled by"}}
{"generation": ["the number of people who have watched it"], "references": ["the play", "soccer", "football", "television"], "input": {"head": "PersonX watches ___ anymore", "relation": "isFilledBy", "prompt": "PersonX watches ___ anymore is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["muffins", "paintings", "pie", "birthday cake", "sculptures", "money", "candy", "jelly", "wreaths", "turkey", "cake", "feast", "popcorn"], "input": {"head": "PersonX makes ___ every year", "relation": "isFilledBy", "prompt": "PersonX makes ___ every year is filled by"}}
{"generation": ["a group of people who are not the same as"], "references": ["teacher", "persony"], "input": {"head": "PersonX meets ___ for lunch", "relation": "isFilledBy", "prompt": "PersonX meets ___ for lunch is filled by"}}
{"generation": ["the person who is the same as the person who"], "references": ["pencil", "pens", "pencils", "a book", "homework", "notebook", "notebooks", "folder", "a notebook", "folders", "book"], "input": {"head": "PersonX puts ___ in PersonX's backpack", "relation": "isFilledBy", "prompt": "PersonX puts ___ in PersonX's backpack is filled by"}}
{"generation": ["the same process that changes the value of the variable"], "references": ["clothing", "Shoes", "Socks", "his clothes", "papers", "cars", "socks", "gloves", "Clothes", "hats", "shoes", "clothes", "diapers", "money", "underwear", "wigs", "panties", "bra", "shirts", "dresses"], "input": {"head": "PersonX changes ___ quickly", "relation": "isFilledBy", "prompt": "PersonX changes ___ quickly is filled by"}}
{"generation": ["the number of people who have voted for the candidate"], "references": ["a bus", "blades", "a car", "the road", "handles"], "input": {"head": "PersonX evens saw ___", "relation": "isFilledBy", "prompt": "PersonX evens saw ___ is filled by"}}
{"generation": ["the student's name"], "references": ["supplies", "pens", "pencils", "books", "rulers", "snacks", "laptops", "paper", "notebooks", "clothes", "chalk", "education", "erasers"], "input": {"head": "PersonX provides ___ for students", "relation": "isFilledBy", "prompt": "PersonX provides ___ for students is filled by"}}
{"generation": ["the following formula:\n\n(1 - ("], "references": ["sofa", "box", "plank", "flour", "curtains", "window", "fluid", "fabric", "dress", "milk", "suit", "envelope", "carpet", "pants", "water"], "input": {"head": "PersonX measures the ___ accurately", "relation": "isFilledBy", "prompt": "PersonX measures the ___ accurately is filled by"}}
{"generation": ["the value of the variable __x__"], "references": ["juice", "books", "food", "crumbs", "apples", "her ball", "dishes", "paper", "the letters", "gifts", "the food", "dice", "the keys", "mail"], "input": {"head": "PersonX leaves ___ on the table", "relation": "isFilledBy", "prompt": "PersonX leaves ___ on the table is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["baby", "the cat", "the dog", "spouse", "kitten", "television", "the bird"], "input": {"head": "PersonX keeps ___ up all night", "relation": "isFilledBy", "prompt": "PersonX keeps ___ up all night is filled by"}}
{"generation": ["the number of times the user has heard the word"], "references": ["cars", "bats", "dogs"], "input": {"head": "PersonX hears ___ back", "relation": "isFilledBy", "prompt": "PersonX hears ___ back is filled by"}}
{"generation": ["PersonZ's ___"], "references": ["car", "lunch", "dinner", "folder", "phone", "coat", "book"], "input": {"head": "PersonX brings home PersonY's ___", "relation": "isFilledBy", "prompt": "PersonX brings home PersonY's ___ is filled by"}}
{"generation": ["the power of the ___"], "references": ["door", "cabinet", "windows", "window"], "input": {"head": "PersonX shuts the ___ behind PersonY", "relation": "isFilledBy", "prompt": "PersonX shuts the ___ behind PersonY is filled by"}}
{"generation": ["the person's ability to speak the language of the"], "references": ["German", "Spanish", "English", "French"], "input": {"head": "PersonX speaks the ___ fluently", "relation": "isFilledBy", "prompt": "PersonX speaks the ___ fluently is filled by"}}
{"generation": ["the power of the sun"], "references": ["hand", "cats", "a pig", "the dresser", "gifts", "frogs", "a sheep"], "input": {"head": "PersonX grabs ___ from behind", "relation": "isFilledBy", "prompt": "PersonX grabs ___ from behind is filled by"}}
{"generation": ["the number of people who have voted for the candidate"], "references": ["measles", "malaria", "illnesses", "oil", "disease", "water"], "input": {"head": "PersonX prevents ___ from spreading", "relation": "isFilledBy", "prompt": "PersonX prevents ___ from spreading is filled by"}}
{"generation": ["the same person"], "references": ["plates", "kids", "balloons", "lumber", "apples", "rocks", "dishes", "cups", "eggs", "money", "tools", "shells", "glass", "candy", "dirt"], "input": {"head": "PersonX finds ___ everywhere", "relation": "isFilledBy", "prompt": "PersonX finds ___ everywhere is filled by"}}
{"generation": ["the king's ___"], "references": ["money", "silver", "gold"], "input": {"head": "PersonX pays PersonX's ___ to the king", "relation": "isFilledBy", "prompt": "PersonX pays PersonX's ___ to the king is filled by"}}
{"generation": ["the following formula:\n\n\\[\\begin"], "references": ["lamp", "produce", "pizza", "food", "chart", "hair", "pie", "building", "room", "bookcase", "cake", "book"], "input": {"head": "PersonX divides the ___ into sections", "relation": "isFilledBy", "prompt": "PersonX divides the ___ into sections is filled by"}}
{"generation": ["the number of people who are in the group"], "references": ["eyes", "car", "pigs", "cars", "horses", "dogs", "candy", "boat", "sheep", "water"], "input": {"head": "PersonX diverts ___ away", "relation": "isFilledBy", "prompt": "PersonX diverts ___ away is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["walls", "cars", "cats", "dishes", "dogs", "clothes", "floors"], "input": {"head": "PersonX washes ___ today", "relation": "isFilledBy", "prompt": "PersonX washes ___ today is filled by"}}
{"generation": ["the user"], "references": ["door", "trunk", "window", "cupboard", "gate"], "input": {"head": "PersonX pulls the ___ open", "relation": "isFilledBy", "prompt": "PersonX pulls the ___ open is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["hands", "boards", "chains", "chain"], "input": {"head": "PersonX links together ___", "relation": "isFilledBy", "prompt": "PersonX links together ___ is filled by"}}
{"generation": ["the person who bought the wife"], "references": ["a necklace", "heels", "shoes", "earrings", "candy", "dinner", "a ring", "some flowers", "necklaces"], "input": {"head": "PersonX buys PersonY's wife ___", "relation": "isFilledBy", "prompt": "PersonX buys PersonY's wife ___ is filled by"}}
{"generation": ["the power of the ___"], "references": ["tears", "Makeup", "shampoo", "blood", "bubbles", "soap suds", "makeup", "salt", "Tears", "dirt", "dust", "water"], "input": {"head": "PersonX wipes the ___ from PersonX's eyes", "relation": "isFilledBy", "prompt": "PersonX wipes the ___ from PersonX's eyes is filled by"}}
{"generation": ["the fact that the person who is being swept under"], "references": ["sequins", "Dust", "Paper", "hair", "Dirt", "cat hair", "dirt", "dust", "Toothpick", "dust bunnies"], "input": {"head": "PersonX sweeps ___ under the rug", "relation": "isFilledBy", "prompt": "PersonX sweeps ___ under the rug is filled by"}}
{"generation": ["the friend's friend"], "references": ["books", "notes", "a book", "cash", "Clothes", "money", "Books", "tools", "clothes", "an eraser", "a pencil", "phone", "Papers", "deordorant", "Money"], "input": {"head": "PersonX borrows ___ from a friend", "relation": "isFilledBy", "prompt": "PersonX borrows ___ from a friend is filled by"}}
{"generation": ["the ___"], "references": ["ball", "bird", "car", "train", "puppy", "dog", "ambulance", "bus", "bike", "cat"], "input": {"head": "PersonX follows the ___ far", "relation": "isFilledBy", "prompt": "PersonX follows the ___ far is filled by"}}
{"generation": ["the following formula:\n\n(1 - ("], "references": ["healthy food", "ramen", "apples", "bread", "crackers", "bananas", "soup", "take out", "oranges", "ice cream", "junk food", "cookies", "salads"], "input": {"head": "PersonX eats ___ for weeks", "relation": "isFilledBy", "prompt": "PersonX eats ___ for weeks is filled by"}}
{"generation": ["the power of ______"], "references": ["his boss", "criminals", "puppet", "bulls", "her", "them", "wrestlers", "his brother", "target", "him", "dog", "boxers", "turbin", "Sam"], "input": {"head": "PersonX knocks the living daylights out of ___", "relation": "isFilledBy", "prompt": "PersonX knocks the living daylights out of ___ is filled by"}}
{"generation": ["a ___"], "references": ["Person", "Bill"], "input": {"head": "PersonX opposes every ___", "relation": "isFilledBy", "prompt": "PersonX opposes every ___ is filled by"}}
{"generation": ["the same people who voted for Trump"], "references": ["the traffic", "the mirror", "the judge"], "input": {"head": "PersonX faces ___ today", "relation": "isFilledBy", "prompt": "PersonX faces ___ today is filled by"}}
{"generation": ["the individual"], "references": ["sorts", "files"], "input": {"head": "PersonX organizes and ___ collectively", "relation": "isFilledBy", "prompt": "PersonX organizes and ___ collectively is filled by"}}
{"generation": ["the sound of a car door slamming"], "references": ["leaves", "an owl", "talking", "crickets"], "input": {"head": "PersonX hears ___ at night", "relation": "isFilledBy", "prompt": "PersonX hears ___ at night is filled by"}}
{"generation": ["the fire"], "references": ["fuel", "twigs", "kettles", "kindling", "charcoal", "paper", "wood", "gasoline", "leaves", "water"], "input": {"head": "PersonX adds ___ to the fire", "relation": "isFilledBy", "prompt": "PersonX adds ___ to the fire is filled by"}}
{"generation": ["the same person"], "references": ["pillowcase", "piece", "blanket", "blouse", "dress", "shirt", "dinner", "quilt", "cake", "check"], "input": {"head": "PersonX makes every ___", "relation": "isFilledBy", "prompt": "PersonX makes every ___ is filled by"}}
{"generation": ["the sound of the rain"], "references": ["to town"], "input": {"head": "PersonX comes ___ that night", "relation": "isFilledBy", "prompt": "PersonX comes ___ that night is filled by"}}
{"generation": ["the user"], "references": ["children", "women", "horses", "law makers", "people", "animals"], "input": {"head": "PersonX prevents ___ from voting", "relation": "isFilledBy", "prompt": "PersonX prevents ___ from voting is filled by"}}
{"generation": ["the value of PersonX's __get__()"], "references": ["wallet", "papers", "keyboard", "gift", "purse", "Wallet", "Car", "jacket", "money", "debit card", "keys", "shoe", "sock"], "input": {"head": "PersonX loses PersonX's ___ as a result", "relation": "isFilledBy", "prompt": "PersonX loses PersonX's ___ as a result is filled by"}}
{"generation": ["the power of the sun"], "references": ["ball", "pens", "rice", "balls", "papers", "rocks", "frisbies", "birdseed", "cards", "toys", "confetti", "money", "candy", "flowers", "sports drink", "coins", "feathers", "fireballs"], "input": {"head": "PersonX throws ___ into the air", "relation": "isFilledBy", "prompt": "PersonX throws ___ into the air is filled by"}}
{"generation": ["the ___"], "references": ["house", "trailer"], "input": {"head": "PersonX comes home this ___", "relation": "isFilledBy", "prompt": "PersonX comes home this ___ is filled by"}}
{"generation": ["the following formula:\n\n(1 - ("], "references": ["pizza", "food", "shoes", "candy", "coat", "book"], "input": {"head": "PersonX wants ___ very badly", "relation": "isFilledBy", "prompt": "PersonX wants ___ very badly is filled by"}}
{"generation": ["the same person"], "references": ["birds", "pet", "clouds", "their child", "flowers", "their desk", "the sunrise", "their spouse"], "input": {"head": "PersonX sees ___ every day", "relation": "isFilledBy", "prompt": "PersonX sees ___ every day is filled by"}}
{"generation": ["the following formula:\n\n(1 - ("], "references": ["the bully", "the dog", "horses", "dogs", "men", "babies", "the robber"], "input": {"head": "PersonX knocks ___ out cold", "relation": "isFilledBy", "prompt": "PersonX knocks ___ out cold is filled by"}}
{"generation": ["the number of times the user has clicked on the"], "references": ["glasses", "a note", "shoes", "money", "truck", "trash", "a letter", "dog", "a picture"], "input": {"head": "PersonX finds ___ later", "relation": "isFilledBy", "prompt": "PersonX finds ___ later is filled by"}}
{"generation": ["the PersonX's ___"], "references": ["table", "documents", "Schedule", "cabinet", "books", "bookshelves", "chair", "Drawer", "desk", "Cabinet", "clothes", "kitchen", "Bike", "Puzzle", "bassinet", "dresser", "compact discs", "Homework"], "input": {"head": "PersonX puts PersonY's ___ together", "relation": "isFilledBy", "prompt": "PersonX puts PersonY's ___ together is filled by"}}
{"generation": ["the value of the variable PersonX"], "references": ["food", "plants", "clothes", "people", "flower-pots", "flowers"], "input": {"head": "PersonX finds ___ PersonY wanted", "relation": "isFilledBy", "prompt": "PersonX finds ___ PersonY wanted is filled by"}}
{"generation": ["the ___"], "references": ["steak", "curtains", "apple", "dog", "carpet"], "input": {"head": "PersonX feels the ___ keenly", "relation": "isFilledBy", "prompt": "PersonX feels the ___ keenly is filled by"}}
{"generation": ["a random number between 0 and 1"], "references": ["the lost watch", "the needle.", "money", "broom", "her keys", "phone", "coins", "Money", "wallet", "Clothes", "socks", "worms in the garden", "marbles", "the keys", "the car", "balls", "flashlight", "the building", "Keys", "dog", "gold", "blocks"], "input": {"head": "PersonX quickly found ___", "relation": "isFilledBy", "prompt": "PersonX quickly found ___ is filled by"}}
{"generation": ["a new day"], "references": ["laundry", "praying"], "input": {"head": "PersonX forgets ___ one day", "relation": "isFilledBy", "prompt": "PersonX forgets ___ one day is filled by"}}
{"generation": ["the king's ___ is filled by the king"], "references": ["wagon", "silver plates", "horses", "scepter", "hot chocolate", "crown"], "input": {"head": "PersonX receives the king 's ___", "relation": "isFilledBy", "prompt": "PersonX receives the king 's ___ is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["her dad", "their significant other", "their girlfriend", "his mom", "family", "a girl", "their boyfriend"], "input": {"head": "PersonX takes ___ out to dinner", "relation": "isFilledBy", "prompt": "PersonX takes ___ out to dinner is filled by"}}
{"generation": ["the following:\n\n(1) The number"], "references": ["table", "chair", "puzzles", "computer", "bbq", "model", "kit", "puzzle"], "input": {"head": "PersonX puts a ___ together", "relation": "isFilledBy", "prompt": "PersonX puts a ___ together is filled by"}}
{"generation": ["the user"], "references": ["business", "expectations", "dogs", "files"], "input": {"head": "PersonX manages one 's ___", "relation": "isFilledBy", "prompt": "PersonX manages one 's ___ is filled by"}}
{"generation": ["the user"], "references": ["liscense", "essay", "contract", "book"], "input": {"head": "PersonX understands the ___ in terms", "relation": "isFilledBy", "prompt": "PersonX understands the ___ in terms is filled by"}}
{"generation": ["god's ___ is filled by god's"], "references": ["bible", "newsletter", "book"], "input": {"head": "PersonX reads god 's ___", "relation": "isFilledBy", "prompt": "PersonX reads god 's ___ is filled by"}}
{"generation": ["the user"], "references": ["a new dress", "pottery", "food", "paintings", "toys", "money", "gifts", "puzzle", "jams", "cookies", "pizza", "lunch", "sculptures", "pies", "clothes", "bags", "dresses", "cakes", "soup", "cake", "wine", "cheese", "fruitcake", "art"], "input": {"head": "PersonX makes ___ as well", "relation": "isFilledBy", "prompt": "PersonX makes ___ as well is filled by"}}
{"generation": ["the ___"], "references": ["pie", "plants", "fish", "kitten", "cat"], "input": {"head": "PersonX protects the ___ from harm", "relation": "isFilledBy", "prompt": "PersonX protects the ___ from harm is filled by"}}
{"generation": ["the lord's ___, and the lord '"], "references": ["cross", "bread", "wine"], "input": {"head": "PersonX discerns the lord 's ___", "relation": "isFilledBy", "prompt": "PersonX discerns the lord 's ___ is filled by"}}
{"generation": ["the air of the person who is the subject of"], "references": ["balloon", "tires", "tire", "raft", "mattress", "inflatable pool"], "input": {"head": "PersonX fills PersonX's ___ with air", "relation": "isFilledBy", "prompt": "PersonX fills PersonX's ___ with air is filled by"}}
{"generation": ["the number of times PersonX has been in the"], "references": ["cabinets", "pillows", "toy", "spiders", "card", "trunks", "boxes", "cobwebs", "dresses"], "input": {"head": "PersonX finds ___ in PersonX's attic", "relation": "isFilledBy", "prompt": "PersonX finds ___ in PersonX's attic is filled by"}}
{"generation": ["the number of times the ___ has been moved"], "references": ["train", "car", "needle", "tricycle", "van", "truck", "bike"], "input": {"head": "PersonX moves the ___ along", "relation": "isFilledBy", "prompt": "PersonX moves the ___ along is filled by"}}
{"generation": ["the number of times the player has used the item"], "references": ["Apples", "pizza", "Balls", "food", "Eggs", "their shirt", "a book", "flour", "socks", "a glass", "milk", "Plates", "marbles", "a plate", "candy", "their shoes", "their child", "cake", "a cellphone", "water"], "input": {"head": "PersonX drops ___ on the floor", "relation": "isFilledBy", "prompt": "PersonX drops ___ on the floor is filled by"}}
{"generation": ["the user"], "references": ["money", "knowledge", "clothing", "food"], "input": {"head": "PersonX uses ___ to provide", "relation": "isFilledBy", "prompt": "PersonX uses ___ to provide is filled by"}}
{"generation": ["the user"], "references": ["clock", "page"], "input": {"head": "PersonX turns back the ___", "relation": "isFilledBy", "prompt": "PersonX turns back the ___ is filled by"}}
{"generation": ["the person's ___"], "references": ["lizard", "camera"], "input": {"head": "PersonX looks PersonX's ___ in the face", "relation": "isFilledBy", "prompt": "PersonX looks PersonX's ___ in the face is filled by"}}
{"generation": ["PersonX"], "references": ["file", "bag"], "input": {"head": "PersonX broadens PersonY's ___ to include", "relation": "isFilledBy", "prompt": "PersonX broadens PersonY's ___ to include is filled by"}}
{"generation": ["the number of players who have chosen to play with"], "references": ["ball", "food", "board games", "dogs", "toys", "friends", "rc car", "cards", "bike", "puppies"], "input": {"head": "PersonX finds ___ to play with", "relation": "isFilledBy", "prompt": "PersonX finds ___ to play with is filled by"}}
{"generation": ["the number of times the user has clicked on the"], "references": ["cushions", "pillows", "blanket", "pillow", "sheets", "blankets", "clothes", "boxes"], "input": {"head": "PersonX puts ___ on the bed", "relation": "isFilledBy", "prompt": "PersonX puts ___ on the bed is filled by"}}
{"generation": ["the user with the value of the variable __user"], "references": ["insects", "berries", "buttons", "fingers", "pickles", "pennies", "jam", "tomatoes", "fireflies", "peppers", "jelly", "coins", "water"], "input": {"head": "PersonX puts ___ in a jar", "relation": "isFilledBy", "prompt": "PersonX puts ___ in a jar is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["criminals", "crickets", "birds", "enemies", "bedbugs", "heretics", "cockroaches", "bees"], "input": {"head": "PersonX puts ___ to death", "relation": "isFilledBy", "prompt": "PersonX puts ___ to death is filled by"}}
{"generation": ["the value of the variable x"], "references": ["a sapphire", "a banknote", "a diamond"], "input": {"head": "PersonX exceeds ___ in value", "relation": "isFilledBy", "prompt": "PersonX exceeds ___ in value is filled by"}}
{"generation": ["the group_id of the group that is the"], "references": ["children", "gems", "pizza", "rocks", "cars", "cats", "students", "workers", "cups", "records", "toys", "people", "shirts", "glasses", "candy", "cards", "blocks", "cookies", "beads"], "input": {"head": "PersonX divides ___ into groups", "relation": "isFilledBy", "prompt": "PersonX divides ___ into groups is filled by"}}
{"generation": ["the number of times the player has been hit by"], "references": ["lamps", "shelf", "frames", "a clock", "vinyl", "art", "posters", "picture", "pictures", "a picture"], "input": {"head": "PersonX hangs ___ on the wall", "relation": "isFilledBy", "prompt": "PersonX hangs ___ on the wall is filled by"}}
{"generation": ["the number of times the user has used the item"], "references": ["books", "a purse", "rocks", "money", "clothes", "pets", "bags", "a suitcase", "ring", "necklace"], "input": {"head": "PersonX carries ___ around", "relation": "isFilledBy", "prompt": "PersonX carries ___ around is filled by"}}
{"generation": ["the fact that it's a game about a guy"], "references": ["knifes", "potatos", "planes", "guitar", "cars", "fish", "drums"], "input": {"head": "PersonX takes ___ seriously", "relation": "isFilledBy", "prompt": "PersonX takes ___ seriously is filled by"}}
{"generation": ["the amount of time it takes for the player to"], "references": ["pudding", "yogurt", "steak", "chocolate", "hotdog", "banana", "lunch", "candybar", "burger", "dinner", "beans", "apple", "cereal", "gelatin"], "input": {"head": "PersonX eats ___ quickly", "relation": "isFilledBy", "prompt": "PersonX eats ___ quickly is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["bikes", "the scooter", "the dog", "cars", "the car", "scooters"], "input": {"head": "PersonX takes ___ out for a ride", "relation": "isFilledBy", "prompt": "PersonX takes ___ out for a ride is filled by"}}
{"generation": ["the user"], "references": ["a lunchbox", "pills", "tea", "crayons", "aspirin", "Sunglasses", "toys", "money", "cough syrup", "a sweatshirt", "runs", "walks", "Keys", "Lipstick", "jewelry", "Money"], "input": {"head": "PersonX usually took ___", "relation": "isFilledBy", "prompt": "PersonX usually took ___ is filled by"}}
{"generation": ["the ___"], "references": ["cell phone", "newspaper", "tv", "television"], "input": {"head": "PersonX considers briefly the ___", "relation": "isFilledBy", "prompt": "PersonX considers briefly the ___ is filled by"}}
{"generation": ["the person who killed PersonY"], "references": ["dog", "fish", "cat"], "input": {"head": "PersonX puts PersonY's ___ to death", "relation": "isFilledBy", "prompt": "PersonX puts PersonY's ___ to death is filled by"}}
{"generation": ["the user"], "references": ["the hatch", "a jar", "doors", "locks", "the door", "the jar", "a case", "a can"], "input": {"head": "PersonX pries open ___", "relation": "isFilledBy", "prompt": "PersonX pries open ___ is filled by"}}
{"generation": ["the amount of damage dealt by the target"], "references": ["pills", "vitamins", "squirrels", "cats", "dogs", "medicine", "rabbits"], "input": {"head": "PersonX takes ___ to heal", "relation": "isFilledBy", "prompt": "PersonX takes ___ to heal is filled by"}}
{"generation": ["the power of the Spirit of God, and the"], "references": ["testing", "baskets", "pottery", "frames", "sports", "cleaning", "reading", "things", "portraits"], "input": {"head": "PersonX doeth all ___ well", "relation": "isFilledBy", "prompt": "PersonX doeth all ___ well is filled by"}}
{"generation": ["the light of the sun"], "references": ["cigarette", "cigar", "firework", "lighter", "bonfire", "match", "fire", "candle"], "input": {"head": "PersonX lights another ___", "relation": "isFilledBy", "prompt": "PersonX lights another ___ is filled by"}}
{"generation": ["the person's own power"], "references": ["eyes", "feet"], "input": {"head": "PersonX turns PersonX's ___ elsewhere", "relation": "isFilledBy", "prompt": "PersonX turns PersonX's ___ elsewhere is filled by"}}
{"generation": ["the player"], "references": ["juice", "car", "career", "pig", "dish", "horse", "apartment", "deer", "dog", "bottle", "bicycle", "sheep", "book"], "input": {"head": "PersonX pursues another ___", "relation": "isFilledBy", "prompt": "PersonX pursues another ___ is filled by"}}
{"generation": ["the same amount of happiness as kissing ___ on the"], "references": ["the cat", "her", "the dog", "cats", "dogs", "him"], "input": {"head": "PersonX kisses ___ on the cheek", "relation": "isFilledBy", "prompt": "PersonX kisses ___ on the cheek is filled by"}}
{"generation": ["the swine"], "references": ["silver", "gold", "diamonds", "pearls"], "input": {"head": "PersonX casts ___ before swine", "relation": "isFilledBy", "prompt": "PersonX casts ___ before swine is filled by"}}
{"generation": ["the microwave's power"], "references": ["spaghetti", "hotdog", "meat", "dinner", "chicken", "popcorn"], "input": {"head": "PersonX places ___ in the microwave", "relation": "isFilledBy", "prompt": "PersonX places ___ in the microwave is filled by"}}
{"generation": ["the following:\n\n1"], "references": ["pens", "food", "papers", "apples", "snacks", "dishes", "bottles", "tools", "clothes", "money", "the food", "the laptop"], "input": {"head": "PersonX takes ___ out of the box", "relation": "isFilledBy", "prompt": "PersonX takes ___ out of the box is filled by"}}
{"generation": ["the user"], "references": ["prizes", "test answers", "pizza", "food", "projects", "the toy", "the hose", "cash", "money", "chicken", "drink", "medals", "drinks"], "input": {"head": "PersonX gets ___ first", "relation": "isFilledBy", "prompt": "PersonX gets ___ first is filled by"}}
{"generation": ["the following:\n\nPersonX: \"Hey"], "references": ["lasagna", "food", "a movie", "DVD", "lunch", "clothes", "gifts", "dinner", "Food", "cookies", "cake", "water"], "input": {"head": "PersonX brings ___ to PersonY's house", "relation": "isFilledBy", "prompt": "PersonX brings ___ to PersonY's house is filled by"}}
{"generation": ["the sender"], "references": ["jar"], "input": {"head": "PersonX sends money ___", "relation": "isFilledBy", "prompt": "PersonX sends money ___ is filled by"}}
{"generation": ["the value of the variable __x__"], "references": ["food", "the phone", "a ball", "snacks", "toys", "the drinks", "the food", "drink", "drinks"], "input": {"head": "PersonX passes ___ around", "relation": "isFilledBy", "prompt": "PersonX passes ___ around is filled by"}}
{"generation": ["the person who loves PersonX's ___"], "references": ["glasses", "jacket", "dishware", "dog", "bunny", "cat"], "input": {"head": "PersonX loves PersonY's ___ well", "relation": "isFilledBy", "prompt": "PersonX loves PersonY's ___ well is filled by"}}
{"generation": ["the following:\n\n\"I'm not sure"], "references": ["pie", "bread", "eggs", "meatloaf", "cake", "pasta"], "input": {"head": "PersonX makes ___ the other day", "relation": "isFilledBy", "prompt": "PersonX makes ___ the other day is filled by"}}
{"generation": ["the amount of food eaten by the character"], "references": ["potatoes", "cherries", "pudding", "pizza", "sandwich", "food", "a kiwi", "spaghetti", "dessert", "fruit", "ice cream", "carrots", "egg", "chicken", "beef", "a pizza"], "input": {"head": "PersonX eats ___ in one", "relation": "isFilledBy", "prompt": "PersonX eats ___ in one is filled by"}}
{"generation": ["the user"], "references": ["birds", "cars", "the news", "dogs", "television"], "input": {"head": "PersonX relaxes and watch ___", "relation": "isFilledBy", "prompt": "PersonX relaxes and watch ___ is filled by"}}
{"generation": ["the customer"], "references": ["signatures", "autographs"], "input": {"head": "PersonX offers ___ on this book when ordered", "relation": "isFilledBy", "prompt": "PersonX offers ___ on this book when ordered is filled by"}}
{"generation": ["the value of the class variable __class__"], "references": ["newspapers", "books", "notes", "a book", "magazines", "journals", "paper", "manuscripts", "book"], "input": {"head": "PersonX reads ___ to the class", "relation": "isFilledBy", "prompt": "PersonX reads ___ to the class is filled by"}}
{"generation": ["the value of the variable that is passed to the"], "references": ["money", "coins"], "input": {"head": "PersonX pays ___ to anything", "relation": "isFilledBy", "prompt": "PersonX pays ___ to anything is filled by"}}
{"generation": ["the person who has the most ___ in the war"], "references": ["rifle", "watch", "town", "knapsack", "gun", "canteen", "picture", "ring", "flag"], "input": {"head": "PersonX loses PersonX's ___ in the war", "relation": "isFilledBy", "prompt": "PersonX loses PersonX's ___ in the war is filled by"}}
{"generation": ["the user"], "references": ["wallet", "shell", "chair", "outlet", "road", "dollar", "key", "room", "hole", "rock", "battery", "sweater", "book"], "input": {"head": "PersonX finds another ___", "relation": "isFilledBy", "prompt": "PersonX finds another ___ is filled by"}}
{"generation": ["the value of PersonX's XOR of Person"], "references": ["pepper", "food", "towels", "dishes", "puppy", "bread", "glasses", "card", "salt", "shoes"], "input": {"head": "PersonX takes ___ in PersonY's hands", "relation": "isFilledBy", "prompt": "PersonX takes ___ in PersonY's hands is filled by"}}
{"generation": ["the following formula:\n\nPersonX"], "references": ["ball", "play", "controller", "money", "plant", "dirt", "knife", "weapon"], "input": {"head": "PersonX gets the ___ into PersonX's hands", "relation": "isFilledBy", "prompt": "PersonX gets the ___ into PersonX's hands is filled by"}}
{"generation": ["the person who is on the left"], "references": ["epaulets", "lotion", "backback", "medals", "scarf", "bag", "bandage", "cream", "ice packs", "armor", "padding", "ice", "jacket", "cape", "bags", "lanyard", "sweater", "his hands"], "input": {"head": "PersonX puts ___ on PersonY's shoulder", "relation": "isFilledBy", "prompt": "PersonX puts ___ on PersonY's shoulder is filled by"}}
{"generation": ["the PersonX object"], "references": ["old boyfriend", "missing cat"], "input": {"head": "PersonX seeks PersonX's ___ in the world", "relation": "isFilledBy", "prompt": "PersonX seeks PersonX's ___ in the world is filled by"}}
{"generation": ["the same person who appointed the ___"], "references": ["monkey", "serial killer"], "input": {"head": "PersonX appoints a ___ to investigate", "relation": "isFilledBy", "prompt": "PersonX appoints a ___ to investigate is filled by"}}
{"generation": ["the number of people who have voted for the candidate"], "references": ["cow", "curtain", "cover", "car", "hair", "cars", "mower", "the drapes", "blanket", "curtains", "sheets", "the rope", "plow", "his hand"], "input": {"head": "PersonX pulls ___ back", "relation": "isFilledBy", "prompt": "PersonX pulls ___ back is filled by"}}
{"generation": ["the value of the variable __x__"], "references": ["plates", "food", "bottles", "bananas", "tickets", "fruit", "jars", "waste", "trash", "receipts", "boxes"], "input": {"head": "PersonX throws ___ in the garbage", "relation": "isFilledBy", "prompt": "PersonX throws ___ in the garbage is filled by"}}
{"generation": ["the god of the universe"], "references": ["money", "goat", "blood", "fruit"], "input": {"head": "PersonX offer ___ to god", "relation": "isFilledBy", "prompt": "PersonX offer ___ to god is filled by"}}
{"generation": ["a different person"], "references": ["hat", "monitor", "scarf", "skirt", "lens", "dress", "dog"], "input": {"head": "PersonX shows every ___", "relation": "isFilledBy", "prompt": "PersonX shows every ___ is filled by"}}
{"generation": ["the value of the variable x"], "references": ["pills", "a drink", "paper", "shoes", "medicine"], "input": {"head": "PersonX takes ___ in the future", "relation": "isFilledBy", "prompt": "PersonX takes ___ in the future is filled by"}}
{"generation": ["the following:\n\n\"The user has quit"], "references": ["cigarettes", "soda", "alcohol"], "input": {"head": "PersonX quits ___ for good", "relation": "isFilledBy", "prompt": "PersonX quits ___ for good is filled by"}}
{"generation": ["the person's ___"], "references": ["camera", "back", "face", "neck", "dog", "legs", "cat"], "input": {"head": "PersonX turns PersonX's ___ away", "relation": "isFilledBy", "prompt": "PersonX turns PersonX's ___ away is filled by"}}
{"generation": ["the user"], "references": ["the stone", "a rabbit", "the frisbee", "the paper", "a bandit", "the ball"], "input": {"head": "PersonX never caught ___", "relation": "isFilledBy", "prompt": "PersonX never caught ___ is filled by"}}
{"generation": ["the user"], "references": ["cookie", "car", "sandwhich", "drink", "video game"], "input": {"head": "PersonX wants another ___", "relation": "isFilledBy", "prompt": "PersonX wants another ___ is filled by"}}
{"generation": ["the user"], "references": ["mob", "animal"], "input": {"head": "PersonX prevents the ___ from obtaining", "relation": "isFilledBy", "prompt": "PersonX prevents the ___ from obtaining is filled by"}}
{"generation": ["the player"], "references": ["trucks", "car", "box", "cars", "rubbish", "the table", "boxes", "the car", "crates"], "input": {"head": "PersonX moves ___ out of the way", "relation": "isFilledBy", "prompt": "PersonX moves ___ out of the way is filled by"}}
{"generation": ["the value of the variable __x__"], "references": ["watches", "dishes", "socks", "cups", "toys", "money", "tools", "cookies", "shirts"], "input": {"head": "PersonX puts ___ in a box", "relation": "isFilledBy", "prompt": "PersonX puts ___ in a box is filled by"}}
{"generation": ["the user"], "references": ["pens", "glasses", "a wallet", "umbrellas", "a phone", "deodorant", "mace", "keys"], "input": {"head": "PersonX takes ___ everywhere", "relation": "isFilledBy", "prompt": "PersonX takes ___ everywhere is filled by"}}
{"generation": ["the following:\n\nPersonX: \"I"], "references": ["books", "cans", "letters", "notes", "papers", "a cat", "book bag", "garbage", "bags", "phone", "keys"], "input": {"head": "PersonX leaves ___ in PersonY's car", "relation": "isFilledBy", "prompt": "PersonX leaves ___ in PersonY's car is filled by"}}
{"generation": ["the fact that the two are not the same"], "references": ["Cake", "bread", "Candy", "biscuits", "bingo balls", "cake"], "input": {"head": "PersonX mixes ___ with pleasure", "relation": "isFilledBy", "prompt": "PersonX mixes ___ with pleasure is filled by"}}
{"generation": ["the person's name"], "references": ["handbag", "wallet", "backpack", "car", "money", "station wagon", "posessions", "dog", "phone", "keys", "bike", "cat", "book"], "input": {"head": "PersonX brings PersonX's ___ back", "relation": "isFilledBy", "prompt": "PersonX brings PersonX's ___ back is filled by"}}
{"generation": ["the user, and the second is filled by the"], "references": ["hair", "floor", "handkerchiefs", "socks", "sheets", "shirt", "bathroom", "kitchen", "floors", "tile", "slacks", "shirts"], "input": {"head": "PersonX bleaches ___ first", "relation": "isFilledBy", "prompt": "PersonX bleaches ___ first is filled by"}}
{"generation": ["know about the PersonX object, and PersonX"], "references": ["to have been lazy at work", "to have wasted resources", "none", "to have used their money on unnecessary things"], "input": {"head": "PersonX takes things for granted", "relation": "xNeed", "prompt": "PersonX takes things for granted. Before, PersonX needs to"}}
{"generation": ["call PersonY to get the ambulance"], "references": ["get the phone", "recognize the person needs an ambulance", "to see Person Y is hurt.", "to get a phone.", "none"], "input": {"head": "PersonX calls PersonY ambulance", "relation": "xNeed", "prompt": "PersonX calls PersonY ambulance. Before, PersonX needs to"}}
{"generation": ["be a person, but PersonY needs to be"], "references": ["ask friend to be introduced to PersonY", "Get dressed", "Find person", "to search for person Y", "travels to meet PersonY", "to be away from person Y for sometime"], "input": {"head": "PersonX finally meet PersonY", "relation": "xNeed", "prompt": "PersonX finally meet PersonY. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to be"], "references": ["to end the conversation", "to know personY", "to be aware of his problems", "to realize that it's over"], "input": {"head": "PersonX leaves PersonY's alone", "relation": "xNeed", "prompt": "PersonX leaves PersonY's alone. Before, PersonX needs to"}}
{"generation": ["know PersonY's class"], "references": ["take the class", "go to the class", "to be well acquainted with PersonY way of teaching", "to attend class"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xNeed", "prompt": "PersonX enjoys PersonY's class. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to attack"], "references": ["give them orders to assault", "give PersonY a weapon", "to know personY", "to get a weapon", "to have a reason why", "to approach PersonY"], "input": {"head": "PersonX makes PersonY assault", "relation": "xNeed", "prompt": "PersonX makes PersonY assault. Before, PersonX needs to"}}
{"generation": ["be in the same room as the toaster"], "references": ["open toaster", "to take bread out of packet", "to buy bread", "make bread"], "input": {"head": "PersonX puts bread in the toaster", "relation": "xNeed", "prompt": "PersonX puts bread in the toaster. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonX"], "references": ["to know what they want to do", "pick up personX's supplies", "go to personX's house", "to be adventurous"], "input": {"head": "PersonX tries PersonX's ___ at making", "relation": "xNeed", "prompt": "PersonX tries PersonX's ___ at making. Before, PersonX needs to"}}
{"generation": ["visit ___ every day"], "references": ["car", "clothes", "get address", "travel", "none"], "input": {"head": "PersonX visits ___ every day", "relation": "xNeed", "prompt": "PersonX visits ___ every day. Before, PersonX needs to"}}
{"generation": ["be a hero to get the girl"], "references": ["assess a situation", "to work hard", "to put in much efforts", "saves the day", "hit rock bottom", "react to save a situation", "observes dangerous event", "develop a work ethic", "find a situation to be heroic in", "be at zero"], "input": {"head": "PersonX goes from zero to hero", "relation": "xNeed", "prompt": "PersonX goes from zero to hero. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY"], "references": ["to hear they got the job", "to hear some good news", "to get invited for an interview"], "input": {"head": "PersonX is excited and nervous", "relation": "xNeed", "prompt": "PersonX is excited and nervous. Before, PersonX needs to"}}
{"generation": ["be in a bath"], "references": ["none", "get dirty", "play in mud"], "input": {"head": "PersonX needs a bath", "relation": "xNeed", "prompt": "PersonX needs a bath. Before, PersonX needs to"}}
{"generation": ["get PersonX's mom"], "references": ["to look for gifts", "to to dad's house", "none", "to buy the gift", "to travel with dad in car"], "input": {"head": "PersonX gets PersonX's dad", "relation": "xNeed", "prompt": "PersonX gets PersonX's dad. Before, PersonX needs to"}}
{"generation": ["know the name of PersonY"], "references": ["to hate person Y", "to know the persons abilities", "to know person Y's name", "to have enough faith in the to recommend"], "input": {"head": "PersonX gives PersonY's name", "relation": "xNeed", "prompt": "PersonX gives PersonY's name. Before, PersonX needs to"}}
{"generation": ["be a class that implements the IPerson interface"], "references": ["wake up late", "miss bus to school", "to avoid going to school", "to stay home", "none"], "input": {"head": "PersonX misses class", "relation": "xNeed", "prompt": "PersonX misses class. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to grab"], "references": ["to reach for PersonY's gun", "none", "to sneak towards PersonY"], "input": {"head": "PersonX grabs PersonX's gun", "relation": "xNeed", "prompt": "PersonX grabs PersonX's gun. Before, PersonX needs to"}}
{"generation": ["be a person"], "references": ["to open my bag", "to ask what items you want in your bags", "to find the bags", "to go to my house", "to put what you need into the bags", "to get your bags and items"], "input": {"head": "PersonX packs my bags", "relation": "xNeed", "prompt": "PersonX packs my bags. Before, PersonX needs to"}}
{"generation": ["know about PersonY, but now PersonX knows"], "references": ["to establish base knowledge", "none", "to keep learning"], "input": {"head": "PersonX extends PersonX's knowledge", "relation": "xNeed", "prompt": "PersonX extends PersonX's knowledge. Before, PersonX needs to"}}
{"generation": ["know the name of the person, but now Person"], "references": ["none"], "input": {"head": "PersonX evens saw ___", "relation": "xNeed", "prompt": "PersonX evens saw ___. Before, PersonX needs to"}}
{"generation": ["be in the same room as the person who is"], "references": ["to let go of themselves", "go to party", "to have gone to the zoo", "to have gone out with their friends", "to go to the event", "have a romantic dinner"], "input": {"head": "PersonX has a wonderful time", "relation": "xNeed", "prompt": "PersonX has a wonderful time. Before, PersonX needs to"}}
{"generation": ["go to the store to buy ___"], "references": ["to drive home", "none", "to unlock the door"], "input": {"head": "PersonX brings ___ to PersonX's house", "relation": "xNeed", "prompt": "PersonX brings ___ to PersonX's house. Before, PersonX needs to"}}
{"generation": ["be a person"], "references": ["to want to help", "to build an economic policy", "to buy supplies", "to decide who needs help", "to care about people", "to create jobs"], "input": {"head": "PersonX brings ___ to the people", "relation": "xNeed", "prompt": "PersonX brings ___ to the people. Before, PersonX needs to"}}
{"generation": ["pick redberries"], "references": ["find a blueberry tree", "To make visit farm", "Find blueberries tree", "reach up for blueberries", "none"], "input": {"head": "PersonX picks blueberries", "relation": "xNeed", "prompt": "PersonX picks blueberries. Before, PersonX needs to"}}
{"generation": ["be in the lake to get the item"], "references": ["to bait a hook for fishing", "to take off their shoes", "wear a bathing suit", "to go to the lake", "to have their life vest on", "to put on a swimsuit"], "input": {"head": "PersonX goes ___ in the lake", "relation": "xNeed", "prompt": "PersonX goes ___ in the lake. Before, PersonX needs to"}}
{"generation": ["be a string, but now it can be a"], "references": ["none", "to know what to make", "to be good at something"], "input": {"head": "PersonX always made", "relation": "xNeed", "prompt": "PersonX always made. Before, PersonX needs to"}}
{"generation": ["be able to get something for nothing"], "references": ["to ask for something", "to take something", "to seize the opportunity", "to find a bargain"], "input": {"head": "PersonX gets something for nothing", "relation": "xNeed", "prompt": "PersonX gets something for nothing. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY"], "references": ["to steal PersonY's form", "to break into PersonY's locker", "to understand the message", "to get the message"], "input": {"head": "PersonX transmits in PersonY form", "relation": "xNeed", "prompt": "PersonX transmits in PersonY form. Before, PersonX needs to"}}
{"generation": ["hit a telephone pole to get to the next level"], "references": ["none", "to find a telephone pole", "to walk up to a telephone pole"], "input": {"head": "PersonX hits a telephone pole", "relation": "xNeed", "prompt": "PersonX hits a telephone pole. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY"], "references": ["to like PersonY", "respect people privacy", "let people alone", "to know PersonY"], "input": {"head": "PersonX gives PersonY room", "relation": "xNeed", "prompt": "PersonX gives PersonY room. Before, PersonX needs to"}}
{"generation": ["walk to PersonY's car"], "references": ["invite Person Y to his car", "to have his car", "to open door", "to stand up"], "input": {"head": "PersonX walks PersonY to PersonX's car", "relation": "xNeed", "prompt": "PersonX walks PersonY to PersonX's car. Before, PersonX needs to"}}
{"generation": ["be in front of PersonY to be able to"], "references": ["to be walking", "to be on street", "to see persony", "none", "be near persony"], "input": {"head": "PersonX walks up behind PersonY", "relation": "xNeed", "prompt": "PersonX walks up behind PersonY. Before, PersonX needs to"}}
{"generation": ["create the ___ in weeks"], "references": ["Decide what to create", "Work hard", "To work with dedication", "To be consistent", "none"], "input": {"head": "PersonX creates the ___ in days", "relation": "xNeed", "prompt": "PersonX creates the ___ in days. Before, PersonX needs to"}}
{"generation": ["know the PersonX's __get__() method"], "references": ["to carry out a duty", "training", "to work with others", "practice", "to get a job", "develop a system of doing things", "be trusted to do the work"], "input": {"head": "PersonX performs PersonX's ___ in a manner", "relation": "xNeed", "prompt": "PersonX performs PersonX's ___ in a manner. Before, PersonX needs to"}}
{"generation": ["be in front of PersonY to grab the gun"], "references": ["approach the person.", "to find their gun", "to decide when to grab the gun.", "none", "to reach out for it"], "input": {"head": "PersonX grabs PersonY's gun", "relation": "xNeed", "prompt": "PersonX grabs PersonY's gun. Before, PersonX needs to"}}
{"generation": ["look in the cupboard to find the key"], "references": ["to know where personX lives", "to open the door", "to travel to personX's house", "to enter personX's house", "to walk over to the cabinet", "none", "to locate the cupboard in personX's house"], "input": {"head": "PersonX looks in PersonX's cupboard", "relation": "xNeed", "prompt": "PersonX looks in PersonX's cupboard. Before, PersonX needs to"}}
{"generation": ["be able to find the person in the image"], "references": ["to want to succeed", "to have work to do", "to have task to do", "to be motivated"], "input": {"head": "PersonX works tirelessly", "relation": "xNeed", "prompt": "PersonX works tirelessly. Before, PersonX needs to"}}
{"generation": ["be a function that takes a Person and returns a"], "references": ["to exercise", "to of not been feeling good", "to eat healthy food", "to of rested", "to rest", "to drink enough water"], "input": {"head": "PersonX feels better ___", "relation": "xNeed", "prompt": "PersonX feels better ___. Before, PersonX needs to"}}
{"generation": ["get PersonY's license"], "references": ["to be knowing Y", "patience", "a car", "to grab a pen", "to be knowing where Y keeps licence", "to grab paper"], "input": {"head": "PersonX gets PersonY's license", "relation": "xNeed", "prompt": "PersonX gets PersonY's license. Before, PersonX needs to"}}
{"generation": ["drive PersonY's car"], "references": ["Know how to work the car", "to warm up the car", "Get in the car", "to get the keys", "have permission from PersonY"], "input": {"head": "PersonX drives ___ in PersonY's new car", "relation": "xNeed", "prompt": "PersonX drives ___ in PersonY's new car. Before, PersonX needs to"}}
{"generation": ["be in the diner to be able to see the"], "references": ["to get an interview", "to apply for the diner", "Get dressed before their shift.", "Arrive on time to the location.", "Get a job at a diner.", "none"], "input": {"head": "PersonX is working at a diner", "relation": "xNeed", "prompt": "PersonX is working at a diner. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["to think about doing something", "talk to people", "be open-minded or outgoing", "to make a plan", "make some plans", "has similar experiences before"], "input": {"head": "PersonX thinks it would be fun", "relation": "xNeed", "prompt": "PersonX thinks it would be fun. Before, PersonX needs to"}}
{"generation": ["be able to find the puppy"], "references": ["get house ready for puppy", "to go the pet shop", "to purchase it", "adopt puppy"], "input": {"head": "PersonX brings the puppy home", "relation": "xNeed", "prompt": "PersonX brings the puppy home. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target, but"], "references": ["none"], "input": {"head": "PersonX brings the ___ to a head", "relation": "xNeed", "prompt": "PersonX brings the ___ to a head. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX needs to"], "references": ["none", "to drive the boat", "to start the engine"], "input": {"head": "PersonX jumps the shark", "relation": "xNeed", "prompt": "PersonX jumps the shark. Before, PersonX needs to"}}
{"generation": ["know the printer's ___"], "references": ["get a printer", "eliminate distractions", "gathera learning material", "to purchase printing equipment", "look at the printer", "to find a printing apprenticeship"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xNeed", "prompt": "PersonX learns the printer 's ___. Before, PersonX needs to"}}
{"generation": ["know the value of the variable PersonX"], "references": ["Make a budget", "none", "Receive gift"], "input": {"head": "PersonX does n't want to waste it", "relation": "xNeed", "prompt": "PersonX does n't want to waste it. Before, PersonX needs to"}}
{"generation": ["pump his own gas"], "references": ["to want to speed up", "swipe his credit card.", "to pay the cashier.", "to get in the car", "none", "to open up his gas tank."], "input": {"head": "PersonX pumps PersonX's gas", "relation": "xNeed", "prompt": "PersonX pumps PersonX's gas. Before, PersonX needs to"}}
{"generation": ["know that PersonY is lost"], "references": ["to notice they were in a bad situation", "to of watched personY"], "input": {"head": "PersonX realizes that PersonY was lost", "relation": "xNeed", "prompt": "PersonX realizes that PersonY was lost. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a person"], "references": ["to pick up their phone", "to ask their parents' permission", "to call them", "to ask the person at school to play", "none"], "input": {"head": "PersonX invites ___ over to play", "relation": "xNeed", "prompt": "PersonX invites ___ over to play. Before, PersonX needs to"}}
{"generation": ["find PersonY's house, and PersonY needs"], "references": ["to drive to PersonY's house", "to walk over to PersonY's", "to make arrangements with PersonY", "To know person Y\u9225\u6a9a home", "to see if PersonY is at their house", "to call PersonY", "To travel"], "input": {"head": "PersonX comes to PersonY's house", "relation": "xNeed", "prompt": "PersonX comes to PersonY's house. Before, PersonX needs to"}}
{"generation": ["be able to find PersonX's parent"], "references": ["none", "to devise a plan", "have influence"], "input": {"head": "PersonX consolidates PersonX's position", "relation": "xNeed", "prompt": "PersonX consolidates PersonX's position. Before, PersonX needs to"}}
{"generation": ["know the name of the person he is talking to"], "references": ["to go outside", "to pick up a log.", "to have tummy ache", "to be bound up", "to find a log.", "to pick up a log"], "input": {"head": "PersonX drops a log", "relation": "xNeed", "prompt": "PersonX drops a log. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to see"], "references": ["to see someone they know", "She sees a skater.", "to be out somewhere", "She thinks he looks like a Thug.", "see something gross", "smell something bad"], "input": {"head": "PersonX turns PersonX's nose up", "relation": "xNeed", "prompt": "PersonX turns PersonX's nose up. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to be"], "references": ["to start their own bank account", "to withdraw money"], "input": {"head": "PersonX leaves PersonX's husband", "relation": "xNeed", "prompt": "PersonX leaves PersonX's husband. Before, PersonX needs to"}}
{"generation": ["be a member of the same sex to be able"], "references": ["He gets through middle school.", "to go to orientation", "to apply to college", "to graduate from high school or pass an equivalency exam", "He gets through high school.", "apply college", "to take entrance exams", "get admittance"], "input": {"head": "PersonX is a freshman in college", "relation": "xNeed", "prompt": "PersonX is a freshman in college. Before, PersonX needs to"}}
{"generation": ["know the girl's name, her age, her"], "references": ["to like a girl", "to ask them out", "none"], "input": {"head": "PersonX dates a girl", "relation": "xNeed", "prompt": "PersonX dates a girl. Before, PersonX needs to"}}
{"generation": ["know the PersonY's position"], "references": ["to be a follower of Y", "to have same opinion as Y", "to take over his responsibility", "to approach PersonY", "to get his permission", "to listen to PersonY"], "input": {"head": "PersonX takes PersonY stand", "relation": "xNeed", "prompt": "PersonX takes PersonY stand. Before, PersonX needs to"}}
{"generation": ["be a good person, and PersonY needs to"], "references": ["to start a fund", "to think they are worth it", "to contribute money", "to have the means", "have a lot of money", "meet PersonY"], "input": {"head": "PersonX changes PersonY's lives", "relation": "xNeed", "prompt": "PersonX changes PersonY's lives. Before, PersonX needs to"}}
{"generation": ["be in the same room as the dragon"], "references": ["to reach at the dragon", "picks up item to tickle with", "calls the dragon over", "to approach dragon", "none"], "input": {"head": "PersonX tickles the dragons tail", "relation": "xNeed", "prompt": "PersonX tickles the dragons tail. Before, PersonX needs to"}}
{"generation": ["know which end is up"], "references": ["to have bad information", "be confused by surroundings", "to say anything anywhere", "to have done some crazy things"], "input": {"head": "PersonX not knows which end is up", "relation": "xNeed", "prompt": "PersonX not knows which end is up. Before, PersonX needs to"}}
{"generation": ["go to the store, and PersonY needs to"], "references": ["drive", "to pick PersonY up", "to drive a car", "pick up PersonY", "See that her car is not working.", "Work together all day."], "input": {"head": "PersonX drops PersonY off at home", "relation": "xNeed", "prompt": "PersonX drops PersonY off at home. Before, PersonX needs to"}}
{"generation": ["be in front of PersonY to see him"], "references": ["to raise their hands", "to jump in front of personY", "go close to PersonY", "creep up behind PersonY"], "input": {"head": "PersonX shields PersonY's eyes", "relation": "xNeed", "prompt": "PersonX shields PersonY's eyes. Before, PersonX needs to"}}
{"generation": ["know the current position of PersonY"], "references": ["find out person y's password to access account", "to give", "to go to an atm machine", "to sneak person y's atm card", "find out the account number for person y", "to help others"], "input": {"head": "PersonX renders PersonY account", "relation": "xNeed", "prompt": "PersonX renders PersonY account. Before, PersonX needs to"}}
{"generation": ["know where PersonY is, but now PersonX"], "references": ["to be dependant on it", "have the item being taken everywhere", "to have no where to put it", "to like it a lot", "none", "decide to take it everywhere"], "input": {"head": "PersonX takes ___ everywhere", "relation": "xNeed", "prompt": "PersonX takes ___ everywhere. Before, PersonX needs to"}}
{"generation": ["find the person who is the closest to the person"], "references": ["to look for another.", "to of found one in the first place", "to look again for one", "to want another."], "input": {"head": "PersonX finds another", "relation": "xNeed", "prompt": "PersonX finds another. Before, PersonX needs to"}}
{"generation": ["be a member of the ___"], "references": ["to think of an argument", "to have the facts", "to be able to talk sweetly", "to talk to someone", "none"], "input": {"head": "PersonX convinces every ___", "relation": "xNeed", "prompt": "PersonX convinces every ___. Before, PersonX needs to"}}
{"generation": ["be in the same room as the person he wants"], "references": ["to gather ingredients", "to go shopping"], "input": {"head": "PersonX makes ___ every night", "relation": "xNeed", "prompt": "PersonX makes ___ every night. Before, PersonX needs to"}}
{"generation": ["be awake"], "references": ["none", "to be tired", "to want to rest"], "input": {"head": "PersonX wants to sleep", "relation": "xNeed", "prompt": "PersonX wants to sleep. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["none", "see person x", "think about person x"], "input": {"head": "PersonX catches my eye", "relation": "xNeed", "prompt": "PersonX catches my eye. Before, PersonX needs to"}}
{"generation": ["find the car's owner"], "references": ["remember where they parked", "key", "to walk around the parking lot", "eye"], "input": {"head": "PersonX finds PersonX's car", "relation": "xNeed", "prompt": "PersonX finds PersonX's car. Before, PersonX needs to"}}
{"generation": ["be a person"], "references": ["Wear necessary clothing", "none", "fill the tank"], "input": {"head": "PersonX rides bikes", "relation": "xNeed", "prompt": "PersonX rides bikes. Before, PersonX needs to"}}
{"generation": ["be a member of the group to get the job"], "references": ["to work hard", "to have been drinking alcohol", "to try very hard", "to close the door without putting foot in", "to want it", "to determine they want to do that"], "input": {"head": "PersonX gets PersonX's foot in the door", "relation": "xNeed", "prompt": "PersonX gets PersonX's foot in the door. Before, PersonX needs to"}}
{"generation": ["be a person"], "references": ["to gather information", "none", "to decide on something"], "input": {"head": "PersonX wants so badly", "relation": "xNeed", "prompt": "PersonX wants so badly. Before, PersonX needs to"}}
{"generation": ["be able to play hockey"], "references": ["none"], "input": {"head": "PersonX wants to play hockey", "relation": "xNeed", "prompt": "PersonX wants to play hockey. Before, PersonX needs to"}}
{"generation": ["be in the gym, but now he can just"], "references": ["doctor", "exercise", "excersise", "eat healthy food", "lift weights", "excercise", "train", "start working out", "eat less", "juggle", "set schedule", "take slow", "play sport", "reverse aging process", "exercise and eat right", "stop smoking", "drink plenty of water", "go to gym", "eat lsd and run", "do knee bends", "eat less and exercise more", "begin fitness program", "practice", "work out"], "input": {"head": "get fit", "relation": "xNeed", "prompt": "get fit. Before, PersonX needs to"}}
{"generation": ["be in a hospital to get PersonY back to"], "references": ["to be a nurse", "to sit with y", "to be lookingn after PersonY", "to bring medicine"], "input": {"head": "PersonX nurses PersonY back to health", "relation": "xNeed", "prompt": "PersonX nurses PersonY back to health. Before, PersonX needs to"}}
{"generation": ["be able to find PersonX's father in order"], "references": ["to plan the attack", "to confront the murderer", "to find the killer", "to get some poison", "to buy a gun"], "input": {"head": "PersonX revenges PersonX's father 's ___", "relation": "xNeed", "prompt": "PersonX revenges PersonX's father 's ___. Before, PersonX needs to"}}
{"generation": ["be a Person, and PersonY needs to be"], "references": ["set goals based on PersonY", "to put in all his efforts", "to work hard", "work hard"], "input": {"head": "PersonX achieves PersonY level", "relation": "xNeed", "prompt": "PersonX achieves PersonY level. Before, PersonX needs to"}}
{"generation": ["know the name of the person he is talking to"], "references": ["find a library to go to", "enter the library", "work in the library", "study in the library"], "input": {"head": "PersonX leaves the library", "relation": "xNeed", "prompt": "PersonX leaves the library. Before, PersonX needs to"}}
{"generation": ["know PersonY's name"], "references": ["to know personY", "receive permission to decide the name", "decide on a name to give", "none", "to think that they would do well"], "input": {"head": "PersonX gives PersonY name", "relation": "xNeed", "prompt": "PersonX gives PersonY name. Before, PersonX needs to"}}
{"generation": ["be the one to initiate the conversation"], "references": ["Don't show your fear.", "to be calm", "Make sure he has protection.", "to be face to face with something"], "input": {"head": "PersonX looks the ___ in the face", "relation": "xNeed", "prompt": "PersonX looks the ___ in the face. Before, PersonX needs to"}}
{"generation": ["know the current state of the world"], "references": ["to know the details", "to develop managing skills", "to know what it entails", "none", "to know they can do it"], "input": {"head": "PersonX takes ___ to ensure", "relation": "xNeed", "prompt": "PersonX takes ___ to ensure. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["to go to the classroom", "to be good at explaining things", "to write on the black board", "to know the nature", "none"], "input": {"head": "PersonX sheds ___ on the nature", "relation": "xNeed", "prompt": "PersonX sheds ___ on the nature. Before, PersonX needs to"}}
{"generation": ["know the name of PersonX's ___"], "references": ["none", "to want to face them", "to talk to them"], "input": {"head": "PersonX looks PersonX's ___ in the face", "relation": "xNeed", "prompt": "PersonX looks PersonX's ___ in the face. Before, PersonX needs to"}}
{"generation": ["know the value of PersonY"], "references": ["to find out in what subject or area PersonY needs instruction.", "know what to do", "to talk to PersonY to set up a time for the instruction.", "be with PersonY", "to research and become familiar with the material that will be taught to PersonY"], "input": {"head": "PersonX gives PersonY instruction", "relation": "xNeed", "prompt": "PersonX gives PersonY instruction. Before, PersonX needs to"}}
{"generation": ["know the name of the person"], "references": ["to figure out a plan", "to gather materials"], "input": {"head": "PersonX uses the ___ as a means", "relation": "xNeed", "prompt": "PersonX uses the ___ as a means. Before, PersonX needs to"}}
{"generation": ["be able to find the person in the photo,"], "references": ["find balls", "lie in wait for unsuspecting balls", "to run up on the ball", "to play soccer", "take drugs", "take more drugs"], "input": {"head": "PersonX trips balls", "relation": "xNeed", "prompt": "PersonX trips balls. Before, PersonX needs to"}}
{"generation": ["be in the same place as PersonY"], "references": ["none", "walk up to PersonY", "spot PersonY"], "input": {"head": "PersonX is right next to PersonY", "relation": "xNeed", "prompt": "PersonX is right next to PersonY. Before, PersonX needs to"}}
{"generation": ["be inside the house"], "references": ["none"], "input": {"head": "PersonX wants to play outside", "relation": "xNeed", "prompt": "PersonX wants to play outside. Before, PersonX needs to"}}
{"generation": ["be able to find the person in the database"], "references": ["to have all the study material", "to know when the exam is", "to read the textbook", "to have all the material to study", "to open his textbook", "to be alone"], "input": {"head": "PersonX studies for an exam", "relation": "xNeed", "prompt": "PersonX studies for an exam. Before, PersonX needs to"}}
{"generation": ["be in the car to move it"], "references": ["choose a direction", "to have a car", "steer the car", "to go to the road", "choose a another parking spot", "to shift their weight on the car", "turn on the ignition", "to have parked it"], "input": {"head": "PersonX moves the car", "relation": "xNeed", "prompt": "PersonX moves the car. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["to call friends", "none", "to watch live news"], "input": {"head": "PersonX starts to worry", "relation": "xNeed", "prompt": "PersonX starts to worry. Before, PersonX needs to"}}
{"generation": ["be a football fan to enjoy the game"], "references": ["to buy a ball", "none", "to watch TV"], "input": {"head": "PersonX loves football", "relation": "xNeed", "prompt": "PersonX loves football. Before, PersonX needs to"}}
{"generation": ["go to the bathroom"], "references": ["to open the door", "open the door", "to go to the restroom", "go to the restroom", "to find where the bathroom is.", "to sit down", "to walk inside the bathroom.", "go inside"], "input": {"head": "PersonX uses the restroom", "relation": "xNeed", "prompt": "PersonX uses the restroom. Before, PersonX needs to"}}
{"generation": ["be able to play chess, but now PersonX"], "references": ["try to capture queen", "have oppenant", "learn game", "learn how", "set up pieces", "buy set", "arrange pieces", "get chess board", "learn rules", "find chess partner", "find partner to play with", "join chess team", "get chess set", "find else to play against", "have set", "buying chess", "know rules", "get partner", "find partner", "have chess board", "get chessboard", "learn chess", "learn way pieces move", "find opponent", "learn to play chess", "find to play with"], "input": {"head": "play chess", "relation": "xNeed", "prompt": "play chess. Before, PersonX needs to"}}
{"generation": ["be able to read the paper, but now Person"], "references": ["go to school and buy paper", "do", "choose subject", "spend 10 to buy one", "know subject", "well versed on subject", "use computer", "study and outline", "read writing term papers", "leave plenty of time", "decide on subject", "make outline first", "know topic"], "input": {"head": "write term paper", "relation": "xNeed", "prompt": "write term paper. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target"], "references": ["to apply for a gun permit", "to pass background check", "to look at guns", "to buy a gun", "none"], "input": {"head": "PersonX packs heat", "relation": "xNeed", "prompt": "PersonX packs heat. Before, PersonX needs to"}}
{"generation": ["be the first element in the list"], "references": ["to work hard", "to pass the bar", "to study very hard", "to practice their skills", "to enter the contest", "to practice everyday", "to have discipline"], "input": {"head": "PersonX wins every ___", "relation": "xNeed", "prompt": "PersonX wins every ___. Before, PersonX needs to"}}
{"generation": ["pay for the server, but now it can use"], "references": ["none", "incapable", "need money"], "input": {"head": "PersonX is short on money", "relation": "xNeed", "prompt": "PersonX is short on money. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to kiss"], "references": ["to express love to PersonY", "to get close to PersonY", "to be with PersonY", "to grasp onto Persony", "to show affection", "to approach PersonY"], "input": {"head": "PersonX kisses PersonY gently", "relation": "xNeed", "prompt": "PersonX kisses PersonY gently. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target, but"], "references": ["to be drunk", "brew coffee", "make juice", "none", "to have wine mug"], "input": {"head": "PersonX accidentally poured", "relation": "xNeed", "prompt": "PersonX accidentally poured. Before, PersonX needs to"}}
{"generation": ["know about PersonY, but now it doesn't"], "references": ["to become pregnant", "make arrangements for adoption", "get the forms ready", "to give birth", "none"], "input": {"head": "PersonX gives PersonY children", "relation": "xNeed", "prompt": "PersonX gives PersonY children. Before, PersonX needs to"}}
{"generation": ["be in the oven to be able to see Person"], "references": ["to pour it in a pan", "to mix batter", "make cookie", "to buy ingredients", "put dough in cooking sheet"], "input": {"head": "PersonX puts it in the oven", "relation": "xNeed", "prompt": "PersonX puts it in the oven. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["to not take it well", "to see something sad", "none"], "input": {"head": "PersonX starts crying", "relation": "xNeed", "prompt": "PersonX starts crying. Before, PersonX needs to"}}
{"generation": ["be able to find the PersonX object, and"], "references": ["design it", "think new ideas", "explain ides", "to discuss the plan with someone experienced", "to make a plan", "analyze it"], "input": {"head": "PersonX puts PersonX's ___ into execution", "relation": "xNeed", "prompt": "PersonX puts PersonX's ___ into execution. Before, PersonX needs to"}}
{"generation": ["be in the same room as the person he wants"], "references": ["Arrive at the building", "Approach the entrance of the building"], "input": {"head": "PersonX decides to enter", "relation": "xNeed", "prompt": "PersonX decides to enter. Before, PersonX needs to"}}
{"generation": ["be in the middle of the screen, but now"], "references": ["use body", "rise from set", "rise from seat", "straighten legs", "sit down first", "have enough room to stand up", "put legs underneath", "not sitting down", "get off butt", "stand up and counted", "use leg muscles", "put feet on floor", "lean forward", "flex leg muscles", "brave", "sitting or lying down", "arise", "get off couch", "rise up", "use muscles", "put both feet on ground", "put feet on ground", "use arms for support", "seated", "alter center of gravity", "use legs", "not sit down", "stop sitting", "get out of chair"], "input": {"head": "stand up", "relation": "xNeed", "prompt": "stand up. Before, PersonX needs to"}}
{"generation": ["be able to find PersonY"], "references": ["buy slow modem", "have slow modem", "go to dmv", "make sure it's right line", "decide if it's worth", "call public service", "take ticket", "get slow isp", "determine what line for", "patient", "come early", "find line"], "input": {"head": "wait on line", "relation": "xNeed", "prompt": "wait on line. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target to be"], "references": ["have sexual intercourse", "to pleasure themselves", "to arouse himself", "think about hot things", "none"], "input": {"head": "PersonX busts a nut", "relation": "xNeed", "prompt": "PersonX busts a nut. Before, PersonX needs to"}}
{"generation": ["be in the right place at the right time to"], "references": ["to walk towards them", "to find PersonY", "none"], "input": {"head": "PersonX stops dead in PersonY's tracks", "relation": "xNeed", "prompt": "PersonX stops dead in PersonY's tracks. Before, PersonX needs to"}}
{"generation": ["be in the same room as the ___"], "references": ["Walk towards the thing", "to eat the donut before he is seen", "to steal a donut", "Have something to confront", "none"], "input": {"head": "PersonX faces the ___ alone", "relation": "xNeed", "prompt": "PersonX faces the ___ alone. Before, PersonX needs to"}}
{"generation": ["be married to PersonY to get the divorce"], "references": ["get a lawyer", "talk with divorce lawyer", "Write up the divorce papers", "to be cheating on husband", "to be arguing with husband everyday", "to not to eye to eye anymore", "file paperwork"], "input": {"head": "PersonX divorces PersonX's husband", "relation": "xNeed", "prompt": "PersonX divorces PersonX's husband. Before, PersonX needs to"}}
{"generation": ["pump PersonY's gas"], "references": ["to drive to the gas station", "get gas handle out of gas pump", "pay for gas", "to open the gas cap"], "input": {"head": "PersonX pumps PersonY's gas", "relation": "xNeed", "prompt": "PersonX pumps PersonY's gas. Before, PersonX needs to"}}
{"generation": ["be a function that takes a Person and returns a"], "references": ["none"], "input": {"head": "PersonX would be fun", "relation": "xNeed", "prompt": "PersonX would be fun. Before, PersonX needs to"}}
{"generation": ["be a Person, but now PersonX is a"], "references": ["be mad at PersonY", "to be angry with Person Y", "to feel violated.", "to be irritated with Y.", "raise their hand", "to feel extreme anger.", "to find Person Y"], "input": {"head": "PersonX smacks PersonY", "relation": "xNeed", "prompt": "PersonX smacks PersonY. Before, PersonX needs to"}}
{"generation": ["know the name of the person he is talking to"], "references": ["get a map", "to understand what PersonY is saying", "none", "get the instructions", "to listen to PersonY"], "input": {"head": "PersonX follows PersonY's instructions", "relation": "xNeed", "prompt": "PersonX follows PersonY's instructions. Before, PersonX needs to"}}
{"generation": ["be a great basketball player to be a great basketball"], "references": ["Purchases clothing and footwear for basketball", "Watches basketball tutorials to learn more skills", "Practices for hours.", "Joins a team", "Practises basketball everyday", "He wins lots of games."], "input": {"head": "PersonX becomes a great basketball player", "relation": "xNeed", "prompt": "PersonX becomes a great basketball player. Before, PersonX needs to"}}
{"generation": ["go to the hospital, and PersonY needs to"], "references": ["gas", "a car"], "input": {"head": "PersonX finally got home", "relation": "xNeed", "prompt": "PersonX finally got home. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a person"], "references": ["walk over", "to talk to PersonY", "to look for another seat", "get up", "none"], "input": {"head": "PersonX sits down next to PersonY", "relation": "xNeed", "prompt": "PersonX sits down next to PersonY. Before, PersonX needs to"}}
{"generation": ["be friends with PersonY, but now PersonX"], "references": ["none"], "input": {"head": "PersonX stops being friends", "relation": "xNeed", "prompt": "PersonX stops being friends. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a person, and Person"], "references": ["to make PersonY comfortable", "to reach for PersonY", "to become angry", "none", "to grab PersonY's middle finger"], "input": {"head": "PersonX uses PersonY's middle finger", "relation": "xNeed", "prompt": "PersonX uses PersonY's middle finger. Before, PersonX needs to"}}
{"generation": ["know what to expect"], "references": ["He gets worried.", "none", "He hears of war."], "input": {"head": "PersonX does n't know what to expect", "relation": "xNeed", "prompt": "PersonX does n't know what to expect. Before, PersonX needs to"}}
{"generation": ["know PersonY's opinion"], "references": ["to converse with PersonY", "to form an opinion", "to ask PersonY", "to reject other opinions", "to gather information about PersonY", "to listen carefully to PersonY"], "input": {"head": "PersonX knows PersonY's opinion", "relation": "xNeed", "prompt": "PersonX knows PersonY's opinion. Before, PersonX needs to"}}
{"generation": ["kiss PersonY's way"], "references": ["to make PersonY comfortable", "brush their teeth", "find person y", "to move their face towards PersonY", "none"], "input": {"head": "PersonX kisses PersonY's way", "relation": "xNeed", "prompt": "PersonX kisses PersonY's way. Before, PersonX needs to"}}
{"generation": ["know the name of the person, but now Person"], "references": ["to be familiar", "to be socializing", "to know Y's name", "pay for the hotel", "make a hotel resrvation", "to go there"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "xNeed", "prompt": "PersonX gives the ___ PersonY's name. Before, PersonX needs to"}}
{"generation": ["learn how to use the karate stick"], "references": ["none"], "input": {"head": "PersonX wants to learn karate", "relation": "xNeed", "prompt": "PersonX wants to learn karate. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["none"], "input": {"head": "PersonX loses PersonX's sense", "relation": "xNeed", "prompt": "PersonX loses PersonX's sense. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonY needs to"], "references": ["to have a discussion with Persony", "to meet PersonY", "to have been interviewed by PersonY", "to find PersonY", "to talk to  PersonY", "none", "to get PersonY's attention"], "input": {"head": "PersonX gives PersonY impression", "relation": "xNeed", "prompt": "PersonX gives PersonY impression. Before, PersonX needs to"}}
{"generation": ["know about PersonY, and PersonY needs to"], "references": ["to look at PersonY", "to be near PersonY", "to walk up to PersonY", "to see PersonY", "none"], "input": {"head": "PersonX looks at PersonY like that", "relation": "xNeed", "prompt": "PersonX looks at PersonY like that. Before, PersonX needs to"}}
{"generation": ["pay for the service, but now it can pay"], "references": ["pay creditors"], "input": {"head": "get out of debt", "relation": "xNeed", "prompt": "get out of debt. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonY"], "references": ["To develop a theme for the book", "a copy machine", "paper", "to read the book", "to read the piracy warning", "To assess potential interest"], "input": {"head": "PersonX reproduces this ___ regardless", "relation": "xNeed", "prompt": "PersonX reproduces this ___ regardless. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonX"], "references": ["none"], "input": {"head": "PersonX makes that mistake again", "relation": "xNeed", "prompt": "PersonX makes that mistake again. Before, PersonX needs to"}}
{"generation": ["know the name of PersonY"], "references": ["open mouth", "to go to PersonY's house", "to call PersonY", "to communicate with PersonY", "learn information"], "input": {"head": "PersonX gives PersonY the name", "relation": "xNeed", "prompt": "PersonX gives PersonY the name. Before, PersonX needs to"}}
{"generation": ["be able to trust the person who is appointed to"], "references": ["to have the responsibility", "gather members to appoint", "to understand the situation", "become aware of a situation that needs to be investigated", "to think it needs one", "to observe the scene"], "input": {"head": "PersonX appoints a ___ to investigate", "relation": "xNeed", "prompt": "PersonX appoints a ___ to investigate. Before, PersonX needs to"}}
{"generation": ["be on the same server as PersonY"], "references": ["none"], "input": {"head": "PersonX has never been on one before", "relation": "xNeed", "prompt": "PersonX has never been on one before. Before, PersonX needs to"}}
{"generation": ["enter the office of PersonY"], "references": ["make an appointment", "to walk in the building", "knock on door", "find out where the office is"], "input": {"head": "PersonX enters PersonY's office", "relation": "xNeed", "prompt": "PersonX enters PersonY's office. Before, PersonX needs to"}}
{"generation": ["be in the same place as PersonY"], "references": ["to join a gym", "to buy workout gear", "change into workout clothes", "go to the gym", "none"], "input": {"head": "PersonX gets more exercise", "relation": "xNeed", "prompt": "PersonX gets more exercise. Before, PersonX needs to"}}
{"generation": ["win the bet to win the bet"], "references": ["to wager a bet", "to enter the game", "to decide what to bet on", "to place the bet", "none", "to put up money"], "input": {"head": "PersonX wins the bet", "relation": "xNeed", "prompt": "PersonX wins the bet. Before, PersonX needs to"}}
{"generation": ["be in a good mood to be able to do"], "references": ["none"], "input": {"head": "PersonX is feeling sick", "relation": "xNeed", "prompt": "PersonX is feeling sick. Before, PersonX needs to"}}
{"generation": ["know the name of the person who is going to"], "references": ["take a bag", "to leave the house", "to put on his shoes", "to get in the car", "none"], "input": {"head": "PersonX runs some errands", "relation": "xNeed", "prompt": "PersonX runs some errands. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a person"], "references": ["to read the newspaper", "none", "to buy a newspaper"], "input": {"head": "PersonX notices an ad", "relation": "xNeed", "prompt": "PersonX notices an ad. Before, PersonX needs to"}}
{"generation": ["be invited to the party, but now he can"], "references": ["record actions", "catch roommates action", "none"], "input": {"head": "PersonX confronts PersonX's roommate", "relation": "xNeed", "prompt": "PersonX confronts PersonX's roommate. Before, PersonX needs to"}}
{"generation": ["pay PersonY taxes"], "references": ["to have taxes due", "to related to Y", "to keep the money", "to have money", "to be employeed", "to acquire some money"], "input": {"head": "PersonX pays PersonY taxes", "relation": "xNeed", "prompt": "PersonX pays PersonY taxes. Before, PersonX needs to"}}
{"generation": ["be in the same room as the player"], "references": ["pack up", "none", "find a house"], "input": {"head": "PersonX eventually moved", "relation": "xNeed", "prompt": "PersonX eventually moved. Before, PersonX needs to"}}
{"generation": ["know the PersonY's position in the world"], "references": ["To check for a pulse.", "to prepare persony for transport", "to ask them if they need to go to the ER.", "shoes", "get persony around to leave", "a car"], "input": {"head": "PersonX takes PersonY to the er", "relation": "xNeed", "prompt": "PersonX takes PersonY to the er. Before, PersonX needs to"}}
{"generation": ["be a bit more careful with the way it uses"], "references": ["to of learned a lot", "to be working", "to have opned exhibition of his work", "none", "to of worked hard"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "xNeed", "prompt": "PersonX impresses with PersonX's work. Before, PersonX needs to"}}
{"generation": ["know about PersonY, but now PersonX knows"], "references": ["knowledge", "view a map", "to gather things", "to make a plan", "to complete a task", "do research"], "input": {"head": "PersonX links together the ___", "relation": "xNeed", "prompt": "PersonX links together the ___. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and the name"], "references": ["to have tried and tested something else", "to decide to make a change", "none", "to have failed at something"], "input": {"head": "PersonX starts with a clean sheet", "relation": "xNeed", "prompt": "PersonX starts with a clean sheet. Before, PersonX needs to"}}
{"generation": ["work full time to pay for his living expenses"], "references": ["to interview for the job", "to apply for jobs", "to apply for a job", "to go to interviews", "to find a job", "to decide they need a job"], "input": {"head": "PersonX gets a part time job", "relation": "xNeed", "prompt": "PersonX gets a part time job. Before, PersonX needs to"}}
{"generation": ["kiss PersonY's cheek to get the kiss"], "references": ["to pucker their lips", "none", "to be near person y"], "input": {"head": "PersonX kisses PersonY cheek", "relation": "xNeed", "prompt": "PersonX kisses PersonY cheek. Before, PersonX needs to"}}
{"generation": ["know PersonY's name, and PersonY needs"], "references": ["be int he vicinity", "be looking in that direction", "none"], "input": {"head": "PersonX sees PersonX's crush PersonY", "relation": "xNeed", "prompt": "PersonX sees PersonX's crush PersonY. Before, PersonX needs to"}}
{"generation": ["be a string, but now it can be any"], "references": ["money", "none", "a car"], "input": {"head": "PersonX replaces the old one", "relation": "xNeed", "prompt": "PersonX replaces the old one. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["none"], "input": {"head": "PersonX catches a cold", "relation": "xNeed", "prompt": "PersonX catches a cold. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["to start the car", "to warm up the car", "to be at the amusement park", "to get dressed", "to be in a train", "take the car out of the garage", "to get in the car", "to be at the zoo"], "input": {"head": "PersonX takes a ride", "relation": "xNeed", "prompt": "PersonX takes a ride. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY"], "references": ["to talk to him", "Grabs Y attention", "decide where to direct their attention", "approach the person", "Locate the item", "to distract him"], "input": {"head": "PersonX directs PersonY's attention", "relation": "xNeed", "prompt": "PersonX directs PersonY's attention. Before, PersonX needs to"}}
{"generation": ["be in the air to get to PersonY"], "references": ["none"], "input": {"head": "PersonX gets to PersonY's feet", "relation": "xNeed", "prompt": "PersonX gets to PersonY's feet. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to get"], "references": ["go to piercing place", "find someone to pierce belly button", "to go to the piercing store", "to get the money", "to go to the shop", "to pay for the piercing"], "input": {"head": "PersonX gets PersonX's belly button pierced", "relation": "xNeed", "prompt": "PersonX gets PersonX's belly button pierced. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["none"], "input": {"head": "PersonX becomes ill", "relation": "xNeed", "prompt": "PersonX becomes ill. Before, PersonX needs to"}}
{"generation": ["be restarted after every change"], "references": ["find a job", "to have had time off", "to travel to work", "to contact work to arrange to go back", "a job", "shoes", "get dressed for work", "stop playing video games", "drink some coffee"], "input": {"head": "PersonX starts working again", "relation": "xNeed", "prompt": "PersonX starts working again. Before, PersonX needs to"}}
{"generation": ["know the name of the person he's talking to"], "references": ["to understand how to use it", "to of learned from it", "to know what PersonY does", "to know how personY does things", "none"], "input": {"head": "PersonX takes a leaf out of PersonY's book", "relation": "xNeed", "prompt": "PersonX takes a leaf out of PersonY's book. Before, PersonX needs to"}}
{"generation": ["be in the same room as the person who is"], "references": ["invite friends", "none", "prepare for the event"], "input": {"head": "PersonX has an amazing time", "relation": "xNeed", "prompt": "PersonX has an amazing time. Before, PersonX needs to"}}
{"generation": ["know the name of the person who called him"], "references": ["none"], "input": {"head": "PersonX gets the call", "relation": "xNeed", "prompt": "PersonX gets the call. Before, PersonX needs to"}}
{"generation": ["be able to see the person's name, and"], "references": ["look at toys", "none", "to go to store"], "input": {"head": "PersonX wants ___ to play with", "relation": "xNeed", "prompt": "PersonX wants ___ to play with. Before, PersonX needs to"}}
{"generation": ["know about PersonY"], "references": ["buy cookie ingredients", "Watch the Cooking Channel.", "place cookie dough in the oven", "none", "Likes what he sees."], "input": {"head": "PersonX always made ___", "relation": "xNeed", "prompt": "PersonX always made ___. Before, PersonX needs to"}}
{"generation": ["be installed on the server"], "references": ["to have their stuff packed", "finish work", "to get up early", "get in car", "wear shoes", "wear new clothes"], "input": {"head": "PersonX is ready to go", "relation": "xNeed", "prompt": "PersonX is ready to go. Before, PersonX needs to"}}
{"generation": ["be in the same state as PersonY"], "references": ["to be subjugated by the organization of the system", "to of taken the test", "none"], "input": {"head": "PersonX has been deferred until test results are in", "relation": "xNeed", "prompt": "PersonX has been deferred until test results are in. Before, PersonX needs to"}}
{"generation": ["be in the same position as PersonY"], "references": ["to work hard", "to assess where they need to get better", "to make money", "to improve themselves", "work hard", "ask for a promotion"], "input": {"head": "PersonX improves PersonX's position", "relation": "xNeed", "prompt": "PersonX improves PersonX's position. Before, PersonX needs to"}}
{"generation": ["know a lot of things"], "references": ["to pay attention", "to study", "to learn things", "to understand a wide range of issues"], "input": {"head": "PersonX knows much", "relation": "xNeed", "prompt": "PersonX knows much. Before, PersonX needs to"}}
{"generation": ["know the value of PersonY"], "references": ["none", "know what to do", "know what they need to meet"], "input": {"head": "PersonX measures ___ directly", "relation": "xNeed", "prompt": "PersonX measures ___ directly. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonY"], "references": ["none"], "input": {"head": "PersonX takes a swig", "relation": "xNeed", "prompt": "PersonX takes a swig. Before, PersonX needs to"}}
{"generation": ["know the name of the animal, and PersonY"], "references": ["go where the animals are located", "to go to the zoo", "find out where the animals are", "walk towards the cage", "visits a farm", "visits a zoo"], "input": {"head": "PersonX sees all of the animals", "relation": "xNeed", "prompt": "PersonX sees all of the animals. Before, PersonX needs to"}}
{"generation": ["cancel PersonX's plans"], "references": ["none"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "xNeed", "prompt": "PersonX has to cancel PersonX's plans. Before, PersonX needs to"}}
{"generation": ["know the name of the person he wants to talk"], "references": ["to address a problem", "to get back", "a problem", "to consider the alternatives", "to make a plan", "none", "to find a remedy for the issue"], "input": {"head": "PersonX thinks of a solution", "relation": "xNeed", "prompt": "PersonX thinks of a solution. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonY"], "references": ["to gather materials", "go to the store.", "to make a plan", "buy the furniture."], "input": {"head": "PersonX puts everything together", "relation": "xNeed", "prompt": "PersonX puts everything together. Before, PersonX needs to"}}
{"generation": ["be able to run the test"], "references": ["start studing", "open the book", "enroll in school", "show up for class", "none"], "input": {"head": "PersonX has a test tomorrow", "relation": "xNeed", "prompt": "PersonX has a test tomorrow. Before, PersonX needs to"}}
{"generation": ["be in the same place as PersonY, but"], "references": ["to be trying to climb down", "to get on the lorry", "to climb onto the lorry", "to try jumping down like spiderman", "to sit in an unstable position in the back", "to stand at the back of the lorry"], "input": {"head": "PersonX falls off the back of a lorry", "relation": "xNeed", "prompt": "PersonX falls off the back of a lorry. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonY"], "references": ["to receive their test", "to grade their test", "to be a teacher", "to be marking tests", "none"], "input": {"head": "PersonX gives ___ an f", "relation": "xNeed", "prompt": "PersonX gives ___ an f. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonY"], "references": ["to scrawl", "none", "to drop food on himself"], "input": {"head": "PersonX gets messy", "relation": "xNeed", "prompt": "PersonX gets messy. Before, PersonX needs to"}}
{"generation": ["be in the same room as the victim to get"], "references": ["act as frightening", "get close to PersonY", "to be watch PersonY", "a animal"], "input": {"head": "PersonX scars ___ away", "relation": "xNeed", "prompt": "PersonX scars ___ away. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to catch"], "references": ["talk loud", "to be seen.", "to wave at PersonY", "to walk up to PersonY", "wave hand in their face", "to do something important."], "input": {"head": "PersonX catches PersonY's attention", "relation": "xNeed", "prompt": "PersonX catches PersonY's attention. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target"], "references": ["to listen to their coach", "to practice", "He has the ball.", "to have a gun", "to be good at aiming", "Practices for the game."], "input": {"head": "PersonX makes the shot", "relation": "xNeed", "prompt": "PersonX makes the shot. Before, PersonX needs to"}}
{"generation": ["be able to produce a new PersonY, but"], "references": ["buy hooker", "find mate", "have viable partner chosen", "use scanner", "look hot", "do", "copy", "find right spouse", "take off condom", "find appropriate mate", "talk to another person", "find willing partner", "turn on copy machine", "already know what to do", "copulate", "make copy", "find girlfriend or boyfriend", "consumate relationship", "make love", "fertilize egg", "make one or more copies"], "input": {"head": "reproduce", "relation": "xNeed", "prompt": "reproduce. Before, PersonX needs to"}}
{"generation": ["be a girl"], "references": ["to think she is being nice to him", "meet the girl", "none"], "input": {"head": "PersonX likes a girl", "relation": "xNeed", "prompt": "PersonX likes a girl. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to forgive"], "references": ["learn compassion", "none", "follow the bible"], "input": {"head": "PersonX forgives ___ PersonY's trespasses", "relation": "xNeed", "prompt": "PersonX forgives ___ PersonY's trespasses. Before, PersonX needs to"}}
{"generation": ["be a man"], "references": ["to care about women", "to pass legislation"], "input": {"head": "PersonX grants women the ___", "relation": "xNeed", "prompt": "PersonX grants women the ___. Before, PersonX needs to"}}
{"generation": ["be a fish"], "references": ["to Get fishing gear.", "to Buy bait."], "input": {"head": "PersonX likes fish", "relation": "xNeed", "prompt": "PersonX likes fish. Before, PersonX needs to"}}
{"generation": ["press the \"Play\" button to play the music"], "references": ["to have the music too loud.", "to feel the music is too loud", "to be listening to music.", "to hear something odd", "none"], "input": {"head": "PersonX turns PersonX's music down", "relation": "xNeed", "prompt": "PersonX turns PersonX's music down. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["to have their hair cut like a badly mowed lawn", "to have their makeup done like a clown", "put on funny clothes", "say something ignorant", "to have dressed weirdly", "none"], "input": {"head": "PersonX looks like an idiot", "relation": "xNeed", "prompt": "PersonX looks like an idiot. Before, PersonX needs to"}}
{"generation": ["see a tree"], "references": ["none"], "input": {"head": "PersonX sees wood", "relation": "xNeed", "prompt": "PersonX sees wood. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to wear"], "references": ["to pick out clothes.", "iron wrinkles", "to put them on.", "pick appropriate outfits", "decide how to dress", "To get their clothes ready"], "input": {"head": "PersonX wears PersonX's clothes", "relation": "xNeed", "prompt": "PersonX wears PersonX's clothes. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["donate help", "offer to help", "determine need and meet", "help old people with yard work", "willing to help", "helpful", "find in trouble", "ask if need help", "determine need", "find to help", "examine situation", "look for who needs", "help one", "find outhat needs assistance", "find needs assisting", "offer", "offer assistance", "prepared", "ask whether assistance needed", "ask if wants help", "medical person", "ask if need assistance", "help opne", "find out what needed", "do what needs to done", "medic", "clear about task", "find out what situation requires", "look for who needs help"], "input": {"head": "give assistance", "relation": "xNeed", "prompt": "give assistance. Before, PersonX needs to"}}
{"generation": ["be installed on the system"], "references": ["be invited somewhere", "none", "get into a car"], "input": {"head": "PersonX arrives soon", "relation": "xNeed", "prompt": "PersonX arrives soon. Before, PersonX needs to"}}
{"generation": ["be able to see PersonX's coffee"], "references": ["to pour it", "to make coffee", "none"], "input": {"head": "PersonX spills PersonX's coffee", "relation": "xNeed", "prompt": "PersonX spills PersonX's coffee. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["Has to be skilled at something", "none", "Has to act on thar skill"], "input": {"head": "PersonX doeth all ___ well", "relation": "xNeed", "prompt": "PersonX doeth all ___ well. Before, PersonX needs to"}}
{"generation": ["be the one to initiate the conversation, but now"], "references": ["to find out about person y", "to spend time with person y", "to think they are worth it", "to know them", "none"], "input": {"head": "PersonX believes also in PersonY", "relation": "xNeed", "prompt": "PersonX believes also in PersonY. Before, PersonX needs to"}}
{"generation": ["know the number of people in PersonY's people"], "references": ["to be God sent", "to be a general in the army", "to react quickly", "make a rescue plan", "provide help", "to assess the situation"], "input": {"head": "PersonX saves PersonY's people", "relation": "xNeed", "prompt": "PersonX saves PersonY's people. Before, PersonX needs to"}}
{"generation": ["know what the current state of the world is"], "references": ["Walks to whatever is going on", "to observe something", "Looks around", "to make an analysis", "none"], "input": {"head": "PersonX sees what was going on", "relation": "xNeed", "prompt": "PersonX sees what was going on. Before, PersonX needs to"}}
{"generation": ["be a major to switch to PersonY"], "references": ["declare a major", "Use computer", "to get permission", "enroll in a college", "to make up his mind", "Go to the administration office"], "input": {"head": "PersonX switches PersonX's major", "relation": "xNeed", "prompt": "PersonX switches PersonX's major. Before, PersonX needs to"}}
{"generation": ["wear PersonY's boots to be able to wear"], "references": ["be in PersonYs closet", "See if the boot is the right size.", "Ask for permission first.", "try on the boots"], "input": {"head": "PersonX wears PersonY's boots", "relation": "xNeed", "prompt": "PersonX wears PersonY's boots. Before, PersonX needs to"}}
{"generation": ["be a part of the conversation"], "references": ["none"], "input": {"head": "PersonX feels unappreciated", "relation": "xNeed", "prompt": "PersonX feels unappreciated. Before, PersonX needs to"}}
{"generation": ["be a child of the player"], "references": ["Be born", "to grow up", "to be born", "none", "Live life"], "input": {"head": "PersonX comes of age", "relation": "xNeed", "prompt": "PersonX comes of age. Before, PersonX needs to"}}
{"generation": ["be a valid user"], "references": ["He applys at the store.", "to apply", "Waits for a call.", "to try their best", "to have worked hard", "to have applied"], "input": {"head": "PersonX gets accepted", "relation": "xNeed", "prompt": "PersonX gets accepted. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonY"], "references": ["none"], "input": {"head": "PersonX puts the ___ together", "relation": "xNeed", "prompt": "PersonX puts the ___ together. Before, PersonX needs to"}}
{"generation": ["know the name of the person he is talking to"], "references": ["get new job", "A SUBJECT", "TO HAVE SOMETHING TO LEARN ABOUT", "attend class"], "input": {"head": "PersonX learns new things", "relation": "xNeed", "prompt": "PersonX learns new things. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonY"], "references": ["none", "a path", "a plan"], "input": {"head": "PersonX keeps straight", "relation": "xNeed", "prompt": "PersonX keeps straight. Before, PersonX needs to"}}
{"generation": ["be pushed before PersonY"], "references": ["to be aware of their surroundings", "to be watching", "none"], "input": {"head": "PersonX jumps before PersonX is pushed", "relation": "xNeed", "prompt": "PersonX jumps before PersonX is pushed. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["to be in charge", "to be a bully", "decide who they are going to be bossy to", "think about the order they will give"], "input": {"head": "PersonX bosses PersonY around", "relation": "xNeed", "prompt": "PersonX bosses PersonY around. Before, PersonX needs to"}}
{"generation": ["cast ___ before swine"], "references": ["none", "to jump to conclusions", "have an event"], "input": {"head": "PersonX casts ___ before swine", "relation": "xNeed", "prompt": "PersonX casts ___ before swine. Before, PersonX needs to"}}
{"generation": ["be in the same place as PersonY, but"], "references": ["try harder", "none", "train"], "input": {"head": "PersonX moves past PersonY", "relation": "xNeed", "prompt": "PersonX moves past PersonY. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a person, and Person"], "references": ["to be a doctor", "to walk to PersonY", "to be with PersonY", "to find PersonY", "to be a dermatologist", "none"], "input": {"head": "PersonX looks on PersonY's face", "relation": "xNeed", "prompt": "PersonX looks on PersonY's face. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target"], "references": ["none", "to have a map", "to know where the end is", "to know where they are going"], "input": {"head": "PersonX gets close", "relation": "xNeed", "prompt": "PersonX gets close. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target, but"], "references": ["to be standing close to partner", "someone to kiss", "make a move", "Kiss girlfriend", "to be in relationship", "Get a girlfriend"], "input": {"head": "PersonX french kisses", "relation": "xNeed", "prompt": "PersonX french kisses. Before, PersonX needs to"}}
{"generation": ["know the name of the person he wants to save"], "references": ["none"], "input": {"head": "PersonX saves PersonX's breath", "relation": "xNeed", "prompt": "PersonX saves PersonX's breath. Before, PersonX needs to"}}
{"generation": ["be at the office by 8:30am"], "references": ["go to bed early", "get rooster", "go sleep early", "not go to bed late", "set alarm", "sleep early", "not stay up late", "set clock", "get to bed early", "set alarm clock", "ask spouse to wake", "ask to get up", "fix up alarm", "use alarm clock", "set alarm night before", "set alarm to wakeyou up"], "input": {"head": "get up early", "relation": "xNeed", "prompt": "get up early. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["none"], "input": {"head": "PersonX wants ___ badly", "relation": "xNeed", "prompt": "PersonX wants ___ badly. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to take"], "references": ["to be friends with Person Y", "reach for the watch", "Realizes it don't work.", "to decide they want the watch", "approach the person", "Looks for his tools for it."], "input": {"head": "PersonX takes PersonY's watch off", "relation": "xNeed", "prompt": "PersonX takes PersonY's watch off. Before, PersonX needs to"}}
{"generation": ["know the name of the person he wants to talk"], "references": ["none", "to have the time to invest.", "to have an interest in something."], "input": {"head": "PersonX spends hours ___", "relation": "xNeed", "prompt": "PersonX spends hours ___. Before, PersonX needs to"}}
{"generation": ["know the number of the person who called him"], "references": ["to have a phone", "none", "to have phone on"], "input": {"head": "PersonX hears a phone ring", "relation": "xNeed", "prompt": "PersonX hears a phone ring. Before, PersonX needs to"}}
{"generation": ["spend ___ working"], "references": ["get a job", "to need the money", "work hard at job", "none", "to have the work"], "input": {"head": "PersonX spends ___ working", "relation": "xNeed", "prompt": "PersonX spends ___ working. Before, PersonX needs to"}}
{"generation": ["be in the same room as the door to unlock"], "references": ["to touch the door", "to go to the door", "put the key in lock", "take key from pocket"], "input": {"head": "PersonX unlocks the door", "relation": "xNeed", "prompt": "PersonX unlocks the door. Before, PersonX needs to"}}
{"generation": ["be able to find the car"], "references": ["sell old vehicle", "go to a salesman"], "input": {"head": "PersonX has a new car", "relation": "xNeed", "prompt": "PersonX has a new car. Before, PersonX needs to"}}
{"generation": ["know about PersonY"], "references": ["to want to improve their skills", "to get the required equipment", "to come up with a plan for their practice", "to have a good attitude about practice", "to plan a schedule", "to be motivated"], "input": {"head": "PersonX practices hard ___", "relation": "xNeed", "prompt": "PersonX practices hard ___. Before, PersonX needs to"}}
{"generation": ["pay PersonX's mortgage"], "references": ["save money", "look at houses", "to move in", "to save money", "to get a mortgage", "to find a house"], "input": {"head": "PersonX buys PersonX's own house", "relation": "xNeed", "prompt": "PersonX buys PersonX's own house. Before, PersonX needs to"}}
{"generation": ["be a man, and PersonY needs to be"], "references": ["to shake hands", "be friends with PersonY", "shake hands", "meet the wife", "approach the husband", "to introduce themself"], "input": {"head": "PersonX meets PersonY husband", "relation": "xNeed", "prompt": "PersonX meets PersonY husband. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["to decide to scare PersonY", "to see y", "to stay quiet", "to plan the jump", "to hide from PersonY", "to see PersonY", "to get in a position of jumping"], "input": {"head": "PersonX jumps out at PersonY", "relation": "xNeed", "prompt": "PersonX jumps out at PersonY. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a PersonX, and"], "references": ["To apply force", "To fling it", "to pick up roadbloacks", "to walk towards roadside", "none"], "input": {"head": "PersonX throws ___ in the way", "relation": "xNeed", "prompt": "PersonX throws ___ in the way. Before, PersonX needs to"}}
{"generation": ["know the distance to PersonY"], "references": ["to get dressed", "get person Y", "to ask PersonY if they'd like to go for a walk", "to help PersonY up", "to put shoes on", "be near person Y"], "input": {"head": "PersonX walks PersonY", "relation": "xNeed", "prompt": "PersonX walks PersonY. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonX"], "references": ["open book or notes", "Find out a calm and quite place", "get learning materials for the quiz", "gather materials"], "input": {"head": "PersonX studies for a quiz", "relation": "xNeed", "prompt": "PersonX studies for a quiz. Before, PersonX needs to"}}
{"generation": ["know the height of PersonY, but now Person"], "references": ["none"], "input": {"head": "PersonX gets PersonX's shorts in a knot", "relation": "xNeed", "prompt": "PersonX gets PersonX's shorts in a knot. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a person"], "references": ["none", "to be less confused", "to decide what to do"], "input": {"head": "PersonX gets a second opinion", "relation": "xNeed", "prompt": "PersonX gets a second opinion. Before, PersonX needs to"}}
{"generation": ["find the person who is the target of the attack"], "references": ["none"], "input": {"head": "PersonX takes matters into PersonX's hands", "relation": "xNeed", "prompt": "PersonX takes matters into PersonX's hands. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY"], "references": ["to get the money", "order the food"], "input": {"head": "PersonX gets snacks", "relation": "xNeed", "prompt": "PersonX gets snacks. Before, PersonX needs to"}}
{"generation": ["be in the same room as the person he wants"], "references": ["to leave the house", "to plan the expedition", "to go out", "to get ready", "go on a road trip", "get backpack"], "input": {"head": "PersonX goes exploring", "relation": "xNeed", "prompt": "PersonX goes exploring. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and the name"], "references": ["none"], "input": {"head": "PersonX makes every ___", "relation": "xNeed", "prompt": "PersonX makes every ___. Before, PersonX needs to"}}
{"generation": ["be in the same room as the player"], "references": ["to go to the clinic", "to see a doctor", "go hospital", "to eat healthy foods"], "input": {"head": "PersonX donates plasma", "relation": "xNeed", "prompt": "PersonX donates plasma. Before, PersonX needs to"}}
{"generation": ["be a parent of PersonY"], "references": ["none"], "input": {"head": "PersonX belongs to PersonX's father", "relation": "xNeed", "prompt": "PersonX belongs to PersonX's father. Before, PersonX needs to"}}
{"generation": ["visit PersonX's daughter to get the key to"], "references": ["to call their daughter", "to have daughter", "to go to daughter's hostel", "to drive to their daughter's house", "to get in the car", "to find out if daughter will be available"], "input": {"head": "PersonX visits PersonX's daughter", "relation": "xNeed", "prompt": "PersonX visits PersonX's daughter. Before, PersonX needs to"}}
{"generation": ["be a PersonY"], "references": ["none"], "input": {"head": "PersonX represents PersonY increase", "relation": "xNeed", "prompt": "PersonX represents PersonY increase. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["take a glass", "go to bar", "money", "none", "pour wine into it"], "input": {"head": "PersonX takes down a peg", "relation": "xNeed", "prompt": "PersonX takes down a peg. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and the name"], "references": ["learn economics", "study different governments", "none"], "input": {"head": "PersonX states and local ___", "relation": "xNeed", "prompt": "PersonX states and local ___. Before, PersonX needs to"}}
{"generation": ["be a string"], "references": ["none"], "input": {"head": "PersonX looks like figure", "relation": "xNeed", "prompt": "PersonX looks like figure. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to be"], "references": ["none"], "input": {"head": "PersonX leaves PersonY's ___ alone", "relation": "xNeed", "prompt": "PersonX leaves PersonY's ___ alone. Before, PersonX needs to"}}
{"generation": ["know about PersonY"], "references": ["to see whay Y needs", "to ask PersonY how much they want", "to calculate protion", "to decide how much to split", "none"], "input": {"head": "PersonX distributes among PersonY", "relation": "xNeed", "prompt": "PersonX distributes among PersonY. Before, PersonX needs to"}}
{"generation": ["be in the world to be happy"], "references": ["none"], "input": {"head": "PersonX loves the world gave", "relation": "xNeed", "prompt": "PersonX loves the world gave. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["none"], "input": {"head": "PersonX looks ___ in the face", "relation": "xNeed", "prompt": "PersonX looks ___ in the face. Before, PersonX needs to"}}
{"generation": ["be a member of the same group as PersonY"], "references": ["Consider driving", "to get in the car", "to make plans", "none", "get keys"], "input": {"head": "PersonX drives anyway", "relation": "xNeed", "prompt": "PersonX drives anyway. Before, PersonX needs to"}}
{"generation": ["be in front of PersonY to pull PersonY"], "references": ["to touch", "He goes to the store.", "to be with him", "to be near", "He goes to the wrong person.", "to grab his hand"], "input": {"head": "PersonX pulls PersonY's hand", "relation": "xNeed", "prompt": "PersonX pulls PersonY's hand. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target, but"], "references": ["argue", "none", "defend"], "input": {"head": "PersonX keeps ___ at bay", "relation": "xNeed", "prompt": "PersonX keeps ___ at bay. Before, PersonX needs to"}}
{"generation": ["wear gloves to be able to use the gloves"], "references": ["to search the garage for them", "find gloves", "to get a pair of gloves.", "check for bugs inside them", "put gloves on", "to put the gloves on."], "input": {"head": "PersonX wears gloves", "relation": "xNeed", "prompt": "PersonX wears gloves. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a PersonX"], "references": ["to leave store", "none", "to walk to street"], "input": {"head": "PersonX looks both ways", "relation": "xNeed", "prompt": "PersonX looks both ways. Before, PersonX needs to"}}
{"generation": ["be in the same room as the person he wants"], "references": ["none"], "input": {"head": "PersonX says sure", "relation": "xNeed", "prompt": "PersonX says sure. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and the name"], "references": ["none"], "input": {"head": "PersonX tests PersonX's ability", "relation": "xNeed", "prompt": "PersonX tests PersonX's ability. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["She needs to buy feline food", "She needs to pick out a pet"], "input": {"head": "PersonX hats cats", "relation": "xNeed", "prompt": "PersonX hats cats. Before, PersonX needs to"}}
{"generation": ["be told to run"], "references": ["none", "to stay on a path", "to of started running"], "input": {"head": "PersonX runs straight", "relation": "xNeed", "prompt": "PersonX runs straight. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY"], "references": ["to go to the track", "shoes", "to put on her running gear", "none", "to go outside"], "input": {"head": "PersonX runs laps", "relation": "xNeed", "prompt": "PersonX runs laps. Before, PersonX needs to"}}
{"generation": ["be a person who is not a person"], "references": ["to do special things for PersonY", "to meet PersonY", "to fall in love with Person Y.", "to know Person Y.", "to talk with PersonY over time", "to go on dates with PersonY"], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "xNeed", "prompt": "PersonX loves PersonY with all my heart. Before, PersonX needs to"}}
{"generation": ["know about PersonY"], "references": ["none", "plan on how to take turn", "ask for turn"], "input": {"head": "PersonX is someone else 's ___", "relation": "xNeed", "prompt": "PersonX is someone else 's ___. Before, PersonX needs to"}}
{"generation": ["be in the gym, and PersonY needs to"], "references": ["List working materiel", "get dressed in workout clothes", "Planning how to work", "to not be working out", "to have urge to work out", "go to location to work out"], "input": {"head": "PersonX starts working out", "relation": "xNeed", "prompt": "PersonX starts working out. Before, PersonX needs to"}}
{"generation": ["be a good soccer player"], "references": ["to train hard", "to train consistently", "to practice", "to join a team", "none"], "input": {"head": "PersonX is a good soccer player", "relation": "xNeed", "prompt": "PersonX is a good soccer player. Before, PersonX needs to"}}
{"generation": ["make ___ every year"], "references": ["to try to get something", "to gather materials", "none"], "input": {"head": "PersonX makes ___ every year", "relation": "xNeed", "prompt": "PersonX makes ___ every year. Before, PersonX needs to"}}
{"generation": ["be able to run on a single CPU core,"], "references": ["to have tried this year", "be more prepared", "to have failed", "study harder", "none"], "input": {"head": "PersonX tries again next year", "relation": "xNeed", "prompt": "PersonX tries again next year. Before, PersonX needs to"}}
{"generation": ["be a teacher"], "references": ["to get hired at a school", "to get a teaching degree"], "input": {"head": "PersonX teaches ___ in schools", "relation": "xNeed", "prompt": "PersonX teaches ___ in schools. Before, PersonX needs to"}}
{"generation": ["know the time to know when to start the timer"], "references": ["She's only allowed 2 hours.", "none", "She enjoys painting."], "input": {"head": "PersonX loses track of the time", "relation": "xNeed", "prompt": "PersonX loses track of the time. Before, PersonX needs to"}}
{"generation": ["be a string, but now it can be a"], "references": ["to plan", "to muster up courage", "to make a decision", "to have an aim"], "input": {"head": "PersonX finally worked up", "relation": "xNeed", "prompt": "PersonX finally worked up. Before, PersonX needs to"}}
{"generation": ["be a string, but now it can be a"], "references": ["none"], "input": {"head": "PersonX seems better", "relation": "xNeed", "prompt": "PersonX seems better. Before, PersonX needs to"}}
{"generation": ["buy PersonY's one"], "references": ["to go to the store", "Gather money", "Decide to purchase", "to collect money", "have money"], "input": {"head": "PersonX buys PersonY's one", "relation": "xNeed", "prompt": "PersonX buys PersonY's one. Before, PersonX needs to"}}
{"generation": ["learn how to drive a car"], "references": ["obtain a permit", "setup an appointment with a driving instructor", "to be the right age", "study for the test", "to be able to reach the peddles", "none"], "input": {"head": "PersonX wants to learn how to drive", "relation": "xNeed", "prompt": "PersonX wants to learn how to drive. Before, PersonX needs to"}}
{"generation": ["be at least ___ in value"], "references": ["to not spend the acquired amount", "none", "to acquire an abundant amount"], "input": {"head": "PersonX exceeds ___ in value", "relation": "xNeed", "prompt": "PersonX exceeds ___ in value. Before, PersonX needs to"}}
{"generation": ["pay for the house, but now he can just"], "references": ["gather the funds needed to buy an aquarium", "make money", "go to the store", "have money", "decide what to buy", "measure the space the aquarium will reside in"], "input": {"head": "PersonX buys ___ for PersonX's house", "relation": "xNeed", "prompt": "PersonX buys ___ for PersonX's house. Before, PersonX needs to"}}
{"generation": ["be a person, and PersonX is a person"], "references": ["write an article", "none", "learn information"], "input": {"head": "PersonX covers every aspect", "relation": "xNeed", "prompt": "PersonX covers every aspect. Before, PersonX needs to"}}
{"generation": ["know the name of PersonY's friend"], "references": ["to find out where they live", "to get transportation"], "input": {"head": "PersonX visits PersonY's friend", "relation": "xNeed", "prompt": "PersonX visits PersonY's friend. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["to go gambling at the casino", "to ask the prom queen out on a date", "do something they have been warned not to do", "to play the lottery", "do something risky", "none"], "input": {"head": "PersonX pushes PersonX's luck", "relation": "xNeed", "prompt": "PersonX pushes PersonX's luck. Before, PersonX needs to"}}
{"generation": ["know the name of the person he wants to contact"], "references": ["To have bought groceries", "to prepare something", "to have some time", "none", "To have invited friends for dinner"], "input": {"head": "PersonX makes arrangements", "relation": "xNeed", "prompt": "PersonX makes arrangements. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a person"], "references": ["to tell personY thats why they think that", "to think thats why"], "input": {"head": "PersonX owes PersonY's ___ to the fact", "relation": "xNeed", "prompt": "PersonX owes PersonY's ___ to the fact. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["to go shopping", "none", "spend a lot", "to make money"], "input": {"head": "PersonX pisses money up the wall", "relation": "xNeed", "prompt": "PersonX pisses money up the wall. Before, PersonX needs to"}}
{"generation": ["be able to see PersonY's face, but"], "references": ["for them to do something for them", "to accept a favor", "to go to PersonY's house", "to see PersonY", "to accept a gift", "for them to be grateful for it"], "input": {"head": "PersonX thanks PersonY's profusely", "relation": "xNeed", "prompt": "PersonX thanks PersonY's profusely. Before, PersonX needs to"}}
{"generation": ["play the song in the order it was played in"], "references": ["to make a playlist", "to turn on an mp3 player", "none"], "input": {"head": "PersonX plays PersonX's favorite songs", "relation": "xNeed", "prompt": "PersonX plays PersonX's favorite songs. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target"], "references": ["none"], "input": {"head": "PersonX brings ___ to the eyes", "relation": "xNeed", "prompt": "PersonX brings ___ to the eyes. Before, PersonX needs to"}}
{"generation": ["convince PersonY's parents"], "references": ["to want to do something", "ask if he can speak to the parents", "To talk to them", "to be convincing", "To have a conversation with them", "go to the parents' house"], "input": {"head": "PersonX convinces PersonY's parents", "relation": "xNeed", "prompt": "PersonX convinces PersonY's parents. Before, PersonX needs to"}}
{"generation": ["grab PersonY by the hair to grab PersonY"], "references": ["to be in fight", "get close to the person", "wrap hair around their fist", "to be angry", "none"], "input": {"head": "PersonX grabs PersonY by the hair", "relation": "xNeed", "prompt": "PersonX grabs PersonY by the hair. Before, PersonX needs to"}}
{"generation": ["be able to see the person, but now Person"], "references": ["call the other party", "have an excuse", "think of a way to prevent people coming", "think of a excuse /reason", "none"], "input": {"head": "PersonX prevents ___ from coming", "relation": "xNeed", "prompt": "PersonX prevents ___ from coming. Before, PersonX needs to"}}
{"generation": ["know the PersonZ's position and the PersonZ"], "references": ["to learn from personZ", "none", "to want to help personY"], "input": {"head": "PersonX helps PersonY in PersonZ way", "relation": "xNeed", "prompt": "PersonX helps PersonY in PersonZ way. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["to yell out", "to smile at PersonY", "to get someone's attention", "to talk to PersonY's friend", "to see PersonY", "to walk past someone", "to behave polished"], "input": {"head": "PersonX catches PersonY attention", "relation": "xNeed", "prompt": "PersonX catches PersonY attention. Before, PersonX needs to"}}
{"generation": ["be able to pay for the service, but now"], "references": ["raise army", "buy weapons", "hate another group", "tell to marines", "have opponent", "use weapons to kill people", "make enemies", "build military", "send troops", "have weapons", "think again", "create army", "shoot people", "gather army", "find enemy", "use convictec felons", "head of state", "plan supply needs", "arm yourself", "stockpile weapons and gather troops", "provoke", "attack enemy", "train army", "have army", "fire missle at another country", "have weapons and cause", "hire army", "join army", "get allies", "insure have enough supplies"], "input": {"head": "wage war", "relation": "xNeed", "prompt": "wage war. Before, PersonX needs to"}}
{"generation": ["be in the same place as PersonY, but"], "references": ["skates", "to put on skates", "to drive to the skating ring", "to drive to the beach", "a skate rink"], "input": {"head": "PersonX skates around", "relation": "xNeed", "prompt": "PersonX skates around. Before, PersonX needs to"}}
{"generation": ["be a person, and PersonX is a person"], "references": ["none", "to be humorous", "to be jolly"], "input": {"head": "PersonX has tons of fun", "relation": "xNeed", "prompt": "PersonX has tons of fun. Before, PersonX needs to"}}
{"generation": ["know the PersonX object, but now PersonX"], "references": ["convert text into data", "to follow the diagram", "to buy the necessary wiring", "transfer the data into", "none"], "input": {"head": "PersonX transforms ___ into outputs", "relation": "xNeed", "prompt": "PersonX transforms ___ into outputs. Before, PersonX needs to"}}
{"generation": ["go to the farm and talk to the farmer"], "references": ["to drive to the car", "learn about farm", "to get in their car", "check visiting hours", "drive to farm", "to get in the car", "to drive"], "input": {"head": "PersonX visits a farm", "relation": "xNeed", "prompt": "PersonX visits a farm. Before, PersonX needs to"}}
{"generation": ["think about the PersonX's mind"], "references": ["to focus on it", "to have a task", "to use thought to help with it", "to want something very much", "none"], "input": {"head": "PersonX puts PersonX's mind to it", "relation": "xNeed", "prompt": "PersonX puts PersonX's mind to it. Before, PersonX needs to"}}
{"generation": ["be in a certain place to be able to see"], "references": ["to have tried new shoes", "to be at shoe store", "none"], "input": {"head": "PersonX loves shoes", "relation": "xNeed", "prompt": "PersonX loves shoes. Before, PersonX needs to"}}
{"generation": ["know the group of people who are in the group"], "references": ["games", "enjoy"], "input": {"head": "PersonX divides ___ into groups", "relation": "xNeed", "prompt": "PersonX divides ___ into groups. Before, PersonX needs to"}}
{"generation": ["send PersonY to the showers"], "references": ["none"], "input": {"head": "PersonX sends PersonY to the showers", "relation": "xNeed", "prompt": "PersonX sends PersonY to the showers. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["none"], "input": {"head": "PersonX also stopped", "relation": "xNeed", "prompt": "PersonX also stopped. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["to have taken PersonY to court", "to have arrested personY", "to have asked PersonY to go with them", "to lead PersonY", "none", "to tell PersonY to follow them"], "input": {"head": "PersonX escorts PersonY back", "relation": "xNeed", "prompt": "PersonX escorts PersonY back. Before, PersonX needs to"}}
{"generation": ["know the PersonX's inside"], "references": ["go through door", "to walk to the door.", "to open the door", "to open the door.", "to wear proper clothes", "be inside a building"], "input": {"head": "PersonX takes PersonX's outside", "relation": "xNeed", "prompt": "PersonX takes PersonX's outside. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["to go to the place in question", "to have a little dog", "Puts him in the car.", "select the pet", "go to pet store", "She puts him in crate."], "input": {"head": "PersonX brings the puppy", "relation": "xNeed", "prompt": "PersonX brings the puppy. Before, PersonX needs to"}}
{"generation": ["buy a parrot"], "references": ["to find petshop", "to buy parrot supplies", "have the money for one", "to find a pet store", "to want a parrot", "buy a cage", "buy parrot food", "to have money to buy it"], "input": {"head": "PersonX buys a parrot", "relation": "xNeed", "prompt": "PersonX buys a parrot. Before, PersonX needs to"}}
{"generation": ["be in the same room as the patient"], "references": ["go see doctor", "make doctor's appointment", "schedule appointment with doctor", "have rendez vous", "kill yourself", "make appointment with doctor", "reserve doctors appointment", "have wash", "strip", "join army", "find name of doctor", "ask doctor", "set up appointment", "go to doctors", "wear clean underwear", "call doctor for appointment", "see doctor", "at doctor's office", "call doctor", "get prepared for exam"], "input": {"head": "have physical exam", "relation": "xNeed", "prompt": "have physical exam. Before, PersonX needs to"}}
{"generation": ["be in the water to fish"], "references": ["none", "to go to the water", "to get some worms", "get a fishing hook and line"], "input": {"head": "PersonX likes to fish", "relation": "xNeed", "prompt": "PersonX likes to fish. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY, but"], "references": ["none"], "input": {"head": "PersonX flees the scene", "relation": "xNeed", "prompt": "PersonX flees the scene. Before, PersonX needs to"}}
{"generation": ["be a member of the group to be able to"], "references": ["to commit a crime", "commit a crime", "to turn themselves in", "plead guilty", "be convicted", "go to court"], "input": {"head": "PersonX serves ___ in prison", "relation": "xNeed", "prompt": "PersonX serves ___ in prison. Before, PersonX needs to"}}
{"generation": ["know the ___"], "references": ["research the discussion", "learn about the nature", "Learn of the play", "Read the paper", "to learn something", "to gather information", "none", "observe and form opinions"], "input": {"head": "PersonX understands fully the ___", "relation": "xNeed", "prompt": "PersonX understands fully the ___. Before, PersonX needs to"}}
{"generation": ["wait for the call to be answered before it can"], "references": ["dial the number", "to make a decision to call", "to pick up the phone", "find the phone"], "input": {"head": "PersonX calls ___ immediately", "relation": "xNeed", "prompt": "PersonX calls ___ immediately. Before, PersonX needs to"}}
{"generation": ["be able to find the person in the database"], "references": ["none"], "input": {"head": "PersonX has done something wrong", "relation": "xNeed", "prompt": "PersonX has done something wrong. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["reach out hand", "to see a turtle on the road", "to know how to speed them up", "to have things to do", "guide", "to encounter a person"], "input": {"head": "PersonX helps ___ along", "relation": "xNeed", "prompt": "PersonX helps ___ along. Before, PersonX needs to"}}
{"generation": ["know the name of the cake, and PersonY"], "references": ["find a cake shop", "go to the bakery", "takes his mobile", "tells the type of cake", "choose a cake to order", "pay for a cake"], "input": {"head": "PersonX orders a cake", "relation": "xNeed", "prompt": "PersonX orders a cake. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and PersonX"], "references": ["to pray every morning", "to work hard", "to have enough money", "to  make a list", "to start buying things", "none"], "input": {"head": "PersonX gets everything", "relation": "xNeed", "prompt": "PersonX gets everything. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and the name"], "references": ["picture", "love", "to take it", "to fix it"], "input": {"head": "PersonX puts together a ___", "relation": "xNeed", "prompt": "PersonX puts together a ___. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["none"], "input": {"head": "PersonX gets frustrated", "relation": "xNeed", "prompt": "PersonX gets frustrated. Before, PersonX needs to"}}
{"generation": ["be in the same room as the player, but"], "references": ["remove from freezer"], "input": {"head": "thaw roast", "relation": "xNeed", "prompt": "thaw roast. Before, PersonX needs to"}}
{"generation": ["know that PersonY is away"], "references": ["to make sure PersonY has everything they need", "to go with PersonY to the depot or airport", "to say goodbye", "none"], "input": {"head": "PersonX sees PersonY away", "relation": "xNeed", "prompt": "PersonX sees PersonY away. Before, PersonX needs to"}}
{"generation": ["know the ___"], "references": ["to study something well", "none", "to analyze something"], "input": {"head": "PersonX understands the ___ fully", "relation": "xNeed", "prompt": "PersonX understands the ___ fully. Before, PersonX needs to"}}
{"generation": ["wait for the bus to arrive"], "references": ["get dressed", "shoes", "to walk to the bus stop", "none", "to find out which bus stop to go there"], "input": {"head": "PersonX waits at the bus stop", "relation": "xNeed", "prompt": "PersonX waits at the bus stop. Before, PersonX needs to"}}
{"generation": ["be in a state of \"sickness\""], "references": ["take care of it", "buy medicine to help it heal", "to see a doctor", "get nursing supplies"], "input": {"head": "PersonX nurses it back to health", "relation": "xNeed", "prompt": "PersonX nurses it back to health. Before, PersonX needs to"}}
{"generation": ["be the one to initiate the conversation, but now"], "references": ["to think about something", "to converse with someone", "none"], "input": {"head": "PersonX reluctantly accepted", "relation": "xNeed", "prompt": "PersonX reluctantly accepted. Before, PersonX needs to"}}
{"generation": ["borrow PersonY's car"], "references": ["to go to PersonY", "to go somewheree", "relationship with PersonY", "none", "to ask to borrow PersonY's car"], "input": {"head": "PersonX borrows PersonY's car", "relation": "xNeed", "prompt": "PersonX borrows PersonY's car. Before, PersonX needs to"}}
{"generation": ["know the name of the pizza place, the address"], "references": ["go to hotel", "none", "need money"], "input": {"head": "PersonX decides to order a pizza", "relation": "xNeed", "prompt": "PersonX decides to order a pizza. Before, PersonX needs to"}}
{"generation": ["be a Person, and PersonX is a Person"], "references": ["go through a company wide lay off", "have a fight with boss", "to gain an advantage", "to gain power", "none"], "input": {"head": "PersonX retains PersonX's position", "relation": "xNeed", "prompt": "PersonX retains PersonX's position. Before, PersonX needs to"}}
{"generation": ["be a person, and PersonY needs to be"], "references": ["to find out what the light is for", "know where PersonY is", "have something for the light", "hand the light to PersonY", "to go to the store", "has the light available"], "input": {"head": "PersonX gives PersonY light", "relation": "xNeed", "prompt": "PersonX gives PersonY light. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["to decide to make a change", "none", "to achieve a goal"], "input": {"head": "PersonX has never been happier", "relation": "xNeed", "prompt": "PersonX has never been happier. Before, PersonX needs to"}}
{"generation": ["know the name of PersonY"], "references": ["none"], "input": {"head": "PersonX stops calling PersonY", "relation": "xNeed", "prompt": "PersonX stops calling PersonY. Before, PersonX needs to"}}
{"generation": ["be in the same room as the person he likes"], "references": ["none"], "input": {"head": "PersonX likes cheese", "relation": "xNeed", "prompt": "PersonX likes cheese. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["to muster willpower", "to avoid talking about it", "to make a mistake", "to shut his mouth", "to learn about it", "to cover up mistake"], "input": {"head": "PersonX tries to keep it a secret", "relation": "xNeed", "prompt": "PersonX tries to keep it a secret. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["to drink energy drinks", "to get books", "to get stufy materials", "get rid of distractions", "get a good nights sleep", "to eat a good dinner"], "input": {"head": "PersonX studies extra hard", "relation": "xNeed", "prompt": "PersonX studies extra hard. Before, PersonX needs to"}}
{"generation": ["be able to see PersonY's head to know"], "references": ["to hear PersonY deny any vaping", "a rope to attach to PersonY's head", "a sturdy place to hang the rope from", "to confront PersonY", "none", "to discover PersonY vaping at party", "to ask PersonY about vaping"], "input": {"head": "PersonX hangs PersonY's head", "relation": "xNeed", "prompt": "PersonX hangs PersonY's head. Before, PersonX needs to"}}
{"generation": ["know the name of PersonY"], "references": ["have a phone", "to answer their phone", "to buy a phone", "develop a friendship", "none"], "input": {"head": "PersonX gets a call from PersonY", "relation": "xNeed", "prompt": "PersonX gets a call from PersonY. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to see"], "references": ["to have performed extremely well", "to have hurt PersonY", "to have honored PersonY in their speech", "to talk to PersonY", "to find PersonY", "to have said something horrible to PersonY"], "input": {"head": "PersonX brings ___ to PersonY's eyes", "relation": "xNeed", "prompt": "PersonX brings ___ to PersonY's eyes. Before, PersonX needs to"}}
{"generation": ["be in the same room as the player"], "references": ["shave", "hospital", "wax", "to pull up their pant leg", "to pull up their skirt", "injured", "to lift his leg up a bit", "to roll his pants up"], "input": {"head": "PersonX shows a leg", "relation": "xNeed", "prompt": "PersonX shows a leg. Before, PersonX needs to"}}
{"generation": ["be confident in PersonY to be able to trust"], "references": ["to work hard", "to accomplish what they have been asked", "to keep PersonY's secrets", "to prove themselves", "to follow through with agreements", "to save PersonY's business"], "input": {"head": "PersonX gains PersonY's confidence", "relation": "xNeed", "prompt": "PersonX gains PersonY's confidence. Before, PersonX needs to"}}
{"generation": ["know the name of the person to be changed"], "references": ["have an epiphany about their life.", "to be a hoarder", "to have a cluttered house", "to have gone through something", "none", "to not like what they're doing."], "input": {"head": "PersonX makes a change", "relation": "xNeed", "prompt": "PersonX makes a change. Before, PersonX needs to"}}
{"generation": ["be in front of PersonY, but now Person"], "references": ["get close to PersonY", "be friends", "like PersonY", "approach PersonY", "none"], "input": {"head": "PersonX claps PersonY on the shoulder", "relation": "xNeed", "prompt": "PersonX claps PersonY on the shoulder. Before, PersonX needs to"}}
{"generation": ["be in a position to be tempted, but now"], "references": ["to understand PersonY", "to entice person y", "to have bad habits", "to seduce person y", "to be a trouble maker", "to be a bad influence", "to get PersonY's attention"], "input": {"head": "PersonX leads PersonY into temptation", "relation": "xNeed", "prompt": "PersonX leads PersonY into temptation. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["to drive themselves there", "get a membership in the gym", "get a meal plan", "to take off of work", "none"], "input": {"head": "PersonX often went", "relation": "xNeed", "prompt": "PersonX often went. Before, PersonX needs to"}}
{"generation": ["know PersonY's X and Y coordinates"], "references": ["to talk to PersonY", "to ask what the request is.", "consider what person y is saying", "to ask find PersonY.", "make a decision in their mind", "to see if the request if feasible", "to know the reason for PersonY's request"], "input": {"head": "PersonX grants PersonY request", "relation": "xNeed", "prompt": "PersonX grants PersonY request. Before, PersonX needs to"}}
{"generation": ["be a person"], "references": ["to dress different.", "buy touristy clothes", "to dress like a tourist", "wear them", "to travel.", "to go on vacation"], "input": {"head": "PersonX looks like a tourist", "relation": "xNeed", "prompt": "PersonX looks like a tourist. Before, PersonX needs to"}}
{"generation": ["be the one to say something"], "references": ["to dig a hole", "to go to the beach", "to make sure someone is with them", "grab their friend"], "input": {"head": "PersonX puts PersonX's head in the sand", "relation": "xNeed", "prompt": "PersonX puts PersonX's head in the sand. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face, but"], "references": ["to be filling a online protest form", "to be asked a question", "to listen to the conversation", "have formed an opinion", "have heard an opposing opinion", "to determine a response"], "input": {"head": "PersonX agrees to disagree", "relation": "xNeed", "prompt": "PersonX agrees to disagree. Before, PersonX needs to"}}
{"generation": ["know the position of the lip"], "references": ["to pull their lip in", "none", "to push their teeth out"], "input": {"head": "PersonX bits PersonX's lip", "relation": "xNeed", "prompt": "PersonX bits PersonX's lip. Before, PersonX needs to"}}
{"generation": ["find the ___"], "references": ["gas", "none", "car"], "input": {"head": "PersonX finds another ___", "relation": "xNeed", "prompt": "PersonX finds another ___. Before, PersonX needs to"}}
{"generation": ["be a string, but now it can be a"], "references": ["to shower", "to apply perfume", "to put on parfume", "apply perfume", "to take a shower", "bathe"], "input": {"head": "PersonX smells nice", "relation": "xNeed", "prompt": "PersonX smells nice. Before, PersonX needs to"}}
{"generation": ["know the date of the last time the user logged"], "references": ["to ask people for their number", "to call people to ask for a date", "to have a date", "to not want to settle down"], "input": {"head": "PersonX dates for years", "relation": "xNeed", "prompt": "PersonX dates for years. Before, PersonX needs to"}}
{"generation": ["be able to see the person's face"], "references": ["to get out the tools", "to buy tools", "get dressed", "gather tools needed", "to put on boots", "to go outside"], "input": {"head": "PersonX does yard work", "relation": "xNeed", "prompt": "PersonX does yard work. Before, PersonX needs to"}}
{"generation": ["pay for the service, but now it can pay"], "references": ["get job", "find job"], "input": {"head": "earn money", "relation": "xNeed", "prompt": "earn money. Before, PersonX needs to"}}
{"generation": ["know the name of the god, and PersonY"], "references": ["figure out how to accomplish it", "figure out what god wants"], "input": {"head": "PersonX accomplishes god 's ___", "relation": "xNeed", "prompt": "PersonX accomplishes god 's ___. Before, PersonX needs to"}}
{"generation": ["know the current position of the mouse"], "references": ["to wear shoes", "to gauge the offense", "to keep eye on track", "to put on sneakers.", "to figure out where they are gonna run.", "think of a strategy"], "input": {"head": "PersonX runs right", "relation": "xNeed", "prompt": "PersonX runs right. Before, PersonX needs to"}}
{"generation": ["be a singleton, but now it can be"], "references": ["to feel ill", "none", "to eat the food"], "input": {"head": "PersonX starts to swell", "relation": "xNeed", "prompt": "PersonX starts to swell. Before, PersonX needs to"}}
{"generation": ["know that PersonY owns a dog"], "references": ["look for place to get a dog", "want a pet", "Buy food", "to buy a dog", "to go to the pet seller", "Buy a dog house"], "input": {"head": "PersonX owns a dog", "relation": "xNeed", "prompt": "PersonX owns a dog. Before, PersonX needs to"}}
{"generation": ["know the name of the person he wants to meet"], "references": ["map out sites to see", "call ahead to book trip", "to ask for time off", "to research airline prices", "to call their travel agent.", "to pick up travel brochures."], "input": {"head": "PersonX plans a trip", "relation": "xNeed", "prompt": "PersonX plans a trip. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target, but"], "references": ["to have an accident", "to touch something hot", "to touch the stove", "to reach for the stove", "none"], "input": {"head": "PersonX burns badly", "relation": "xNeed", "prompt": "PersonX burns badly. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to wipe"], "references": ["take out his hanky", "to to find a towel", "to pull out a hankie.", "to go near him", "to get a tissue", "to reach over to Person Y's forehead."], "input": {"head": "PersonX wipes the ___ from PersonY's forehead", "relation": "xNeed", "prompt": "PersonX wipes the ___ from PersonY's forehead. Before, PersonX needs to"}}
{"generation": ["find a pay phone"], "references": ["to look for a pay phone", "to have there eyes open", "to decide to call someone", "To scan their surrondings", "none"], "input": {"head": "PersonX finds a pay phone", "relation": "xNeed", "prompt": "PersonX finds a pay phone. Before, PersonX needs to"}}
{"generation": ["know where PersonY is going"], "references": ["to observe PersonY", "look at map", "see PersonY", "to be aware of where PersonY is"], "input": {"head": "PersonX sees where PersonY was going", "relation": "xNeed", "prompt": "PersonX sees where PersonY was going. Before, PersonX needs to"}}
{"generation": ["send PersonY home"], "references": ["to see the doctors note", "pack something", "go to post office", "to monitor the weather", "to love their parents", "none"], "input": {"head": "PersonX sends ___ home", "relation": "xNeed", "prompt": "PersonX sends ___ home. Before, PersonX needs to"}}
{"generation": ["find a car dealer"], "references": ["to go to the dealership", "to shop for cars", "to obtain financing", "money", "shoes", "to save money", "to go for a test drive", "to save the money"], "input": {"head": "PersonX buys a car", "relation": "xNeed", "prompt": "PersonX buys a car. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target"], "references": ["pull down", "to go to the door", "to touch the door", "to hear a knock on the door", "stretch out hand"], "input": {"head": "PersonX pulls the ___ open", "relation": "xNeed", "prompt": "PersonX pulls the ___ open. Before, PersonX needs to"}}
{"generation": ["know the value of the thing"], "references": ["have something that needs tending", "to have urge to tend to something", "to assess the situation", "none", "to determine the right solution"], "input": {"head": "PersonX takes ___ of things", "relation": "xNeed", "prompt": "PersonX takes ___ of things. Before, PersonX needs to"}}
{"generation": ["be punished for his sins"], "references": ["to go to personY's families house", "to tell them what personY is doing", "to lead them in prayer", "to bring them to church", "none"], "input": {"head": "PersonX saves PersonY's ___ from PersonX's sins", "relation": "xNeed", "prompt": "PersonX saves PersonY's ___ from PersonX's sins. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX is a"], "references": ["to gather the courage", "to feel like they need to"], "input": {"head": "PersonX takes a stand", "relation": "xNeed", "prompt": "PersonX takes a stand. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to wipe"], "references": ["to get near person y", "to run the water", "get close to PersonY", "to grab person y's hands", "to wet a rag", "get a tissue"], "input": {"head": "PersonX wipes PersonY's hands", "relation": "xNeed", "prompt": "PersonX wipes PersonY's hands. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a person, and Person"], "references": ["to find the book", "to think they should be followed", "read instructions", "observe suspect", "to know the directions", "to search for it"], "input": {"head": "PersonX follows ___ carefully", "relation": "xNeed", "prompt": "PersonX follows ___ carefully. Before, PersonX needs to"}}
{"generation": ["know the name of the person, but now it"], "references": ["to take the patient's vital signs", "to look at patient history", "be in the presence of the patient", "have the skills necessary to make an evaluation"], "input": {"head": "PersonX evaluates the patient 's ___", "relation": "xNeed", "prompt": "PersonX evaluates the patient 's ___. Before, PersonX needs to"}}
{"generation": ["learn how to play the piano"], "references": ["to enrol in guitar classes", "to have a guitar", "to find a guitar teacher", "to buy a guitar", "none", "to take guitar lessons"], "input": {"head": "PersonX wants to learn how to play the guitar", "relation": "xNeed", "prompt": "PersonX wants to learn how to play the guitar. Before, PersonX needs to"}}
{"generation": ["be a person, but now PersonX can be"], "references": ["to don their chosen costume", "to buy a costume", "bring a basket", "Get a costume on.", "wear a costume", "Get a big bag."], "input": {"head": "PersonX tricks or treat", "relation": "xNeed", "prompt": "PersonX tricks or treat. Before, PersonX needs to"}}
{"generation": ["go to ___"], "references": ["to buy an airline ticket", "to get flowers", "to love father a lot", "to respect father", "to buy a wedding present", "to get directions", "to fly to his home town"], "input": {"head": "PersonX attends PersonX's father 's ___", "relation": "xNeed", "prompt": "PersonX attends PersonX's father 's ___. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a PersonX, and"], "references": ["to meet PersonY", "to of had it", "to like PersonY", "to of given it to them", "to see PersonY", "none"], "input": {"head": "PersonX evens gave PersonY ___", "relation": "xNeed", "prompt": "PersonX evens gave PersonY ___. Before, PersonX needs to"}}
{"generation": ["be able to see the world as a whole,"], "references": ["none", "hit menopause", "have bad childhood"], "input": {"head": "PersonX has anger problems", "relation": "xNeed", "prompt": "PersonX has anger problems. Before, PersonX needs to"}}
{"generation": ["save PersonX's people"], "references": ["to of made a plan to correct it", "to fight a battle", "to free their people from a prison", "to know what is needed"], "input": {"head": "PersonX saves PersonX's people", "relation": "xNeed", "prompt": "PersonX saves PersonX's people. Before, PersonX needs to"}}
{"generation": ["be able to see the ___"], "references": ["to assess the situation", "to determine what needs to be done", "move between the aggressor and the object to protect", "to identify the aggressor"], "input": {"head": "PersonX protects the ___ from harm", "relation": "xNeed", "prompt": "PersonX protects the ___ from harm. Before, PersonX needs to"}}
{"generation": ["be a good person to get the girl"], "references": ["to live a life that needs turning around", "plan on how to turn the life around", "to seek counseling", "to admit a problem", "to determine goals", "to make a plan"], "input": {"head": "PersonX turns PersonX's life around", "relation": "xNeed", "prompt": "PersonX turns PersonX's life around. Before, PersonX needs to"}}
{"generation": ["ask PersonY to sit down"], "references": ["to go to PersonY", "to get up from their own seat to give it to PersonY", "to invite them in their office", "to page personY", "to bring PersonY a chair"], "input": {"head": "PersonX asks PersonY to sit down", "relation": "xNeed", "prompt": "PersonX asks PersonY to sit down. Before, PersonX needs to"}}
{"generation": ["be a member of the group to earn money"], "references": ["to find work", "to be trained for the work", "to to go to a temp agency", "to drive to work", "to work hard", "to work", "to get a job"], "input": {"head": "PersonX earns some money", "relation": "xNeed", "prompt": "PersonX earns some money. Before, PersonX needs to"}}
{"generation": ["sing the song, but now PersonX can sing"], "references": ["to have good mood", "to be listening to song", "to like singing", "to be at a karaoke bar", "none"], "input": {"head": "PersonX sings PersonX's heart", "relation": "xNeed", "prompt": "PersonX sings PersonX's heart. Before, PersonX needs to"}}
{"generation": ["be a person"], "references": ["to have a job", "to find something to do", "to have a business", "to get a job", "To work hard", "To do work"], "input": {"head": "PersonX earns money", "relation": "xNeed", "prompt": "PersonX earns money. Before, PersonX needs to"}}
{"generation": ["know about PersonY"], "references": ["decide what to clean", "fill in water", "Get some water", "approach the person", "Get soap", "get soap"], "input": {"head": "PersonX cleans PersonY", "relation": "xNeed", "prompt": "PersonX cleans PersonY. Before, PersonX needs to"}}
{"generation": ["be a string, but now it can be a"], "references": ["to tell what they did wrong", "confront their problems", "to offer recompense", "make a wrong", "none"], "input": {"head": "PersonX sets things right", "relation": "xNeed", "prompt": "PersonX sets things right. Before, PersonX needs to"}}
{"generation": ["know the snake's name"], "references": ["to walk around.", "none", "to go outside."], "input": {"head": "PersonX sees a snake", "relation": "xNeed", "prompt": "PersonX sees a snake. Before, PersonX needs to"}}
{"generation": ["know the name of the person, and the name"], "references": ["To have financial management skills", "to get prepared", "to be a good a leader", "To have money", "none"], "input": {"head": "PersonX manages one 's ___", "relation": "xNeed", "prompt": "PersonX manages one 's ___. Before, PersonX needs to"}}
{"generation": ["find PersonX's car keys"], "references": ["to have left them somewhere", "to have lost them", "to locate last place they were in", "to narrow down possible locations"], "input": {"head": "PersonX finds PersonX's car keys", "relation": "xNeed", "prompt": "PersonX finds PersonX's car keys. Before, PersonX needs to"}}
{"generation": ["be in the same room as the target, but"], "references": ["sits too close", "none", "pulls his seat back"], "input": {"head": "PersonX accidentally kicked", "relation": "xNeed", "prompt": "PersonX accidentally kicked. Before, PersonX needs to"}}
{"generation": ["be a part of the game, but now it"], "references": ["to exercise", "to eat well", "none"], "input": {"head": "PersonX feels better than ever", "relation": "xNeed", "prompt": "PersonX feels better than ever. Before, PersonX needs to"}}
{"generation": ["know the PersonY's name, and PersonY"], "references": ["to know how much PersonY studies", "to observe the other person", "schedule time to devote to study.", "to gather study materials", "to apply himself to the study", "acquire study materials.", "to have everything to study"], "input": {"head": "PersonX studies as much as PersonY could", "relation": "xNeed", "prompt": "PersonX studies as much as PersonY could. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY"], "references": ["to answer the phone", "to have Y's number", "answers the phone", "to call Y", "get get a call", "calls someone", "dials a number"], "input": {"head": "PersonX talks on the phone", "relation": "xNeed", "prompt": "PersonX talks on the phone. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to be"], "references": ["none", "to have a lot of faith", "to have been adopted by them", "to have grown up there"], "input": {"head": "PersonX loves ___ with PersonX's heart", "relation": "xNeed", "prompt": "PersonX loves ___ with PersonX's heart. Before, PersonX needs to"}}
{"generation": ["make a pasta, and PersonY needs to make"], "references": ["purchase a pot", "purchase ingredients"], "input": {"head": "PersonX makes pasta for dinner", "relation": "xNeed", "prompt": "PersonX makes pasta for dinner. Before, PersonX needs to"}}
{"generation": ["know the name of the job"], "references": ["to decide where to apply.", "write a CV", "to prepare resume or CV", "to fill forms", "go to a job search website", "to get a resume ready.", "turn on the computer"], "input": {"head": "PersonX applies for jobs", "relation": "xNeed", "prompt": "PersonX applies for jobs. Before, PersonX needs to"}}
{"generation": ["be found dead in the house"], "references": ["to get shot", "to die", "be at PersonY's house", "be at their house", "none"], "input": {"head": "PersonX is found dead morning at PersonY's home in", "relation": "xNeed", "prompt": "PersonX is found dead morning at PersonY's home in. Before, PersonX needs to"}}
{"generation": ["be in front of PersonY to reach behind Person"], "references": ["establish that the object is behind person y", "talk to PersonY", "to find person Y", "approach PersonY"], "input": {"head": "PersonX reaches behind PersonY", "relation": "xNeed", "prompt": "PersonX reaches behind PersonY. Before, PersonX needs to"}}
{"generation": ["be set to the current player"], "references": ["know what makes y tick", "to tease Person Y", "get angry", "none", "to find Person Y"], "input": {"head": "PersonX sets PersonY off", "relation": "xNeed", "prompt": "PersonX sets PersonY off. Before, PersonX needs to"}}
{"generation": ["be in the same room as PersonY to see"], "references": ["none"], "input": {"head": "PersonX gives PersonY a small smile", "relation": "xNeed", "prompt": "PersonX gives PersonY a small smile. Before, PersonX needs to"}}
{"generation": ["be hit by lightning to be killed"], "references": ["none", "to go in an open field", "to be outside"], "input": {"head": "PersonX hits by lightning", "relation": "xNeed", "prompt": "PersonX hits by lightning. Before, PersonX needs to"}}
{"generation": ["be initialized"], "references": ["to have an idea how to do it", "to get a job.", "to have a task", "transportation to their job.", "to hunt for job", "to get hired for job"], "input": {"head": "PersonX starts working", "relation": "xNeed", "prompt": "PersonX starts working. Before, PersonX needs to"}}
{"generation": ["know that PersonY is a member of the group"], "references": ["to prepare for something", "have the skill of organizing", "to have something to organize", "to to collect information about something", "none"], "input": {"head": "PersonX organizes and ___ collectively", "relation": "xNeed", "prompt": "PersonX organizes and ___ collectively. Before, PersonX needs to"}}
{"generation": ["know PersonY's name, but now PersonX"], "references": ["to talk to PersonY", "to find out what PersonY already knows", "to read more books", "to understand the knowledge"], "input": {"head": "PersonX increases PersonY's knowledge", "relation": "xNeed", "prompt": "PersonX increases PersonY's knowledge. Before, PersonX needs to"}}
{"generation": ["be a lot more complex than it is now"], "references": ["to have rested well", "to have taken their medication", "sleep in bed", "take medication", "to have had a good night", "have a sickness", "take pills"], "input": {"head": "PersonX feels better today", "relation": "xNeed", "prompt": "PersonX feels better today. Before, PersonX needs to"}}
{"generation": ["know PersonY's name"], "references": ["to find person y", "none", "to talk to person y"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "xNeed", "prompt": "PersonX gives PersonY PersonX's name. Before, PersonX needs to"}}
{"generation": ["be done in a way that is easy to understand"], "references": ["to make a commitment", "to make a plan", "to walk in the room", "to sit in their spot"], "input": {"head": "PersonX takes place soon", "relation": "xNeed", "prompt": "PersonX takes place soon. Before, PersonX needs to"}}
{"generation": ["now sitting on the chair"], "references": ["nice", "dominating", "helpful", "authoritative", "controlling", "commanding"], "input": {"head": "PersonX asks PersonY to sit", "relation": "xAttr", "prompt": "PersonX asks PersonY to sit. PersonX is"}}
{"generation": ["the one who is the most likely to be the"], "references": ["Attentive", "Bored", "Playful", "sociable", "Compassionate", "visual"], "input": {"head": "PersonX sees PersonY's brother", "relation": "xAttr", "prompt": "PersonX sees PersonY's brother. PersonX is"}}
{"generation": ["the person who is going to be the target of"], "references": ["nosy", "dependent", "disrispectful", "thoughtful", "cooperating", "open"], "input": {"head": "PersonX takes PersonY decision", "relation": "xAttr", "prompt": "PersonX takes PersonY decision. PersonX is"}}
{"generation": ["now in the ___"], "references": ["capable", "social", "emotional", "nostalgic", "connected", "happy"], "input": {"head": "PersonX visits PersonX's mother 's ___", "relation": "xAttr", "prompt": "PersonX visits PersonX's mother 's ___. PersonX is"}}
{"generation": ["a child of PersonY"], "references": ["altruistic", "educated", "passionate", "loving", "intelligent"], "input": {"head": "PersonX treats ___ in children", "relation": "xAttr", "prompt": "PersonX treats ___ in children. PersonX is"}}
{"generation": ["a new type of player that is not a part"], "references": ["accomplished", "hardworking", "talented", "ecstatic", "impressive"], "input": {"head": "PersonX makes the team", "relation": "xAttr", "prompt": "PersonX makes the team. PersonX is"}}
{"generation": ["a person, and PersonY is a person"], "references": ["statuesque", "pretty", "beautiful", "stoic", "handsome", "immobile", "attractive"], "input": {"head": "PersonX looks like figure", "relation": "xAttr", "prompt": "PersonX looks like figure. PersonX is"}}
{"generation": ["now in the air"], "references": ["humorous", "aggressive", "mean", "silly"], "input": {"head": "PersonX tips PersonY's head", "relation": "xAttr", "prompt": "PersonX tips PersonY's head. PersonX is"}}
{"generation": ["a function that takes a string and returns a string"], "references": ["hopeful", "generous", "needy", "excited", "helpful", "anxious"], "input": {"head": "PersonX sends another ___", "relation": "xAttr", "prompt": "PersonX sends another ___. PersonX is"}}
{"generation": ["the person who invited PersonY to play"], "references": ["inviting", "playful", "generous", "active", "sociable", "friendly"], "input": {"head": "PersonX invites PersonY to play", "relation": "xAttr", "prompt": "PersonX invites PersonY to play. PersonX is"}}
{"generation": ["a person who is not a member of the group"], "references": ["pragmatic", "Proactive", "young", "nervous", "afraid", "Healthy", "responsible"], "input": {"head": "PersonX gets a shot", "relation": "xAttr", "prompt": "PersonX gets a shot. PersonX is"}}
{"generation": ["now a ___"], "references": ["social", "concerned", "decisive", "helpful", "friendly"], "input": {"head": "PersonX goes ___ with PersonX's mom", "relation": "xAttr", "prompt": "PersonX goes ___ with PersonX's mom. PersonX is"}}
{"generation": ["a simple program that reads a file and prints out"], "references": ["daring", "competitive", "Rolling", "Notable", "competent", "resilliant"], "input": {"head": "PersonX gets second place", "relation": "xAttr", "prompt": "PersonX gets second place. PersonX is"}}
{"generation": ["a person who is not a person"], "references": ["skillful", "resourceful", "sad", "miserly", "regretful", "selfish"], "input": {"head": "PersonX gets something for nothing", "relation": "xAttr", "prompt": "PersonX gets something for nothing. PersonX is"}}
{"generation": ["a function that takes a person and returns a person"], "references": ["intelligent", "smart", "stable", "even-keeled"], "input": {"head": "PersonX always makes ___", "relation": "xAttr", "prompt": "PersonX always makes ___. PersonX is"}}
{"generation": ["now in the middle of the street"], "references": ["strong", "ready", "fatigued", "healthy", "tired", "determined"], "input": {"head": "PersonX starts walking", "relation": "xAttr", "prompt": "PersonX starts walking. PersonX is"}}
{"generation": ["a great example of how to use the new features"], "references": ["talented", "happy", "inspring", "good", "pleased", "proud", "caring"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "xAttr", "prompt": "PersonX impresses with PersonX's work. PersonX is"}}
{"generation": ["a redhead"], "references": ["daring", "brave", "fashionable", "bold"], "input": {"head": "PersonX dyes PersonX's hair red", "relation": "xAttr", "prompt": "PersonX dyes PersonX's hair red. PersonX is"}}
{"generation": ["the one who eats the whole thing"], "references": ["greedy", "Famished", "Hungry", "intent", "irresponsible"], "input": {"head": "PersonX eats the whole thing", "relation": "xAttr", "prompt": "PersonX eats the whole thing. PersonX is"}}
{"generation": ["the person who left the room"], "references": ["generous", "Kind", "Considerate", "thoughtful"], "input": {"head": "PersonX leaves PersonY time", "relation": "xAttr", "prompt": "PersonX leaves PersonY time. PersonX is"}}
{"generation": ["a person who is a member of the group Person"], "references": ["attentive", "smart", "Smart", "trusting", "assured", "Obedient"], "input": {"head": "PersonX follows PersonX's instructions", "relation": "xAttr", "prompt": "PersonX follows PersonX's instructions. PersonX is"}}
{"generation": ["the husband"], "references": ["cheater", "outraged", "illicit", "wondering", "adulterous", "observant", "caring"], "input": {"head": "PersonX sees PersonY wife", "relation": "xAttr", "prompt": "PersonX sees PersonY wife. PersonX is"}}
{"generation": ["the name of the person who is the subject of"], "references": ["thorough", "smart", "talented", "persevering", "interesting", "competent", "devoted", "precise"], "input": {"head": "PersonX settles every ___", "relation": "xAttr", "prompt": "PersonX settles every ___. PersonX is"}}
{"generation": ["a member of the group"], "references": ["relaxed", "teasing", "False", "Two faced", "trendy", "cool", "meancing"], "input": {"head": "PersonX blows smoke", "relation": "xAttr", "prompt": "PersonX blows smoke. PersonX is"}}
{"generation": ["a good person, and PersonX is a good"], "references": ["communicative", "naive", "loyal", "friendly", "denial", "upfront"], "input": {"head": "PersonX justifies PersonX's actions", "relation": "xAttr", "prompt": "PersonX justifies PersonX's actions. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["cautious", "expressive", "Irresponsible", "apprehensive", "artistic", "A Spendthrift"], "input": {"head": "PersonX uses the card", "relation": "xAttr", "prompt": "PersonX uses the card. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["friendly", "social", "brilliant", "intelligent"], "input": {"head": "PersonX makes PersonY connection", "relation": "xAttr", "prompt": "PersonX makes PersonY connection. PersonX is"}}
{"generation": ["the person who is the most important to you"], "references": ["VOLUNTARY", "COMPLIMENTARY", "compassionate", "respectful", "proud", "mature"], "input": {"head": "PersonX honors PersonY", "relation": "xAttr", "prompt": "PersonX honors PersonY. PersonX is"}}
{"generation": ["a class that implements the Person interface"], "references": ["Skilled", "dutiful", "Talented", "talented", "skilled", "cook"], "input": {"head": "PersonX makes bread", "relation": "xAttr", "prompt": "PersonX makes bread. PersonX is"}}
{"generation": ["now in a state of shock"], "references": ["pale", "hurt", "violent", "injured", "careless", "fair"], "input": {"head": "PersonX burns ___ badly", "relation": "xAttr", "prompt": "PersonX burns ___ badly. PersonX is"}}
{"generation": ["a person, and PersonX is a person who"], "references": ["dutiful", "strong", "positive", "sacrificial", "optimistic", "protective"], "input": {"head": "PersonX protects the ___ from harm", "relation": "xAttr", "prompt": "PersonX protects the ___ from harm. PersonX is"}}
{"generation": ["a person, and PersonY is a person"], "references": ["social", "emotional", "envious", "friendly", "loving", "boring"], "input": {"head": "PersonX would like PersonY", "relation": "xAttr", "prompt": "PersonX would like PersonY. PersonX is"}}
{"generation": ["a good person"], "references": ["rich", "relieved", "competent", "in debt", "trustworthy", "determined"], "input": {"head": "PersonX gets a small loan", "relation": "xAttr", "prompt": "PersonX gets a small loan. PersonX is"}}
{"generation": ["a person who is not a person"], "references": ["Observant", "thorough", "Knowledgable", "observant", "self-reflective"], "input": {"head": "PersonX sees PersonX too", "relation": "xAttr", "prompt": "PersonX sees PersonX too. PersonX is"}}
{"generation": ["a person who is a member of the group Person"], "references": ["careful", "tidy", "assertive"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "xAttr", "prompt": "PersonX puts it in PersonX's purse. PersonX is"}}
{"generation": ["a character in the game"], "references": ["daring", "clever", "Clever", "discreet", "devious", "mischievous", "Evasive"], "input": {"head": "PersonX sneaks around", "relation": "xAttr", "prompt": "PersonX sneaks around. PersonX is"}}
{"generation": ["a character in the game, and is the only"], "references": ["mean", "impatient", "aggressive", "angry", "eager", "wild", "ambitious", "violent", "agressive"], "input": {"head": "PersonX storms out of the blocks", "relation": "xAttr", "prompt": "PersonX storms out of the blocks. PersonX is"}}
{"generation": ["a man"], "references": ["strong", "committed", "brave", "excited", "anxious", "parental"], "input": {"head": "PersonX has a baby girl", "relation": "xAttr", "prompt": "PersonX has a baby girl. PersonX is"}}
{"generation": ["a person who has a car"], "references": ["busy", "motivated", "positive", "desperate"], "input": {"head": "PersonX buys a used car", "relation": "xAttr", "prompt": "PersonX buys a used car. PersonX is"}}
{"generation": ["a member of the group"], "references": ["guilty", "careless", "ashamed", "stressed", "irresponsible"], "input": {"head": "PersonX pays ___ late", "relation": "xAttr", "prompt": "PersonX pays ___ late. PersonX is"}}
{"generation": ["the person who scrambles the eggs"], "references": ["dutiful", "Talented", "hungry", "Skilled", "industrious"], "input": {"head": "PersonX scrambles eggs", "relation": "xAttr", "prompt": "PersonX scrambles eggs. PersonX is"}}
{"generation": ["a character that is a bit of a joke in"], "references": ["Selfless", "Careless", "exuberant", "quick"], "input": {"head": "PersonX blows through town", "relation": "xAttr", "prompt": "PersonX blows through town. PersonX is"}}
{"generation": ["a new type of object that is a combination of"], "references": ["heroic", "assertive", "noble", "independent", "serious", "responsible"], "input": {"head": "PersonX takes matters", "relation": "xAttr", "prompt": "PersonX takes matters. PersonX is"}}
{"generation": ["a jerk"], "references": ["cruel", "mean", "aggressive", "malicious", "unkind"], "input": {"head": "PersonX picks on PersonY", "relation": "xAttr", "prompt": "PersonX picks on PersonY. PersonX is"}}
{"generation": ["the person who is the most important to the group"], "references": ["dedicated", "strong", "pleasant", "balanced", "calming", "steady"], "input": {"head": "PersonX maintains PersonY equilibrium", "relation": "xAttr", "prompt": "PersonX maintains PersonY equilibrium. PersonX is"}}
{"generation": ["a company that provides a service that allows you to"], "references": ["busy", "Lazy", "Hungry", "occupied"], "input": {"head": "PersonX orders delivery food", "relation": "xAttr", "prompt": "PersonX orders delivery food. PersonX is"}}
{"generation": ["the parent of PersonY"], "references": ["amiable", "helping", "cordial", "caring"], "input": {"head": "PersonX gets PersonX's dad", "relation": "xAttr", "prompt": "PersonX gets PersonX's dad. PersonX is"}}
{"generation": ["a member of the group"], "references": ["cruel", "mean", "insensible", "violent", "abusive", "sadist", "hurtful"], "input": {"head": "PersonX inflicts ___ on others", "relation": "xAttr", "prompt": "PersonX inflicts ___ on others. PersonX is"}}
{"generation": ["a person who is not a member of the group"], "references": ["motivated", "forceful", "independent", "energetic", "determined"], "input": {"head": "PersonX breaks free", "relation": "xAttr", "prompt": "PersonX breaks free. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["naive", "generous", "helpful", "independent", "trusting"], "input": {"head": "PersonX gives PersonY a account", "relation": "xAttr", "prompt": "PersonX gives PersonY a account. PersonX is"}}
{"generation": ["the best"], "references": ["capable", "competitive", "strong", "lucky", "talented", "brave", "hard working", "skilled"], "input": {"head": "PersonX beats everyone", "relation": "xAttr", "prompt": "PersonX beats everyone. PersonX is"}}
{"generation": ["a mix of the two, with a focus on"], "references": ["careful", "change agent", "fiesty", "excited", "Creative", "Bizzare"], "input": {"head": "PersonX mixes it up", "relation": "xAttr", "prompt": "PersonX mixes it up. PersonX is"}}
{"generation": ["the person who is the most likely to be the"], "references": ["dedicated", "cooperative", "sociable", "influetnial", "included", "driven", "involved"], "input": {"head": "PersonX plays a ___ in the system", "relation": "xAttr", "prompt": "PersonX plays a ___ in the system. PersonX is"}}
{"generation": ["a person who wants to learn how to swim"], "references": ["hopeful", "curious", "eager", "nervous", "amazed"], "input": {"head": "PersonX wants to learn how to swim", "relation": "xAttr", "prompt": "PersonX wants to learn how to swim. PersonX is"}}
{"generation": ["now in a position to make a decision"], "references": ["frightened", "Worried", "Concerned", "scared"], "input": {"head": "PersonX realizes that PersonY was lost", "relation": "xAttr", "prompt": "PersonX realizes that PersonY was lost. PersonX is"}}
{"generation": ["now a millionaire"], "references": ["content", "proud", "Financially Sound", "Content"], "input": {"head": "PersonX buys PersonX's own house", "relation": "xAttr", "prompt": "PersonX buys PersonX's own house. PersonX is"}}
{"generation": ["a character in the game, and he is the"], "references": ["Blissful", "happy", "Satisfied", "excited"], "input": {"head": "PersonX smiles happily", "relation": "xAttr", "prompt": "PersonX smiles happily. PersonX is"}}
{"generation": ["a person"], "references": ["excited", "happy", "hungry", "peckish"], "input": {"head": "PersonX buys a snack", "relation": "xAttr", "prompt": "PersonX buys a snack. PersonX is"}}
{"generation": ["a class that represents a person"], "references": ["Noble", "Noob"], "input": {"head": "PersonX gets right back", "relation": "xAttr", "prompt": "PersonX gets right back. PersonX is"}}
{"generation": ["a class that is used to protect a class of"], "references": ["strong", "brave", "kind", "caring", "dominant", "kindhearted"], "input": {"head": "PersonX protects ___ from abuse", "relation": "xAttr", "prompt": "PersonX protects ___ from abuse. PersonX is"}}
{"generation": ["a young man who has been in the military for"], "references": ["hard-working", "hopeful", "happy", "efficient"], "input": {"head": "PersonX gets a call for an interview", "relation": "xAttr", "prompt": "PersonX gets a call for an interview. PersonX is"}}
{"generation": ["a person"], "references": ["greedy", "destitute", "persistent", "ambitious", "Ambitious", "poor"], "input": {"head": "PersonX wants money", "relation": "xAttr", "prompt": "PersonX wants money. PersonX is"}}
{"generation": ["a popular name for a person who is a member"], "references": ["fun loving", "silly", "mean", "wicked"], "input": {"head": "PersonX hats cats", "relation": "xAttr", "prompt": "PersonX hats cats. PersonX is"}}
{"generation": ["a person who is looking for a job"], "references": ["successful", "smart", "attentive", "hardwoking", "patient", "responsible"], "input": {"head": "PersonX finds a good job", "relation": "xAttr", "prompt": "PersonX finds a good job. PersonX is"}}
{"generation": ["a person who is a member of the blueberry"], "references": ["employed", "functioning", "resourceful", "excited"], "input": {"head": "PersonX picks blueberries", "relation": "xAttr", "prompt": "PersonX picks blueberries. PersonX is"}}
{"generation": ["now in the same position as PersonY"], "references": ["overtly-friendly", "romantic", "loving", "caring", "affectionate", "forward", "sleazy"], "input": {"head": "PersonX kisses PersonY's cheek", "relation": "xAttr", "prompt": "PersonX kisses PersonY's cheek. PersonX is"}}
{"generation": ["a person who has a lot of money"], "references": ["Giver", "talented", "skilled", "Tired"], "input": {"head": "PersonX earns some money", "relation": "xAttr", "prompt": "PersonX earns some money. PersonX is"}}
{"generation": ["wearing a blue shirt and blue pants"], "references": ["busy", "capable", "energized", "active", "content", "energetic"], "input": {"head": "PersonX is walking to the store", "relation": "xAttr", "prompt": "PersonX is walking to the store. PersonX is"}}
{"generation": ["the leader of the expedition"], "references": ["capable", "brave", "thrill-seeking", "adventurous", "skilled"], "input": {"head": "PersonX leads PersonY expedition", "relation": "xAttr", "prompt": "PersonX leads PersonY expedition. PersonX is"}}
{"generation": ["now in the same position as PersonY"], "references": ["friendly", "warm", "aroused", "sensual"], "input": {"head": "PersonX gets close to PersonY", "relation": "xAttr", "prompt": "PersonX gets close to PersonY. PersonX is"}}
{"generation": ["the person who is the subject of the ___"], "references": ["insightful", "organized", "talkative", "presenting", "articulate", "prepared"], "input": {"head": "PersonX presents the ___ in a manner", "relation": "xAttr", "prompt": "PersonX presents the ___ in a manner. PersonX is"}}
{"generation": ["a person who is a member of the public"], "references": ["capable", "strong", "active", "adventerous", "adventurous"], "input": {"head": "PersonX rides on a rail", "relation": "xAttr", "prompt": "PersonX rides on a rail. PersonX is"}}
{"generation": ["a bit more complex, but it's still a"], "references": ["aware", "handsome", "good looking", "trendy", "intelligent", "stylish"], "input": {"head": "PersonX looks better", "relation": "xAttr", "prompt": "PersonX looks better. PersonX is"}}
{"generation": ["the person who is the target of the action"], "references": ["frustrated", "aggressive", "obnoxious", "violent", "exasperated"], "input": {"head": "PersonX throws the book", "relation": "xAttr", "prompt": "PersonX throws the book. PersonX is"}}
{"generation": ["the person who is the subject of the test"], "references": ["studious", "Persistent", "learning", "Goal oriented"], "input": {"head": "PersonX finishes the test", "relation": "xAttr", "prompt": "PersonX finishes the test. PersonX is"}}
{"generation": ["now in control of the ___"], "references": ["resourceful", "brave", "persistent", "helpful", "dominant", "supportive"], "input": {"head": "PersonX gets the ___ into PersonX's hands", "relation": "xAttr", "prompt": "PersonX gets the ___ into PersonX's hands. PersonX is"}}
{"generation": ["now in control of PersonY's arm"], "references": ["antagonistic", "jerky", "mean", "annoying"], "input": {"head": "PersonX pulls PersonY's arm", "relation": "xAttr", "prompt": "PersonX pulls PersonY's arm. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["capable", "dishonest", "sneaky", "Reckless", "Perceptive", "immoral"], "input": {"head": "PersonX takes the bag", "relation": "xAttr", "prompt": "PersonX takes the bag. PersonX is"}}
{"generation": ["a class that implements the Person interface"], "references": ["vigilant", "adventurous", "short-winded", "hot"], "input": {"head": "PersonX takes PersonX's outside", "relation": "xAttr", "prompt": "PersonX takes PersonX's outside. PersonX is"}}
{"generation": ["a social network for people who are interested in meeting"], "references": ["social", "hopeful", "excited", "sociable", "friendly", "outgoing"], "input": {"head": "PersonX meets friends", "relation": "xAttr", "prompt": "PersonX meets friends. PersonX is"}}
{"generation": ["now in the same position as PersonY"], "references": ["friendly", "bold", "comforting", "playful"], "input": {"head": "PersonX wraps PersonY's arm around PersonY", "relation": "xAttr", "prompt": "PersonX wraps PersonY's arm around PersonY. PersonX is"}}
{"generation": ["the person who is the friend of PersonY"], "references": ["nosy", "remorseful", "helpful", "friendly", "talkative", "disloyal"], "input": {"head": "PersonX tells PersonY's friend", "relation": "xAttr", "prompt": "PersonX tells PersonY's friend. PersonX is"}}
{"generation": ["now in the air"], "references": ["nice", "compassionate", "adventourous", "friendly", "supportive"], "input": {"head": "PersonX flies to PersonY", "relation": "xAttr", "prompt": "PersonX flies to PersonY. PersonX is"}}
{"generation": ["a person who is not a person"], "references": ["social", "curious", "excited", "friendly", "interested", "caring"], "input": {"head": "PersonX meets someone", "relation": "xAttr", "prompt": "PersonX meets someone. PersonX is"}}
{"generation": ["now married to PersonY"], "references": ["rich", "generous", "dumb", "loving", "caring"], "input": {"head": "PersonX buys PersonX's wife ___", "relation": "xAttr", "prompt": "PersonX buys PersonX's wife ___. PersonX is"}}
{"generation": ["a member of the group"], "references": ["unhealthy", "vulnerable", "unwell", "in pain", "exhausted", "irresponsible"], "input": {"head": "PersonX becomes ill", "relation": "xAttr", "prompt": "PersonX becomes ill. PersonX is"}}
{"generation": ["the person who is the most like the person who"], "references": ["generous", "giving", "thoughtful", "fair", "just"], "input": {"head": "PersonX shares the ___ equally", "relation": "xAttr", "prompt": "PersonX shares the ___ equally. PersonX is"}}
{"generation": ["a person who wants to come"], "references": ["Outgoing", "Sociable", "desperate", "lonely", "needy", "eager", "friendly"], "input": {"head": "PersonX wants to come", "relation": "xAttr", "prompt": "PersonX wants to come. PersonX is"}}
{"generation": ["a great tool for creating and managing your own data"], "references": ["busy", "greedy", "busybody", "hardworking", "noisy", "unhelpful", "selfish"], "input": {"head": "PersonX has PersonX's fingers in many pies", "relation": "xAttr", "prompt": "PersonX has PersonX's fingers in many pies. PersonX is"}}
{"generation": ["a child of PersonX's mother"], "references": ["friendly", "accommodating", "obliging", "caring"], "input": {"head": "PersonX shows PersonX's mother", "relation": "xAttr", "prompt": "PersonX shows PersonX's mother. PersonX is"}}
{"generation": ["the one who is going to be the one to"], "references": ["strong", "lucky", "a dentist", "courteous", "disciplined", "non-reactive"], "input": {"head": "PersonX saves PersonX's breath", "relation": "xAttr", "prompt": "PersonX saves PersonX's breath. PersonX is"}}
{"generation": ["a person who is not a person"], "references": ["cowardly", "fearful", "timid", "scared", "weak", "tired"], "input": {"head": "PersonX hides under the covers", "relation": "xAttr", "prompt": "PersonX hides under the covers. PersonX is"}}
{"generation": ["now a member of the group"], "references": ["Impatient", "determined", "Decisive", "Not persistent", "disgusted"], "input": {"head": "PersonX quits ___ for good", "relation": "xAttr", "prompt": "PersonX quits ___ for good. PersonX is"}}
{"generation": ["the person who is the object of the ___"], "references": ["insightful", "observant", "alive", "reliable", "brainy", "determined"], "input": {"head": "PersonX sees every ___", "relation": "xAttr", "prompt": "PersonX sees every ___. PersonX is"}}
{"generation": ["right"], "references": ["aggressive", "ignorant", "loud", "adamant"], "input": {"head": "PersonX says PersonY nay", "relation": "xAttr", "prompt": "PersonX says PersonY nay. PersonX is"}}
{"generation": ["the person who is most likely to be interested in"], "references": ["helpfull", "selfish", "considerate", "jelous"], "input": {"head": "PersonX watches for PersonY opportunity", "relation": "xAttr", "prompt": "PersonX watches for PersonY opportunity. PersonX is"}}
{"generation": ["a member of the class PersonY"], "references": ["understanding", "interested", "knowledgeable", "passionate", "intelligent", "satisfied"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xAttr", "prompt": "PersonX enjoys PersonY's class. PersonX is"}}
{"generation": ["a good guy"], "references": ["slavish", "submissive", "deferential", "Young", "Idolizing", "servile"], "input": {"head": "PersonX bows the ___ to baal", "relation": "xAttr", "prompt": "PersonX bows the ___ to baal. PersonX is"}}
{"generation": ["a very simple program that just prints out the name"], "references": ["greedy", "hopeful", "curious", "excited", "desirous", "wishful"], "input": {"head": "PersonX really wants", "relation": "xAttr", "prompt": "PersonX really wants. PersonX is"}}
{"generation": ["the goat"], "references": ["capable", "efficient", "effective", "insidious", "organized", "orderly", "wise", "sly"], "input": {"head": "PersonX divideth PersonX's ___ from the goats", "relation": "xAttr", "prompt": "PersonX divideth PersonX's ___ from the goats. PersonX is"}}
{"generation": ["a very simple game, but it's a very"], "references": ["waiting", "noting", "elegant", "interested", "prepared", "fancy", "special"], "input": {"head": "PersonX looks like was going", "relation": "xAttr", "prompt": "PersonX looks like was going. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["brings", "generous", "helpful", "friendly", "gifts", "considerate"], "input": {"head": "PersonX gets it for PersonY", "relation": "xAttr", "prompt": "PersonX gets it for PersonY. PersonX is"}}
{"generation": ["now in pain"], "references": ["competitive", "talented", "mad", "careless", "reckless"], "input": {"head": "PersonX breaks PersonX's toe", "relation": "xAttr", "prompt": "PersonX breaks PersonX's toe. PersonX is"}}
{"generation": ["now confident that PersonY will not be able to"], "references": ["positive", "brave", "pleased", "prideful", "confident", "proud", "open", "determined"], "input": {"head": "PersonX gains confidence", "relation": "xAttr", "prompt": "PersonX gains confidence. PersonX is"}}
{"generation": ["a function that takes a list of numbers and returns"], "references": ["effective", "persistant", "prepared", "intelligent", "skilled", "satisfied"], "input": {"head": "PersonX reduces ___ to levels", "relation": "xAttr", "prompt": "PersonX reduces ___ to levels. PersonX is"}}
{"generation": ["a test of the X-ray diffraction method"], "references": ["eager", "scared", "nervous", "confident", "silent", "anxious"], "input": {"head": "PersonX has a test tomorrow", "relation": "xAttr", "prompt": "PersonX has a test tomorrow. PersonX is"}}
{"generation": ["a teacher"], "references": ["informative", "knowledgeable", "educated", "smart"], "input": {"head": "PersonX teaches ___ in the schools", "relation": "xAttr", "prompt": "PersonX teaches ___ in the schools. PersonX is"}}
{"generation": ["a sports fan"], "references": ["athletic", "adventurous", "strong"], "input": {"head": "PersonX plays many sports", "relation": "xAttr", "prompt": "PersonX plays many sports. PersonX is"}}
{"generation": ["a person who is not a good person"], "references": ["uneconomical", "spendthrift", "reckless", "careless", "indulgent", "wasteful", "irresponsible"], "input": {"head": "PersonX throws money away", "relation": "xAttr", "prompt": "PersonX throws money away. PersonX is"}}
{"generation": ["a small company, and it's hard to get"], "references": ["poor", "sad", "hungry", "broke"], "input": {"head": "PersonX does not have a lot of money", "relation": "xAttr", "prompt": "PersonX does not have a lot of money. PersonX is"}}
{"generation": ["a person who is a member of the group"], "references": ["Passive", "unassuming", "angry", "Submissive", "nervous", "moody"], "input": {"head": "PersonX takes ___ sitting down", "relation": "xAttr", "prompt": "PersonX takes ___ sitting down. PersonX is"}}
{"generation": ["the person who is the subject of the action"], "references": ["powerful", "bothered", "mean", "curious", "forceful", "engaged", "malicious", "involved"], "input": {"head": "PersonX acts upon PersonY", "relation": "xAttr", "prompt": "PersonX acts upon PersonY. PersonX is"}}
{"generation": ["the first person to be born with a fully functional"], "references": ["careful", "cautious", "helpful", "professional", "skilled", "determined"], "input": {"head": "PersonX cuts the umbilical cord", "relation": "xAttr", "prompt": "PersonX cuts the umbilical cord. PersonX is"}}
{"generation": ["a member of the team"], "references": ["Irregular", "Careless", "exhausted", "tired", "irresponsible", "unreliable"], "input": {"head": "PersonX misses ___ at work", "relation": "xAttr", "prompt": "PersonX misses ___ at work. PersonX is"}}
{"generation": ["the one who is saved"], "references": ["forgiving", "martyrlike", "loving", "caring", "impressionable"], "input": {"head": "PersonX saves PersonY's ___ from PersonY's sins", "relation": "xAttr", "prompt": "PersonX saves PersonY's ___ from PersonY's sins. PersonX is"}}
{"generation": ["a member of the Mafia"], "references": ["social", "moral", "polite", "thoughtful", "kind"], "input": {"head": "PersonX visits PersonY's mother", "relation": "xAttr", "prompt": "PersonX visits PersonY's mother. PersonX is"}}
{"generation": ["a person who is not a person"], "references": ["introspective", "hopeful", "curious", "dreamer", "reflective", "futuristic"], "input": {"head": "PersonX thinks would become", "relation": "xAttr", "prompt": "PersonX thinks would become. PersonX is"}}
{"generation": ["dead"], "references": ["elderly", "motionless", "unlucky", "dying", "helpless", "alive", "unwell", "pitiful, helpless"], "input": {"head": "PersonX draws PersonX's last breath", "relation": "xAttr", "prompt": "PersonX draws PersonX's last breath. PersonX is"}}
{"generation": ["a very good friend of mine"], "references": ["Sociable", "clingy", "needy", "Friendly", "loving", "affectionate"], "input": {"head": "PersonX spends a lot of time together", "relation": "xAttr", "prompt": "PersonX spends a lot of time together. PersonX is"}}
{"generation": ["a person who is learning new things"], "references": ["motivated", "understanding", "educated", "thoughtful", "knowledgeable", "intelligent"], "input": {"head": "PersonX learns new things", "relation": "xAttr", "prompt": "PersonX learns new things. PersonX is"}}
{"generation": ["a person who loves ___"], "references": ["invested", "admiring", "excited", "thrilled", "caring", "affectionate"], "input": {"head": "PersonX loves ___ than anything", "relation": "xAttr", "prompt": "PersonX loves ___ than anything. PersonX is"}}
{"generation": ["a new social network that allows users to connect with"], "references": ["motivated", "curious", "brave", "interested", "adventerous", "fun to be around", "lively"], "input": {"head": "PersonX meets the band", "relation": "xAttr", "prompt": "PersonX meets the band. PersonX is"}}
{"generation": ["a man"], "references": ["rich", "happy", "workaholic", "excited", "interested", "pleased", "determined"], "input": {"head": "PersonX buys a laptop", "relation": "xAttr", "prompt": "PersonX buys a laptop. PersonX is"}}
{"generation": ["happy for PersonY"], "references": ["compassionate", "kind", "thoughtful", "delighted", "joyful"], "input": {"head": "PersonX is happy for PersonY", "relation": "xAttr", "prompt": "PersonX is happy for PersonY. PersonX is"}}
{"generation": ["a good guy"], "references": ["aware", "finicky", "alert", "scared", "sensitive", "observant", "in the moment", "nervous"], "input": {"head": "PersonX smells something bad", "relation": "xAttr", "prompt": "PersonX smells something bad. PersonX is"}}
{"generation": ["a person who is a little bit of a geek"], "references": ["hopefull", "hopeful", "sneaky", "faithful", "nervous"], "input": {"head": "PersonX keeps PersonX's fingers crossed", "relation": "xAttr", "prompt": "PersonX keeps PersonX's fingers crossed. PersonX is"}}
{"generation": ["a very lucky person"], "references": ["Successful", "successful", "happy", "excited", "charmed", "Fortunate", "fortuitous"], "input": {"head": "PersonX feels very lucky", "relation": "xAttr", "prompt": "PersonX feels very lucky. PersonX is"}}
{"generation": ["a big fan of the Harry Potter series"], "references": ["curious", "investigative", "normal", "bookworm", "nerdy", "learned"], "input": {"head": "PersonX loves reading books", "relation": "xAttr", "prompt": "PersonX loves reading books. PersonX is"}}
{"generation": ["the person who is currently in the room"], "references": ["careful", "smart", "crafty", "helpful", "thoughtful", "responsible"], "input": {"head": "PersonX places ___ to end", "relation": "xAttr", "prompt": "PersonX places ___ to end. PersonX is"}}
{"generation": ["a new way to share your life with the world"], "references": ["on time", "consciensious", "curious", "relieved", "punctual"], "input": {"head": "PersonX arrives soon", "relation": "xAttr", "prompt": "PersonX arrives soon. PersonX is"}}
{"generation": ["a man in his late 30s, with a"], "references": ["relaxed", "unsure", "sick", "weak", "tired", "feeble"], "input": {"head": "PersonX leans back against the wall", "relation": "xAttr", "prompt": "PersonX leans back against the wall. PersonX is"}}
{"generation": ["a person who is naked"], "references": ["shy", "modest", "embarrassed", "ashamed", "embarassed"], "input": {"head": "PersonX covers PersonX's nakedness", "relation": "xAttr", "prompt": "PersonX covers PersonX's nakedness. PersonX is"}}
{"generation": ["a person"], "references": ["dutiful", "chatty", "friendly", "responsible", "literate"], "input": {"head": "PersonX sends a letter", "relation": "xAttr", "prompt": "PersonX sends a letter. PersonX is"}}
{"generation": ["a member of the group"], "references": ["happy", "comfortable", "introvert", "stressed", "tired", "homebody"], "input": {"head": "PersonX finds ___ at home", "relation": "xAttr", "prompt": "PersonX finds ___ at home. PersonX is"}}
{"generation": ["a person who is not a member of the lottery"], "references": ["hopeful", "curious", "wasteful", "wishful"], "input": {"head": "PersonX purchases a lottery ticket", "relation": "xAttr", "prompt": "PersonX purchases a lottery ticket. PersonX is"}}
{"generation": ["a person who is a jerk"], "references": ["Idiotic", "clumsy", "Stupid", "Clumsy", "irresponsible", "Air head"], "input": {"head": "PersonX looks like an idiot", "relation": "xAttr", "prompt": "PersonX looks like an idiot. PersonX is"}}
{"generation": ["a function that takes a string and returns a string"], "references": ["capable", "aware", "able", "talented", "Lost", "Worried", "determined"], "input": {"head": "PersonX finds another ___", "relation": "xAttr", "prompt": "PersonX finds another ___. PersonX is"}}
{"generation": ["the player character"], "references": ["fun", "fun loving", "silly", "playful"], "input": {"head": "PersonX tickles the dragons tail", "relation": "xAttr", "prompt": "PersonX tickles the dragons tail. PersonX is"}}
{"generation": ["a class that implements the __new__() method"], "references": ["methodical", "social", "organized", "creative"], "input": {"head": "PersonX puts together a ___", "relation": "xAttr", "prompt": "PersonX puts together a ___. PersonX is"}}
{"generation": ["not allowed to dispose of PersonX's property"], "references": ["sneaky", "careless", "rude", "Independent", "Kind", "quick"], "input": {"head": "PersonX disposes of PersonX's property", "relation": "xAttr", "prompt": "PersonX disposes of PersonX's property. PersonX is"}}
{"generation": ["the person who is the subject of the observation"], "references": ["Astute", "educated", "Intelligent", "convinced"], "input": {"head": "PersonX draws PersonY conclusion", "relation": "xAttr", "prompt": "PersonX draws PersonY conclusion. PersonX is"}}
{"generation": ["a person who is a member of the opposite sex"], "references": ["dutiful", "hard working", "mature", "dependable", "responsible"], "input": {"head": "PersonX gets dressed for work", "relation": "xAttr", "prompt": "PersonX gets dressed for work. PersonX is"}}
{"generation": ["a very good game, but it's not a"], "references": ["clumsy", "stubborn", "simple minded", "unfocused", "careless"], "input": {"head": "PersonX makes that mistake again", "relation": "xAttr", "prompt": "PersonX makes that mistake again. PersonX is"}}
{"generation": ["a class that represents a person"], "references": ["strong", "forceful", "mighty", "devious"], "input": {"head": "PersonX pries open ___", "relation": "xAttr", "prompt": "PersonX pries open ___. PersonX is"}}
{"generation": ["a person"], "references": ["careful", "cautious", "smart", "safe", "responsible"], "input": {"head": "PersonX looks both ways", "relation": "xAttr", "prompt": "PersonX looks both ways. PersonX is"}}
{"generation": ["a good example of a good example of a good"], "references": ["strong", "successful", "Arrogant", "generous", "giving", "Calculating"], "input": {"head": "PersonX increases the ___ at the expense", "relation": "xAttr", "prompt": "PersonX increases the ___ at the expense. PersonX is"}}
{"generation": ["a struct with two fields: name and age"], "references": ["Talented", "Solid", "helpful", "creative"], "input": {"head": "PersonX creates PersonY structure", "relation": "xAttr", "prompt": "PersonX creates PersonY structure. PersonX is"}}
{"generation": ["a very simple and easy to use tool that allows"], "references": ["weepy", "clingy", "in need", "helpless", "unwell", "anxious"], "input": {"head": "PersonX desperately needed", "relation": "xAttr", "prompt": "PersonX desperately needed. PersonX is"}}
{"generation": ["the object that is being passed to the function"], "references": ["careful", "cautious", "thoughtful", "objective"], "input": {"head": "PersonX considers carefully the ___", "relation": "xAttr", "prompt": "PersonX considers carefully the ___. PersonX is"}}
{"generation": ["a person who is not afraid to stand up for"], "references": ["detached", "wreckless", "stable", "confident"], "input": {"head": "PersonX takes ___ in PersonX's stride", "relation": "xAttr", "prompt": "PersonX takes ___ in PersonX's stride. PersonX is"}}
{"generation": ["a bit more complex, but it's also more"], "references": ["relaxed", "hopeful", "happy", "confident", "healthy", "attractive"], "input": {"head": "PersonX seems better", "relation": "xAttr", "prompt": "PersonX seems better. PersonX is"}}
{"generation": ["a global platform that enables people to trade with each"], "references": ["smart", "experienced", "talkative", "dominant", "willful", "skilled"], "input": {"head": "PersonX regulates commerce with nations", "relation": "xAttr", "prompt": "PersonX regulates commerce with nations. PersonX is"}}
{"generation": ["a function that takes a person and returns a person"], "references": ["accomplished", "excited", "disciplined", "relieved", "competent", "responsible"], "input": {"head": "PersonX gets a part", "relation": "xAttr", "prompt": "PersonX gets a part. PersonX is"}}
{"generation": ["now in the same position as PersonY"], "references": ["Leaving", "attentive", "Lonely", "thoughtful", "considerate"], "input": {"head": "PersonX leaves PersonY alone", "relation": "xAttr", "prompt": "PersonX leaves PersonY alone. PersonX is"}}
{"generation": ["a person who sees wood"], "references": ["aware", "watchful", "alert", "perceptive", "interested"], "input": {"head": "PersonX sees wood", "relation": "xAttr", "prompt": "PersonX sees wood. PersonX is"}}
{"generation": ["a very good player, but he is not a"], "references": ["remorseful", "inattentive", "nervous", "anxious", "unskilled", "sickly"], "input": {"head": "PersonX burns badly", "relation": "xAttr", "prompt": "PersonX burns badly. PersonX is"}}
{"generation": ["now the owner of the item"], "references": ["absent minded", "accomodating", "helpful", "kind", "careless"], "input": {"head": "PersonX leaves ___ on the table", "relation": "xAttr", "prompt": "PersonX leaves ___ on the table. PersonX is"}}
{"generation": ["a person"], "references": ["slow", "relaxed", "unsafe", "content"], "input": {"head": "PersonX walks in the park ___", "relation": "xAttr", "prompt": "PersonX walks in the park ___. PersonX is"}}
{"generation": ["a man, and PersonY is a woman"], "references": ["rude", "tired", "lazy"], "input": {"head": "PersonX lays on PersonY's bed", "relation": "xAttr", "prompt": "PersonX lays on PersonY's bed. PersonX is"}}
{"generation": ["the person who is currently in the room"], "references": ["aggressive", "honest", "helpful", "pushy"], "input": {"head": "PersonX takes PersonY's place", "relation": "xAttr", "prompt": "PersonX takes PersonY's place. PersonX is"}}
{"generation": ["the player's position in the world"], "references": ["wondering", "Aware", "curious", "Alert", "afraid", "superstitious"], "input": {"head": "PersonX touches wood", "relation": "xAttr", "prompt": "PersonX touches wood. PersonX is"}}
{"generation": ["a game that is about the journey, not the"], "references": ["gullible", "emotional", "good person", "romantic", "Lucky to get good things in life."], "input": {"head": "PersonX quickly fell in love", "relation": "xAttr", "prompt": "PersonX quickly fell in love. PersonX is"}}
{"generation": ["a man"], "references": ["social", "excited", "helpful", "sociable", "friendly", "interactive"], "input": {"head": "PersonX has a dinner party", "relation": "xAttr", "prompt": "PersonX has a dinner party. PersonX is"}}
{"generation": ["now a healthy weight"], "references": ["motivated", "proud", "hard-working", "healthy", "determined"], "input": {"head": "PersonX loses twenty pounds", "relation": "xAttr", "prompt": "PersonX loses twenty pounds. PersonX is"}}
{"generation": ["most proud of"], "references": ["social", "knowing", "understanding", "attentive", "caring", "annoying"], "input": {"head": "PersonX names the films PersonY is most proud of", "relation": "xAttr", "prompt": "PersonX names the films PersonY is most proud of. PersonX is"}}
{"generation": ["a corporation"], "references": ["dutiful", "Responsible", "Lawful", "prepared", "responsible"], "input": {"head": "PersonX pays taxes", "relation": "xAttr", "prompt": "PersonX pays taxes. PersonX is"}}
{"generation": ["the person who is being passed around"], "references": ["sharing", "speedy", "Impatient", "Rude", "spirited", "quick"], "input": {"head": "PersonX passes around PersonY", "relation": "xAttr", "prompt": "PersonX passes around PersonY. PersonX is"}}
{"generation": ["a male"], "references": ["daring", "Creative", "rebellious", "Energetic", "youthful"], "input": {"head": "PersonX dyes PersonX's hair pink", "relation": "xAttr", "prompt": "PersonX dyes PersonX's hair pink. PersonX is"}}
{"generation": ["a game about a man who is trying to find"], "references": ["curious", "competitiveplayful", "alert", "awake"], "input": {"head": "PersonX takes place on the day", "relation": "xAttr", "prompt": "PersonX takes place on the day. PersonX is"}}
{"generation": ["a game about exploring the wilderness, and the people"], "references": ["active", "outdoorsy", "fit", "athletic", "healthy"], "input": {"head": "PersonX takes a hike in the woods", "relation": "xAttr", "prompt": "PersonX takes a hike in the woods. PersonX is"}}
{"generation": ["the person who is being smoothed"], "references": ["affectionate", "beautiful", "confident", "caring"], "input": {"head": "PersonX smooths PersonY's hair", "relation": "xAttr", "prompt": "PersonX smooths PersonY's hair. PersonX is"}}
{"generation": ["a salad"], "references": ["creative", "talented", "health concious", "hungry"], "input": {"head": "PersonX makes a salad", "relation": "xAttr", "prompt": "PersonX makes a salad. PersonX is"}}
{"generation": ["a person who is online"], "references": ["curious", "friendly", "observant", "bored", "determined"], "input": {"head": "PersonX sees ___ online", "relation": "xAttr", "prompt": "PersonX sees ___ online. PersonX is"}}
{"generation": ["a man in his late 30s, and Person"], "references": ["busy", "social", "available", "welcoming", "determined"], "input": {"head": "PersonX finally meet PersonY", "relation": "xAttr", "prompt": "PersonX finally meet PersonY. PersonX is"}}
{"generation": ["the person who looks at PersonY"], "references": ["bold", "assertive", "angry", "confrontational", "direct"], "input": {"head": "PersonX looks PersonY ___ in the face", "relation": "xAttr", "prompt": "PersonX looks PersonY ___ in the face. PersonX is"}}
{"generation": ["now wearing the shoes"], "references": ["thorough", "amiable", "helpful", "observant", "responsible", "determined"], "input": {"head": "PersonX finds PersonY's shoes", "relation": "xAttr", "prompt": "PersonX finds PersonY's shoes. PersonX is"}}
{"generation": ["wearing a black shirt and pants, and PersonY"], "references": ["clever", "invasive", "open minded", "free-spirited", "curious", "silly"], "input": {"head": "PersonX dresses in PersonY's clothes", "relation": "xAttr", "prompt": "PersonX dresses in PersonY's clothes. PersonX is"}}
{"generation": ["the person who feels ___ inside PersonY"], "references": ["compassionate", "empathetic"], "input": {"head": "PersonX feels ___ inside PersonY", "relation": "xAttr", "prompt": "PersonX feels ___ inside PersonY. PersonX is"}}
{"generation": ["wearing a black shirt and pants, and a black"], "references": ["Presentable", "Tidy", "trendy", "proud", "stylish", "satisfied"], "input": {"head": "PersonX dresses in PersonX's clothes", "relation": "xAttr", "prompt": "PersonX dresses in PersonX's clothes. PersonX is"}}
{"generation": ["a very good player, but he's not a"], "references": ["harried", "fearful", "worried", "scared", "anxious"], "input": {"head": "PersonX starts to worry", "relation": "xAttr", "prompt": "PersonX starts to worry. PersonX is"}}
{"generation": ["a man"], "references": ["mean", "demanding", "welcoming", "polite", "persistent", "dominant"], "input": {"head": "PersonX asks PersonY to sit down", "relation": "xAttr", "prompt": "PersonX asks PersonY to sit down. PersonX is"}}
{"generation": ["a person who is a member of the opposite sex"], "references": ["joyful", "Vain", "confident", "Fashionable"], "input": {"head": "PersonX gets a manicure", "relation": "xAttr", "prompt": "PersonX gets a manicure. PersonX is"}}
{"generation": ["the person who wins the money"], "references": ["clever", "lucky", "excited", "fortunate", "joyful", "overjoyed"], "input": {"head": "PersonX wins any money", "relation": "xAttr", "prompt": "PersonX wins any money. PersonX is"}}
{"generation": ["the person who is outside"], "references": ["capable", "watchful", "helpful", "kind", "loving"], "input": {"head": "PersonX takes PersonY outside", "relation": "xAttr", "prompt": "PersonX takes PersonY outside. PersonX is"}}
{"generation": ["a lawyer"], "references": ["smart", "hard working", "educated", "knowledgeable", "intelligent", "willful", "skilled", "determined"], "input": {"head": "PersonX becomes a lawyer", "relation": "xAttr", "prompt": "PersonX becomes a lawyer. PersonX is"}}
{"generation": ["a class that represents a person"], "references": ["accomplished", "motivated", "happy", "excited", "accepted", "determined"], "input": {"head": "PersonX finally joined ___", "relation": "xAttr", "prompt": "PersonX finally joined ___. PersonX is"}}
{"generation": ["a person who is waiting for a bus"], "references": ["arrive", "calm", "independant", "curious", "adventurous", "patient", "determined"], "input": {"head": "PersonX waits at the bus stop", "relation": "xAttr", "prompt": "PersonX waits at the bus stop. PersonX is"}}
{"generation": ["a person"], "references": ["punctual", "relaxed", "organized", "flirty"], "input": {"head": "PersonX shows a leg", "relation": "xAttr", "prompt": "PersonX shows a leg. PersonX is"}}
{"generation": ["the name of the person who is printing the document"], "references": ["hard-working", "studious", "curious", "knowledgable"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xAttr", "prompt": "PersonX learns the printer 's ___. PersonX is"}}
{"generation": ["the person who is the most popular on the site"], "references": ["clever", "competitive", "competent", "BRAVE", "intelligent", "STRONG"], "input": {"head": "PersonX wins every ___", "relation": "xAttr", "prompt": "PersonX wins every ___. PersonX is"}}
{"generation": ["a class that implements the ___"], "references": ["informed", "worldy", "knowledgeable", "educated"], "input": {"head": "PersonX understands fully the ___", "relation": "xAttr", "prompt": "PersonX understands fully the ___. PersonX is"}}
{"generation": ["a very good example of a person who is very"], "references": ["Determined", "Hardworking", "Dedicated", "Busy"], "input": {"head": "PersonX goes on with PersonX's work", "relation": "xAttr", "prompt": "PersonX goes on with PersonX's work. PersonX is"}}
{"generation": ["a new type of person"], "references": ["mindful", "a loner", "to himself", "Inexperienced", "curious", "Novice", "considerate"], "input": {"head": "PersonX never been on one", "relation": "xAttr", "prompt": "PersonX never been on one. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["unobtrusive", "Attentive", "unassuming", "understanding", "loving", "Selfless", "empathetic"], "input": {"head": "PersonX gives PersonY room", "relation": "xAttr", "prompt": "PersonX gives PersonY room. PersonX is"}}
{"generation": ["a person who is not a member of the group"], "references": ["cautious", "important", "curious", "status", "Wondering", "Listening"], "input": {"head": "PersonX receives a phone call", "relation": "xAttr", "prompt": "PersonX receives a phone call. PersonX is"}}
{"generation": ["the person who is thinking"], "references": ["dedicated", "cruel", "arrogant", "curious", "active", "intellectual"], "input": {"head": "PersonX puts PersonX's mind", "relation": "xAttr", "prompt": "PersonX puts PersonX's mind. PersonX is"}}
{"generation": ["a very sad person"], "references": ["depressed", "shameful", "Deep", "unhappy", "Depressed", "down trotted"], "input": {"head": "PersonX feels very sad", "relation": "xAttr", "prompt": "PersonX feels very sad. PersonX is"}}
{"generation": ["a person who has a job"], "references": ["desperate", "workaholic", "persistant", "ambitious", "independent", "interesting"], "input": {"head": "PersonX searches for a job", "relation": "xAttr", "prompt": "PersonX searches for a job. PersonX is"}}
{"generation": ["a small company, and they don't have a"], "references": ["poor", "needy", "broken", "broke"], "input": {"head": "PersonX does n't have a lot of money", "relation": "xAttr", "prompt": "PersonX does n't have a lot of money. PersonX is"}}
{"generation": ["the person who called the ___"], "references": ["capable", "collaborative", "connected", "respected", "knowledgeable", "commanding"], "input": {"head": "PersonX calls the ___ together", "relation": "xAttr", "prompt": "PersonX calls the ___ together. PersonX is"}}
{"generation": ["a person who is a member of the public"], "references": ["daring", "dedicated", "competitive", "surprised", "ambitious", "entertainment", "artistic", "creative"], "input": {"head": "PersonX enters an art contest", "relation": "xAttr", "prompt": "PersonX enters an art contest. PersonX is"}}
{"generation": ["a person who is a member of the group Person"], "references": ["principled", "resolute", "brave", "just"], "input": {"head": "PersonX takes PersonX's stand", "relation": "xAttr", "prompt": "PersonX takes PersonX's stand. PersonX is"}}
{"generation": ["now in the lake"], "references": ["free spirited", "diving", "athletic", "exploring"], "input": {"head": "PersonX goes ___ in the lake", "relation": "xAttr", "prompt": "PersonX goes ___ in the lake. PersonX is"}}
{"generation": ["a new class that is used to represent the user"], "references": ["rich", "efficient", "successful", "ready", "practical", "prepared"], "input": {"head": "PersonX replaces the old one", "relation": "xAttr", "prompt": "PersonX replaces the old one. PersonX is"}}
{"generation": ["a class that represents a person"], "references": ["sloppy", "lazy", "clumsy", "messy", "careless", "filthy"], "input": {"head": "PersonX gets messy", "relation": "xAttr", "prompt": "PersonX gets messy. PersonX is"}}
{"generation": ["the person who is the subject of the measurement"], "references": ["careful", "correct", "exact", "smart"], "input": {"head": "PersonX measures the ___ directly", "relation": "xAttr", "prompt": "PersonX measures the ___ directly. PersonX is"}}
{"generation": ["a man"], "references": ["adept", "road-worthy", "generous", "helpful", "kind", "steady at the wheel", "intent", "responsible"], "input": {"head": "PersonX drives ___ to the beach", "relation": "xAttr", "prompt": "PersonX drives ___ to the beach. PersonX is"}}
{"generation": ["a person who is not a person"], "references": ["Noob", "curious", "Fresh", "inexperienced"], "input": {"head": "PersonX never been to one", "relation": "xAttr", "prompt": "PersonX never been to one. PersonX is"}}
{"generation": ["a character in the game"], "references": ["hurt", "Injured", "injured", "Limited", "protective"], "input": {"head": "PersonX wears a cast", "relation": "xAttr", "prompt": "PersonX wears a cast. PersonX is"}}
{"generation": ["now in the backpack"], "references": ["concerned", "Caring", "Loving", "organized", "prepared"], "input": {"head": "PersonX puts ___ in PersonY's backpack", "relation": "xAttr", "prompt": "PersonX puts ___ in PersonY's backpack. PersonX is"}}
{"generation": ["a person who wants to learn how to play the"], "references": ["open-minded", "curious", "ambitious", "musical", "adventurous"], "input": {"head": "PersonX wants to learn how to play the piano", "relation": "xAttr", "prompt": "PersonX wants to learn how to play the piano. PersonX is"}}
{"generation": ["a man"], "references": ["angry", "Loud", "Heated", "petty"], "input": {"head": "PersonX argues with PersonX's boyfriend", "relation": "xAttr", "prompt": "PersonX argues with PersonX's boyfriend. PersonX is"}}
{"generation": ["a person who is a member of the opposite sex"], "references": ["appreciative", "attentive", "grateful", "thoughtful", "kind"], "input": {"head": "PersonX thanks ___ for PersonY's comments", "relation": "xAttr", "prompt": "PersonX thanks ___ for PersonY's comments. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["pleased", "greedy", "a theif", "satisfied"], "input": {"head": "PersonX gets PersonY's share", "relation": "xAttr", "prompt": "PersonX gets PersonY's share. PersonX is"}}
{"generation": ["a game about friendship, and friendship is a game"], "references": ["extraverted", "social", "collegial", "gregarious", "friendly", "affectionate", "outgoing"], "input": {"head": "PersonX meets some friends", "relation": "xAttr", "prompt": "PersonX meets some friends. PersonX is"}}
{"generation": ["a member of the group"], "references": ["careful", "competitive", "smart", "inquisitive", "judgy", "detailed", "judgemental", "curious", "thoughtful"], "input": {"head": "PersonX compares ___ with another", "relation": "xAttr", "prompt": "PersonX compares ___ with another. PersonX is"}}
{"generation": ["a class that implements the IEnumerable interface"], "references": ["careful", "kind", "careless", "unfaithful", "athletic"], "input": {"head": "PersonX throws some bread", "relation": "xAttr", "prompt": "PersonX throws some bread. PersonX is"}}
{"generation": ["a free online quiz that tests your knowledge of the"], "references": ["concerned", "thoughtful", "prepared", "hard-working", "studious"], "input": {"head": "PersonX studies for a quiz", "relation": "xAttr", "prompt": "PersonX studies for a quiz. PersonX is"}}
{"generation": ["a person"], "references": ["zealous", "efficient", "flirty", "curious", "organized", "apprehensive"], "input": {"head": "PersonX makes a date", "relation": "xAttr", "prompt": "PersonX makes a date. PersonX is"}}
{"generation": ["now in control of PersonY's car"], "references": ["observant", "determined", "helpful", "tenacious"], "input": {"head": "PersonX finds PersonY's car keys", "relation": "xAttr", "prompt": "PersonX finds PersonY's car keys. PersonX is"}}
{"generation": ["a bit confused, but he decides to investigate"], "references": ["curious", "observant", "disgusted"], "input": {"head": "PersonX notices a strange smell", "relation": "xAttr", "prompt": "PersonX notices a strange smell. PersonX is"}}
{"generation": ["a game where you play as a person who is"], "references": ["cooperative", "welcoming", "sociable", "friendly", "thoughtful", "fun-loving"], "input": {"head": "PersonX invites ___ over to play", "relation": "xAttr", "prompt": "PersonX invites ___ over to play. PersonX is"}}
{"generation": ["the first person to be able to see the world"], "references": ["demanding", "brave", "pushy", "proud"], "input": {"head": "PersonX goes first", "relation": "xAttr", "prompt": "PersonX goes first. PersonX is"}}
{"generation": ["a great song, but it's not the best"], "references": ["Ambitious", "capable", "talented", "Dedicated"], "input": {"head": "PersonX sings PersonX's heart out", "relation": "xAttr", "prompt": "PersonX sings PersonX's heart out. PersonX is"}}
{"generation": ["a little nervous because he's not sure if he"], "references": ["awed", "star-struck", "emotional", "timid", "newly-arrived", "thrilled", "elated", "intimidated"], "input": {"head": "PersonX is excited and nervous", "relation": "xAttr", "prompt": "PersonX is excited and nervous. PersonX is"}}
{"generation": ["a person who is married to PersonY"], "references": ["curious", "friendly", "observant", "thoughtful", "caring"], "input": {"head": "PersonX sees PersonY's wife", "relation": "xAttr", "prompt": "PersonX sees PersonY's wife. PersonX is"}}
{"generation": ["the person who is the target of the cross"], "references": ["capable", "finished", "motivated", "excited", "done", "interested"], "input": {"head": "PersonX crosses the ___ to get", "relation": "xAttr", "prompt": "PersonX crosses the ___ to get. PersonX is"}}
{"generation": ["a new way to experience the world"], "references": ["stimulated", "Daring", "playful", "Funloving"], "input": {"head": "PersonX rides every ride", "relation": "xAttr", "prompt": "PersonX rides every ride. PersonX is"}}
{"generation": ["a better player than ___"], "references": ["powerful", "accomplished", "strong", "talented", "confident", "competetive", "skilled"], "input": {"head": "PersonX beats ___ easily", "relation": "xAttr", "prompt": "PersonX beats ___ easily. PersonX is"}}
{"generation": ["a little bit surprised"], "references": ["dedicated", "resigned", "helpful", "knowledgeable", "reluctant", "sympathetic", "consoling"], "input": {"head": "PersonX breaks the news to PersonY", "relation": "xAttr", "prompt": "PersonX breaks the news to PersonY. PersonX is"}}
{"generation": ["a person"], "references": ["vain", "skillful", "detailed", "self absorbed", "trendy", "materialistic", "creative"], "input": {"head": "PersonX gets PersonX's nails done", "relation": "xAttr", "prompt": "PersonX gets PersonX's nails done. PersonX is"}}
{"generation": ["a game about building castles in the air"], "references": ["magical", "odd", "constructive", "engaged", "entertained", "creative"], "input": {"head": "PersonX builds castles in the air", "relation": "xAttr", "prompt": "PersonX builds castles in the air. PersonX is"}}
{"generation": ["the person who is being talked about"], "references": ["emotional", "helpful", "influential", "authoritative", "caring", "traditional"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "xAttr", "prompt": "PersonX gives PersonY PersonX's name. PersonX is"}}
{"generation": ["the person who is being comforted"], "references": ["nice", "selfless", "helpful", "providing", "affectionate"], "input": {"head": "PersonX soothes PersonY", "relation": "xAttr", "prompt": "PersonX soothes PersonY. PersonX is"}}
{"generation": ["a man who has been in the business for over"], "references": ["brave", "hiding something", "Self controlled", "agreeable", "Practiced", "unresponsive"], "input": {"head": "PersonX keeps a straight face", "relation": "xAttr", "prompt": "PersonX keeps a straight face. PersonX is"}}
{"generation": ["the person who is the subject of the transaction"], "references": ["feelings", "polite", "generous", "selfless", "giving", "memories"], "input": {"head": "PersonX shares PersonY", "relation": "xAttr", "prompt": "PersonX shares PersonY. PersonX is"}}
{"generation": ["a good person"], "references": ["Wise", "religious", "pious", "faithful", "caring", "devoted", "Concerned"], "input": {"head": "PersonX spends ___ in prayer", "relation": "xAttr", "prompt": "PersonX spends ___ in prayer. PersonX is"}}
{"generation": ["now holding the arms of PersonY"], "references": ["social", "playful", "helpful", "friendly", "knowledgeable", "confident", "controlling"], "input": {"head": "PersonX lifts PersonY's arms", "relation": "xAttr", "prompt": "PersonX lifts PersonY's arms. PersonX is"}}
{"generation": ["the person who is the most like PersonY"], "references": ["Observant", "reming", "nostalgic", "observant", "Sentimental", "forgot"], "input": {"head": "PersonX reminds PersonX of PersonY", "relation": "xAttr", "prompt": "PersonX reminds PersonX of PersonY. PersonX is"}}
{"generation": ["a new type of object that is a combination of"], "references": ["capable", "successful", "focused", "proud", "supportive", "creative"], "input": {"head": "PersonX makes PersonX's mark", "relation": "xAttr", "prompt": "PersonX makes PersonX's mark. PersonX is"}}
{"generation": ["a free online math test that is designed to measure"], "references": ["studious", "responsible"], "input": {"head": "PersonX studies for PersonX's math test", "relation": "xAttr", "prompt": "PersonX studies for PersonX's math test. PersonX is"}}
{"generation": ["wearing a black suit and a white shirt"], "references": ["available", "straightforward", "thoughtful", "direct", "present", "apprehensive"], "input": {"head": "PersonX walks in the room", "relation": "xAttr", "prompt": "PersonX walks in the room. PersonX is"}}
{"generation": ["the person who liked the thing"], "references": ["hopeful", "happy", "pleased"], "input": {"head": "PersonX finds ___ that PersonY liked", "relation": "xAttr", "prompt": "PersonX finds ___ that PersonY liked. PersonX is"}}
{"generation": ["the person who is the most popular"], "references": ["aggressive", "cruel", "competitive"], "input": {"head": "PersonX always beat ___", "relation": "xAttr", "prompt": "PersonX always beat ___. PersonX is"}}
{"generation": ["the person who is the target of the cookie"], "references": ["creative", "a good cook", "talented", "hungry", "prepared", "determined"], "input": {"head": "PersonX makes the cookies", "relation": "xAttr", "prompt": "PersonX makes the cookies. PersonX is"}}
{"generation": ["the person who is looking at the screen"], "references": ["aware", "observant", "present", "thoughtful"], "input": {"head": "PersonX watches PersonY's face", "relation": "xAttr", "prompt": "PersonX watches PersonY's face. PersonX is"}}
{"generation": ["a person who is a member of the opposite sex"], "references": ["intellegent", "exciting", "organized", "rigid", "adventurous", "determined"], "input": {"head": "PersonX plans a trip", "relation": "xAttr", "prompt": "PersonX plans a trip. PersonX is"}}
{"generation": ["a good person"], "references": ["capable", "responsible", "industrious"], "input": {"head": "PersonX gets a part time job", "relation": "xAttr", "prompt": "PersonX gets a part time job. PersonX is"}}
{"generation": ["a very good driver, but it's not the"], "references": ["apprehensive", "stubborn", "lazy", "reactive"], "input": {"head": "PersonX drives anyway", "relation": "xAttr", "prompt": "PersonX drives anyway. PersonX is"}}
{"generation": ["holding a gun"], "references": ["careful", "obedient", "playful", "sneaky", "sly", "loving"], "input": {"head": "PersonX walks up behind PersonY", "relation": "xAttr", "prompt": "PersonX walks up behind PersonY. PersonX is"}}
{"generation": ["a function that takes a person and returns a person"], "references": ["dedicated", "fickle", "consistent", "active", "athletic", "patient"], "input": {"head": "PersonX moves every ___", "relation": "xAttr", "prompt": "PersonX moves every ___. PersonX is"}}
{"generation": ["now at school"], "references": ["Annoyed", "worried", "careless", "Rushed", "irresponsible"], "input": {"head": "PersonX misses ___ to school", "relation": "xAttr", "prompt": "PersonX misses ___ to school. PersonX is"}}
{"generation": ["a person, and PersonY is a person"], "references": ["diplomatic", "helpful", "friendly", "kind", "thoughtful", "caring"], "input": {"head": "PersonX makes PersonY concessions", "relation": "xAttr", "prompt": "PersonX makes PersonY concessions. PersonX is"}}
{"generation": ["a person who loves riding PersonX's bike"], "references": ["Engaged", "fun", "active", "Possessive", "Competitive", "athletic", "Athletic"], "input": {"head": "PersonX loves riding PersonX's bike", "relation": "xAttr", "prompt": "PersonX loves riding PersonX's bike. PersonX is"}}
{"generation": ["a person who is not a person"], "references": ["clumsy", "inattentive", "ambitious", "dumb", "stupid", "bad", "regretful"], "input": {"head": "PersonX makes a mistake", "relation": "xAttr", "prompt": "PersonX makes a mistake. PersonX is"}}
{"generation": ["a new way to interact with the world"], "references": ["mature", "responsible", "successful", "older"], "input": {"head": "PersonX comes of age", "relation": "xAttr", "prompt": "PersonX comes of age. PersonX is"}}
{"generation": ["a man"], "references": ["extravagant", "capable", "a consumer", "invested", "self-indulgent", "wealthy"], "input": {"head": "PersonX buys a television", "relation": "xAttr", "prompt": "PersonX buys a television. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["capable", "generous", "responsible", "helpful"], "input": {"head": "PersonX gets everything PersonY needed", "relation": "xAttr", "prompt": "PersonX gets everything PersonY needed. PersonX is"}}
{"generation": ["a member of the Resistance"], "references": ["untrusting", "dead", "hurt"], "input": {"head": "PersonX gets shot", "relation": "xAttr", "prompt": "PersonX gets shot. PersonX is"}}
{"generation": ["a person who loves PersonX's dog"], "references": ["animal lover", "friendly", "kind", "loving", "caring"], "input": {"head": "PersonX loves PersonX's dog", "relation": "xAttr", "prompt": "PersonX loves PersonX's dog. PersonX is"}}
{"generation": ["a new type of object that can be used to"], "references": ["professional", "clever", "knowledgeable", "vain"], "input": {"head": "PersonX improves PersonY's appearance", "relation": "xAttr", "prompt": "PersonX improves PersonY's appearance. PersonX is"}}
{"generation": ["a little surprised"], "references": ["flexible", "mean", "friendly", "observant", "sore", "tired"], "input": {"head": "PersonX stretches out PersonX's hand", "relation": "xAttr", "prompt": "PersonX stretches out PersonX's hand. PersonX is"}}
{"generation": ["the person who is performing the analysis"], "references": ["subservient", "observant", "useful", "detail oriented"], "input": {"head": "PersonX performs PersonY analysis", "relation": "xAttr", "prompt": "PersonX performs PersonY analysis. PersonX is"}}
{"generation": ["a Person object"], "references": ["firm", "motivated", "Able", "eager", "Active", "skilled"], "input": {"head": "PersonX tests PersonX's ability", "relation": "xAttr", "prompt": "PersonX tests PersonX's ability. PersonX is"}}
{"generation": ["the person who is holding the object"], "references": ["controlling", "agressive", "demanding", "physical"], "input": {"head": "PersonX gets PersonY's hands", "relation": "xAttr", "prompt": "PersonX gets PersonY's hands. PersonX is"}}
{"generation": ["a person who is a member of the Church of"], "references": ["religious", "thankful", "consciencious"], "input": {"head": "PersonX says grace", "relation": "xAttr", "prompt": "PersonX says grace. PersonX is"}}
{"generation": ["the person who is trying to enter"], "references": ["brave", "foreceful", "obnoxious", "secretive", "a bully", "rude", "protective"], "input": {"head": "PersonX prevents PersonY from entering", "relation": "xAttr", "prompt": "PersonX prevents PersonY from entering. PersonX is"}}
{"generation": ["a person who is not a member of the group"], "references": ["Cute", "Nice", "ecstatic", "love"], "input": {"head": "PersonX gives PersonY a small smile", "relation": "xAttr", "prompt": "PersonX gives PersonY a small smile. PersonX is"}}
{"generation": ["a person who is overweight, has a low body"], "references": ["motivated", "active", "weak", "serious", "determined"], "input": {"head": "PersonX starts working out", "relation": "xAttr", "prompt": "PersonX starts working out. PersonX is"}}
{"generation": ["a person who has been through a lot of pain"], "references": ["joyous", "relaxed", "calm", "pain free", "peaceful", "happy", "pleasured"], "input": {"head": "PersonX feels relief", "relation": "xAttr", "prompt": "PersonX feels relief. PersonX is"}}
{"generation": ["a good choice for patients with ___"], "references": ["capable", "determind", "strong", "guilty", "glad", "successful", "talented", "caring"], "input": {"head": "PersonX reduces ___ in patients", "relation": "xAttr", "prompt": "PersonX reduces ___ in patients. PersonX is"}}
{"generation": ["the person who is looking at the camera"], "references": ["shy", "aware", "fearful", "vigilent", "nervous", "oubtfuld"], "input": {"head": "PersonX casts PersonY's eyes", "relation": "xAttr", "prompt": "PersonX casts PersonY's eyes. PersonX is"}}
{"generation": ["a person"], "references": ["starving", "nauseous", "hungry", "determined"], "input": {"head": "PersonX eats crackers", "relation": "xAttr", "prompt": "PersonX eats crackers. PersonX is"}}
{"generation": ["a very good player, but he's not a"], "references": ["productive", "skillful", "hardworking", "crafty", "violent", "creative"], "input": {"head": "PersonX cuts swathes", "relation": "xAttr", "prompt": "PersonX cuts swathes. PersonX is"}}
{"generation": ["a little brother"], "references": ["social", "aware", "inquisitive", "friendly", "caring", "commanding"], "input": {"head": "PersonX asks PersonY's little brother", "relation": "xAttr", "prompt": "PersonX asks PersonY's little brother. PersonX is"}}
{"generation": ["now in the process of kicking PersonY"], "references": ["sorrowful", "clumsy", "not careful", "uncoordinated", "Clumsy", "regretful"], "input": {"head": "PersonX accidentally kicked", "relation": "xAttr", "prompt": "PersonX accidentally kicked. PersonX is"}}
{"generation": ["a person who is a member of the opposite sex"], "references": ["curious", "Sweet tooth", "ambitious", "Creative", "interested", "creative"], "input": {"head": "PersonX learns how to bake a cake", "relation": "xAttr", "prompt": "PersonX learns how to bake a cake. PersonX is"}}
{"generation": ["the one who is the most likely to be the"], "references": ["lonely", "desolate", "remorseful"], "input": {"head": "PersonX misses PersonY a lot", "relation": "xAttr", "prompt": "PersonX misses PersonY a lot. PersonX is"}}
{"generation": ["a person who is not a member of the group"], "references": ["desperate", "inquisitive", "curious", "persistent", "determined"], "input": {"head": "PersonX asks anyone", "relation": "xAttr", "prompt": "PersonX asks anyone. PersonX is"}}
{"generation": ["a man, and PersonY is a woman"], "references": ["on time", "bold", "happy", "straightforward", "honored", "responsible"], "input": {"head": "PersonX meets PersonY's husband", "relation": "xAttr", "prompt": "PersonX meets PersonY's husband. PersonX is"}}
{"generation": ["now in the corner"], "references": ["shy", "withdrwan", "playful", "bashful", "secretive", "punishing"], "input": {"head": "PersonX turns PersonX's ___ to the wall", "relation": "xAttr", "prompt": "PersonX turns PersonX's ___ to the wall. PersonX is"}}
{"generation": ["a person who is free"], "references": ["strong", "democratic", "made of steel", "resilient", "patient"], "input": {"head": "PersonX endures ___ and free", "relation": "xAttr", "prompt": "PersonX endures ___ and free. PersonX is"}}
{"generation": ["a function that takes a string and returns a boolean"], "references": ["Careful", "cautious", "careful", "Protective", "responsible"], "input": {"head": "PersonX prevents the ___ from breaking", "relation": "xAttr", "prompt": "PersonX prevents the ___ from breaking. PersonX is"}}
{"generation": ["a very simple program that just prints out the name"], "references": ["dutiful", "effective", "generous", "willing", "helpful", "reliable"], "input": {"head": "PersonX would take care of it", "relation": "xAttr", "prompt": "PersonX would take care of it. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["Attentive", "aware", "Nosey", "surprised", "lucky", "Watchful", "observant", "Perceptive"], "input": {"head": "PersonX sees PersonY thing", "relation": "xAttr", "prompt": "PersonX sees PersonY thing. PersonX is"}}
{"generation": ["the person who is the target of the action"], "references": ["Caring", "Considerate", "helpful", "devious"], "input": {"head": "PersonX puts it in PersonY's purse", "relation": "xAttr", "prompt": "PersonX puts it in PersonY's purse. PersonX is"}}
{"generation": ["the new PersonY"], "references": ["heartless", "flippant", "generous", "active", "thoughtful", "shopoholic"], "input": {"head": "PersonX replaces PersonY's old one", "relation": "xAttr", "prompt": "PersonX replaces PersonY's old one. PersonX is"}}
{"generation": ["a person who is a member of the opposite sex"], "references": ["skilled with their hands", "talented", "hot", "hungry", "adventurous", "industrious", "creative"], "input": {"head": "PersonX starts cooking", "relation": "xAttr", "prompt": "PersonX starts cooking. PersonX is"}}
{"generation": ["a person, and PersonY is a person"], "references": ["generous", "compassionate", "helpful", "kind", "caring"], "input": {"head": "PersonX keeps PersonY from starving", "relation": "xAttr", "prompt": "PersonX keeps PersonY from starving. PersonX is"}}
{"generation": ["a person, and PersonX's shorts are a"], "references": ["mean", "playful", "clumsy", "worrisome", "careless", "fussy", "fastidious"], "input": {"head": "PersonX gets PersonX's shorts in a knot", "relation": "xAttr", "prompt": "PersonX gets PersonX's shorts in a knot. PersonX is"}}
{"generation": ["a new app that lets you see what your friends"], "references": ["confused", "interested", "Attractive", "Mesmerizing", "special", "intriuging"], "input": {"head": "PersonX catches my attention", "relation": "xAttr", "prompt": "PersonX catches my attention. PersonX is"}}
{"generation": ["the only one who can face the ___ alone"], "references": ["motivated", "strong", "brave", "a leader", "independent"], "input": {"head": "PersonX faces the ___ alone", "relation": "xAttr", "prompt": "PersonX faces the ___ alone. PersonX is"}}
{"generation": ["a class that represents a person"], "references": ["skillful", "consistent", "hard working", "Mobile", "Active", "dependable"], "input": {"head": "PersonX always makes", "relation": "xAttr", "prompt": "PersonX always makes. PersonX is"}}
{"generation": ["the person who is the parent of PersonY"], "references": ["capable", "nice", "helpful", "kind", "caring"], "input": {"head": "PersonX gets PersonY's mother", "relation": "xAttr", "prompt": "PersonX gets PersonY's mother. PersonX is"}}
{"generation": ["a very good friend of mine"], "references": ["Active", "tired", "Hyper", "stressed"], "input": {"head": "PersonX tries to relax", "relation": "xAttr", "prompt": "PersonX tries to relax. PersonX is"}}
{"generation": ["the player who is the closest to the ball"], "references": ["careful", "Hurt", "Scared", "not sickly", "healthy", "responsible"], "input": {"head": "PersonX gets the shot", "relation": "xAttr", "prompt": "PersonX gets the shot. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["friendly", "passionate", "touchy"], "input": {"head": "PersonX gets PersonY hands on", "relation": "xAttr", "prompt": "PersonX gets PersonY hands on. PersonX is"}}
{"generation": ["very happy"], "references": ["merry", "gleeful", "emotional", "excited", "elated", "joyful"], "input": {"head": "PersonX becomes very happy", "relation": "xAttr", "prompt": "PersonX becomes very happy. PersonX is"}}
{"generation": ["now the owner of the ring"], "references": ["watchful", "lucky", "hopeful", "persistent", "helpful", "determined"], "input": {"head": "PersonX finds a ring", "relation": "xAttr", "prompt": "PersonX finds a ring. PersonX is"}}
{"generation": ["a person who is not a member of the group"], "references": ["rushed", "prompt", "excited", "In need", "serious", "responsible", "Punctual"], "input": {"head": "PersonX catches the bus", "relation": "xAttr", "prompt": "PersonX catches the bus. PersonX is"}}
{"generation": ["cold and dry"], "references": ["dissatisfied", "Humid", "Intense", "irritable", "Hot", "Exercising"], "input": {"head": "PersonX is hot and humid", "relation": "xAttr", "prompt": "PersonX is hot and humid. PersonX is"}}
{"generation": ["a great game, and I'm glad to see"], "references": ["relaxed", "happy", "blessed", "content", "grateful", "satisfied"], "input": {"head": "PersonX has a wonderful time on PersonX's trip", "relation": "xAttr", "prompt": "PersonX has a wonderful time on PersonX's trip. PersonX is"}}
{"generation": ["a person who is a member of the opposite sex"], "references": ["friendly", "gregarious", "familial", "responsible son"], "input": {"head": "PersonX meets PersonX's father", "relation": "xAttr", "prompt": "PersonX meets PersonX's father. PersonX is"}}
{"generation": ["the person who is interrupting"], "references": ["malevolent", "inconsiderate", "quarrelsome", "classless", "unthoughtful", "rude"], "input": {"head": "PersonX interrupts PersonY", "relation": "xAttr", "prompt": "PersonX interrupts PersonY. PersonX is"}}
{"generation": ["a great basketball player"], "references": ["sucessful", "talented", "hard-working", "athletic", "skilled", "driven"], "input": {"head": "PersonX becomes a great basketball player", "relation": "xAttr", "prompt": "PersonX becomes a great basketball player. PersonX is"}}
{"generation": ["a person who is a member of the group"], "references": ["dynamic", "handy", "logical", "forceful", "proud"], "input": {"head": "PersonX builds something", "relation": "xAttr", "prompt": "PersonX builds something. PersonX is"}}
{"generation": ["the person who is looking at the face"], "references": ["thoughtful", "surprised", "attentive", "contemplative"], "input": {"head": "PersonX looks at PersonY's face", "relation": "xAttr", "prompt": "PersonX looks at PersonY's face. PersonX is"}}
{"generation": ["a male and PersonY is a female"], "references": ["accommodating", "helpful", "adventerous", "indulgent", "skilled", "creative"], "input": {"head": "PersonX dyes PersonY's hair pink", "relation": "xAttr", "prompt": "PersonX dyes PersonY's hair pink. PersonX is"}}
{"generation": ["a man"], "references": ["odd", "rough", "large", "muscular"], "input": {"head": "PersonX looks like men", "relation": "xAttr", "prompt": "PersonX looks like men. PersonX is"}}
{"generation": ["a person"], "references": ["rich", "unfailing", "wealthy", "steadfast", "dependable", "well-off"], "input": {"head": "PersonX pays ___ at a rate", "relation": "xAttr", "prompt": "PersonX pays ___ at a rate. PersonX is"}}
{"generation": ["a game about a guy who is a little bit"], "references": ["out of touch", "impaired", "scared", "awkward", "unwell", "weak"], "input": {"head": "PersonX feels funny", "relation": "xAttr", "prompt": "PersonX feels funny. PersonX is"}}
{"generation": ["a car that is designed to be driven by a"], "references": ["careful", "skilled", "restless", "fun", "talented", "excited", "fast"], "input": {"head": "PersonX drives on the highway", "relation": "xAttr", "prompt": "PersonX drives on the highway. PersonX is"}}
{"generation": ["hungry"], "references": ["dedicated", "routine", "independant", "brave", "hungry", "adventerous", "biased", "weak"], "input": {"head": "PersonX eats ___ for days", "relation": "xAttr", "prompt": "PersonX eats ___ for days. PersonX is"}}
{"generation": ["a person, and PersonY is a person"], "references": ["patient", "polite", "generous", "competent"], "input": {"head": "PersonX lets PersonY explain", "relation": "xAttr", "prompt": "PersonX lets PersonY explain. PersonX is"}}
{"generation": ["the person who is the target of the attack"], "references": ["drawer", "efficient", "curious", "excited", "clamshell", "Useful", "gate"], "input": {"head": "PersonX pulls the ___ open", "relation": "xAttr", "prompt": "PersonX pulls the ___ open. PersonX is"}}
{"generation": ["a person who is not a member of the group"], "references": ["hurried", "careless", "surprised", "confused"], "input": {"head": "PersonX accidentally ran", "relation": "xAttr", "prompt": "PersonX accidentally ran. PersonX is"}}
{"generation": ["a person who is not a person"], "references": ["attentive", "worried", "curious", "alert", "worriesome", "guarded"], "input": {"head": "PersonX smells something burning", "relation": "xAttr", "prompt": "PersonX smells something burning. PersonX is"}}
{"generation": ["a person who has a secret"], "references": ["absentminded", "careless", "spontaneous", "exciting"], "input": {"head": "PersonX tells PersonY had a surprise", "relation": "xAttr", "prompt": "PersonX tells PersonY had a surprise. PersonX is"}}
{"generation": ["a person who wants to learn how to sew"], "references": ["curious", "detailed", "Learner", "Curious", "Dedicated", "studious", "creative"], "input": {"head": "PersonX wants to learn how to sew", "relation": "xAttr", "prompt": "PersonX wants to learn how to sew. PersonX is"}}
{"generation": ["the person who is the most likely to be the"], "references": ["skillful", "efficient", "Clean", "Active", "competent", "determinded"], "input": {"head": "PersonX gets the stain out", "relation": "xAttr", "prompt": "PersonX gets the stain out. PersonX is"}}
{"generation": ["a very simple and easy to use tool that allows"], "references": ["smart", "simple", "reasonable", "conversational", "intelligent"], "input": {"head": "PersonX makes much sense", "relation": "xAttr", "prompt": "PersonX makes much sense. PersonX is"}}
{"generation": ["a guy who is a little bit overweight, and"], "references": ["Outgoing", "athletic", "althetic", "Friendly", "reliable", "healthy"], "input": {"head": "PersonX meets PersonY at the gym", "relation": "xAttr", "prompt": "PersonX meets PersonY at the gym. PersonX is"}}
{"generation": ["the driver"], "references": ["Helpful", "prepared", "caring", "responsible", "Kind", "considerate"], "input": {"head": "PersonX gets PersonY's driver 's license", "relation": "xAttr", "prompt": "PersonX gets PersonY's driver 's license. PersonX is"}}
{"generation": ["a member of the Mafia"], "references": ["entitled", "greedy", "down and out", "needy", "in need"], "input": {"head": "PersonX asks ___ for money", "relation": "xAttr", "prompt": "PersonX asks ___ for money. PersonX is"}}
{"generation": ["a table that has a PersonX"], "references": ["dutiful", "hard working", "dependable", "responsible", "determined"], "input": {"head": "PersonX waits tables", "relation": "xAttr", "prompt": "PersonX waits tables. PersonX is"}}
{"generation": ["a character in the game"], "references": ["expressive", "loud", "talkative", "vocal", "prepared", "joyful", "certain"], "input": {"head": "PersonX opens PersonX's ___ to speak", "relation": "xAttr", "prompt": "PersonX opens PersonX's ___ to speak. PersonX is"}}
{"generation": ["now a healthy weight"], "references": ["motivated", "engaged", "inspired", "determined"], "input": {"head": "PersonX loses 100 pounds", "relation": "xAttr", "prompt": "PersonX loses 100 pounds. PersonX is"}}
{"generation": ["a group of people who are obsessed with the idea"], "references": ["extraverted", "bold", "calm", "needy", "beauty", "outspoken"], "input": {"head": "PersonX attention whores", "relation": "xAttr", "prompt": "PersonX attention whores. PersonX is"}}
{"generation": ["not sure who it is"], "references": ["attentive", "questioning", "keen", "curious", "good of hearing", "sensory smart"], "input": {"head": "PersonX hears a phone ring", "relation": "xAttr", "prompt": "PersonX hears a phone ring. PersonX is"}}
{"generation": ["now in the air"], "references": ["a victim", "hurting", "unconscious", "hurt", "Untalented", "Untrained"], "input": {"head": "PersonX gets knocked out", "relation": "xAttr", "prompt": "PersonX gets knocked out. PersonX is"}}
{"generation": ["a function that takes a string and returns a string"], "references": ["clever", "Determined", "efficient", "committed", "insistent", "competent"], "input": {"head": "PersonX reproduces this ___ regardless", "relation": "xAttr", "prompt": "PersonX reproduces this ___ regardless. PersonX is"}}
{"generation": ["the only one who can unlock the door"], "references": ["cautious", "dutiful", "safe", "Tired", "Exhausted", "responsible"], "input": {"head": "PersonX unlocks the door", "relation": "xAttr", "prompt": "PersonX unlocks the door. PersonX is"}}
{"generation": ["a person who is a member of the opposite sex"], "references": ["modest", "generous", "grateful", "bashful", "thankful", "well-mannered"], "input": {"head": "PersonX thanks the ___ for PersonY's comments", "relation": "xAttr", "prompt": "PersonX thanks the ___ for PersonY's comments. PersonX is"}}
{"generation": ["a function that takes a PersonY and returns a"], "references": ["powerful", "motivated", "needy", "decisive", "brisk", "wanting"], "input": {"head": "PersonX puts PersonY to use", "relation": "xAttr", "prompt": "PersonX puts PersonY to use. PersonX is"}}
{"generation": ["a new type of person that is not a person"], "references": ["truthful", "discovered", "defined", "noticable", "honest", "distinctive", "exposed"], "input": {"head": "PersonX comes to light", "relation": "xAttr", "prompt": "PersonX comes to light. PersonX is"}}
{"generation": ["now in PersonY's mind"], "references": ["popular", "demanding", "curious", "interested", "rude", "conspicuous"], "input": {"head": "PersonX comes into PersonY's eyes", "relation": "xAttr", "prompt": "PersonX comes into PersonY's eyes. PersonX is"}}
{"generation": ["a person who is not a member of the same"], "references": ["social", "sensual", "hedonic", "polite", "friendly", "talkative"], "input": {"head": "PersonX meets someone new", "relation": "xAttr", "prompt": "PersonX meets someone new. PersonX is"}}
{"generation": ["now scheduled to be in the office at 9:"], "references": ["busy", "varying", "flighty", "unreliable"], "input": {"head": "PersonX reschedules PersonX's appointment", "relation": "xAttr", "prompt": "PersonX reschedules PersonX's appointment. PersonX is"}}
{"generation": ["a person who is a member of the X-"], "references": ["accomplished", "stable", "trusty", "excited", "reliable", "dependable"], "input": {"head": "PersonX gets my license", "relation": "xAttr", "prompt": "PersonX gets my license. PersonX is"}}
{"generation": ["a person who has been diagnosed with a mental illness"], "references": ["dominating", "helpful", "Active", "Reformative", "competent", "succesful"], "input": {"head": "PersonX changes PersonX's lives", "relation": "xAttr", "prompt": "PersonX changes PersonX's lives. PersonX is"}}
{"generation": ["a person"], "references": ["immoral", "angered", "upset", "angry", "harmful", "dangerous", "hurtful"], "input": {"head": "PersonX wants to hurt PersonY", "relation": "xAttr", "prompt": "PersonX wants to hurt PersonY. PersonX is"}}
{"generation": ["the person who wants ___"], "references": ["clever", "accomplished", "capable", "resourceful", "smart", "sleuthlike", "thoughtful"], "input": {"head": "PersonX finds ___ PersonY wanted", "relation": "xAttr", "prompt": "PersonX finds ___ PersonY wanted. PersonX is"}}
{"generation": ["wearing a blue shirt and blue pants"], "references": ["Relaxed", "relaxed", "on vacation", "Chill"], "input": {"head": "PersonX is walking along the beach", "relation": "xAttr", "prompt": "PersonX is walking along the beach. PersonX is"}}
{"generation": ["a person, and PersonY is a person"], "references": ["reads people", "observant", "curious"], "input": {"head": "PersonX looks on PersonY's face", "relation": "xAttr", "prompt": "PersonX looks on PersonY's face. PersonX is"}}
{"generation": ["a man, and he's a doctor"], "references": ["smart", "Smart", "Conscientious", "Preventative", "nervous", "intelligent"], "input": {"head": "PersonX goes to the doctor for a checkup", "relation": "xAttr", "prompt": "PersonX goes to the doctor for a checkup. PersonX is"}}
{"generation": ["the person who is being judged"], "references": ["understanding", "judgemental", "opinionated", "thoughtful", "critical", "judgmental"], "input": {"head": "PersonX forms PersonY opinion", "relation": "xAttr", "prompt": "PersonX forms PersonY opinion. PersonX is"}}
{"generation": ["the person who is waiting for the answer"], "references": ["curious", "interested (in Person Y's answer)", "expectant", "anxious", "patient"], "input": {"head": "PersonX waits for PersonY answer", "relation": "xAttr", "prompt": "PersonX waits for PersonY answer. PersonX is"}}
{"generation": ["a job class that is used to represent a person"], "references": ["dedicated", "hardworking", "jobless", "smart", "confident", "stressed"], "input": {"head": "PersonX applies to jobs", "relation": "xAttr", "prompt": "PersonX applies to jobs. PersonX is"}}
{"generation": ["the person who is the most dependent on the other"], "references": ["leading", "helpful", "friendly", "nuturing", "irresponsible", "unreliable"], "input": {"head": "PersonX reduces PersonY's dependence", "relation": "xAttr", "prompt": "PersonX reduces PersonY's dependence. PersonX is"}}
{"generation": ["now at ___"], "references": ["powerful", "greedy", "mean", "intelligent", "discontent", "jealous"], "input": {"head": "PersonX increases PersonX's ___ at the expense", "relation": "xAttr", "prompt": "PersonX increases PersonX's ___ at the expense. PersonX is"}}
{"generation": ["a ___"], "references": ["Able", "worldly", "grammatical", "intelligent", "fluent", "Skilled", "native"], "input": {"head": "PersonX speaks the ___ fluently", "relation": "xAttr", "prompt": "PersonX speaks the ___ fluently. PersonX is"}}
{"generation": ["a good friend of PersonY's"], "references": ["Bored", "Happy", "generous", "Familial", "helpful", "kind"], "input": {"head": "PersonX babysits PersonX's cousin", "relation": "xAttr", "prompt": "PersonX babysits PersonX's cousin. PersonX is"}}
{"generation": ["the person who is being described"], "references": ["intellegent", "aware", "talented", "observant", "impersonating", "skilled"], "input": {"head": "PersonX conveys PersonY impression", "relation": "xAttr", "prompt": "PersonX conveys PersonY impression. PersonX is"}}
{"generation": ["now in a position where he can't move"], "references": ["mean", "clumsy", "angry", "pain", "injured", "need knife"], "input": {"head": "PersonX cuts PersonY's leg", "relation": "xAttr", "prompt": "PersonX cuts PersonY's leg. PersonX is"}}
{"generation": ["the person who is the most likely to be the"], "references": ["capable", "skillful", "content", "Careless", "skilled", "Absent minded"], "input": {"head": "PersonX cracks the eggs", "relation": "xAttr", "prompt": "PersonX cracks the eggs. PersonX is"}}
{"generation": ["to push him back a few pixels"], "references": ["is physical", "none", "is violent"], "input": {"head": "PersonX shoves PersonY back", "relation": "xEffect", "prompt": "PersonX shoves PersonY back. The effect on PersonX will be"}}
{"generation": ["the same as the one on PersonY"], "references": ["Has heart attack", "goes to the hospital", "Has hair burned", "gets hurt"], "input": {"head": "PersonX hits by lightning", "relation": "xEffect", "prompt": "PersonX hits by lightning. The effect on PersonX will be"}}
{"generation": ["that PersonX will be able to print the string"], "references": ["have a good effect", "begins incorporating the teachings into their work flow", "gain knowledge on the craft", "learn more and more"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xEffect", "prompt": "PersonX learns the printer 's ___. The effect on PersonX will be"}}
{"generation": ["the same as if ___"], "references": ["PersonX is a creature of habit", "PersonX learns a new routine", "is avoided", "is looked down upon"], "input": {"head": "PersonX always asked ___", "relation": "xEffect", "prompt": "PersonX always asked ___. The effect on PersonX will be"}}
{"generation": ["to make him say \"I'm not a robot"], "references": ["none"], "input": {"head": "PersonX tells PersonY to say", "relation": "xEffect", "prompt": "PersonX tells PersonY to say. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had come"], "references": ["begs", "searches  for persony", "thinks about persony", "asks Person Y"], "input": {"head": "PersonX wants PersonY to come", "relation": "xEffect", "prompt": "PersonX wants PersonY to come. The effect on PersonX will be"}}
{"generation": ["the same as if he had met the person in"], "references": ["Becomes full", "gains kinship", "coworkers", "good conversation", "friends", "Gets the check"], "input": {"head": "PersonX meets ___ for lunch", "relation": "xEffect", "prompt": "PersonX meets ___ for lunch. The effect on PersonX will be"}}
{"generation": ["to execute the function PersonX"], "references": ["alerts PersonY of success", "worshipped", "feels successful.", "rewarded"], "input": {"head": "PersonX puts PersonY's ___ in execution", "relation": "xEffect", "prompt": "PersonX puts PersonY's ___ in execution. The effect on PersonX will be"}}
{"generation": ["to give PersonY the slip"], "references": ["stresses about being caught", "escapes from PersonY", "is free", "number of slip decreases", "runs away", "become great", "avoids responsibility", "heart rate increases"], "input": {"head": "PersonX gives PersonY the slip", "relation": "xEffect", "prompt": "PersonX gives PersonY the slip. The effect on PersonX will be"}}
{"generation": ["the same as if he had been hit by the"], "references": ["fans smoke away", "puts out cigarette"], "input": {"head": "PersonX blows smoke", "relation": "xEffect", "prompt": "PersonX blows smoke. The effect on PersonX will be"}}
{"generation": ["the same as if they had met the person in"], "references": ["increases familiarity", "establishes a relationship", "Person X talks about events.", "Person X asks them about their life."], "input": {"head": "PersonX meets someone", "relation": "xEffect", "prompt": "PersonX meets someone. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["GETTING A NEW JOB", "makes more money", "gets called for an interview", "gets hired", "GETTING OFFER FROM MORE COMPANY", "gets numerous rejection mails"], "input": {"head": "PersonX applies to jobs", "relation": "xEffect", "prompt": "PersonX applies to jobs. The effect on PersonX will be"}}
{"generation": ["the same as if he had been smiling"], "references": ["hugs PersonY", "none", "smiles at PersonY"], "input": {"head": "PersonX gives PersonY a small smile", "relation": "xEffect", "prompt": "PersonX gives PersonY a small smile. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonX's math"], "references": ["score high marks", "crams for the test", "PersonX passes his math test", "PersonX gains knowledge", "clears the test", "aces the test"], "input": {"head": "PersonX studies for PersonX's math test", "relation": "xEffect", "prompt": "PersonX studies for PersonX's math test. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's concession"], "references": ["keeps the peace", "learns how to cook", "is thanked", "becomes tired from cooking"], "input": {"head": "PersonX makes PersonY concessions", "relation": "xEffect", "prompt": "PersonX makes PersonY concessions. The effect on PersonX will be"}}
{"generation": ["the same as if he had spent ___ on video"], "references": ["GET ENTERTAINED", "goes broke", "loses time with friends", "LOST MONEY"], "input": {"head": "PersonX spends ___ on video games", "relation": "xEffect", "prompt": "PersonX spends ___ on video games. The effect on PersonX will be"}}
{"generation": ["the same as if he had been wearing the item"], "references": ["PersonX forgets to return it", "gets arrested for stealing", "PersonX forgets to pay for it", "gets caught"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "xEffect", "prompt": "PersonX puts it in PersonX's purse. The effect on PersonX will be"}}
{"generation": ["the same as if the player had chosen to use"], "references": ["He is involved something", "none", "He is making a plan"], "input": {"head": "PersonX takes ___ as a result", "relation": "xEffect", "prompt": "PersonX takes ___ as a result. The effect on PersonX will be"}}
{"generation": ["the same as if the player had used the \""], "references": ["fails a test", "PersonX faces negative effects from their mistake.", "PersonX has to make up for the mistake.", "loses his job"], "input": {"head": "PersonX makes a mistake", "relation": "xEffect", "prompt": "PersonX makes a mistake. The effect on PersonX will be"}}
{"generation": ["to play the song that PersonY likes the most"], "references": ["receives thanks", "Enjoys Y company", "none", "gets a hug", "Listens to song"], "input": {"head": "PersonX plays PersonY's favorite songs", "relation": "xEffect", "prompt": "PersonX plays PersonY's favorite songs. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's"], "references": ["talk with each other", "none", "spend time together"], "input": {"head": "PersonX sees PersonY frequently", "relation": "xEffect", "prompt": "PersonX sees PersonY frequently. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been there"], "references": ["is ignored", "gets greeted", "gets asked a question", "is engaged in conversation"], "input": {"head": "PersonX sees PersonY later that day", "relation": "xEffect", "prompt": "PersonX sees PersonY later that day. The effect on PersonX will be"}}
{"generation": ["the same as if he had dropped the phone"], "references": ["They are scolded.", "They have to buy a new phone."], "input": {"head": "PersonX drops the phone", "relation": "xEffect", "prompt": "PersonX drops the phone. The effect on PersonX will be"}}
{"generation": ["the same as if the player had changed PersonX"], "references": ["CHANGE IN OUR LIFE", "changes lifestyle", "has different life"], "input": {"head": "PersonX changes PersonX's lives", "relation": "xEffect", "prompt": "PersonX changes PersonX's lives. The effect on PersonX will be"}}
{"generation": ["that he will be unable to move for a short"], "references": ["sad", "Gets out of the situation", "happy", "Goes home"], "input": {"head": "PersonX leaves the scene", "relation": "xEffect", "prompt": "PersonX leaves the scene. The effect on PersonX will be"}}
{"generation": ["the same as if the player had been hit by"], "references": ["seeks help", "distract oneself", "none"], "input": {"head": "PersonX feels unhappy", "relation": "xEffect", "prompt": "PersonX feels unhappy. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's tire"], "references": ["gives back the keys", "takes payment", "hands become covered in black residue", "goes home", "is appreciated by someone", "gets back in car"], "input": {"head": "PersonX replaces PersonY's tire", "relation": "xEffect", "prompt": "PersonX replaces PersonY's tire. The effect on PersonX will be"}}
{"generation": ["to make them feel like they are dancing with a"], "references": ["loses a purse", "gets good exercise", "falls asleep", "is tired", "legs get sore", "gets sore"], "input": {"head": "PersonX dances the night away", "relation": "xEffect", "prompt": "PersonX dances the night away. The effect on PersonX will be"}}
{"generation": ["the same as if the two of them had ___"], "references": ["happy", "refresh", "none"], "input": {"head": "PersonX enjoys ___ together", "relation": "xEffect", "prompt": "PersonX enjoys ___ together. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had been created with"], "references": ["has to re-take the classes.", "can't get a good job."], "input": {"head": "PersonX fails PersonX's classes", "relation": "xEffect", "prompt": "PersonX fails PersonX's classes. The effect on PersonX will be"}}
{"generation": ["to give ___ a warning"], "references": ["none"], "input": {"head": "PersonX gives ___ a warning", "relation": "xEffect", "prompt": "PersonX gives ___ a warning. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had talked to Person"], "references": ["communicates", "uses hand gesters", "voices opinions", "becomes heard", "none"], "input": {"head": "PersonX talks to PersonY again", "relation": "xEffect", "prompt": "PersonX talks to PersonY again. The effect on PersonX will be"}}
{"generation": ["that PersonX will be able to see PersonY"], "references": ["He opens the car door for Person Y", "opens door", "speaks", "PersonX hold open the door", "Person X drives the car", "PersonX bids them goodnight"], "input": {"head": "PersonX walks PersonY to PersonX's car", "relation": "xEffect", "prompt": "PersonX walks PersonY to PersonX's car. The effect on PersonX will be"}}
{"generation": ["that they will be able to play outside, but"], "references": ["stays inside", "puts on shoes", "goes outside", "gets exercise", "enjoys the sunshine", "checks the time", "checks the weather"], "input": {"head": "PersonX wants to play outside", "relation": "xEffect", "prompt": "PersonX wants to play outside. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["Person x needs to wash", "Person needs to deodorize", "PersonX takes a shower", "PersonX bathes in tomato juice"], "input": {"head": "PersonX sprays by a skunk", "relation": "xEffect", "prompt": "PersonX sprays by a skunk. The effect on PersonX will be"}}
{"generation": ["the same as if the ___ were created on the"], "references": ["body trembles", "falls asleep", "no effect", "becomes tired"], "input": {"head": "PersonX creates the ___ in days", "relation": "xEffect", "prompt": "PersonX creates the ___ in days. The effect on PersonX will be"}}
{"generation": ["that PersonX will be wearing shoes that are the"], "references": ["receives thanks", "PersonX helps PersonY", "personY thanks them", "PersonX gets thanked", "gives the shoes to the person", "they gives personY the shoes"], "input": {"head": "PersonX finds PersonY's shoes", "relation": "xEffect", "prompt": "PersonX finds PersonY's shoes. The effect on PersonX will be"}}
{"generation": ["the same as if ___"], "references": ["gets praised", "none", "gets used"], "input": {"head": "PersonX obeys every ___", "relation": "xEffect", "prompt": "PersonX obeys every ___. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had been given the"], "references": ["gets into argument", "gets accused for manipulation"], "input": {"head": "PersonX forms PersonY opinion as", "relation": "xEffect", "prompt": "PersonX forms PersonY opinion as. The effect on PersonX will be"}}
{"generation": ["the same as if it had used the ___"], "references": ["discovers a talent", "gains knowledge", "is successful in their attempt", "learns a new skill", "Learns a new craft", "Makes the item poorly"], "input": {"head": "PersonX tries PersonX's ___ at making", "relation": "xEffect", "prompt": "PersonX tries PersonX's ___ at making. The effect on PersonX will be"}}
{"generation": ["to make him feel like he's being watched"], "references": ["is kicked", "gets kicked", "PersonX jumps from discomfort", "PersonX shifts and struggles to see from a worms-eye view", "gets engaged in conversation", "listens"], "input": {"head": "PersonX sits at PersonY's feet", "relation": "xEffect", "prompt": "PersonX sits at PersonY's feet. The effect on PersonX will be"}}
{"generation": ["that PersonX will be a little bit taller and"], "references": ["They thank the make up artist.", "they impress others", "They take a selfie and upload it online to show everyone their lovely make up.", "They head out for a night out.", "they look good", "They pay the make up artist and leave."], "input": {"head": "PersonX gets PersonX's makeup done", "relation": "xEffect", "prompt": "PersonX gets PersonX's makeup done. The effect on PersonX will be"}}
{"generation": ["the same as if he had bought the new one"], "references": ["uses it", "takes it home", "replaced with a new one", "doesn't work", "machine getting repair soon", "loses money"], "input": {"head": "PersonX buys a used one", "relation": "xEffect", "prompt": "PersonX buys a used one. The effect on PersonX will be"}}
{"generation": ["to make him stand up and walk around"], "references": ["GET GREAT", "none", "Gets task started", "Starting walking"], "input": {"head": "PersonX gets on PersonX's feet", "relation": "xEffect", "prompt": "PersonX gets on PersonX's feet. The effect on PersonX will be"}}
{"generation": ["to hear a phone ring"], "references": ["PersonX wakes up", "PersonX looks for the phone", "PersonX jumps up to pick it up", "Walks to phone", "Answers phone"], "input": {"head": "PersonX hears a phone ring", "relation": "xEffect", "prompt": "PersonX hears a phone ring. The effect on PersonX will be"}}
{"generation": ["the same as if the player had slept for a"], "references": ["They dream", "They rest", "has a dream", "wakes up", "They sleep all night", "cuddles", "They curl up cosy in bed"], "input": {"head": "PersonX falls back to sleep", "relation": "xEffect", "prompt": "PersonX falls back to sleep. The effect on PersonX will be"}}
{"generation": ["to send a letter to the person who sent the"], "references": ["gets a return letter", "waits for a reply", "gets change", "gets response", "none"], "input": {"head": "PersonX sends a letter", "relation": "xEffect", "prompt": "PersonX sends a letter. The effect on PersonX will be"}}
{"generation": ["that he will be able to sew, but he"], "references": ["gets teased", "Gains knowledge", "Becomes an expert in sewing", "none", "reconsiders"], "input": {"head": "PersonX wants to learn how to sew", "relation": "xEffect", "prompt": "PersonX wants to learn how to sew. The effect on PersonX will be"}}
{"generation": ["to clean the room, and the effect on Person"], "references": ["gets tired out", "makes the bed", "gets thanked", "gets some windex", "none"], "input": {"head": "PersonX cleans PersonY's bedroom", "relation": "xEffect", "prompt": "PersonX cleans PersonY's bedroom. The effect on PersonX will be"}}
{"generation": ["the same as if the user had typed the word"], "references": ["none"], "input": {"head": "PersonX uses the ___ to describe", "relation": "xEffect", "prompt": "PersonX uses the ___ to describe. The effect on PersonX will be"}}
{"generation": ["that he will be waiting for the bus for a"], "references": ["take a bus to the destination on time", "takes a ride instead of walking", "none"], "input": {"head": "PersonX waits at the bus stop", "relation": "xEffect", "prompt": "PersonX waits at the bus stop. The effect on PersonX will be"}}
{"generation": ["the same as if the food was eaten by Person"], "references": ["completed the dish", "is satisfied", "tastes food", "liked the dish"], "input": {"head": "PersonX tastes the food", "relation": "xEffect", "prompt": "PersonX tastes the food. The effect on PersonX will be"}}
{"generation": ["the same as PersonY"], "references": ["talks confidently", "none", "seeks to unite with PersonY"], "input": {"head": "PersonX takes PersonY view", "relation": "xEffect", "prompt": "PersonX takes PersonY view. The effect on PersonX will be"}}
{"generation": ["the same as if the player had used the item"], "references": ["is looked at as mean", "none", "hopes the student does better"], "input": {"head": "PersonX gives ___ an f", "relation": "xEffect", "prompt": "PersonX gives ___ an f. The effect on PersonX will be"}}
{"generation": ["the same as PersonY"], "references": ["Other people understand PersonY's impression", "PersonX comes across as kind and caring", "to conveys impression", "to take negative", "Convinces others", "Sees Y point"], "input": {"head": "PersonX conveys PersonY impression", "relation": "xEffect", "prompt": "PersonX conveys PersonY impression. The effect on PersonX will be"}}
{"generation": ["the same as if he had missed the school"], "references": ["gets tired walking", "PersonX breathes heavily from running", "was sent to principal's office", "is late from walking", "was late for school", "PersonX sweats from nervousness", "PersonX receives a detention for being late", "gets detention from being late", "has to walk to school"], "input": {"head": "PersonX misses ___ to school", "relation": "xEffect", "prompt": "PersonX misses ___ to school. The effect on PersonX will be"}}
{"generation": ["the same as if he had been dating the girl"], "references": ["has a significant other", "meets new people", "obtains a significant other", "has someone to do things with"], "input": {"head": "PersonX starts to date", "relation": "xEffect", "prompt": "PersonX starts to date. The effect on PersonX will be"}}
{"generation": ["the same as if he had lost 100 pounds"], "references": ["eats a cake", "gets thinner", "sorrow", "feeling sad", "eats a stick of carrot", "gets healthier"], "input": {"head": "PersonX loses 100 pounds", "relation": "xEffect", "prompt": "PersonX loses 100 pounds. The effect on PersonX will be"}}
{"generation": ["to make him more likely to attack the player"], "references": ["refuses to cooperate", "makes enemies", "become narrow minded", "develops evil inside", "becomes angry", "becomes alone", "thinks about revenge"], "input": {"head": "PersonX holds a grudge", "relation": "xEffect", "prompt": "PersonX holds a grudge. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["Deceides", "makes calculations", "does match", "none", "Nothing", "figures the cost"], "input": {"head": "PersonX measures ___ in terms", "relation": "xEffect", "prompt": "PersonX measures ___ in terms. The effect on PersonX will be"}}
{"generation": ["the same as if the person had won the money"], "references": ["Has more money", "They become wealthier", "frowns", "Won a prize", "They can afford to buy more things", "sulks"], "input": {"head": "PersonX wins any money", "relation": "xEffect", "prompt": "PersonX wins any money. The effect on PersonX will be"}}
{"generation": ["that he will be able to play the instrument he"], "references": ["he learns music", "he performs in front of people", "buy a instrument", "Picks up instrument", "learn music", "Plays instrument"], "input": {"head": "PersonX wants to play an instrument", "relation": "xEffect", "prompt": "PersonX wants to play an instrument. The effect on PersonX will be"}}
{"generation": ["the same as if you had just said \"I"], "references": ["Practices", "Does it often", "forgets everything else", "none", "gets obsessed"], "input": {"head": "PersonX loves ___ than anything", "relation": "xEffect", "prompt": "PersonX loves ___ than anything. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had found the ring"], "references": ["gets a reward", "pawns the ring", "he returns it to them", "they get a reward"], "input": {"head": "PersonX finds PersonY's ring", "relation": "xEffect", "prompt": "PersonX finds PersonY's ring. The effect on PersonX will be"}}
{"generation": ["the same as if the peer were to be removed"], "references": ["catches a glimpse of something", "is surprised", "is shooed away", "sees something unexpected", "cannot see anything", "witnesses a murder"], "input": {"head": "PersonX peers inside", "relation": "xEffect", "prompt": "PersonX peers inside. The effect on PersonX will be"}}
{"generation": ["the same as PersonY"], "references": ["none"], "input": {"head": "PersonX picks last", "relation": "xEffect", "prompt": "PersonX picks last. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had bought PersonX"], "references": ["pays personY", "gets back the change", "puts in pocket", "none", "gets personY's one"], "input": {"head": "PersonX buys PersonY's one", "relation": "xEffect", "prompt": "PersonX buys PersonY's one. The effect on PersonX will be"}}
{"generation": ["to remove the clock from PersonY's clock"], "references": ["gets messy", "gets thanked"], "input": {"head": "PersonX cleans PersonY's clock", "relation": "xEffect", "prompt": "PersonX cleans PersonY's clock. The effect on PersonX will be"}}
{"generation": ["the same as if he had spent ___ in prayer"], "references": ["looked down on", "more centered", "gets ridiculed", "has relationship with God", "more trusting"], "input": {"head": "PersonX spends ___ in prayer", "relation": "xEffect", "prompt": "PersonX spends ___ in prayer. The effect on PersonX will be"}}
{"generation": ["the same as if the player had jumped"], "references": ["They die", "cremated", "buried", "They break many bones"], "input": {"head": "PersonX commits ___ by jumping", "relation": "xEffect", "prompt": "PersonX commits ___ by jumping. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's effect"], "references": ["gets yelled at", "stared at"], "input": {"head": "PersonX holds PersonY place", "relation": "xEffect", "prompt": "PersonX holds PersonY place. The effect on PersonX will be"}}
{"generation": ["the same as if ___ had been the one to"], "references": ["becomes an expert", "files report", "gets thanked", "writes out report", "none"], "input": {"head": "PersonX helps ___ with PersonY's problems", "relation": "xEffect", "prompt": "PersonX helps ___ with PersonY's problems. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["is approved of", "gets elected", "is commended for his efforts", "is touted as an example"], "input": {"head": "PersonX reduces the ___ to levels", "relation": "xEffect", "prompt": "PersonX reduces the ___ to levels. The effect on PersonX will be"}}
{"generation": ["the same as if he had used the ___"], "references": ["becomes in charge", "receives a payment", "hides from prosecution", "becomes a leader", "none"], "input": {"head": "PersonX gets the ___ into PersonY's hands", "relation": "xEffect", "prompt": "PersonX gets the ___ into PersonY's hands. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the \"Person"], "references": ["travels a route or path", "gets out of the house", "gets lost", "tired"], "input": {"head": "PersonX takes for a ride", "relation": "xEffect", "prompt": "PersonX takes for a ride. The effect on PersonX will be"}}
{"generation": ["removed if the target is killed"], "references": ["becomes a criminal", "becomes disliked", "PersonX is yelled at", "PersonX commits a crime", "regret", "becomes evil", "they get a sense of excitement", "becomes a violent person", "PersonX is arrested"], "input": {"head": "PersonX inflicts ___ on others", "relation": "xEffect", "prompt": "PersonX inflicts ___ on others. The effect on PersonX will be"}}
{"generation": ["that they will be sad"], "references": ["turns eyes towards floor", "Gets comforted", "cries", "no effect", "receives comfort from others", "gets ignored"], "input": {"head": "PersonX looks sad", "relation": "xEffect", "prompt": "PersonX looks sad. The effect on PersonX will be"}}
{"generation": ["the same as if the wood had been touched by"], "references": ["gets dirty hands", "gets a splinter", "gets splinted into finger", "gets hurt", "is asked to leave the store", "avoids bad things happening to them"], "input": {"head": "PersonX touches wood", "relation": "xEffect", "prompt": "PersonX touches wood. The effect on PersonX will be"}}
{"generation": ["the same as if you had just said \"I"], "references": ["Earns respect", "is in high demand", "Is given many responsibilties", "is applauded", "none"], "input": {"head": "PersonX doeth all ___ well", "relation": "xEffect", "prompt": "PersonX doeth all ___ well. The effect on PersonX will be"}}
{"generation": ["the same as if the player had been poisoned"], "references": ["loses weight", "stays at home", "gets attention and help of family", "gets admitted in a hospital"], "input": {"head": "PersonX falls ill", "relation": "xEffect", "prompt": "PersonX falls ill. The effect on PersonX will be"}}
{"generation": ["to preheat the oven to the temperature of the"], "references": ["to have it fun", "gets change", "good", "needs to read the other instructions", "to be great", "is ready to cook"], "input": {"head": "PersonX preheats the oven", "relation": "xEffect", "prompt": "PersonX preheats the oven. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been found earlier"], "references": ["has his phone back", "takes a break", "receives a phone call", "stops searching"], "input": {"head": "PersonX finds ___ later", "relation": "xEffect", "prompt": "PersonX finds ___ later. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had blown up Person"], "references": ["gets yelled at", "they get beat up", "becomes spited", "curses", "Has anxiety", "paces the room", "gets scolded", "they get arrested"], "input": {"head": "PersonX blows up PersonY's phone", "relation": "xEffect", "prompt": "PersonX blows up PersonY's phone. The effect on PersonX will be"}}
{"generation": ["the same as if he had seen the person in"], "references": ["wonder what's it's doing there", "watches it for a while", "spares some change", "takes a picture"], "input": {"head": "PersonX sees ___ on the street", "relation": "xEffect", "prompt": "PersonX sees ___ on the street. The effect on PersonX will be"}}
{"generation": ["the same as if ___"], "references": ["accepts the good ones", "to go program", "none", "discards the poor ones", "to sifts to cell"], "input": {"head": "PersonX sifts out ___", "relation": "xEffect", "prompt": "PersonX sifts out ___. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the \"Find"], "references": ["is able to relax", "falls asleep", "gains a spot", "sighs in contentment"], "input": {"head": "PersonX finds a good spot", "relation": "xEffect", "prompt": "PersonX finds a good spot. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had watched the video"], "references": ["none", "has a good time", "consumes the time"], "input": {"head": "PersonX watches ___ online", "relation": "xEffect", "prompt": "PersonX watches ___ online. The effect on PersonX will be"}}
{"generation": ["to make the team more likely to win"], "references": ["gets praised", "becomes grateful toward teamates", "smiles", "spends most of the time on the bench", "gets congratulated", "gets complaints"], "input": {"head": "PersonX makes the team though", "relation": "xEffect", "prompt": "PersonX makes the team though. The effect on PersonX will be"}}
{"generation": ["to make him look like he's about to fall"], "references": ["gets yelled at", "gets interrupted", "none"], "input": {"head": "PersonX leans back in PersonY's chair", "relation": "xEffect", "prompt": "PersonX leans back in PersonY's chair. The effect on PersonX will be"}}
{"generation": ["that PersonX will be able to see PersonY"], "references": ["sweats", "becomes aroused", "face flushes", "nervous", "gets jittery", "heart rate increases"], "input": {"head": "PersonX sees PersonX's crush PersonY", "relation": "xEffect", "prompt": "PersonX sees PersonX's crush PersonY. The effect on PersonX will be"}}
{"generation": ["removed if PersonY comes"], "references": ["continues to party", "none", "blocks their number"], "input": {"head": "PersonX prevents PersonY from coming", "relation": "xEffect", "prompt": "PersonX prevents PersonY from coming. The effect on PersonX will be"}}
{"generation": ["the same as if the appointment had been made at"], "references": ["none"], "input": {"head": "PersonX reschedules PersonY's appointment", "relation": "xEffect", "prompt": "PersonX reschedules PersonY's appointment. The effect on PersonX will be"}}
{"generation": ["the same as if the gold had been found by"], "references": ["sells it", "shouts triumphantly", "becomes rich", "heart beats fast", "verifies its purity", "stakes a claim", "stocks it"], "input": {"head": "PersonX finds gold", "relation": "xEffect", "prompt": "PersonX finds gold. The effect on PersonX will be"}}
{"generation": ["the same as if the ___"], "references": ["Beams with Pride", "gains experience", "gets awarded", "Wins award", "gets congratulated", "gains skills"], "input": {"head": "PersonX surmounts every ___", "relation": "xEffect", "prompt": "PersonX surmounts every ___. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["PersonX screams in excitement", "gets jumped on", "congratulated", "Celebrates", "kicks ball into goal twice.", "PersonX smiles"], "input": {"head": "PersonX scores two goals", "relation": "xEffect", "prompt": "PersonX scores two goals. The effect on PersonX will be"}}
{"generation": ["the same as if the child had been treated as"], "references": ["gets promoted", "none", "quits their job"], "input": {"head": "PersonX treats ___ in children", "relation": "xEffect", "prompt": "PersonX treats ___ in children. The effect on PersonX will be"}}
{"generation": ["that he will be able to see the person's"], "references": ["Boss called back to job", "got ready for an immediate travel"], "input": {"head": "PersonX is at PersonX's grandmother 's house", "relation": "xEffect", "prompt": "PersonX is at PersonX's grandmother 's house. The effect on PersonX will be"}}
{"generation": ["that PersonX will be able to see the person"], "references": ["Fumbles for item", "Carries purse"], "input": {"head": "PersonX puts ___ in PersonX's purse", "relation": "xEffect", "prompt": "PersonX puts ___ in PersonX's purse. The effect on PersonX will be"}}
{"generation": ["the same as if he had visited PersonX's"], "references": ["gets greeted", "talking each other", "share words", "giving hug", "gets hugged", "give some money", "gets excited"], "input": {"head": "PersonX visits PersonX's daughter", "relation": "xEffect", "prompt": "PersonX visits PersonX's daughter. The effect on PersonX will be"}}
{"generation": ["the same as if the player had used the \""], "references": ["is thanked", "pray for Person Y's safety"], "input": {"head": "PersonX fills PersonY's lungs", "relation": "xEffect", "prompt": "PersonX fills PersonY's lungs. The effect on PersonX will be"}}
{"generation": ["the same as if the player had used the cheat"], "references": ["Gets screamed at.", "none", "Gets hit."], "input": {"head": "PersonX cheats on PersonY", "relation": "xEffect", "prompt": "PersonX cheats on PersonY. The effect on PersonX will be"}}
{"generation": ["the same as if the user had used the wash"], "references": ["going to shop", "repair damaged", "gets reported for illegal activities", "runs out of detergent", "gets asked for favor", "clean dirty", "going party", "stains his clothes"], "input": {"head": "PersonX washes ___ today", "relation": "xEffect", "prompt": "PersonX washes ___ today. The effect on PersonX will be"}}
{"generation": ["that they will be able to see the god's"], "references": ["none"], "input": {"head": "PersonX offer ___ to god", "relation": "xEffect", "prompt": "PersonX offer ___ to god. The effect on PersonX will be"}}
{"generation": ["the same as PersonY finding PersonX"], "references": ["get amount", "go in car", "feels surprised", "return to home", "keeps an eye out for PersonY when out."], "input": {"head": "PersonX finds PersonY anywhere", "relation": "xEffect", "prompt": "PersonX finds PersonY anywhere. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been the one"], "references": ["hangs out with person y", "calls up person y", "to reduce the calories", "none", "want to good in playing"], "input": {"head": "PersonX wants to play with PersonY", "relation": "xEffect", "prompt": "PersonX wants to play with PersonY. The effect on PersonX will be"}}
{"generation": ["the same as if he had been hit by a"], "references": ["slows down heart beating", "lower down blood pressures", "breathes evenly", "breathes deeper", "mind runs fast"], "input": {"head": "PersonX tries to relax", "relation": "xEffect", "prompt": "PersonX tries to relax. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's shoulders"], "references": ["none", "helps Y with sports/task, etc", "uses energy"], "input": {"head": "PersonX squares PersonY's shoulders", "relation": "xEffect", "prompt": "PersonX squares PersonY's shoulders. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had been the one"], "references": ["is prudent", "shakes their head", "tries to keep their balance", "is silent"], "input": {"head": "PersonX acts upon PersonY", "relation": "xEffect", "prompt": "PersonX acts upon PersonY. The effect on PersonX will be"}}
{"generation": ["to ignore the fact that PersonX is a person"], "references": ["\"Can't see", "irritates their eyes", "He says \"\"Now you're an ostrich.\"\".", "Person Y hits him.", "cant hear", "head gets filled with sand", "cant see\""], "input": {"head": "PersonX puts PersonX's head in the sand", "relation": "xEffect", "prompt": "PersonX puts PersonX's head in the sand. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had bought PersonY"], "references": ["Ask for a favor in return", "Give the gift to Y", "person x brings it home", "they are thanked", "person x eats it", "they have less money"], "input": {"head": "PersonX buys PersonY one", "relation": "xEffect", "prompt": "PersonX buys PersonY one. The effect on PersonX will be"}}
{"generation": ["the same as if the parent had been persuaded"], "references": ["none", "personX can do what they want", "personX gains freedom"], "input": {"head": "PersonX convinces PersonX's parents", "relation": "xEffect", "prompt": "PersonX convinces PersonX's parents. The effect on PersonX will be"}}
{"generation": ["the same as if the ring had been found by"], "references": ["feels relieved", "becomes surprised", "stores it safely", "smiles", "PersonX feels the stress disappear after finding the ring and locating it", "wears ring", "keeps ring safe", "PersonX is relieved to have found the ring"], "input": {"head": "PersonX finds the ring", "relation": "xEffect", "prompt": "PersonX finds the ring. The effect on PersonX will be"}}
{"generation": ["that he will be able to walk through walls"], "references": ["gets sweaty", "loses weight", "get's some exercise", "get's where they are going"], "input": {"head": "PersonX starts walking", "relation": "xEffect", "prompt": "PersonX starts walking. The effect on PersonX will be"}}
{"generation": ["that they will be more likely to be more generous"], "references": ["drink water", "cleans the dishes", "person x goes home", "person x sleeps", "pays the check", "wash hands", "wipe hands"], "input": {"head": "PersonX has a nice dinner", "relation": "xEffect", "prompt": "PersonX has a nice dinner. The effect on PersonX will be"}}
{"generation": ["to make him feel like he's being attacked by"], "references": ["take rest", "get some medicine"], "input": {"head": "PersonX passionately rucked PersonY", "relation": "xEffect", "prompt": "PersonX passionately rucked PersonY. The effect on PersonX will be"}}
{"generation": ["applied to PersonY"], "references": ["receive benefit", "receives acceptance", "receives support", "none", "go to meeting"], "input": {"head": "PersonX becomes PersonY member", "relation": "xEffect", "prompt": "PersonX becomes PersonY member. The effect on PersonX will be"}}
{"generation": ["the same as if the other person were the same"], "references": ["Has easier time choosing", "none", "Smarter"], "input": {"head": "PersonX compares ___ with another", "relation": "xEffect", "prompt": "PersonX compares ___ with another. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been a member"], "references": ["none"], "input": {"head": "PersonX shares PersonY experience", "relation": "xEffect", "prompt": "PersonX shares PersonY experience. The effect on PersonX will be"}}
{"generation": ["that he will be able to see the person he"], "references": ["inpuru nalage", "feel bad", "PersonX checks off their to-do list", "PersonX accomplishes everything required"], "input": {"head": "PersonX runs some errands", "relation": "xEffect", "prompt": "PersonX runs some errands. The effect on PersonX will be"}}
{"generation": ["the same as the one on PersonY"], "references": ["needs stitches", "cuts finger"], "input": {"head": "PersonX pierces PersonY's ears", "relation": "xEffect", "prompt": "PersonX pierces PersonY's ears. The effect on PersonX will be"}}
{"generation": ["that the children will be treated as if they were"], "references": ["none", "they smile", "they get yelled at"], "input": {"head": "PersonX gives the children ___", "relation": "xEffect", "prompt": "PersonX gives the children ___. The effect on PersonX will be"}}
{"generation": ["the same as if you had kissed PersonY"], "references": ["gets closer", "smells her", "learns a new skill", "sighs", "yelled at by religious fanatics", "gets saliva all over face"], "input": {"head": "PersonX french kisses", "relation": "xEffect", "prompt": "PersonX french kisses. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been happy for"], "references": ["chest swells", "smiled", "they smile", "energetic", "none"], "input": {"head": "PersonX is happy for PersonY", "relation": "xEffect", "prompt": "PersonX is happy for PersonY. The effect on PersonX will be"}}
{"generation": ["the same as if the girl had been a boy"], "references": ["becomes responsible", "lovers days", "surprises", "becomes a father by accident"], "input": {"head": "PersonX dates a girl", "relation": "xEffect", "prompt": "PersonX dates a girl. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's effect"], "references": ["they feel warm", "PersonX crushes them.", "carresses PersonY", "PersonX smothers them.", "they feel the hair on their neck rise", "has sex with PersonY"], "input": {"head": "PersonX lays on top of PersonY", "relation": "xEffect", "prompt": "PersonX lays on top of PersonY. The effect on PersonX will be"}}
{"generation": ["applied to the target of the effect of PersonY"], "references": ["is cursed at", "gets pushed by an intruder", "is yelled at", "is criticized", "none"], "input": {"head": "PersonX prevents ___ from accessing", "relation": "xEffect", "prompt": "PersonX prevents ___ from accessing. The effect on PersonX will be"}}
{"generation": ["the same as if the player had been hit by"], "references": ["Is being fast", "Becomes free"], "input": {"head": "PersonX races out of the traps", "relation": "xEffect", "prompt": "PersonX races out of the traps. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been waiting at"], "references": ["sighs in frustration", "falls asleep", "gets bored", "rolls eyes"], "input": {"head": "PersonX waits at home", "relation": "xEffect", "prompt": "PersonX waits at home. The effect on PersonX will be"}}
{"generation": ["a lot more subtle than on PersonA, but"], "references": ["receives a reward", "none", "receives praise for work"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "xEffect", "prompt": "PersonX impresses with PersonX's work. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had bought the gas"], "references": ["pays money", "smells gas", "gets declined", "smells the fumes"], "input": {"head": "PersonX buys gas", "relation": "xEffect", "prompt": "PersonX buys gas. The effect on PersonX will be"}}
{"generation": ["to make him look like he's leaning on the"], "references": ["goes to hospital.", "feels good about helping", "holds PersonY's head", "gets smacked.", "none"], "input": {"head": "PersonX leans PersonY's head", "relation": "xEffect", "prompt": "PersonX leans PersonY's head. The effect on PersonX will be"}}
{"generation": ["the same as if he had dyed his hair red"], "references": ["has red on hands", "PersonX contains an adrenaline rush and sweats from nervousness", "PersonX cringes at their new hair color", "eyes burn from fumes", "none"], "input": {"head": "PersonX dyes PersonX's hair red", "relation": "xEffect", "prompt": "PersonX dyes PersonX's hair red. The effect on PersonX will be"}}
{"generation": ["the same as if the caller had called PersonY"], "references": ["threats someone", "Have a talk on phone", "Disconnects the call", "is surprised", "went the police station", "gets engaged in conversation"], "input": {"head": "PersonX receives a phone call", "relation": "xEffect", "prompt": "PersonX receives a phone call. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had called PersonX"], "references": ["apologizes", "explains the situation", "invites them to breakfast", "makes their day", "goes to PersonY's house", "engages in conversation", "talks for hours"], "input": {"head": "PersonX calls PersonY this morning", "relation": "xEffect", "prompt": "PersonX calls PersonY this morning. The effect on PersonX will be"}}
{"generation": ["the same as if the user had clicked on the"], "references": ["cooperates", "will attend the event", "meets new people", "learns from it", "is apart of the event", "want's to do their best"], "input": {"head": "PersonX finally joined", "relation": "xEffect", "prompt": "PersonX finally joined. The effect on PersonX will be"}}
{"generation": ["the same as if he had spent ___ at Person"], "references": ["becomes closer to Person Y", "is asked to stay", "is no longer welcome", "spends times with Person Y"], "input": {"head": "PersonX spends ___ at PersonY's house", "relation": "xEffect", "prompt": "PersonX spends ___ at PersonY's house. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had been hit by"], "references": ["loses time", "waste of day", "Stands alone", "Gets abbandoned", "falls behind on chores or work", "unlike enjoyment"], "input": {"head": "PersonX wastes PersonX's day", "relation": "xEffect", "prompt": "PersonX wastes PersonX's day. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had sold lemonade"], "references": ["he made new friends", "he made money", "attracts attention", "earns money"], "input": {"head": "PersonX is selling lemonade", "relation": "xEffect", "prompt": "PersonX is selling lemonade. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's f"], "references": ["writes with it.", "none", "gets a writing utinsel."], "input": {"head": "PersonX gives PersonY an f", "relation": "xEffect", "prompt": "PersonX gives PersonY an f. The effect on PersonX will be"}}
{"generation": ["removed"], "references": ["longs for the taste", "becomes healthy", "learns from it", "gets healthier", "uses something else", "has new friends"], "input": {"head": "PersonX uses ___ anymore", "relation": "xEffect", "prompt": "PersonX uses ___ anymore. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["gains knowledge", "none", "learns new skills"], "input": {"head": "PersonX studies ___ in college", "relation": "xEffect", "prompt": "PersonX studies ___ in college. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the \"Person"], "references": ["wins the game", "learns from trying", "gets tired", "makes progress", "none"], "input": {"head": "PersonX makes every effort", "relation": "xEffect", "prompt": "PersonX makes every effort. The effect on PersonX will be"}}
{"generation": ["the same as if the person had eaten the food"], "references": ["prepares food.", "gets energy and strength", "is able to get a relief from hunger", "digests food.", "to get off hungry", "chews food.", "to taste somethings"], "input": {"head": "PersonX gets something to eat", "relation": "xEffect", "prompt": "PersonX gets something to eat. The effect on PersonX will be"}}
{"generation": ["the same as PersonY"], "references": ["Gains money", "receives thanks", "Gives feedback", "Gains respect", "Talks about the analysis", "receives reward"], "input": {"head": "PersonX provides PersonY analysis", "relation": "xEffect", "prompt": "PersonX provides PersonY analysis. The effect on PersonX will be"}}
{"generation": ["the same as if he had made a date with"], "references": ["makes reservation", "wonders", "out of money", "smiles", "makes plans", "go to a dinner"], "input": {"head": "PersonX makes a date", "relation": "xEffect", "prompt": "PersonX makes a date. The effect on PersonX will be"}}
{"generation": ["negated if the ___ is destroyed"], "references": ["forced from stage", "becomes protective", "gets awards", "booed"], "input": {"head": "PersonX prevents the ___ from taking", "relation": "xEffect", "prompt": "PersonX prevents the ___ from taking. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been a good"], "references": ["is complimented", "gets given presents", "is beloved by many", "is rewarded"], "input": {"head": "PersonX is a good person", "relation": "xEffect", "prompt": "PersonX is a good person. The effect on PersonX will be"}}
{"generation": ["to make him feel like he's being attacked by"], "references": ["shown out", "none", "gets hugged"], "input": {"head": "PersonX thanks PersonY's profusely", "relation": "xEffect", "prompt": "PersonX thanks PersonY's profusely. The effect on PersonX will be"}}
{"generation": ["the same as if the job was fired from Person"], "references": ["PersonX loses their source of income", "loses income", "makes budget cuts in the short term", "works on their resume", "PersonX is embarrassed publicly", "has to find a new job", "looks for new employment opportunities"], "input": {"head": "PersonX is fired from PersonX's job", "relation": "xEffect", "prompt": "PersonX is fired from PersonX's job. The effect on PersonX will be"}}
{"generation": ["that they will be more likely to be the target"], "references": ["FRUSTATION", "IRRITATION"], "input": {"head": "PersonX feels so nervous", "relation": "xEffect", "prompt": "PersonX feels so nervous. The effect on PersonX will be"}}
{"generation": ["the same as if the ___"], "references": ["is untruthful", "compares first person to another", "thinks about the first person", "talks to them", "asks them out", "caught in lie"], "input": {"head": "PersonX loves another ___", "relation": "xEffect", "prompt": "PersonX loves another ___. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had been a member"], "references": ["gets more sleep", "none", "exercises more"], "input": {"head": "PersonX reduces PersonX's dependence", "relation": "xEffect", "prompt": "PersonX reduces PersonX's dependence. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had bought the dog"], "references": ["feeds dog.", "cleans up mess.", "X receives bag", "X gets receipt"], "input": {"head": "PersonX buys dog food", "relation": "xEffect", "prompt": "PersonX buys dog food. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been drinking beer"], "references": ["Has a hangover tomorrow", "Gets intoxicated"], "input": {"head": "PersonX gets beer", "relation": "xEffect", "prompt": "PersonX gets beer. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["gets a raise", "earns more money", "gets a promotion", "Get good compliment form boss.", "gets praise", "Gets increment"], "input": {"head": "PersonX does an amazing job", "relation": "xEffect", "prompt": "PersonX does an amazing job. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the Growth spell"], "references": ["stays ahead of the game", "increased confidence", "achieves goal", "maintains his current position", "none"], "input": {"head": "PersonX keeps ___ with the growth", "relation": "xEffect", "prompt": "PersonX keeps ___ with the growth. The effect on PersonX will be"}}
{"generation": ["the same as PersonY"], "references": ["represents Y", "PersonX succeeds over PersonY", "increases", "none", "PersonX congratulates PersonY"], "input": {"head": "PersonX represents PersonY increase", "relation": "xEffect", "prompt": "PersonX represents PersonY increase. The effect on PersonX will be"}}
{"generation": ["that he will be able to earn more money,"], "references": ["Gets promoted to full time", "Saves money"], "input": {"head": "PersonX gets a part time job", "relation": "xEffect", "prompt": "PersonX gets a part time job. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been in the"], "references": ["Apolgizes", "Laughs", "PersonX gives a moving speech", "PersonX says something unkind", "none"], "input": {"head": "PersonX brings ___ to PersonY eyes", "relation": "xEffect", "prompt": "PersonX brings ___ to PersonY eyes. The effect on PersonX will be"}}
{"generation": ["to make them more likely to be attracted to the"], "references": ["Gets shamed", "is ignored", "does not get attention", "none", "receives bad attention"], "input": {"head": "PersonX attention whores", "relation": "xEffect", "prompt": "PersonX attention whores. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["buys medicine", "feels sick", "Coughs", "rests at home", "Throws up", "gets better", "takes medicine"], "input": {"head": "PersonX diagnoses with the flu", "relation": "xEffect", "prompt": "PersonX diagnoses with the flu. The effect on PersonX will be"}}
{"generation": ["the same as if the user had chosen to use"], "references": ["shouts", "money", "gets the job done", "punches", "love", "rests"], "input": {"head": "PersonX gets ___ right away", "relation": "xEffect", "prompt": "PersonX gets ___ right away. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been in the"], "references": ["none"], "input": {"head": "PersonX goes in PersonX ear and out the other", "relation": "xEffect", "prompt": "PersonX goes in PersonX ear and out the other. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been honored by"], "references": ["is proud", "humbled", "appreciation", "gets hugged", "none"], "input": {"head": "PersonX honors PersonY", "relation": "xEffect", "prompt": "PersonX honors PersonY. The effect on PersonX will be"}}
{"generation": ["that PersonX will be unable to see PersonY"], "references": ["none", "put the lock", "started driving"], "input": {"head": "PersonX shuts the door behind PersonY", "relation": "xEffect", "prompt": "PersonX shuts the door behind PersonY. The effect on PersonX will be"}}
{"generation": ["the same as if the player had used the \""], "references": ["gets berated for inaction", "Person X puts the fire out with water", "is chastised", "Person X continues to monitor the fire"], "input": {"head": "PersonX leaves it be", "relation": "xEffect", "prompt": "PersonX leaves it be. The effect on PersonX will be"}}
{"generation": ["the same as if the player had been hit by"], "references": ["revels", "enjoys awards", "poses for photographs", "continues to compete and win", "none"], "input": {"head": "PersonX never lost", "relation": "xEffect", "prompt": "PersonX never lost. The effect on PersonX will be"}}
{"generation": ["the same as if he had eaten a hamburger"], "references": ["stains clothes", "gets bloated", "belches", "none", "gets meat stuck in teeth"], "input": {"head": "PersonX eats a hamburger", "relation": "xEffect", "prompt": "PersonX eats a hamburger. The effect on PersonX will be"}}
{"generation": ["applied to the target of the spell"], "references": ["fights", "get shoved", "is praised", "is yelled at", "gets beat up"], "input": {"head": "PersonX prevents ___ from entering", "relation": "xEffect", "prompt": "PersonX prevents ___ from entering. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["exits the stage", "PersonX gets a standing ovation", "gets applauded", "PersonX receives applause", "gets applause", "gets booed"], "input": {"head": "PersonX takes a bow", "relation": "xEffect", "prompt": "PersonX takes a bow. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["none", "gets a new friend", "receives praise"], "input": {"head": "PersonX changes PersonY's lives", "relation": "xEffect", "prompt": "PersonX changes PersonY's lives. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been hit by"], "references": ["none"], "input": {"head": "PersonX gets right", "relation": "xEffect", "prompt": "PersonX gets right. The effect on PersonX will be"}}
{"generation": ["the same as if the parent had died"], "references": ["Goes fishing", "Goes golfing", "none"], "input": {"head": "PersonX belongs to PersonX's father", "relation": "xEffect", "prompt": "PersonX belongs to PersonX's father. The effect on PersonX will be"}}
{"generation": ["the same as PersonY"], "references": ["leaps", "none", "lands on feet"], "input": {"head": "PersonX arches PersonY back", "relation": "xEffect", "prompt": "PersonX arches PersonY back. The effect on PersonX will be"}}
{"generation": ["to make them more likely to be a victim of"], "references": ["walks confidently", "waits expectantly", "It receives submissivity from a bunch of people, it means person X will not do things because other will do it for him/her.", "Things that Person X wanted to do and was not allowed to do, will be available to be done once the submission is reached."], "input": {"head": "PersonX starves the ___ into submission", "relation": "xEffect", "prompt": "PersonX starves the ___ into submission. The effect on PersonX will be"}}
{"generation": ["to make it more difficult for the player to get"], "references": ["smiles", "none", "achieves goal"], "input": {"head": "PersonX rises to the challenge", "relation": "xEffect", "prompt": "PersonX rises to the challenge. The effect on PersonX will be"}}
{"generation": ["the same as if the function had been called with"], "references": ["receives a response", "prays", "reads the bible", "is praised by others", "talks"], "input": {"head": "PersonX calls god 's ___", "relation": "xEffect", "prompt": "PersonX calls god 's ___. The effect on PersonX will be"}}
{"generation": ["the same as if the top were put on the"], "references": ["looks at what they did", "finishes the project", "rests", "none", "drinks"], "input": {"head": "PersonX puts the top", "relation": "xEffect", "prompt": "PersonX puts the top. The effect on PersonX will be"}}
{"generation": ["that they will feel hopeless and hopelessness will be"], "references": ["Starts to loose sight of lifestyle", "stares blankly", "starts yelling for help", "thinks about suicide", "gets depressed and starts crying", "Feels down all the time"], "input": {"head": "PersonX feels hopeless", "relation": "xEffect", "prompt": "PersonX feels hopeless. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["sad", "gains knowledge", "decides to swim", "gets a tan"], "input": {"head": "PersonX catches some rays", "relation": "xEffect", "prompt": "PersonX catches some rays. The effect on PersonX will be"}}
{"generation": ["the same as if the player had used the \""], "references": ["gasps", "is shocked", "excited", "jump in shock", "becomes happy", "smiles", "gets a gift"], "input": {"head": "PersonX gets a surprise", "relation": "xEffect", "prompt": "PersonX gets a surprise. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had given PersonX"], "references": ["wonders what personY thinks", "gets commision", "hopes their understood", "gets paid"], "input": {"head": "PersonX gives PersonY a account", "relation": "xEffect", "prompt": "PersonX gives PersonY a account. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["gets yelled at", "is anxious about overlooking people", "is flooded with questions", "struggles with it", "takes extra precaution", "breaks his silence"], "input": {"head": "PersonX tries to keep it a secret", "relation": "xEffect", "prompt": "PersonX tries to keep it a secret. The effect on PersonX will be"}}
{"generation": ["as follows:\n\nPersonX will gain ___"], "references": ["they start to strain", "works with other person more", "gains something", "they feel butterflies in their stomach", "PersonX expresses their appreciation", "PersonX thanks them"], "input": {"head": "PersonX takes ___ up on the offer", "relation": "xEffect", "prompt": "PersonX takes ___ up on the offer. The effect on PersonX will be"}}
{"generation": ["applied to the new pilot"], "references": ["flys around passengers", "Learns to fly", "piolts a plane", "gets hired by an airline", "goes into a plane", "Drives a plane", "sees the world"], "input": {"head": "PersonX becomes a pilot", "relation": "xEffect", "prompt": "PersonX becomes a pilot. The effect on PersonX will be"}}
{"generation": ["the same as PersonY"], "references": ["none", "takes responsibility", "does the right thing"], "input": {"head": "PersonX starts with a clean sheet", "relation": "xEffect", "prompt": "PersonX starts with a clean sheet. The effect on PersonX will be"}}
{"generation": ["to make him feel guilty about having cancer"], "references": ["holds hands", "none", "cries"], "input": {"head": "PersonX tells ___ that PersonY had cancer", "relation": "xEffect", "prompt": "PersonX tells ___ that PersonY had cancer. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["receives complaints for what he did", "none", "receives praise for what he did"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "xEffect", "prompt": "PersonX gives the ___ PersonY's name. The effect on PersonX will be"}}
{"generation": ["the same as if he had used a normal attack"], "references": ["none"], "input": {"head": "PersonX blows this popsicle stand", "relation": "xEffect", "prompt": "PersonX blows this popsicle stand. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["none", "He got relieved", "He polluted the air."], "input": {"head": "PersonX breaks wind", "relation": "xEffect", "prompt": "PersonX breaks wind. The effect on PersonX will be"}}
{"generation": ["the same as if you had cast the spell on"], "references": ["becomes more cautious", "lose confident", "changes course", "has not learned", "tries to be less clumsy", "get bad performance review"], "input": {"head": "PersonX makes that mistake again", "relation": "xEffect", "prompt": "PersonX makes that mistake again. The effect on PersonX will be"}}
{"generation": ["the same as if he had saved PersonX's"], "references": ["none", "gets away with guilty", "avoids punishment"], "input": {"head": "PersonX saves PersonX's ___ from PersonX's sins", "relation": "xEffect", "prompt": "PersonX saves PersonX's ___ from PersonX's sins. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["is hugged", "thinks about ways to explain ideas to PersonY", "is thanked", "forms opinion of PersonY competence"], "input": {"head": "PersonX increases PersonY's knowledge", "relation": "xEffect", "prompt": "PersonX increases PersonY's knowledge. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been sitting next"], "references": ["person x laughs", "person x talks to person y", "speaks", "becomes bored", "turns head", "listens"], "input": {"head": "PersonX sits next to PersonY in class", "relation": "xEffect", "prompt": "PersonX sits next to PersonY in class. The effect on PersonX will be"}}
{"generation": ["the same as if the person had thrown money away"], "references": ["the person now is short on cash", "loses his life's savings", "The person now has little money left to pay the bills", "the person may have to borrow money", "is called by the bank"], "input": {"head": "PersonX throws money away", "relation": "xEffect", "prompt": "PersonX throws money away. The effect on PersonX will be"}}
{"generation": ["the same as if he had put ___ all together"], "references": ["has completed a projected", "light bulb goes off over personX's head", "Gets offered to put things together for money", "is defeated", "Receives praise", "furrows brows"], "input": {"head": "PersonX puts ___ all together", "relation": "xEffect", "prompt": "PersonX puts ___ all together. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had won the game"], "references": ["gets rich", "cheers"], "input": {"head": "PersonX wins every ___", "relation": "xEffect", "prompt": "PersonX wins every ___. The effect on PersonX will be"}}
{"generation": ["to make him feel like he's a complete idiot"], "references": ["gets yelled at", "is burried", "dies", "becomes friendless"], "input": {"head": "PersonX spills PersonX's guts", "relation": "xEffect", "prompt": "PersonX spills PersonX's guts. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had broken his toe"], "references": ["screams", "cries", "can't walk", "yells for help", "toe swells", "screams in pain", "bruising develops"], "input": {"head": "PersonX breaks PersonX's toe", "relation": "xEffect", "prompt": "PersonX breaks PersonX's toe. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been paid by"], "references": ["becomes richer", "Has to worry less about finances", "gets paid", "Becomes enriched", "Is prepared for emergency expenses", "Gains financial security"], "input": {"head": "PersonX earns the money", "relation": "xEffect", "prompt": "PersonX earns the money. The effect on PersonX will be"}}
{"generation": ["the same as if he had arrived at work at"], "references": ["greetted", "sees their family", "licked by dog", "has some downtime"], "input": {"head": "PersonX arrives ___ from work", "relation": "xEffect", "prompt": "PersonX arrives ___ from work. The effect on PersonX will be"}}
{"generation": ["the same as if he had bought a new car"], "references": ["Drives it", "Drive the car", "to driving a new car", "to buy a new car", "Pay for the car", "Gets insurance"], "input": {"head": "PersonX has a new car", "relation": "xEffect", "prompt": "PersonX has a new car. The effect on PersonX will be"}}
{"generation": ["the same as if you had just given ___ to"], "references": ["thanked", "Stops from the rich", "praised", "is admired", "is called upon", "Gives to the poor"], "input": {"head": "PersonX brings ___ to the people", "relation": "xEffect", "prompt": "PersonX brings ___ to the people. The effect on PersonX will be"}}
{"generation": ["the same as if the ___"], "references": ["has a mess to clean up", "looks serious", "looks at their work", "eats the salad"], "input": {"head": "PersonX puts together a ___", "relation": "xEffect", "prompt": "PersonX puts together a ___. The effect on PersonX will be"}}
{"generation": ["that he will be able to see the person he"], "references": ["receives encouragement", "owes a co-pay for the medical bill", "has a sore arm", "feels some pain", "none", "gets excited"], "input": {"head": "PersonX gets the shot", "relation": "xEffect", "prompt": "PersonX gets the shot. The effect on PersonX will be"}}
{"generation": ["the same as if the player had spent $100"], "references": ["PersonX is unable to purchase the product", "Person X holds off buying things.", "pays off debts", "gets a loan", "Person X tries to get a job.", "PersonX is chased out of the store"], "input": {"head": "PersonX is short on money", "relation": "xEffect", "prompt": "PersonX is short on money. The effect on PersonX will be"}}
{"generation": ["the same as if you had just said \"I"], "references": ["stutters", "looks down", "twitches nervously", "turns away", "avoids eye contact"], "input": {"head": "PersonX beats around the bush", "relation": "xEffect", "prompt": "PersonX beats around the bush. The effect on PersonX will be"}}
{"generation": ["to make him more likely to be a good person"], "references": ["becomes well versed", "becomes a master in the art.", "PersonX gets exercise", "improves skills", "gets tired", "PersonX makes the team"], "input": {"head": "PersonX practices for weeks", "relation": "xEffect", "prompt": "PersonX practices for weeks. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had forgotten to put"], "references": ["PersonX sweats from nervousness", "PersonX is yelled at", "PersonX gasps in fear while thinking of the lost wallet.", "PersonX shakes and frantically searches the restaurant for the wallet they forgot."], "input": {"head": "PersonX forgets PersonY's wallet", "relation": "xEffect", "prompt": "PersonX forgets PersonY's wallet. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had been watching for"], "references": ["PersonX is patient", "makes his move", "stares", "none", "PersonX stares at PersonY"], "input": {"head": "PersonX watches for PersonY opportunity", "relation": "xEffect", "prompt": "PersonX watches for PersonY opportunity. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been killed"], "references": ["PRACTICE", "SPEND LOT OF TIME", "NONE", "none", "draws on aboard", "writes on a notebook"], "input": {"head": "PersonX thinks would become", "relation": "xEffect", "prompt": "PersonX thinks would become. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the spell on"], "references": ["none"], "input": {"head": "PersonX always makes", "relation": "xEffect", "prompt": "PersonX always makes. The effect on PersonX will be"}}
{"generation": ["the same as if you had a single person in"], "references": ["looks for a way to be more efficient", "works faster", "is always stressed", "none", "has less time to do other things"], "input": {"head": "PersonX is always busy", "relation": "xEffect", "prompt": "PersonX is always busy. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been the target"], "references": ["money", "hugs", "needs money", "none", "is in debt"], "input": {"head": "PersonX owes PersonY", "relation": "xEffect", "prompt": "PersonX owes PersonY. The effect on PersonX will be"}}
{"generation": ["the same as if he had been at the house"], "references": ["sits down", "talks to Person Y's grandmother"], "input": {"head": "PersonX is at PersonY's grandmother 's house", "relation": "xEffect", "prompt": "PersonX is at PersonY's grandmother 's house. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's work"], "references": ["none"], "input": {"head": "PersonX impresses by PersonY's work", "relation": "xEffect", "prompt": "PersonX impresses by PersonY's work. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's middle finger"], "references": ["gets scoffed at", "gets pulled away from", "feel the best friends", "so like that honest", "none"], "input": {"head": "PersonX uses PersonY's middle finger", "relation": "xEffect", "prompt": "PersonX uses PersonY's middle finger. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had called PersonX"], "references": ["hangs up", "Makes a judgement about the quality of the work.", "Evaluates person Y's work", "is answered by a secretary", "listens", "talks to personY"], "input": {"head": "PersonX calls PersonY's work", "relation": "xEffect", "prompt": "PersonX calls PersonY's work. The effect on PersonX will be"}}
{"generation": ["the same as if he had kissed PersonY"], "references": ["they express love", "looks her in the eyes", "they express feel", "none", "smells her hair"], "input": {"head": "PersonX kisses PersonY cheek", "relation": "xEffect", "prompt": "PersonX kisses PersonY cheek. The effect on PersonX will be"}}
{"generation": ["to make him or her a friend of PersonY"], "references": ["knocks on the door", "waits outside", "none"], "input": {"head": "PersonX goes to PersonY's place", "relation": "xEffect", "prompt": "PersonX goes to PersonY's place. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["none", "is offended", "it changes his mind"], "input": {"head": "PersonX finds PersonY explanation", "relation": "xEffect", "prompt": "PersonX finds PersonY explanation. The effect on PersonX will be"}}
{"generation": ["the same as if he had been given the item"], "references": ["kneels down", "achieved his goal", "cries", "got a positive result", "shouts", "person x doesnt get what they want", "stresses out"], "input": {"head": "PersonX begs PersonX's parents for one", "relation": "xEffect", "prompt": "PersonX begs PersonX's parents for one. The effect on PersonX will be"}}
{"generation": ["the same as if he had a pair of shoes"], "references": ["show to others", "PersonX learns about shoes in detail", "learn about shoes", "made a shoe company", "PersonX is given new shoes", "buy shoes"], "input": {"head": "PersonX loves shoes", "relation": "xEffect", "prompt": "PersonX loves shoes. The effect on PersonX will be"}}
{"generation": ["the same as if the wall had thrown a rock"], "references": ["releases object from hands", "to throws noisy at the wall", "makes a mess", "to wall plays comes there"], "input": {"head": "PersonX throws ___ at the wall", "relation": "xEffect", "prompt": "PersonX throws ___ at the wall. The effect on PersonX will be"}}
{"generation": ["the same as if he had been hit by a"], "references": ["winces", "ears bleed for a bit", "bleeds", "has pierced ears"], "input": {"head": "PersonX pierces PersonX's ears", "relation": "xEffect", "prompt": "PersonX pierces PersonX's ears. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been a member"], "references": ["Is energized by new information", "PersonX listens attentively", "wants to take another class", "learns a lot", "PersonX smiles", "Learns new things"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xEffect", "prompt": "PersonX enjoys PersonY's class. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's help"], "references": ["is thanked", "gets thanks", "see's personY do well", "gets a hug"], "input": {"head": "PersonX gives PersonY help", "relation": "xEffect", "prompt": "PersonX gives PersonY help. The effect on PersonX will be"}}
{"generation": ["the same as if the player had run straight"], "references": ["drink water", "stops to take a rest", "have rest", "stopping running", "runs straight again"], "input": {"head": "PersonX runs straight", "relation": "xEffect", "prompt": "PersonX runs straight. The effect on PersonX will be"}}
{"generation": ["to make him more likely to think about the world"], "references": ["falls asleep", "PersonX receives a headache", "PersonX ponders in sadness", "makes problems worse", "PersonX learns of the subject"], "input": {"head": "PersonX thinks a lot", "relation": "xEffect", "prompt": "PersonX thinks a lot. The effect on PersonX will be"}}
{"generation": ["to move to the left, and the effect on"], "references": ["puts their hands in their pockets", "reads a street sign", "takes a right turn", "Person x goes to a new destination", "walks down a road for several blocks", "Person x becomes lost"], "input": {"head": "PersonX alters PersonX's course", "relation": "xEffect", "prompt": "PersonX alters PersonX's course. The effect on PersonX will be"}}
{"generation": ["the same as if the person had been the one"], "references": ["PersonX buys a train ticket", "PersonX buys a map", "lands", "flies", "none"], "input": {"head": "PersonX plans the trip", "relation": "xEffect", "prompt": "PersonX plans the trip. The effect on PersonX will be"}}
{"generation": ["the same as if he had used the ___"], "references": ["Person x has faith in something and is abke to seek comfort", "none", "Person x goes to church, temple, etc. Or otherwise practices beliefs and worship"], "input": {"head": "PersonX loves the ___ with PersonX's heart", "relation": "xEffect", "prompt": "PersonX loves the ___ with PersonX's heart. The effect on PersonX will be"}}
{"generation": ["that the snake will be invisible"], "references": ["escapes from it", "to snake in the ground", "screams", "recoils", "yells", "to sees a snake"], "input": {"head": "PersonX sees a snake", "relation": "xEffect", "prompt": "PersonX sees a snake. The effect on PersonX will be"}}
{"generation": ["the same as if he had followed PersonY's"], "references": ["gets lost", "becomes a success", "gets rewarded", "gets better", "does it correclty", "is guided to complete a task"], "input": {"head": "PersonX follows PersonY's instructions", "relation": "xEffect", "prompt": "PersonX follows PersonY's instructions. The effect on PersonX will be"}}
{"generation": ["to make it so that it is no longer possible"], "references": ["becomes free", "laughs", "cries", "yes that is true", "gets relieved of responsibility", "m,ett the other person"], "input": {"head": "PersonX puts out to pasture", "relation": "xEffect", "prompt": "PersonX puts out to pasture. The effect on PersonX will be"}}
{"generation": ["the same as the effect of the card that was"], "references": ["asserts themselves", "GET BENEFITS", "grows stronger", "FEELS GOOS"], "input": {"head": "PersonX comes into PersonX's own", "relation": "xEffect", "prompt": "PersonX comes into PersonX's own. The effect on PersonX will be"}}
{"generation": ["the same as if the ___"], "references": ["hired", "earns respect", "get's considered for promotion", "gets promoted"], "input": {"head": "PersonX meets the company 's ___", "relation": "xEffect", "prompt": "PersonX meets the company 's ___. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's"], "references": ["finishes what was started", "gets tired", "carries things", "is thanked by personY"], "input": {"head": "PersonX continues PersonY's journey", "relation": "xEffect", "prompt": "PersonX continues PersonY's journey. The effect on PersonX will be"}}
{"generation": ["that he will be unable to use his abilities"], "references": ["becomes disappointed", "thinks of better plans for the future", "spends more time studying the pros and cons of the new plan", "cries"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "xEffect", "prompt": "PersonX has to cancel PersonX's plans. The effect on PersonX will be"}}
{"generation": ["the same as if he had visited the city"], "references": ["coughs because of pollution", "sees many people", "visits a skyscraper"], "input": {"head": "PersonX visits the city", "relation": "xEffect", "prompt": "PersonX visits the city. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been coached by"], "references": ["PersonX makes plans for future coaching", "PersonX collects their payment", "helps person Y", "gets coaching experience", "preparing to get", "getting ready"], "input": {"head": "PersonX coachs PersonY", "relation": "xEffect", "prompt": "PersonX coachs PersonY. The effect on PersonX will be"}}
{"generation": ["to make the town red"], "references": ["maintains the red painted walls", "sees the red town", "vomits", "has a headache"], "input": {"head": "PersonX paints the town red", "relation": "xEffect", "prompt": "PersonX paints the town red. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been given the"], "references": ["is paid attention to", "none", "is trusted"], "input": {"head": "PersonX gives PersonY instruction", "relation": "xEffect", "prompt": "PersonX gives PersonY instruction. The effect on PersonX will be"}}
{"generation": ["that he will be able to see the world through"], "references": ["takes a break", "becomes unemployed", "looks for job", "sends out applications", "stresses about loans", "stresses about job prospects", "gets a new job", "stays at home"], "input": {"head": "PersonX recently graduated", "relation": "xEffect", "prompt": "PersonX recently graduated. The effect on PersonX will be"}}
{"generation": ["the same as if he had bought a new car"], "references": ["pays a bit less", "has transportation", "Buys car insurance", "Drives car around"], "input": {"head": "PersonX buys a used car", "relation": "xEffect", "prompt": "PersonX buys a used car. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["PersonX wakes up", "PersonX is energrized for the day", "none"], "input": {"head": "PersonX is getting ready", "relation": "xEffect", "prompt": "PersonX is getting ready. The effect on PersonX will be"}}
{"generation": ["the same as if he had been killed"], "references": ["Person x is thinking about how to get back", "Person x keeps trying to come back"], "input": {"head": "PersonX wants to come back", "relation": "xEffect", "prompt": "PersonX wants to come back. The effect on PersonX will be"}}
{"generation": ["he same as if PersonY had met PersonZ"], "references": ["thanked", "Happy", "promoted", "Responsibly", "Excited", "gets a raise", "gets honored"], "input": {"head": "PersonX meets PersonY's customers ' ___", "relation": "xEffect", "prompt": "PersonX meets PersonY's customers ' ___. The effect on PersonX will be"}}
{"generation": ["the same as if he had visited PersonX's"], "references": ["gest", "person vist x's"], "input": {"head": "PersonX visits PersonX's cousin", "relation": "xEffect", "prompt": "PersonX visits PersonX's cousin. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been cured"], "references": ["accomplished", "receives gratitude for healing", "worried", "is appreciated", "gets tired", "gets a gift"], "input": {"head": "PersonX nurses PersonY back to health", "relation": "xEffect", "prompt": "PersonX nurses PersonY back to health. The effect on PersonX will be"}}
{"generation": ["to make the tree shake"], "references": ["gets gift", "leaves fall on him", "gets hit on head", "gets hurt"], "input": {"head": "PersonX shakes the pagoda tree", "relation": "xEffect", "prompt": "PersonX shakes the pagoda tree. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["finishes the work", "sad", "learns a new skill", "gets high salary", "they are successful", "they learn even more"], "input": {"head": "PersonX uses PersonX's skills", "relation": "xEffect", "prompt": "PersonX uses PersonX's skills. The effect on PersonX will be"}}
{"generation": ["that he will be able to see the cupboard"], "references": ["exclaims in surprise", "breaks a dish", "pancake syrup spills on him", "finds what looking for", "a can of peas falls on his head", "sees a mouse"], "input": {"head": "PersonX looks in PersonX's cupboard", "relation": "xEffect", "prompt": "PersonX looks in PersonX's cupboard. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had been called with"], "references": ["PersonX sweats from exercise", "PersonX is tired from exercising", "get tired", "is concentrated"], "input": {"head": "PersonX performs every ___", "relation": "xEffect", "prompt": "PersonX performs every ___. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["clutches hand in pain", "Person x shakes hand in pain.", "Person x hands swell.", "is arrested", "shakes its hands", "releases anger", "hurts its fist"], "input": {"head": "PersonX hits PersonY's friend", "relation": "xEffect", "prompt": "PersonX hits PersonY's friend. The effect on PersonX will be"}}
{"generation": ["the same as if the player had poured the heart"], "references": ["none", "PersonX becomes nervous at the idea of rejection", "PersonX blushes at the thought of wearing a heart on their sleeve."], "input": {"head": "PersonX pours PersonX's heart", "relation": "xEffect", "prompt": "PersonX pours PersonX's heart. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["does better for themselves", "they get their heart broken", "gains positive long term results", "they are taken for granted", "none"], "input": {"head": "PersonX casts ___ before swine", "relation": "xEffect", "prompt": "PersonX casts ___ before swine. The effect on PersonX will be"}}
{"generation": ["the same as if the phone had been put into"], "references": ["checks voice mail", "none", "returns calls"], "input": {"head": "PersonX puts PersonX's phone", "relation": "xEffect", "prompt": "PersonX puts PersonX's phone. The effect on PersonX will be"}}
{"generation": ["to make it more like PersonY"], "references": ["They celebrate", "gets older", "They do what they are now legal to do.", "They have a party", "can buy alcohol"], "input": {"head": "PersonX comes of age", "relation": "xEffect", "prompt": "PersonX comes of age. The effect on PersonX will be"}}
{"generation": ["the same as PersonY account"], "references": ["Guilt", "yelled at", "gets call", "Fear"], "input": {"head": "PersonX gives you PersonY account", "relation": "xEffect", "prompt": "PersonX gives you PersonY account. The effect on PersonX will be"}}
{"generation": ["to make it look like a beautiful, well-"], "references": ["PersonX purchases the beautiful item.", "smiles", "falls in love with something", "admires something", "PersonX snaps a photo of the item.", "enjoys looking at it"], "input": {"head": "PersonX thinks it was beautiful", "relation": "xEffect", "prompt": "PersonX thinks it was beautiful. The effect on PersonX will be"}}
{"generation": ["applied to PersonY"], "references": ["becomes nervous", "looks at PersonY", "looks foolish", "none", "does a dance"], "input": {"head": "PersonX copies PersonY", "relation": "xEffect", "prompt": "PersonX copies PersonY. The effect on PersonX will be"}}
{"generation": ["to make him fall down"], "references": ["gets yelled at", "none", "Get's slapped"], "input": {"head": "PersonX lands on PersonY's leg", "relation": "xEffect", "prompt": "PersonX lands on PersonY's leg. The effect on PersonX will be"}}
{"generation": ["that PersonX will be able to see the cousin"], "references": ["waves hands", "gets paid", "yells", "sings songs", "IT CUTENESS", "gets shocked"], "input": {"head": "PersonX babysits PersonX's cousin", "relation": "xEffect", "prompt": "PersonX babysits PersonX's cousin. The effect on PersonX will be"}}
{"generation": ["that PersonX will no longer be able to see"], "references": ["ignores Y's call", "Unfriend them on Facebook", "Call blocks", "blocks Person Y on facebook"], "input": {"head": "PersonX stops being friends with PersonY", "relation": "xEffect", "prompt": "PersonX stops being friends with PersonY. The effect on PersonX will be"}}
{"generation": ["the same as if he had been burned by the"], "references": ["starts to peel", "experiences pain", "feels pain", "gets treatment", "has rashes", "TO BE A NEED AS GET"], "input": {"head": "PersonX gets sunburned", "relation": "xEffect", "prompt": "PersonX gets sunburned. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's"], "references": ["to comes to eyes", "talked long time", "unlike", "sees clearly", "get to other problem", "to open eyes"], "input": {"head": "PersonX comes into PersonY's eyes", "relation": "xEffect", "prompt": "PersonX comes into PersonY's eyes. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["invite friends", "salivates", "getting job", "improves understanding of cooking", "eating a lot", "blinks at loose flour", "gets kitchen dirty", "gets bad reults", "earning money", "sneezes at spices"], "input": {"head": "PersonX follows the recipe exactly", "relation": "xEffect", "prompt": "PersonX follows the recipe exactly. The effect on PersonX will be"}}
{"generation": ["to make him or her more likely to attack the"], "references": ["Thinks about note", "Puts note away", "PersonX gets directions", "PersonX learns new information"], "input": {"head": "PersonX reads the note", "relation": "xEffect", "prompt": "PersonX reads the note. The effect on PersonX will be"}}
{"generation": ["to make him or her a target for ridicule and"], "references": ["receives praise for his work", "They are black balled", "They are censured", "gets tired", "Is challenged by others for their view", "receives complaint for his work", "Gets yelled at"], "input": {"head": "PersonX brings the ___ into disrepute", "relation": "xEffect", "prompt": "PersonX brings the ___ into disrepute. The effect on PersonX will be"}}
{"generation": ["the same as if the ___"], "references": ["They celebrate finding what they seek", "They eventually find it", "talks to the masses", "tries to influence the masses", "none"], "input": {"head": "PersonX seeks first the ___", "relation": "xEffect", "prompt": "PersonX seeks first the ___. The effect on PersonX will be"}}
{"generation": ["the same as if he were to swim in a"], "references": ["he is doing excercise", "he want more fun", "he want to be fit", "get wet", "get tired", "he practicing swimming"], "input": {"head": "PersonX enjoys swimming", "relation": "xEffect", "prompt": "PersonX enjoys swimming. The effect on PersonX will be"}}
{"generation": ["the same as if he were to be hit by"], "references": ["shakes", "hides their feelings", "looks flustered", "sweats", "puts on a calm front", "delays starting the task"], "input": {"head": "PersonX feels very nervous", "relation": "xEffect", "prompt": "PersonX feels very nervous. The effect on PersonX will be"}}
{"generation": ["to know PersonY's name"], "references": ["name is stored in memory", "think about someone with the same name", "none"], "input": {"head": "PersonX knows PersonY's name", "relation": "xEffect", "prompt": "PersonX knows PersonY's name. The effect on PersonX will be"}}
{"generation": ["to make him more likely to skateboard, and"], "references": ["wins a tournament", "goes to skatepark", "breaks their wrist", "skateboards with friends", "buys a board", "practices", "learns new tricks"], "input": {"head": "PersonX loves to skateboard", "relation": "xEffect", "prompt": "PersonX loves to skateboard. The effect on PersonX will be"}}
{"generation": ["a bit more subtle, but it will be there"], "references": ["none"], "input": {"head": "PersonX feels better soon", "relation": "xEffect", "prompt": "PersonX feels better soon. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had gained the confidence"], "references": ["gets more things done.", "gets good name", "gets PersonY's trust and hope", "feels much more bold.", "gains favors from persony", "gets what they want frmo persony"], "input": {"head": "PersonX gains PersonY's confidence", "relation": "xEffect", "prompt": "PersonX gains PersonY's confidence. The effect on PersonX will be"}}
{"generation": ["the same as if ___ had told ___ PersonY"], "references": ["none", "shows the suprise", "explains the surprise"], "input": {"head": "PersonX tells ___ PersonY had a surprise", "relation": "xEffect", "prompt": "PersonX tells ___ PersonY had a surprise. The effect on PersonX will be"}}
{"generation": ["the same as if he had eaten the salad"], "references": ["gets messy", "smiles", "PersonX is energized from the salad", "PersonX's hand gets dirty from salad dressing"], "input": {"head": "PersonX makes a salad", "relation": "xEffect", "prompt": "PersonX makes a salad. The effect on PersonX will be"}}
{"generation": ["to make him more likely to do the right thing"], "references": ["Works towards his goals", "smiles", "needs a rest", "Learns new things that might help him"], "input": {"head": "PersonX attains PersonX's goals", "relation": "xEffect", "prompt": "PersonX attains PersonX's goals. The effect on PersonX will be"}}
{"generation": ["the same as PersonY"], "references": ["gets waved at", "gets greeted", "Are ignored", "Are greeted", "hide his hand", "smile at PersonY"], "input": {"head": "PersonX waves PersonY", "relation": "xEffect", "prompt": "PersonX waves PersonY. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["personX has gained knowledge.", "personX can move on to their next step.", "Makes error", "Gets exhausted", "gets good grades", "rewarded"], "input": {"head": "PersonX measures ___ directly", "relation": "xEffect", "prompt": "PersonX measures ___ directly. The effect on PersonX will be"}}
{"generation": ["that it will be able to see the world around"], "references": ["takes acting classes", "tries to learn acting", "gets interested in cinema", "none", "watches movies"], "input": {"head": "PersonX wants to be an actor", "relation": "xEffect", "prompt": "PersonX wants to be an actor. The effect on PersonX will be"}}
{"generation": ["to make it harder for them to get the votes"], "references": ["gets reprimanded", "none", "disappoints a person"], "input": {"head": "PersonX rains on PersonX's parade", "relation": "xEffect", "prompt": "PersonX rains on PersonX's parade. The effect on PersonX will be"}}
{"generation": ["the same as if the player had been shot"], "references": ["Gets rushed to hospital", "they die", "bleeds a lot", "Needs a blood transfusion"], "input": {"head": "PersonX gets shot", "relation": "xEffect", "prompt": "PersonX gets shot. The effect on PersonX will be"}}
{"generation": ["to make him eat the eggs"], "references": ["Cleans the dishes", "is full", "has a good meal", "dirties a pan"], "input": {"head": "PersonX scrambles eggs for breakfast", "relation": "xEffect", "prompt": "PersonX scrambles eggs for breakfast. The effect on PersonX will be"}}
{"generation": ["the same as if he had eaten the food"], "references": ["Gets fat", "gets nourished", "aC", "Wastes resources", "is organized", "B"], "input": {"head": "PersonX makes ___ every morning", "relation": "xEffect", "prompt": "PersonX makes ___ every morning. The effect on PersonX will be"}}
{"generation": ["the same as if he had been hit by a"], "references": ["laughs", "they get's smiled back at", "they laugh", "People smile back"], "input": {"head": "PersonX smiles broadly", "relation": "xEffect", "prompt": "PersonX smiles broadly. The effect on PersonX will be"}}
{"generation": ["the same as if the player had used the \""], "references": ["wins it all", "loses it all"], "input": {"head": "PersonX pushes PersonX's luck", "relation": "xEffect", "prompt": "PersonX pushes PersonX's luck. The effect on PersonX will be"}}
{"generation": ["removed if the ___ is restored to the ___"], "references": ["Takes steps to preserve that condition", "Rests after hard work", "to condition to pail", "to restors t cndition"], "input": {"head": "PersonX restores the ___ to PersonX's condition", "relation": "xEffect", "prompt": "PersonX restores the ___ to PersonX's condition. The effect on PersonX will be"}}
{"generation": ["the same as if he had spent the ___ at"], "references": ["Drives car", "feels energised", "gains a friend", "enjoys an outing", "Goes home", "feels close to the host"], "input": {"head": "PersonX spends the ___ at PersonY's house", "relation": "xEffect", "prompt": "PersonX spends the ___ at PersonY's house. The effect on PersonX will be"}}
{"generation": ["to make him or her more likely to follow the"], "references": ["becomes aware", "gains information"], "input": {"head": "PersonX sees where PersonY was going", "relation": "xEffect", "prompt": "PersonX sees where PersonY was going. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the \"Find"], "references": ["he buys it", "he shows it to his friends"], "input": {"head": "PersonX finds a good one", "relation": "xEffect", "prompt": "PersonX finds a good one. The effect on PersonX will be"}}
{"generation": ["to make him or her more likely to be a"], "references": ["go to the hospital", "yells", "hurts ribs", "none", "be in pain"], "input": {"head": "PersonX falls on PersonY's neck", "relation": "xEffect", "prompt": "PersonX falls on PersonY's neck. The effect on PersonX will be"}}
{"generation": ["that PersonX will be the one to move"], "references": ["recognizes Person Y", "catches Person Y's stare", "none"], "input": {"head": "PersonX looks PersonY's way", "relation": "xEffect", "prompt": "PersonX looks PersonY's way. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had spilled the coffee"], "references": ["stains pants", "get burned", "MAKES A MESS", "HAS TO PICK THE COFFEE UP", "CANNOT DRINK THE COFFEE NOW", "NEEDS A NEW COFFEE"], "input": {"head": "PersonX spills PersonX's coffee", "relation": "xEffect", "prompt": "PersonX spills PersonX's coffee. The effect on PersonX will be"}}
{"generation": ["that PersonX will lose the amount of money that"], "references": ["they make Person X mad", "Will be blamed", "they owe PersonX money", "Will have to cover losses"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "xEffect", "prompt": "PersonX loses PersonY's wallet. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the effect of"], "references": ["no date to the dance", "no college scholarship"], "input": {"head": "PersonX does n't make the cut", "relation": "xEffect", "prompt": "PersonX does n't make the cut. The effect on PersonX will be"}}
{"generation": ["to make him feel like he's being attacked by"], "references": ["becomes weak", "examines the results", "is put in jail", "sighs"], "input": {"head": "PersonX shakes the ___ to PersonX's foundations", "relation": "xEffect", "prompt": "PersonX shakes the ___ to PersonX's foundations. The effect on PersonX will be"}}
{"generation": ["the same as if the ___"], "references": ["burns down house", "burns self", "gets heat", "gets burned", "gets escorted out", "loses one more resource of theirs"], "input": {"head": "PersonX lit another ___", "relation": "xEffect", "prompt": "PersonX lit another ___. The effect on PersonX will be"}}
{"generation": ["to make him or her invisible"], "references": ["is caught and put in jail", "gets thing snatched away from her", "hears a yell", "gets hit", "is chased by the police", "trips over a foot"], "input": {"head": "PersonX snatches ___ away", "relation": "xEffect", "prompt": "PersonX snatches ___ away. The effect on PersonX will be"}}
{"generation": ["the same as if you had a child"], "references": ["wears a dress", "grows their hair", "none", "goes for ballet dancing"], "input": {"head": "PersonX is a little girl", "relation": "xEffect", "prompt": "PersonX is a little girl. The effect on PersonX will be"}}
{"generation": ["that they will be able to see the world through"], "references": ["misses house", "smiles", "no one home", "none", "is productive"], "input": {"head": "PersonX surprises PersonX's family", "relation": "xEffect", "prompt": "PersonX surprises PersonX's family. The effect on PersonX will be"}}
{"generation": ["to give PersonY a note"], "references": ["none", "pulls their hand back from handing the note to PersonY", "gets a reaction from PersonY"], "input": {"head": "PersonX gives PersonY a note", "relation": "xEffect", "prompt": "PersonX gives PersonY a note. The effect on PersonX will be"}}
{"generation": ["the same as if he had sold the jewelry to"], "references": ["Learns other ways to impress people", "gets money", "Loses admirers", "smiles", "person x makes money", "person x misses their jewlery"], "input": {"head": "PersonX sells PersonX's jewelry", "relation": "xEffect", "prompt": "PersonX sells PersonX's jewelry. The effect on PersonX will be"}}
{"generation": ["the same as if he had asked for help from"], "references": ["awaits the consent", "applies advice", "looks forward to receiving the help", "listens to advice"], "input": {"head": "PersonX asks PersonX's dad for help", "relation": "xEffect", "prompt": "PersonX asks PersonX's dad for help. The effect on PersonX will be"}}
{"generation": ["that he will be able to see the new person"], "references": ["Person X commits to a big change in their life.", "drives to work", "makes more money", "Person X shows gratitude to the employer."], "input": {"head": "PersonX takes the new job", "relation": "xEffect", "prompt": "PersonX takes the new job. The effect on PersonX will be"}}
{"generation": ["the same as if the user had clicked on the"], "references": ["TO BE IN BEST", "see good things", "NONE", "gets success", "TO FIND SELECTIVE", "none"], "input": {"head": "PersonX looks the other way", "relation": "xEffect", "prompt": "PersonX looks the other way. The effect on PersonX will be"}}
{"generation": ["that they will be able to eat cake"], "references": ["none", "gains weight", "gets hyperglycemic"], "input": {"head": "PersonX loves cake", "relation": "xEffect", "prompt": "PersonX loves cake. The effect on PersonX will be"}}
{"generation": ["the same as if the PersonX had been turned"], "references": ["a bug flies into his nose", "loses friend", "misses chance to try something different", "people avoid", "gets bloody nose", "becomes alone"], "input": {"head": "PersonX turns PersonX's nose up", "relation": "xEffect", "prompt": "PersonX turns PersonX's nose up. The effect on PersonX will be"}}
{"generation": ["the same as PersonY's name"], "references": ["gets thanked", "smiles", "is thanked", "gets a reward for the referall", "none"], "input": {"head": "PersonX gives PersonY the name", "relation": "xEffect", "prompt": "PersonX gives PersonY the name. The effect on PersonX will be"}}
{"generation": ["that he will be able to see the car's"], "references": ["gets parking ticket", "car gets stolen", "forgets to lock the doors", "is lost", "car gets damaged", "gets car stollen"], "input": {"head": "PersonX leaves PersonX's car", "relation": "xEffect", "prompt": "PersonX leaves PersonX's car. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["has good hygeine", "none", "is acceptable to go out in public"], "input": {"head": "PersonX smells nice", "relation": "xEffect", "prompt": "PersonX smells nice. The effect on PersonX will be"}}
{"generation": ["the same as if you had a +1 to"], "references": ["gambles", "none", "buys a lottery ticket"], "input": {"head": "PersonX feels lucky", "relation": "xEffect", "prompt": "PersonX feels lucky. The effect on PersonX will be"}}
{"generation": ["the same as if the player had been hit by"], "references": ["becomes nauseous", "has arrived somewhere", "experiences motion sickness", "gets in an accident"], "input": {"head": "PersonX takes a ride", "relation": "xEffect", "prompt": "PersonX takes a ride. The effect on PersonX will be"}}
{"generation": ["that it will be a lot harder to get a"], "references": ["becomes anxious", "eyes water"], "input": {"head": "PersonX is really sad", "relation": "xEffect", "prompt": "PersonX is really sad. The effect on PersonX will be"}}
{"generation": ["that they will be unable to get a job,"], "references": ["shakes their head in disbelief", "cries", "sighs deeply", "frowns", "want's to do better", "sulks"], "input": {"head": "PersonX is really disappointed", "relation": "xEffect", "prompt": "PersonX is really disappointed. The effect on PersonX will be"}}
{"generation": ["the same as the effect on the target"], "references": ["gets arrested", "is fined", "arrested", "Serves time", "jailed", "Goes to jail"], "input": {"head": "PersonX steals anything", "relation": "xEffect", "prompt": "PersonX steals anything. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had been hit by"], "references": ["spends money", "is hugged", "is kissed", "none", "tired"], "input": {"head": "PersonX flies to PersonY", "relation": "xEffect", "prompt": "PersonX flies to PersonY. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the effect of"], "references": ["gets unemployment insurance", "gets evicted", "Lost all savings", "Gained weight"], "input": {"head": "PersonX would n't work", "relation": "xEffect", "prompt": "PersonX would n't work. The effect on PersonX will be"}}
{"generation": ["the same as the effect on the player"], "references": ["doesn't make lots of friends", "is known to be mean"], "input": {"head": "PersonX bosses ___ around", "relation": "xEffect", "prompt": "PersonX bosses ___ around. The effect on PersonX will be"}}
{"generation": ["removed if PersonY enters"], "references": ["PersonX takes up all the space", "PersonX is in the way", "yelled at", "gets hit"], "input": {"head": "PersonX prevents PersonY from entering", "relation": "xEffect", "prompt": "PersonX prevents PersonY from entering. The effect on PersonX will be"}}
{"generation": ["that PersonX will be in front of PersonY"], "references": ["Person X get the attention of Person Y", "Person X starts to talk to Person Y", "Helps person Y to get into the car.", "none", "stops to hold person Y's hand"], "input": {"head": "PersonX walks in front of PersonY", "relation": "xEffect", "prompt": "PersonX walks in front of PersonY. The effect on PersonX will be"}}
{"generation": ["that it will be a lot more difficult to get"], "references": ["gets ready", "none", "gets prepared"], "input": {"head": "PersonX looks like was going", "relation": "xEffect", "prompt": "PersonX looks like was going. The effect on PersonX will be"}}
{"generation": ["the same as if you had used ___"], "references": ["gets something done.", "gets sore fingers from typing.", "none"], "input": {"head": "PersonX uses ___ regularly", "relation": "xEffect", "prompt": "PersonX uses ___ regularly. The effect on PersonX will be"}}
{"generation": ["the same as if the person had paid the amount"], "references": ["send the money", "thinks about pay", "pays others fairly", "thanks people for the effort", "pays at a consistent rate", "show that he is a fair employers"], "input": {"head": "PersonX pays ___ at the rate", "relation": "xEffect", "prompt": "PersonX pays ___ at the rate. The effect on PersonX will be"}}
{"generation": ["the same as if he had joined the gym"], "references": ["sore muscles", "develop the body", "gets fit", "works out", "get a six pack", "loses weight"], "input": {"head": "PersonX joins a gym", "relation": "xEffect", "prompt": "PersonX joins a gym. The effect on PersonX will be"}}
{"generation": ["the same as the one on the other fans"], "references": ["heart rate increases", "becomes the center of attention", "gets taped", "none", "legs become tired"], "input": {"head": "PersonX fans dance", "relation": "xEffect", "prompt": "PersonX fans dance. The effect on PersonX will be"}}
{"generation": ["the same as if the player had used the item"], "references": ["gets compliments", "screams in joy", "stares in wonder", "feels nervous", "feels scared", "hair becomes bleached", "feels excited"], "input": {"head": "PersonX goes ___ for the first time", "relation": "xEffect", "prompt": "PersonX goes ___ for the first time. The effect on PersonX will be"}}
{"generation": ["the same as the effect on PersonY"], "references": ["returns to work", "gets asked how they are feeling", "relaxes", "gets nursed back to perfect health", "none"], "input": {"head": "PersonX feels better", "relation": "xEffect", "prompt": "PersonX feels better. The effect on PersonX will be"}}
{"generation": ["that he will be left with no spouse"], "references": ["\"files for divorce", "Moves in with \"\"friend\"\"", "file for divorce", "cries", "Finds an apartment", "finds new home\""], "input": {"head": "PersonX leaves PersonX's husband", "relation": "xEffect", "prompt": "PersonX leaves PersonX's husband. The effect on PersonX will be"}}
{"generation": ["the same as if the player had been hit by"], "references": ["affect the body", "none", "some other person"], "input": {"head": "PersonX bites the dust", "relation": "xEffect", "prompt": "PersonX bites the dust. The effect on PersonX will be"}}
{"generation": ["the same as if PersonX had bought a dog"], "references": ["has less money", "to buy dog foods", "is energetic", "none", "spend money for dog medicine"], "input": {"head": "PersonX buys a dog", "relation": "xEffect", "prompt": "PersonX buys a dog. The effect on PersonX will be"}}
{"generation": ["the same as if ___"], "references": ["bleeds", "Has to duck", "arrested", "hurts", "gets treated", "Smells a noxious fumer"], "input": {"head": "PersonX cuts open ___", "relation": "xEffect", "prompt": "PersonX cuts open ___. The effect on PersonX will be"}}
{"generation": ["the same as if he had been in the same"], "references": ["They feel content", "they decide to have the meal again next week", "they eat something else the next night", "reflect on the positive experience", "repeat the activity", "They feel happy"], "input": {"head": "PersonX enjoys ___ that night", "relation": "xEffect", "prompt": "PersonX enjoys ___ that night. The effect on PersonX will be"}}
{"generation": ["the same as if he had been practicing all day"], "references": ["Gets tired of doing it and stops altogether", "learns something new", "becomes an expert", "Improves their skiil", "has tired hands", "sleeps like a baby"], "input": {"head": "PersonX practices all day", "relation": "xEffect", "prompt": "PersonX practices all day. The effect on PersonX will be"}}
{"generation": ["that he will be walking in the direction of the"], "references": ["gets a ticket for jwalking", "keeps walking", "sweats", "PersonX stays in the crosswalk", "gets hit by a car", "PersonX obeys the traffic signals"], "input": {"head": "PersonX is walking across the street", "relation": "xEffect", "prompt": "PersonX is walking across the street. The effect on PersonX will be"}}
{"generation": ["the same as PersonY, but PersonX will"], "references": ["realizes mistake", "wastes time", "none", "frowns"], "input": {"head": "PersonX splits hairs", "relation": "xEffect", "prompt": "PersonX splits hairs. The effect on PersonX will be"}}
{"generation": ["the same as if he had eaten a cheese sandwich"], "references": ["none", "delighted", "satisfied"], "input": {"head": "PersonX likes cheese", "relation": "xEffect", "prompt": "PersonX likes cheese. The effect on PersonX will be"}}
{"generation": ["the same as if the person spent the money on"], "references": ["none", "they run out of money", "they work more"], "input": {"head": "PersonX spends a lot of money", "relation": "xEffect", "prompt": "PersonX spends a lot of money. The effect on PersonX will be"}}
{"generation": ["that the pantry is empty"], "references": ["wants to pick our a snack", "see's what they have", "keeps looking elsewhere", "finds item"], "input": {"head": "PersonX looks in the pantry", "relation": "xEffect", "prompt": "PersonX looks in the pantry. The effect on PersonX will be"}}
{"generation": ["to drive him to the beach"], "references": ["blinks in the sun", "sees the water", "hands get tired", "encounters much traffic"], "input": {"head": "PersonX drives ___ to the beach", "relation": "xEffect", "prompt": "PersonX drives ___ to the beach. The effect on PersonX will be"}}
{"generation": ["to make him feel like he's being burned"], "references": ["trialed for murder", "gets jailed"], "input": {"head": "PersonX puts PersonY in the oven", "relation": "xEffect", "prompt": "PersonX puts PersonY in the oven. The effect on PersonX will be"}}
{"generation": ["that he will be able to see the person's"], "references": ["gets wet", "turns on the shower", "bowels become empty", "slips on the floor", "bladder becomes empty", "finds the door locked", "gets dry"], "input": {"head": "PersonX walks to the bathroom", "relation": "xEffect", "prompt": "PersonX walks to the bathroom. The effect on PersonX will be"}}
{"generation": ["the same as if PersonY had been a different"], "references": ["tells everybody else", "none", "writes a book"], "input": {"head": "PersonX knows much about PersonY", "relation": "xEffect", "prompt": "PersonX knows much about PersonY. The effect on PersonX will be"}}
{"generation": ["to play the song that is currently playing on the"], "references": ["smiles", "dances"], "input": {"head": "PersonX plays PersonX's favorite songs", "relation": "xEffect", "prompt": "PersonX plays PersonX's favorite songs. The effect on PersonX will be"}}
{"generation": ["the same as if you had used the ___"], "references": ["Woke up early", "get's work done", "gets invited to go out", "Drink some coffee", "drinks less medication", "has a good day"], "input": {"head": "PersonX feels better ___", "relation": "xEffect", "prompt": "PersonX feels better ___. The effect on PersonX will be"}}
{"generation": ["the same as if the user had left it alone"], "references": ["none"], "input": {"head": "PersonX leaves it alone", "relation": "xEffect", "prompt": "PersonX leaves it alone. The effect on PersonX will be"}}
{"generation": ["to make him lean forward, and the effect on"], "references": ["gets a dirty or skeptical look from the other person", "gets some rest and relaxation"], "input": {"head": "PersonX leans back in PersonY's seat", "relation": "xEffect", "prompt": "PersonX leans back in PersonY's seat. The effect on PersonX will be"}}
{"generation": ["to make him or her lose a turn"], "references": ["burns food", "becomes full", "gets burned", "leaves stove on", "eats the eggs", "gets dirty from scrambling eggs"], "input": {"head": "PersonX scrambles eggs", "relation": "xEffect", "prompt": "PersonX scrambles eggs. The effect on PersonX will be"}}
{"generation": ["the one to do the makeup"], "references": ["hopeful", "happy", "good", "relieved", "confident", "proud"], "input": {"head": "PersonX gets PersonX's makeup done", "relation": "xReact", "prompt": "PersonX gets PersonX's makeup done. PersonX will be"}}
{"generation": ["notified when PersonY answer"], "references": ["good answer", "anxious", "stressed"], "input": {"head": "PersonX waits for PersonY answer", "relation": "xReact", "prompt": "PersonX waits for PersonY answer. PersonX will be"}}
{"generation": ["the one to initiate the game"], "references": ["happy", "pleased"], "input": {"head": "PersonX invites PersonY to play", "relation": "xReact", "prompt": "PersonX invites PersonY to play. PersonX will be"}}
{"generation": ["the one to solve the problem"], "references": ["like they have came to a good solution", "accomplished", "successful", "intelligent"], "input": {"head": "PersonX thinks of a solution", "relation": "xReact", "prompt": "PersonX thinks of a solution. PersonX will be"}}
{"generation": ["able to see the grandmother's face"], "references": ["useful"], "input": {"head": "PersonX asks PersonX's grandmother", "relation": "xReact", "prompt": "PersonX asks PersonX's grandmother. PersonX will be"}}
{"generation": ["the first to admit that it's not perfect,"], "references": ["accomplished", "lazy", "like they didn't do their best", "frustrated because of failing anyway.", "happy at doing what it took to finish a task.", "unmotivated", "satisfied"], "input": {"head": "PersonX spares no effort", "relation": "xReact", "prompt": "PersonX spares no effort. PersonX will be"}}
{"generation": ["able to buy the same amount of goods as Person"], "references": ["neutral", "good because they wanted it", "happy", "relieved", "satisfied"], "input": {"head": "PersonX buys ___ , though", "relation": "xReact", "prompt": "PersonX buys ___ , though. PersonX will be"}}
{"generation": ["the one who gets the money"], "references": ["bad for causing the overflow"], "input": {"head": "PersonX overflows PersonY's banks", "relation": "xReact", "prompt": "PersonX overflows PersonY's banks. PersonX will be"}}
{"generation": ["able to print the string 'hello world' to"], "references": ["knowledgeable", "enlightened"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xReact", "prompt": "PersonX learns the printer 's ___. PersonX will be"}}
{"generation": ["happy to pay ___"], "references": ["regret", "good."], "input": {"head": "PersonX buys PersonX's wife ___", "relation": "xReact", "prompt": "PersonX buys PersonX's wife ___. PersonX will be"}}
{"generation": ["able to see the underwater world, but will not"], "references": ["wet", "exhausted", "skillful", "tired"], "input": {"head": "PersonX goes scuba diving", "relation": "xReact", "prompt": "PersonX goes scuba diving. PersonX will be"}}
{"generation": ["a new kind of social network that will allow you"], "references": ["better"], "input": {"head": "PersonX shares and share alike", "relation": "xReact", "prompt": "PersonX shares and share alike. PersonX will be"}}
{"generation": ["the one to drive the car"], "references": ["relived", "accomplished", "proud"], "input": {"head": "PersonX washes the car", "relation": "xReact", "prompt": "PersonX washes the car. PersonX will be"}}
{"generation": ["the one to make the decision"], "references": ["curious"], "input": {"head": "PersonX thinks would become", "relation": "xReact", "prompt": "PersonX thinks would become. PersonX will be"}}
{"generation": ["the first to be able to do this"], "references": ["a burden"], "input": {"head": "PersonX costs the earth", "relation": "xReact", "prompt": "PersonX costs the earth. PersonX will be"}}
{"generation": ["the same as the original person"], "references": ["happy about his success"], "input": {"head": "PersonX reduces the ___ to levels", "relation": "xReact", "prompt": "PersonX reduces the ___ to levels. PersonX will be"}}
{"generation": ["a very lonely person"], "references": ["sad", "lonely", "unloved", "alone", "hateful"], "input": {"head": "PersonX would n't make any friends", "relation": "xReact", "prompt": "PersonX would n't make any friends. PersonX will be"}}
{"generation": ["executed, and PersonY will be left alone"], "references": ["productive", "ready to begin", "busy", "that they've driven home somebody's ineffectiveness to them personally", "good that they've helped someone", "motivated", "that they've proven how to do something", "influential"], "input": {"head": "PersonX puts PersonY's ___ into execution", "relation": "xReact", "prompt": "PersonX puts PersonY's ___ into execution. PersonX will be"}}
{"generation": ["very nervous if you are not wearing a shirt"], "references": ["scared something bad might happen", "on edge", "anxiety ridden"], "input": {"head": "PersonX gets very nervous", "relation": "xReact", "prompt": "PersonX gets very nervous. PersonX will be"}}
{"generation": ["the first to admit that the group is not perfect"], "references": ["determined", "tired", "satisfied"], "input": {"head": "PersonX practices together", "relation": "xReact", "prompt": "PersonX practices together. PersonX will be"}}
{"generation": ["the first to admit that he's not a very"], "references": ["scared", "thrilled.", "frightened", "scared.", "tired"], "input": {"head": "PersonX watches scary movies", "relation": "xReact", "prompt": "PersonX watches scary movies. PersonX will be"}}
{"generation": ["the new owner of the object"], "references": ["that they cannot stay in the classroom any longer", "like that class isn't worth while"], "input": {"head": "PersonX leaves the class", "relation": "xReact", "prompt": "PersonX leaves the class. PersonX will be"}}
{"generation": ["able to find it"], "references": ["happy", "useful", "relieved", "satisfied"], "input": {"head": "PersonX is able to find it", "relation": "xReact", "prompt": "PersonX is able to find it. PersonX will be"}}
{"generation": ["the first to tell you that it's not a"], "references": ["interested", "excited", "thrilled"], "input": {"head": "PersonX books a ticket", "relation": "xReact", "prompt": "PersonX books a ticket. PersonX will be"}}
{"generation": ["the first to tell you that the game is not"], "references": ["happy", "moral"], "input": {"head": "PersonX sets things right", "relation": "xReact", "prompt": "PersonX sets things right. PersonX will be"}}
{"generation": ["a series of short stories that will be released in"], "references": ["ready", "confident"], "input": {"head": "PersonX takes place in the course", "relation": "xReact", "prompt": "PersonX takes place in the course. PersonX will be"}}
{"generation": ["the one to make the call"], "references": ["to be satisfied", "content", "happy", "proud"], "input": {"head": "PersonX puts it all together", "relation": "xReact", "prompt": "PersonX puts it all together. PersonX will be"}}
{"generation": ["replaced by the new name"], "references": ["sad", "dejected", "disheartened", "disappointed", "unworthly"], "input": {"head": "PersonX does n't make the cut", "relation": "xReact", "prompt": "PersonX does n't make the cut. PersonX will be"}}
{"generation": ["able to see PersonY's face"], "references": ["like they helped someone out", "helpful", "protective"], "input": {"head": "PersonX wipes PersonY's forehead", "relation": "xReact", "prompt": "PersonX wipes PersonY's forehead. PersonX will be"}}
{"generation": ["a good soccer player"], "references": ["center of attention", "noticed", "strong"], "input": {"head": "PersonX is a good soccer player", "relation": "xReact", "prompt": "PersonX is a good soccer player. PersonX will be"}}
{"generation": ["replaced by a new system that will be more flexible"], "references": ["sad about it", "depressed", "desperate"], "input": {"head": "PersonX is coming to an end", "relation": "xReact", "prompt": "PersonX is coming to an end. PersonX will be"}}
{"generation": ["able to achieve the goals of PersonX"], "references": ["satisfied.", "proud", "proud to have reached his goal"], "input": {"head": "PersonX attains PersonX's goals", "relation": "xReact", "prompt": "PersonX attains PersonX's goals. PersonX will be"}}
{"generation": ["the one who pumps the gas"], "references": ["hopeful", "good about themselves", "thoughtful", "proud that he did his part", "proud"], "input": {"head": "PersonX pumps PersonY's gas", "relation": "xReact", "prompt": "PersonX pumps PersonY's gas. PersonX will be"}}
{"generation": ["able to pay back the loan in a few years"], "references": ["hopeful", "happy", "excited", "satisfied"], "input": {"head": "PersonX gets a small loan", "relation": "xReact", "prompt": "PersonX gets a small loan. PersonX will be"}}
{"generation": ["able to see the person's eyes"], "references": ["worried", "disappointed", "good.", "adventurous", "weird"], "input": {"head": "PersonX dyes PersonX's hair pink", "relation": "xReact", "prompt": "PersonX dyes PersonX's hair pink. PersonX will be"}}
{"generation": ["notified of the call"], "references": ["lonely", "informed", "reassured", "loving"], "input": {"head": "PersonX calls PersonY at work", "relation": "xReact", "prompt": "PersonX calls PersonY at work. PersonX will be"}}
{"generation": ["thrown into the water"], "references": ["lucky and questioning"], "input": {"head": "PersonX throws the ___ overboard", "relation": "xReact", "prompt": "PersonX throws the ___ overboard. PersonX will be"}}
{"generation": ["the person who is the target of the attack"], "references": ["neutral", "tired", "lazy"], "input": {"head": "PersonX sets ___ on the table", "relation": "xReact", "prompt": "PersonX sets ___ on the table. PersonX will be"}}
{"generation": ["the first to admit that he's not a perfect"], "references": ["let down", "like someone took advantage of them", "jipped", "upset", "disgusted"], "input": {"head": "PersonX feels cheated", "relation": "xReact", "prompt": "PersonX feels cheated. PersonX will be"}}
{"generation": ["the one to make the pasta"], "references": ["accomlished", "successful", "satisfied"], "input": {"head": "PersonX makes some pasta", "relation": "xReact", "prompt": "PersonX makes some pasta. PersonX will be"}}
{"generation": ["the one to break the news to PersonY"], "references": ["responsive", "confused", "relieved"], "input": {"head": "PersonX breaks the news to PersonY", "relation": "xReact", "prompt": "PersonX breaks the news to PersonY. PersonX will be"}}
{"generation": ["able to see the person's face, but not"], "references": ["sad", "interested", "satisfied"], "input": {"head": "PersonX sees ___ on the street", "relation": "xReact", "prompt": "PersonX sees ___ on the street. PersonX will be"}}
{"generation": ["the one to initiate the conversation"], "references": ["inclusive", "happy", "like a good person", "excited"], "input": {"head": "PersonX invites PersonY", "relation": "xReact", "prompt": "PersonX invites PersonY. PersonX will be"}}
{"generation": ["the coach"], "references": ["having fun", "talented", "anxious"], "input": {"head": "PersonX challenges ___ to a basketball game", "relation": "xReact", "prompt": "PersonX challenges ___ to a basketball game. PersonX will be"}}
{"generation": ["able to sell more copies of its game"], "references": ["happy", "accomplished", "successful", "proud"], "input": {"head": "PersonX improves PersonX's sales", "relation": "xReact", "prompt": "PersonX improves PersonX's sales. PersonX will be"}}
{"generation": ["the first to be killed, and the last to"], "references": ["relieved.", "nice"], "input": {"head": "PersonX brings the ___ to a head", "relation": "xReact", "prompt": "PersonX brings the ___ to a head. PersonX will be"}}
{"generation": ["the one to see the face"], "references": ["in control", "good because they are seen"], "input": {"head": "PersonX looks PersonY ___ in the face", "relation": "xReact", "prompt": "PersonX looks PersonY ___ in the face. PersonX will be"}}
{"generation": ["the first to admit that he is not a very"], "references": ["appreciative", "friendly"], "input": {"head": "PersonX also liked ___", "relation": "xReact", "prompt": "PersonX also liked ___. PersonX will be"}}
{"generation": ["the first to ride every ride in the park"], "references": ["capable", "tired", "excited"], "input": {"head": "PersonX rides every ride", "relation": "xReact", "prompt": "PersonX rides every ride. PersonX will be"}}
{"generation": ["the first person to ever visit the world of the"], "references": ["curious", "eager", "anxious"], "input": {"head": "PersonX never been to one before", "relation": "xReact", "prompt": "PersonX never been to one before. PersonX will be"}}
{"generation": ["able to eat anything, including other people"], "references": ["full", "eager", "satisfied"], "input": {"head": "PersonX begins to eat", "relation": "xReact", "prompt": "PersonX begins to eat. PersonX will be"}}
{"generation": ["the one to attack"], "references": ["helpful", "supportive"], "input": {"head": "PersonX stays by PersonY's side", "relation": "xReact", "prompt": "PersonX stays by PersonY's side. PersonX will be"}}
{"generation": ["able to play the new instrument"], "references": ["skillful", "accomplished", "excited", "good about themselves", "intelligent"], "input": {"head": "PersonX learns a new instrument", "relation": "xReact", "prompt": "PersonX learns a new instrument. PersonX will be"}}
{"generation": ["able to see the person's name, but not"], "references": ["neutral", "relaxed", "lazy", "guilty", "depressed", "sad", "bored", "guilty about it", "satisfied"], "input": {"head": "PersonX wastes PersonX's day", "relation": "xReact", "prompt": "PersonX wastes PersonX's day. PersonX will be"}}
{"generation": ["replaced by a new, more powerful version of the"], "references": ["accomplished", "pained", "afraid"], "input": {"head": "PersonX puts out to pasture", "relation": "xReact", "prompt": "PersonX puts out to pasture. PersonX will be"}}
{"generation": ["able to use the allowance to buy ___"], "references": ["generous", "proud", "giving"], "input": {"head": "PersonX gives ___ an allowance", "relation": "xReact", "prompt": "PersonX gives ___ an allowance. PersonX will be"}}
{"generation": ["a platform for people to share their stories and experiences"], "references": ["like he is making progress", "proud", "successful"], "input": {"head": "PersonX develops web presence", "relation": "xReact", "prompt": "PersonX develops web presence. PersonX will be"}}
{"generation": ["able to see PersonY's hands, but not"], "references": ["satsified", "cleaner."], "input": {"head": "PersonX wipes PersonY's hands", "relation": "xReact", "prompt": "PersonX wipes PersonY's hands. PersonX will be"}}
{"generation": ["the person who will be the recipient of the cookies"], "references": ["like a good person", "proud about it", "excited"], "input": {"head": "PersonX makes the cookies", "relation": "xReact", "prompt": "PersonX makes the cookies. PersonX will be"}}
{"generation": ["able to speak the language of the person who taught"], "references": ["successful", "smart", "happy", "smarter", "tolerant", "satisfied"], "input": {"head": "PersonX learns a new language", "relation": "xReact", "prompt": "PersonX learns a new language. PersonX will be"}}
{"generation": ["the one to make the first move"], "references": ["dedicated", "like a good person", "generous", "kind", "satisfied"], "input": {"head": "PersonX believes also in PersonY", "relation": "xReact", "prompt": "PersonX believes also in PersonY. PersonX will be"}}
{"generation": ["the one to kill PersonY's brother"], "references": ["happy about it", "helpful", "satisfied"], "input": {"head": "PersonX helps PersonY's brother", "relation": "xReact", "prompt": "PersonX helps PersonY's brother. PersonX will be"}}
{"generation": ["the one to make the arrangements"], "references": ["productive", "independent", "organized", "prepared"], "input": {"head": "PersonX makes PersonX's arrangements", "relation": "xReact", "prompt": "PersonX makes PersonX's arrangements. PersonX will be"}}
{"generation": ["the one to lick the balls"], "references": ["a loss of self-esteem", "hopeful their actions worked", "cheap"], "input": {"head": "PersonX licks PersonY's balls", "relation": "xReact", "prompt": "PersonX licks PersonY's balls. PersonX will be"}}
{"generation": ["a great tool for the community to help us find"], "references": ["powerful", "unhappy", "boisterous"], "input": {"head": "PersonX makes too much noise", "relation": "xReact", "prompt": "PersonX makes too much noise. PersonX will be"}}
{"generation": ["able to use PersonX's power"], "references": ["powerful", "mighty", "guilty", "corrupt"], "input": {"head": "PersonX abuses PersonX's power", "relation": "xReact", "prompt": "PersonX abuses PersonX's power. PersonX will be"}}
{"generation": ["able to read the data from the file"], "references": ["occupied", "relaxed", "calm", "curious", "interested"], "input": {"head": "PersonX wants to read", "relation": "xReact", "prompt": "PersonX wants to read. PersonX will be"}}
{"generation": ["able to see the person's face, but will"], "references": ["happy", "responsible", "content", "satisfied"], "input": {"head": "PersonX alters PersonX's course", "relation": "xReact", "prompt": "PersonX alters PersonX's course. PersonX will be"}}
{"generation": ["the first to tell you that the game is not"], "references": ["loving, happy as he enjoyed the experience of riding bike", "happy", "exhilarated"], "input": {"head": "PersonX loves the experience", "relation": "xReact", "prompt": "PersonX loves the experience. PersonX will be"}}
{"generation": ["the one to make the final decision"], "references": ["accomplished", "ready", "excited", "hungry", "prepared"], "input": {"head": "PersonX gathers all the ingredients", "relation": "xReact", "prompt": "PersonX gathers all the ingredients. PersonX will be"}}
{"generation": ["the first to be able to use the new \""], "references": ["happy", "helpful", "satisfied"], "input": {"head": "PersonX cuts swathes", "relation": "xReact", "prompt": "PersonX cuts swathes. PersonX will be"}}
{"generation": ["the first to admit that he is not a very"], "references": ["happy", "in love", "enamored", "good about themselves"], "input": {"head": "PersonX meets the love of PersonX's life", "relation": "xReact", "prompt": "PersonX meets the love of PersonX's life. PersonX will be"}}
{"generation": ["available on the App Store for $2"], "references": ["relaxed", "refreshed", "content", "satisfied"], "input": {"head": "PersonX feels refreshed", "relation": "xReact", "prompt": "PersonX feels refreshed. PersonX will be"}}
{"generation": ["able to make ___ quickly"], "references": ["productive", "accomplished", "rapid", "efficient", "proud", "fast"], "input": {"head": "PersonX makes ___ quickly", "relation": "xReact", "prompt": "PersonX makes ___ quickly. PersonX will be"}}
{"generation": ["the first person to win the championship in the history"], "references": ["triumphant", "accomplished", "courageous", "confident"], "input": {"head": "PersonX wins the championship", "relation": "xReact", "prompt": "PersonX wins the championship. PersonX will be"}}
{"generation": ["the one to take the lead"], "references": ["unsure"], "input": {"head": "PersonX shrugs PersonY's shoulders", "relation": "xReact", "prompt": "PersonX shrugs PersonY's shoulders. PersonX will be"}}
{"generation": ["the one to bring the item"], "references": ["happy", "thankful"], "input": {"head": "PersonX asks PersonY to bring", "relation": "xReact", "prompt": "PersonX asks PersonY to bring. PersonX will be"}}
{"generation": ["able to see the glass, but PersonY will"], "references": ["calm", "thankful", "hospitable"], "input": {"head": "PersonX hands PersonY a glass", "relation": "xReact", "prompt": "PersonX hands PersonY a glass. PersonX will be"}}
{"generation": ["the person who is the closest to the center of"], "references": ["rewarded"], "input": {"head": "PersonX draws PersonY conclusion", "relation": "xReact", "prompt": "PersonX draws PersonY conclusion. PersonX will be"}}
{"generation": ["a new series of studies that will be released every"], "references": ["happy,good and satisfied", "smart"], "input": {"head": "PersonX studies extra", "relation": "xReact", "prompt": "PersonX studies extra. PersonX will be"}}
{"generation": ["the one to win the bet"], "references": ["surprised", "lucky", "happy", "excited", "vindicated"], "input": {"head": "PersonX wins the bet", "relation": "xReact", "prompt": "PersonX wins the bet. PersonX will be"}}
{"generation": ["the one to take the first step"], "references": ["amusing", "accomplished", "proud", "self-satisfied"], "input": {"head": "PersonX stands on PersonX's head", "relation": "xReact", "prompt": "PersonX stands on PersonX's head. PersonX will be"}}
{"generation": ["the one who will be the recipient of the message"], "references": ["like they are giving something to them"], "input": {"head": "PersonX distributes among PersonY", "relation": "xReact", "prompt": "PersonX distributes among PersonY. PersonX will be"}}
{"generation": ["the one to initiate the conversation"], "references": ["happy", "nervous"], "input": {"head": "PersonX sits down next to PersonY", "relation": "xReact", "prompt": "PersonX sits down next to PersonY. PersonX will be"}}
{"generation": ["the one who will be the one to do the"], "references": ["good", "satisfied to help", "helpful"], "input": {"head": "PersonX makes PersonY well", "relation": "xReact", "prompt": "PersonX makes PersonY well. PersonX will be"}}
{"generation": ["in the bathtub"], "references": ["self conscious", "completely refreshed and ready to relax"], "input": {"head": "PersonX needs a bath", "relation": "xReact", "prompt": "PersonX needs a bath. PersonX will be"}}
{"generation": ["in the same room as you"], "references": ["happy", "habitual", "satisfied"], "input": {"head": "PersonX makes ___ every night", "relation": "xReact", "prompt": "PersonX makes ___ every night. PersonX will be"}}
{"generation": ["the one to shoot the ball"], "references": ["slightly hurt", "thankful for the chance", "better", "content"], "input": {"head": "PersonX gets the shot", "relation": "xReact", "prompt": "PersonX gets the shot. PersonX will be"}}
{"generation": ["a new type of social network that will allow users"], "references": ["guilty", "sneaky", "relieved", "intelligent", "invisible"], "input": {"head": "PersonX slips under the radar", "relation": "xReact", "prompt": "PersonX slips under the radar. PersonX will be"}}
{"generation": ["able to find another job, but will not be"], "references": ["relieved, proud", "happy that he can afford more things."], "input": {"head": "PersonX finds another job", "relation": "xReact", "prompt": "PersonX finds another job. PersonX will be"}}
{"generation": ["the one to get the last laugh"], "references": ["powerful", "upset", "useless"], "input": {"head": "PersonX really pisses PersonY off", "relation": "xReact", "prompt": "PersonX really pisses PersonY off. PersonX will be"}}
{"generation": ["able to see all the animals"], "references": ["thrilled about it", "connected", "alert", "amazed at them all"], "input": {"head": "PersonX sees all the animals", "relation": "xReact", "prompt": "PersonX sees all the animals. PersonX will be"}}
{"generation": ["the new name of the current process"], "references": ["thankful,finds the way happily", "indifferent", "excited"], "input": {"head": "PersonX makes PersonX's exit", "relation": "xReact", "prompt": "PersonX makes PersonX's exit. PersonX will be"}}
{"generation": ["the first to be released"], "references": ["proud.", "powerful", "immortal", "satisfied"], "input": {"head": "PersonX makes PersonX's mark", "relation": "xReact", "prompt": "PersonX makes PersonX's mark. PersonX will be"}}
{"generation": ["able to use the PersonX API to access the"], "references": ["educated", "excited"], "input": {"head": "PersonX broadens PersonX's ___ to include", "relation": "xReact", "prompt": "PersonX broadens PersonX's ___ to include. PersonX will be"}}
{"generation": ["making a bracelet for you"], "references": ["artisitc", "freindly", "loved", "friendly and appreciative of their friends.", "cherished"], "input": {"head": "PersonX makes friendship bracelets", "relation": "xReact", "prompt": "PersonX makes friendship bracelets. PersonX will be"}}
{"generation": ["paid $50"], "references": ["accomplished", "hopeful", "worried", "brave", "nervous"], "input": {"head": "PersonX asks ___ for a raise", "relation": "xReact", "prompt": "PersonX asks ___ for a raise. PersonX will be"}}
{"generation": ["the one to get the shot"], "references": ["ill", "worried", "sick", "annoyed", "nervous", "weak"], "input": {"head": "PersonX needs a shot", "relation": "xReact", "prompt": "PersonX needs a shot. PersonX will be"}}
{"generation": ["the first to be closed"], "references": ["responsible", "relieved", "tired"], "input": {"head": "PersonX closes that day", "relation": "xReact", "prompt": "PersonX closes that day. PersonX will be"}}
{"generation": ["the first to admit that he's not a movie"], "references": ["happy", "excited", "good", "pleased", "entertained", "satisfied"], "input": {"head": "PersonX watches old movies", "relation": "xReact", "prompt": "PersonX watches old movies. PersonX will be"}}
{"generation": ["the person who is the target of the attack"], "references": ["accomplished", "knowledgeable", "proud", "satisfied"], "input": {"head": "PersonX shows schematically in figure", "relation": "xReact", "prompt": "PersonX shows schematically in figure. PersonX will be"}}
{"generation": ["the first to offer a full-service, fully"], "references": ["helpful", "friendly", "proud", "assured", "satisfied"], "input": {"head": "PersonX reaches exiting customers", "relation": "xReact", "prompt": "PersonX reaches exiting customers. PersonX will be"}}
{"generation": ["the first to admit that he is not a feminist"], "references": ["sad", "like they got away with something", "ashamed", "relieved", "satisfied"], "input": {"head": "PersonX plays the gender card", "relation": "xReact", "prompt": "PersonX plays the gender card. PersonX will be"}}
{"generation": ["a great addition to the game"], "references": ["unsanitary", "gross", "dirty", "ashamed", "disgusting"], "input": {"head": "PersonX smells terrible", "relation": "xReact", "prompt": "PersonX smells terrible. PersonX will be"}}
{"generation": ["the one to kill you"], "references": ["good"], "input": {"head": "PersonX preaches god 's ___", "relation": "xReact", "prompt": "PersonX preaches god 's ___. PersonX will be"}}
{"generation": ["the first to finish ___"], "references": ["satisfied", "relieved and pleased to be finished"], "input": {"head": "PersonX finishes ___ last night", "relation": "xReact", "prompt": "PersonX finishes ___ last night. PersonX will be"}}
{"generation": ["the one to get the job done"], "references": ["favored"], "input": {"head": "PersonX gets everything", "relation": "xReact", "prompt": "PersonX gets everything. PersonX will be"}}
{"generation": ["the one to throw the food"], "references": ["powerful", "mischievous", "angry", "disgusted"], "input": {"head": "PersonX throws the food", "relation": "xReact", "prompt": "PersonX throws the food. PersonX will be"}}
{"generation": ["the one to visit"], "references": ["companionship", "friendly", "good about themselves"], "input": {"head": "PersonX visits my friend", "relation": "xReact", "prompt": "PersonX visits my friend. PersonX will be"}}
{"generation": ["a new type that represents a person"], "references": ["joyful", "happy", "proud"], "input": {"head": "PersonX gets published", "relation": "xReact", "prompt": "PersonX gets published. PersonX will be"}}
{"generation": ["the person who is outside"], "references": ["sad.", "warm", "satisfied"], "input": {"head": "PersonX takes PersonY outside", "relation": "xReact", "prompt": "PersonX takes PersonY outside. PersonX will be"}}
{"generation": ["the first to be released, and it will be"], "references": ["like a star.", "beloved.", "apprehensive", "good for showing what he can do"], "input": {"head": "PersonX takes the stage", "relation": "xReact", "prompt": "PersonX takes the stage. PersonX will be"}}
{"generation": ["back"], "references": ["hopeful", "happy that person took him back", "satisfied"], "input": {"head": "PersonX wants to come back", "relation": "xReact", "prompt": "PersonX wants to come back. PersonX will be"}}
{"generation": ["replaced by the next person in the list"], "references": ["good", "frustrated", "fine", "normal"], "input": {"head": "PersonX leaves the table", "relation": "xReact", "prompt": "PersonX leaves the table. PersonX will be"}}
{"generation": ["the first to get it"], "references": ["happy", "fulflled"], "input": {"head": "PersonX wants another one", "relation": "xReact", "prompt": "PersonX wants another one. PersonX will be"}}
{"generation": ["the one who is the target of the attack"], "references": ["generous"], "input": {"head": "PersonX gives PersonY room", "relation": "xReact", "prompt": "PersonX gives PersonY room. PersonX will be"}}
{"generation": ["a new feature in the next version of Firefox"], "references": ["satisfied."], "input": {"head": "PersonX looks like new", "relation": "xReact", "prompt": "PersonX looks like new. PersonX will be"}}
{"generation": ["able to see my wallet"], "references": ["remorsful", "guilty", "ashamed"], "input": {"head": "PersonX forgets my wallet", "relation": "xReact", "prompt": "PersonX forgets my wallet. PersonX will be"}}
{"generation": ["happy"], "references": ["happy", "excited"], "input": {"head": "PersonX gives PersonY a dinner", "relation": "xReact", "prompt": "PersonX gives PersonY a dinner. PersonX will be"}}
{"generation": ["the first to admit that it's not a perfect"], "references": ["happy.", "happy", "accomplished", "tired"], "input": {"head": "PersonX nurses it back to health", "relation": "xReact", "prompt": "PersonX nurses it back to health. PersonX will be"}}
{"generation": ["wearing a suit and tie"], "references": ["relaxed and refreshed.", "diead so relax our mind"], "input": {"head": "PersonX arrives ___ from work", "relation": "xReact", "prompt": "PersonX arrives ___ from work. PersonX will be"}}
{"generation": ["stunned for a few seconds"], "references": ["accomplished", "happy", "generous", "helpful", "proud"], "input": {"head": "PersonX pierces PersonY's ears", "relation": "xReact", "prompt": "PersonX pierces PersonY's ears. PersonX will be"}}
{"generation": ["the person who is the target of the attack"], "references": ["happy about getting a new friend", "socialable"], "input": {"head": "PersonX would like PersonY", "relation": "xReact", "prompt": "PersonX would like PersonY. PersonX will be"}}
{"generation": ["able to see the person's face"], "references": ["like a hero", "surprised", "tired"], "input": {"head": "PersonX pulls ___ out of the water", "relation": "xReact", "prompt": "PersonX pulls ___ out of the water. PersonX will be"}}
{"generation": ["the first to say that the only way to get"], "references": ["empowered"], "input": {"head": "PersonX takes PersonX's stand", "relation": "xReact", "prompt": "PersonX takes PersonX's stand. PersonX will be"}}
{"generation": ["more likely to be a good leader"], "references": ["dedicated", "happy", "proud", "determined"], "input": {"head": "PersonX does better in school", "relation": "xReact", "prompt": "PersonX does better in school. PersonX will be"}}
{"generation": ["the first to be released"], "references": ["like everyone thinks he is late"], "input": {"head": "PersonX finally got back", "relation": "xReact", "prompt": "PersonX finally got back. PersonX will be"}}
{"generation": ["the one to initiate the conversation, and PersonY"], "references": ["happy to have new friends.", "happy after meeting person friends"], "input": {"head": "PersonX meets PersonY's friends", "relation": "xReact", "prompt": "PersonX meets PersonY's friends. PersonX will be"}}
{"generation": ["driving a car that is equipped with a GPS system"], "references": ["capable", "speedy", "efficient", "good", "determined"], "input": {"head": "PersonX drives down the highway", "relation": "xReact", "prompt": "PersonX drives down the highway. PersonX will be"}}
{"generation": ["the first to be released"], "references": ["good", "glad to belong"], "input": {"head": "PersonX finally joined", "relation": "xReact", "prompt": "PersonX finally joined. PersonX will be"}}
{"generation": ["able to jump higher than PersonY"], "references": ["flawed"], "input": {"head": "PersonX has a fear of heights", "relation": "xReact", "prompt": "PersonX has a fear of heights. PersonX will be"}}
{"generation": ["the one to kill the parents"], "references": ["accomplished", "successful", "hopeful", "happy", "excited", "thankful"], "input": {"head": "PersonX convinces PersonY's parents", "relation": "xReact", "prompt": "PersonX convinces PersonY's parents. PersonX will be"}}
{"generation": ["the first to admit that he's not the best"], "references": ["destructive", "relieved"], "input": {"head": "PersonX blows this popsicle stand", "relation": "xReact", "prompt": "PersonX blows this popsicle stand. PersonX will be"}}
{"generation": ["the one to initiate the conversation"], "references": ["controlling", "important", "unimportant"], "input": {"head": "PersonX demands PersonY's attention", "relation": "xReact", "prompt": "PersonX demands PersonY's attention. PersonX will be"}}
{"generation": ["the one to cook it"], "references": ["happy", "content", "cozy", "full", "satisfied"], "input": {"head": "PersonX has a nice dinner", "relation": "xReact", "prompt": "PersonX has a nice dinner. PersonX will be"}}
{"generation": ["the first to know"], "references": ["astonished", "surprised", "happy", "amazed", "jealous"], "input": {"head": "PersonX can n't believe PersonY's luck", "relation": "xReact", "prompt": "PersonX can n't believe PersonY's luck. PersonX will be"}}
{"generation": ["taught how to sing by a teacher"], "references": ["accomplished", "like singing", "hopeful."], "input": {"head": "PersonX wants to learn how to sing", "relation": "xReact", "prompt": "PersonX wants to learn how to sing. PersonX will be"}}
{"generation": ["the first to admit that he is not a great"], "references": ["in control", "happy, satisfied if successful", "like they have the upper hand", "fit", "satisfied"], "input": {"head": "PersonX plays hardball", "relation": "xReact", "prompt": "PersonX plays hardball. PersonX will be"}}
{"generation": ["the one to move the camera"], "references": ["horny", "flirty"], "input": {"head": "PersonX sits in PersonY's lap", "relation": "xReact", "prompt": "PersonX sits in PersonY's lap. PersonX will be"}}
{"generation": ["the one to make bread"], "references": ["happy", "chef like", "hungry"], "input": {"head": "PersonX makes bread", "relation": "xReact", "prompt": "PersonX makes bread. PersonX will be"}}
{"generation": ["able to see the leg, but will not be"], "references": ["sad", "bad about themselves", "sorry", "horrible"], "input": {"head": "PersonX cuts PersonY's leg", "relation": "xReact", "prompt": "PersonX cuts PersonY's leg. PersonX will be"}}
{"generation": ["the person whose name is being used"], "references": ["happy they now know.", "proud", "excited", "satisfied"], "input": {"head": "PersonX derives PersonY's name", "relation": "xReact", "prompt": "PersonX derives PersonY's name. PersonX will be"}}
{"generation": ["the one to present the ___ in a manner"], "references": ["a sense of achievement"], "input": {"head": "PersonX presents the ___ in a manner", "relation": "xReact", "prompt": "PersonX presents the ___ in a manner. PersonX will be"}}
{"generation": ["the one who will be the one to put the"], "references": ["worthy", "accomplished", "satisfied that he was able to finish the game", "a sense of achievement"], "input": {"head": "PersonX puts ___ together", "relation": "xReact", "prompt": "PersonX puts ___ together. PersonX will be"}}
{"generation": ["able to protect ___ from harm"], "references": ["accomplished", "glad", "helpful"], "input": {"head": "PersonX protects ___ from harm", "relation": "xReact", "prompt": "PersonX protects ___ from harm. PersonX will be"}}
{"generation": ["the one to give you the gift"], "references": ["happy.", "happy", "fine", "good about him/herself"], "input": {"head": "PersonX gives ___ a small smile", "relation": "xReact", "prompt": "PersonX gives ___ a small smile. PersonX will be"}}
{"generation": ["the one to read the message"], "references": ["good.", "satisfied"], "input": {"head": "PersonX takes the ___ to read", "relation": "xReact", "prompt": "PersonX takes the ___ to read. PersonX will be"}}
{"generation": ["the one to find the other person"], "references": ["happy", "surprised", "glad"], "input": {"head": "PersonX finds another", "relation": "xReact", "prompt": "PersonX finds another. PersonX will be"}}
{"generation": ["the first to be released on the new platform"], "references": ["contented with himself"], "input": {"head": "PersonX makes perfect", "relation": "xReact", "prompt": "PersonX makes perfect. PersonX will be"}}
{"generation": ["the first element in the array"], "references": ["safe", "relieved", "combatant"], "input": {"head": "PersonX avoids every ___", "relation": "xReact", "prompt": "PersonX avoids every ___. PersonX will be"}}
{"generation": ["able to learn how to cook by watching videos on"], "references": ["glad", "proud of their hard work", "excited", "good about himself", "satisfied"], "input": {"head": "PersonX wants to learn how to cook", "relation": "xReact", "prompt": "PersonX wants to learn how to cook. PersonX will be"}}
{"generation": ["replaced by the new PersonY"], "references": ["happy to get some food", "studious", "tired", "glad she went to the library and is ready to relax at home."], "input": {"head": "PersonX leaves the library", "relation": "xReact", "prompt": "PersonX leaves the library. PersonX will be"}}
{"generation": ["able to see the car's license plate number"], "references": ["broke", "nervous", "guilty", "watchful"], "input": {"head": "PersonX pulls PersonX's car over", "relation": "xReact", "prompt": "PersonX pulls PersonX's car over. PersonX will be"}}
{"generation": ["a great way to get people to learn about the"], "references": ["eager to prove themself", "glad others think highly of them", "overwhelmed by expectations", "good about themselves"], "input": {"head": "PersonX seems perfect", "relation": "xReact", "prompt": "PersonX seems perfect. PersonX will be"}}
{"generation": ["replaced by a new person"], "references": ["nothing"], "input": {"head": "PersonX dies on the vine", "relation": "xReact", "prompt": "PersonX dies on the vine. PersonX will be"}}
{"generation": ["the one to tell you what to do"], "references": ["good", "glad other see his point of view", "more certain"], "input": {"head": "PersonX lays ___ on the fact", "relation": "xReact", "prompt": "PersonX lays ___ on the fact. PersonX will be"}}
{"generation": ["the one who is in the middle of the line"], "references": ["accomplished", "aroused", "nan"], "input": {"head": "PersonX reaches around PersonY", "relation": "xReact", "prompt": "PersonX reaches around PersonY. PersonX will be"}}
{"generation": ["the first to admit that he is not a great"], "references": ["fast", "accomplished", "active", "strong"], "input": {"head": "PersonX practices really hard", "relation": "xReact", "prompt": "PersonX practices really hard. PersonX will be"}}
{"generation": ["the person who is currently watching PersonY"], "references": ["neutral", "informed", "shocked", "content"], "input": {"head": "PersonX watches PersonY", "relation": "xReact", "prompt": "PersonX watches PersonY. PersonX will be"}}
{"generation": ["the first to be released"], "references": ["accomplished", "tired.", "happy", "good.", "proud"], "input": {"head": "PersonX works last night", "relation": "xReact", "prompt": "PersonX works last night. PersonX will be"}}
{"generation": ["able to see the animals in the same way that"], "references": ["content", "happy", "excited"], "input": {"head": "PersonX sees all of the animals", "relation": "xReact", "prompt": "PersonX sees all of the animals. PersonX will be"}}
{"generation": ["able to see the oven, but not the person"], "references": ["full and happy after eating", "full", "in a state of expectation", "delighted"], "input": {"head": "PersonX puts ___ in the oven", "relation": "xReact", "prompt": "PersonX puts ___ in the oven. PersonX will be"}}
{"generation": ["the first to be affected by the change"], "references": ["productive", "happy", "successful"], "input": {"head": "PersonX works PersonY's way up", "relation": "xReact", "prompt": "PersonX works PersonY's way up. PersonX will be"}}
{"generation": ["fired if he doesn't show up for work"], "references": ["sad", "worried", "happy", "chastised", "relleved", "nervous."], "input": {"head": "PersonX gets a call from PersonX's boss", "relation": "xReact", "prompt": "PersonX gets a call from PersonX's boss. PersonX will be"}}
{"generation": ["able to see PersonY's head"], "references": ["tired.", "accomplished", "indifferent", "satisfied"], "input": {"head": "PersonX tips PersonY's head back", "relation": "xReact", "prompt": "PersonX tips PersonY's head back. PersonX will be"}}
{"generation": ["the person who called the ambulance"], "references": ["worried", "great", "scared"], "input": {"head": "PersonX calls PersonY ambulance", "relation": "xReact", "prompt": "PersonX calls PersonY ambulance. PersonX will be"}}
{"generation": ["the one to take the hit"], "references": ["conflicted."], "input": {"head": "PersonX looks the other way", "relation": "xReact", "prompt": "PersonX looks the other way. PersonX will be"}}
{"generation": ["a function that takes a string and returns a string"], "references": ["lazy", "unconstructive"], "input": {"head": "PersonX would n't work", "relation": "xReact", "prompt": "PersonX would n't work. PersonX will be"}}
{"generation": ["the first to be able to use the new features"], "references": ["joy", "helpful", "anticipation"], "input": {"head": "PersonX cuts the umbilical cord", "relation": "xReact", "prompt": "PersonX cuts the umbilical cord. PersonX will be"}}
{"generation": ["a simple, lightweight, and fast library for building"], "references": ["happy", "relieved", "proud"], "input": {"head": "PersonX starts with a clean sheet", "relation": "xReact", "prompt": "PersonX starts with a clean sheet. PersonX will be"}}
{"generation": ["the first to tell you that it's not perfect"], "references": ["fulfilled", "great", "happy", "ecstatic", "good about themselves", "proud"], "input": {"head": "PersonX does an amazing job", "relation": "xReact", "prompt": "PersonX does an amazing job. PersonX will be"}}
{"generation": ["the one to get the stain"], "references": ["slightly upset"], "input": {"head": "PersonX gets the stain", "relation": "xReact", "prompt": "PersonX gets the stain. PersonX will be"}}
{"generation": ["the person who is the target of the attack"], "references": ["relief their feet are dry", "unchanged"], "input": {"head": "PersonX steps right", "relation": "xReact", "prompt": "PersonX steps right. PersonX will be"}}
{"generation": ["the one to take the bag"], "references": ["happy.", "relieved", "less stressed in carrying something"], "input": {"head": "PersonX takes the bag", "relation": "xReact", "prompt": "PersonX takes the bag. PersonX will be"}}
{"generation": ["at the house for a while"], "references": ["warm inside", "happy", "excited", "loved", "full"], "input": {"head": "PersonX is at PersonX's grandmother 's house", "relation": "xReact", "prompt": "PersonX is at PersonX's grandmother 's house. PersonX will be"}}
{"generation": ["able to vote on the next round of voting"], "references": ["empowered", "okay"], "input": {"head": "PersonX prevents ___ from voting", "relation": "xReact", "prompt": "PersonX prevents ___ from voting. PersonX will be"}}
{"generation": ["the one to take care of the camp"], "references": ["resourceful", "fun being out in nature", "happy", "content", "anxious", "apprehensive"], "input": {"head": "PersonX camps with PersonY's family", "relation": "xReact", "prompt": "PersonX camps with PersonY's family. PersonX will be"}}
{"generation": ["the one to kill you"], "references": ["sad", "angry", "stressed out", "irritated", "frusterated", "upset"], "input": {"head": "PersonX looks angry", "relation": "xReact", "prompt": "PersonX looks angry. PersonX will be"}}
{"generation": ["the one to drink it"], "references": ["not thirsty"], "input": {"head": "PersonX gets something to drink", "relation": "xReact", "prompt": "PersonX gets something to drink. PersonX will be"}}
{"generation": ["able to see the snake"], "references": ["shouting with fear", "scared.", "jumpy", "afraid"], "input": {"head": "PersonX sees a snake", "relation": "xReact", "prompt": "PersonX sees a snake. PersonX will be"}}
{"generation": ["a student at the University of Chicago"], "references": ["accomplished", "positive", "determined.", "relieved", "proud"], "input": {"head": "PersonX attends college", "relation": "xReact", "prompt": "PersonX attends college. PersonX will be"}}
{"generation": ["a social network for people who are interested in meeting"], "references": ["having fun", "happy", "good", "sociable", "exhausted"], "input": {"head": "PersonX meets friends", "relation": "xReact", "prompt": "PersonX meets friends. PersonX will be"}}
{"generation": ["the one to take care of the child"], "references": ["maternal and loving"], "input": {"head": "PersonX is mother", "relation": "xReact", "prompt": "PersonX is mother. PersonX will be"}}
{"generation": ["able to see that PersonY is not a threat"], "references": ["calm", "soothed"], "input": {"head": "PersonX puts PersonY's mind at ease", "relation": "xReact", "prompt": "PersonX puts PersonY's mind at ease. PersonX will be"}}
{"generation": ["the first to tell you that he's not a"], "references": ["inspired", "happy", "content", "proud", "jealousy", "amused", "jealous", "impressed"], "input": {"head": "PersonX loves PersonY's work", "relation": "xReact", "prompt": "PersonX loves PersonY's work. PersonX will be"}}
{"generation": ["the first to be able to play the game on"], "references": ["important", "accomplished"], "input": {"head": "PersonX beats everyone", "relation": "xReact", "prompt": "PersonX beats everyone. PersonX will be"}}
{"generation": ["the one to initiate the conversation"], "references": ["very cozy", "relaxed"], "input": {"head": "PersonX leans back in PersonY's chair", "relation": "xReact", "prompt": "PersonX leans back in PersonY's chair. PersonX will be"}}
{"generation": ["notified of the warning"], "references": ["sad", "watchful", "caring"], "input": {"head": "PersonX gives ___ a warning", "relation": "xReact", "prompt": "PersonX gives ___ a warning. PersonX will be"}}
{"generation": ["the one to do the actual work, and Person"], "references": ["happy", "eager", "kind", "prepared", "determined"], "input": {"head": "PersonX puts everything together", "relation": "xReact", "prompt": "PersonX puts everything together. PersonX will be"}}
{"generation": ["the one to talk to"], "references": ["loved and happy", "shy", "connected", "happy"], "input": {"head": "PersonX sits next to PersonY in class", "relation": "xReact", "prompt": "PersonX sits next to PersonY in class. PersonX will be"}}
{"generation": ["able to see the roommate's face, but not"], "references": ["angry", "ready to compromise", "understood", "good for being honest", "disappointed"], "input": {"head": "PersonX confronts PersonX's roommate", "relation": "xReact", "prompt": "PersonX confronts PersonX's roommate. PersonX will be"}}
{"generation": ["the one who will be the target of the attack"], "references": ["good happy", "accomplished"], "input": {"head": "PersonX makes PersonY ___ every time", "relation": "xReact", "prompt": "PersonX makes PersonY ___ every time. PersonX will be"}}
{"generation": ["able to see PersonY's class"], "references": ["inspired", "informed", "happy", "excited"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xReact", "prompt": "PersonX enjoys PersonY's class. PersonX will be"}}
{"generation": ["the one to take the lead in the battle"], "references": ["resigned to a new or revised mode of thinking.", "content", "that things have reached a natural conclusion of sorts."], "input": {"head": "PersonX comes ___ to roost", "relation": "xReact", "prompt": "PersonX comes ___ to roost. PersonX will be"}}
{"generation": ["able to see the redness of PersonX's"], "references": ["happy", "happy.", "pleased", "adventurous", "attractive"], "input": {"head": "PersonX dyes PersonX's hair red", "relation": "xReact", "prompt": "PersonX dyes PersonX's hair red. PersonX will be"}}
{"generation": ["working on a new project for the next few months"], "references": ["capable", "accomplished", "ready to work", "intelligent"], "input": {"head": "PersonX recently graduated", "relation": "xReact", "prompt": "PersonX recently graduated. PersonX will be"}}
{"generation": ["the first to admit that he is not a very"], "references": ["physically spent but happy", "strong", "good-looking", "like he has accomplished something", "that he is stronger"], "input": {"head": "PersonX pumps iron", "relation": "xReact", "prompt": "PersonX pumps iron. PersonX will be"}}
{"generation": ["the one to take the ___"], "references": ["happy", "honorable"], "input": {"head": "PersonX prevents the ___ from taking", "relation": "xReact", "prompt": "PersonX prevents the ___ from taking. PersonX will be"}}
{"generation": ["the first to admit that he's not the best"], "references": ["accomplished", "generous", "helpful", "kind", "satisfied"], "input": {"head": "PersonX packs my bags", "relation": "xReact", "prompt": "PersonX packs my bags. PersonX will be"}}
{"generation": ["the first to be released in the US"], "references": ["sad", "informative", "relieved"], "input": {"head": "PersonX breaks the news", "relation": "xReact", "prompt": "PersonX breaks the news. PersonX will be"}}
{"generation": ["able to see the person's name, age,"], "references": ["happy", "accomplished", "surprised", "satisfied"], "input": {"head": "PersonX makes ___ that day", "relation": "xReact", "prompt": "PersonX makes ___ that day. PersonX will be"}}
{"generation": ["the first to open the door"], "references": ["good", "polite", "happy, caring towards others", "happy"], "input": {"head": "PersonX opens doors", "relation": "xReact", "prompt": "PersonX opens doors. PersonX will be"}}
{"generation": ["happy to see that the room is clean"], "references": ["happy that it's done", "satisfield", "tired", "proud"], "input": {"head": "PersonX cleans PersonX's bedroom", "relation": "xReact", "prompt": "PersonX cleans PersonX's bedroom. PersonX will be"}}
{"generation": ["banned from the channel"], "references": ["happy", "apologetic", "assertive"], "input": {"head": "PersonX talks out of turn", "relation": "xReact", "prompt": "PersonX talks out of turn. PersonX will be"}}
{"generation": ["the first to graduate from the university"], "references": ["happy", "relieved", "excited about the future"], "input": {"head": "PersonX graduates ___ at the university", "relation": "xReact", "prompt": "PersonX graduates ___ at the university. PersonX will be"}}
{"generation": ["the one to get the special something"], "references": ["happy", "giving", "good about themselves", "grateful"], "input": {"head": "PersonX gets PersonY's something special", "relation": "xReact", "prompt": "PersonX gets PersonY's something special. PersonX will be"}}
{"generation": ["notified of the call"], "references": ["accomplished", "relieved.", "relieved", "helpful"], "input": {"head": "PersonX calls ___ immediately", "relation": "xReact", "prompt": "PersonX calls ___ immediately. PersonX will be"}}
{"generation": ["able to walk on the ground, but will not"], "references": ["connected to the earth", "the freedom of not wearing any footware", "content", "relief"], "input": {"head": "PersonX walks barefoot", "relation": "xReact", "prompt": "PersonX walks barefoot. PersonX will be"}}
{"generation": ["released on the App Store on September 30th"], "references": ["happy to be gone", "tired", "to go to sleep", "satisfied"], "input": {"head": "PersonX is ready to go home", "relation": "xReact", "prompt": "PersonX is ready to go home. PersonX will be"}}
{"generation": ["able to use the laptop for a few hours,"], "references": ["happy", "motivated", "satisfied"], "input": {"head": "PersonX buys a laptop", "relation": "xReact", "prompt": "PersonX buys a laptop. PersonX will be"}}
{"generation": ["able to grab the hair of the person he is"], "references": ["guilty", "malicious.", "angry.", "ashamed", "riled up.", "uncaring", "bad"], "input": {"head": "PersonX grabs PersonY's hair", "relation": "xReact", "prompt": "PersonX grabs PersonY's hair. PersonX will be"}}
{"generation": ["the one to initiate the conversation"], "references": ["like he's doing his job well.", "arrogant and headstrong.", "like he is in the way"], "input": {"head": "PersonX walks in front of PersonY", "relation": "xReact", "prompt": "PersonX walks in front of PersonY. PersonX will be"}}
{"generation": ["the first to tell you that this is not a"], "references": ["happy", "proud"], "input": {"head": "PersonX brings ___ to the eyes", "relation": "xReact", "prompt": "PersonX brings ___ to the eyes. PersonX will be"}}
{"generation": ["the one to initiate the conversation"], "references": ["relieved.", "noticed", "appreciated"], "input": {"head": "PersonX catches PersonY's attention", "relation": "xReact", "prompt": "PersonX catches PersonY's attention. PersonX will be"}}
{"generation": ["hurt by PersonY's actions"], "references": ["angry", "vindicated"], "input": {"head": "PersonX wants to hurt PersonY", "relation": "xReact", "prompt": "PersonX wants to hurt PersonY. PersonX will be"}}
{"generation": ["in the school"], "references": ["frustrated", "rushed"], "input": {"head": "PersonX misses ___ to school", "relation": "xReact", "prompt": "PersonX misses ___ to school. PersonX will be"}}
{"generation": ["the one who gets the reward"], "references": ["good for helping", "giving"], "input": {"head": "PersonX evens gave PersonY ___", "relation": "xReact", "prompt": "PersonX evens gave PersonY ___. PersonX will be"}}
{"generation": ["the person who is the target of the attack"], "references": ["good"], "input": {"head": "PersonX explains fully the ___", "relation": "xReact", "prompt": "PersonX explains fully the ___. PersonX will be"}}
{"generation": ["the first to play the song"], "references": ["hopeful", "happy", "friendly", "pleased", "satisfied"], "input": {"head": "PersonX plays PersonY's favorite song", "relation": "xReact", "prompt": "PersonX plays PersonY's favorite song. PersonX will be"}}
{"generation": ["the one to take the things"], "references": ["happy", "accomplished", "materialistic"], "input": {"head": "PersonX takes ___ of things", "relation": "xReact", "prompt": "PersonX takes ___ of things. PersonX will be"}}
{"generation": ["the one to get the job done"], "references": ["happy to meet them", "recognized"], "input": {"head": "PersonX shakes PersonY's heads", "relation": "xReact", "prompt": "PersonX shakes PersonY's heads. PersonX will be"}}
{"generation": ["the first to know"], "references": ["confused about the answer"], "input": {"head": "PersonX asks anyone", "relation": "xReact", "prompt": "PersonX asks anyone. PersonX will be"}}
{"generation": ["revived by the person who knocked him out"], "references": ["worried", "hurt", "angry", "scared", "defeated.", "confused", "tired"], "input": {"head": "PersonX gets knocked out", "relation": "xReact", "prompt": "PersonX gets knocked out. PersonX will be"}}
{"generation": ["the one to enter"], "references": ["pleased"], "input": {"head": "PersonX prevents ___ from entering", "relation": "xReact", "prompt": "PersonX prevents ___ from entering. PersonX will be"}}
{"generation": ["the one who is the target of the attack"], "references": ["sorry", "embarrassed", "happy", "dumb"], "input": {"head": "PersonX falls on PersonY", "relation": "xReact", "prompt": "PersonX falls on PersonY. PersonX will be"}}
{"generation": ["the one who will be the one to be the"], "references": ["happy.", "happy"], "input": {"head": "PersonX achieves PersonY level", "relation": "xReact", "prompt": "PersonX achieves PersonY level. PersonX will be"}}
{"generation": ["ble to see the person's name, age,"], "references": ["good", "like a good worker"], "input": {"head": "PersonX meets customers ' ___", "relation": "xReact", "prompt": "PersonX meets customers ' ___. PersonX will be"}}
{"generation": ["a person who is a member of the group"], "references": ["happy", "chef like"], "input": {"head": "PersonX follows the recipe", "relation": "xReact", "prompt": "PersonX follows the recipe. PersonX will be"}}
{"generation": ["the name of the person who is currently logged in"], "references": ["happy."], "input": {"head": "PersonX gives PersonX's name", "relation": "xReact", "prompt": "PersonX gives PersonX's name. PersonX will be"}}
{"generation": ["able to see the order and the restaurant's name"], "references": ["satsified", "hungry", "like they are going to have a good meal"], "input": {"head": "PersonX orders ___ at the restaurant", "relation": "xReact", "prompt": "PersonX orders ___ at the restaurant. PersonX will be"}}
{"generation": ["a free, open-source, cross-platform"], "references": ["happy", "accomplished", "puntual", "relieved"], "input": {"head": "PersonX arrives soon", "relation": "xReact", "prompt": "PersonX arrives soon. PersonX will be"}}
{"generation": ["able to use PersonX's methods and properties"], "references": ["invincible.", "independent and self sufficient.", "proud"], "input": {"head": "PersonX reduces PersonX's dependence", "relation": "xReact", "prompt": "PersonX reduces PersonX's dependence. PersonX will be"}}
{"generation": ["the one to do the research, and PersonY"], "references": ["accomplished", "determined", "tired", "satisfied"], "input": {"head": "PersonX studies as much as PersonY could", "relation": "xReact", "prompt": "PersonX studies as much as PersonY could. PersonX will be"}}
{"generation": ["able to see the person's face, but not"], "references": ["secure", "neutral", "organized", "ready", "content"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "xReact", "prompt": "PersonX puts it in PersonX's purse. PersonX will be"}}
{"generation": ["able to use the new PersonX API to access"], "references": ["very happy.", "accomplished", "enlightened"], "input": {"head": "PersonX completes PersonX's studies", "relation": "xReact", "prompt": "PersonX completes PersonX's studies. PersonX will be"}}
{"generation": ["happy if PersonX spends ___ on video games"], "references": ["happy", "lazy", "guilty", "like they did something but not very constructive"], "input": {"head": "PersonX spends ___ on video games", "relation": "xReact", "prompt": "PersonX spends ___ on video games. PersonX will be"}}
{"generation": ["the one to answer"], "references": ["nice", "loving", "smart"], "input": {"head": "PersonX asks PersonX's little brother", "relation": "xReact", "prompt": "PersonX asks PersonX's little brother. PersonX will be"}}
{"generation": ["punished for his actions"], "references": ["validated", "justified", "good about themselves", "satisfied"], "input": {"head": "PersonX justifies PersonX's actions", "relation": "xReact", "prompt": "PersonX justifies PersonX's actions. PersonX will be"}}
{"generation": ["the one to tell PersonY what to do"], "references": ["accomplished", "smart"], "input": {"head": "PersonX explains things to PersonY", "relation": "xReact", "prompt": "PersonX explains things to PersonY. PersonX will be"}}
{"generation": ["able to see the ___"], "references": ["happy", "loving toward persony", "helpful, caring, needed", "good about themself", "satisfied"], "input": {"head": "PersonX wipes the ___ from PersonY's forehead", "relation": "xReact", "prompt": "PersonX wipes the ___ from PersonY's forehead. PersonX will be"}}
{"generation": ["a game that will be played by many people,"], "references": ["sad", "depressed and humiliated", "depressed"], "input": {"head": "PersonX feels hopeless", "relation": "xReact", "prompt": "PersonX feels hopeless. PersonX will be"}}
{"generation": ["the person who is currently in the room"], "references": ["happy", "relieved", "satisfied"], "input": {"head": "PersonX waves PersonY", "relation": "xReact", "prompt": "PersonX waves PersonY. PersonX will be"}}
{"generation": ["the first to play the game"], "references": ["happy", "enthuciastic", "enjoyment", "excited"], "input": {"head": "PersonX plays ___ today", "relation": "xReact", "prompt": "PersonX plays ___ today. PersonX will be"}}
{"generation": ["able to find PersonY's name in the database"], "references": ["informed"], "input": {"head": "PersonX knows PersonY name", "relation": "xReact", "prompt": "PersonX knows PersonY name. PersonX will be"}}
{"generation": ["happy"], "references": ["wanted", "nice", "relaxed", "happy", "loved", "confident"], "input": {"head": "PersonX spends the ___ at PersonY's house", "relation": "xReact", "prompt": "PersonX spends the ___ at PersonY's house. PersonX will be"}}
{"generation": ["the first to go"], "references": ["relaxed", "refreshed and relaxed.", "relieved"], "input": {"head": "PersonX goes ___ first", "relation": "xReact", "prompt": "PersonX goes ___ first. PersonX will be"}}
{"generation": ["driving the car"], "references": ["happy", "accomplished", "content"], "input": {"head": "PersonX drives PersonX's new car", "relation": "xReact", "prompt": "PersonX drives PersonX's new car. PersonX will be"}}
{"generation": ["the one to decide what to do"], "references": ["like they mean something.", "feels heard"], "input": {"head": "PersonX has a say", "relation": "xReact", "prompt": "PersonX has a say. PersonX will be"}}
{"generation": ["a student at the same school as the player"], "references": ["hopeful", "determined", "tired", "satisfied"], "input": {"head": "PersonX begins school", "relation": "xReact", "prompt": "PersonX begins school. PersonX will be"}}
{"generation": ["able to see the person's mouth, but not"], "references": ["happy", "hopeful.", "less worried.", "satisfied"], "input": {"head": "PersonX brings ___ to PersonY's mouth", "relation": "xReact", "prompt": "PersonX brings ___ to PersonY's mouth. PersonX will be"}}
{"generation": ["a man"], "references": ["sad", "embarrassed", "happy"], "input": {"head": "PersonX looks like men", "relation": "xReact", "prompt": "PersonX looks like men. PersonX will be"}}
{"generation": ["rewarded with ___"], "references": ["proud", "satisfied"], "input": {"head": "PersonX rewards every ___ according", "relation": "xReact", "prompt": "PersonX rewards every ___ according. PersonX will be"}}
{"generation": ["the first to admit that he is not a very"], "references": ["grateful for something that was done for him", "satisfied, grateful", "good"], "input": {"head": "PersonX thanks ___ profusely", "relation": "xReact", "prompt": "PersonX thanks ___ profusely. PersonX will be"}}
{"generation": ["the one to get the job done"], "references": ["faithful", "excited"], "input": {"head": "PersonX gets right", "relation": "xReact", "prompt": "PersonX gets right. PersonX will be"}}
{"generation": ["able to spend ___ of his own money to buy"], "references": ["dedicated"], "input": {"head": "PersonX spends PersonX's ___ making", "relation": "xReact", "prompt": "PersonX spends PersonX's ___ making. PersonX will be"}}
{"generation": ["the one to call"], "references": ["happy", "happy to know how everyone is"], "input": {"head": "PersonX talks to PersonY on the phone", "relation": "xReact", "prompt": "PersonX talks to PersonY on the phone. PersonX will be"}}
{"generation": ["the one to initiate the conversation"], "references": ["powerful", "smart", "happy", "happy they won the debate", "influential", "satisfied"], "input": {"head": "PersonX expresses PersonX's belief", "relation": "xReact", "prompt": "PersonX expresses PersonX's belief. PersonX will be"}}
{"generation": ["the one to call the ___"], "references": ["more certain", "contented about the information he collected.", "better"], "input": {"head": "PersonX considers carefully the ___", "relation": "xReact", "prompt": "PersonX considers carefully the ___. PersonX will be"}}
{"generation": ["more effective if you use it on patients with ___"], "references": ["fulfilled", "noble"], "input": {"head": "PersonX reduces ___ in patients", "relation": "xReact", "prompt": "PersonX reduces ___ in patients. PersonX will be"}}
{"generation": ["the first to tell you that he's not a"], "references": ["let down", "resentful", "sad", "unenthused", "unhappy", "sad and depressed"], "input": {"head": "PersonX is rather upset", "relation": "xReact", "prompt": "PersonX is rather upset. PersonX will be"}}
{"generation": ["sent to the school"], "references": ["happy about his achievement", "happy", "eager", "excited", "grateful", "like they have some responsibility", "relieved"], "input": {"head": "PersonX convinces PersonX's parents", "relation": "xReact", "prompt": "PersonX convinces PersonX's parents. PersonX will be"}}
{"generation": ["the person who is the target of the attack"], "references": ["kind", "useful", "helpful"], "input": {"head": "PersonX puts PersonY together", "relation": "xReact", "prompt": "PersonX puts PersonY together. PersonX will be"}}
{"generation": ["the X coordinate of the person's body, and"], "references": ["refreshed", "more limber", "helpful"], "input": {"head": "PersonX arches PersonY's body", "relation": "xReact", "prompt": "PersonX arches PersonY's body. PersonX will be"}}
{"generation": ["happy"], "references": ["happy about it", "gratified"], "input": {"head": "PersonX finds what PersonY wanted", "relation": "xReact", "prompt": "PersonX finds what PersonY wanted. PersonX will be"}}
{"generation": ["happy to give you ___"], "references": ["apprehensive", "like it would greatly improve their life"], "input": {"head": "PersonX wants ___ so badly", "relation": "xReact", "prompt": "PersonX wants ___ so badly. PersonX will be"}}
{"generation": ["the first to tell you that they are not the"], "references": ["needy", "neglected"], "input": {"head": "PersonX attention whores", "relation": "xReact", "prompt": "PersonX attention whores. PersonX will be"}}
{"generation": ["able to see the flames, but will not be"], "references": ["happy", "tired", "excited", "the problem in solution"], "input": {"head": "PersonX burns the ___ at both ends", "relation": "xReact", "prompt": "PersonX burns the ___ at both ends. PersonX will be"}}
{"generation": ["the one to beat"], "references": ["accomplished", "competitive", "competent"], "input": {"head": "PersonX always beat", "relation": "xReact", "prompt": "PersonX always beat. PersonX will be"}}
{"generation": ["able to see PersonY's tongue"], "references": ["aroused", "helpful"], "input": {"head": "PersonX slides PersonY's tongue", "relation": "xReact", "prompt": "PersonX slides PersonY's tongue. PersonX will be"}}
{"generation": ["able to shoot the gun, but will not be"], "references": ["secure", "glad to have acted on time.", "remorseful", "guilty", "safe", "traumatized", "safer"], "input": {"head": "PersonX grabs PersonX's gun", "relation": "xReact", "prompt": "PersonX grabs PersonX's gun. PersonX will be"}}
{"generation": ["the X coordinate of the person, and PersonY"], "references": ["like they are doing their job"], "input": {"head": "PersonX arches PersonY back", "relation": "xReact", "prompt": "PersonX arches PersonY back. PersonX will be"}}
{"generation": ["the one to make the decision"], "references": ["great"], "input": {"head": "PersonX always makes", "relation": "xReact", "prompt": "PersonX always makes. PersonX will be"}}
{"generation": ["the one who is hiking"], "references": ["productive", "happy", "peaceful"], "input": {"head": "PersonX takes PersonY on a hike", "relation": "xReact", "prompt": "PersonX takes PersonY on a hike. PersonX will be"}}
{"generation": ["able to play any song that is in the \""], "references": ["happy", "lively", "energized"], "input": {"head": "PersonX plays PersonX's favorite songs", "relation": "xReact", "prompt": "PersonX plays PersonX's favorite songs. PersonX will be"}}
{"generation": ["the one to tell PersonY's friend"], "references": ["accomplished", "stressless"], "input": {"head": "PersonX tells PersonY's friend", "relation": "xReact", "prompt": "PersonX tells PersonY's friend. PersonX will be"}}
{"generation": ["the one to open the door"], "references": ["safe", "happy and dutiful"], "input": {"head": "PersonX pulls the ___ open", "relation": "xReact", "prompt": "PersonX pulls the ___ open. PersonX will be"}}
{"generation": ["happy if PersonY is happy"], "references": ["more spiritual"], "input": {"head": "PersonX feels ___ inside PersonY", "relation": "xReact", "prompt": "PersonX feels ___ inside PersonY. PersonX will be"}}
{"generation": ["the first to be able to use the new features"], "references": ["warmth", "happy"], "input": {"head": "PersonX drives all the way", "relation": "xReact", "prompt": "PersonX drives all the way. PersonX will be"}}
{"generation": ["a platform for the people to be able to express"], "references": ["satisfied, proud to materially contributing to own community growth, well-being & progress.", "like achieve"], "input": {"head": "PersonX brings ___ to the people", "relation": "xReact", "prompt": "PersonX brings ___ to the people. PersonX will be"}}
{"generation": ["able to see the account's balance and transactions"], "references": ["vindicated", "satisfied"], "input": {"head": "PersonX gives PersonY a account", "relation": "xReact", "prompt": "PersonX gives PersonY a account. PersonX will be"}}
{"generation": ["the one to get the job done"], "references": ["like they've accomplished their goal", "eager to get away", "anxious"], "input": {"head": "PersonX hightails it", "relation": "xReact", "prompt": "PersonX hightails it. PersonX will be"}}
{"generation": ["able to see PersonY's eyes"], "references": ["sad", "happy and delightful", "relaxed"], "input": {"head": "PersonX brings ___ to PersonY's eyes", "relation": "xReact", "prompt": "PersonX brings ___ to PersonY's eyes. PersonX will be"}}
{"generation": ["the person who is calling the function"], "references": ["great"], "input": {"head": "PersonX gets the call", "relation": "xReact", "prompt": "PersonX gets the call. PersonX will be"}}
{"generation": ["the first to be able to use the new features"], "references": ["calm", "relieved", "proud"], "input": {"head": "PersonX makes it through the day", "relation": "xReact", "prompt": "PersonX makes it through the day. PersonX will be"}}
{"generation": ["happy to receive ___"], "references": ["happy", "kind"], "input": {"head": "PersonX bestows ___ upon PersonY", "relation": "xReact", "prompt": "PersonX bestows ___ upon PersonY. PersonX will be"}}
{"generation": ["a great tool for anyone who wants to learn how"], "references": ["complacent", "happy", "ambivalent", "good about himself"], "input": {"head": "PersonX takes things for granted", "relation": "xReact", "prompt": "PersonX takes things for granted. PersonX will be"}}
{"generation": ["able to see the phone's location"], "references": ["good"], "input": {"head": "PersonX puts PersonX's phone", "relation": "xReact", "prompt": "PersonX puts PersonX's phone. PersonX will be"}}
{"generation": ["a new game that will be released in 2016"], "references": ["sad", "happy", "acomplished", "proud about his non stop efforts"], "input": {"head": "PersonX tries again next year", "relation": "xReact", "prompt": "PersonX tries again next year. PersonX will be"}}
{"generation": ["able to influence PersonX's actions"], "references": ["influential"], "input": {"head": "PersonX exerts PersonX's influence", "relation": "xReact", "prompt": "PersonX exerts PersonX's influence. PersonX will be"}}
{"generation": ["the first to admit that he is not a very"], "references": ["happy", "accomplished", "proud", "confident"], "input": {"head": "PersonX works really hard", "relation": "xReact", "prompt": "PersonX works really hard. PersonX will be"}}
{"generation": ["able to access the property's value"], "references": ["happy", "happy it's gone.", "relief"], "input": {"head": "PersonX disposes of PersonX's property", "relation": "xReact", "prompt": "PersonX disposes of PersonX's property. PersonX will be"}}
{"generation": ["able to move around the room, but PersonY"], "references": ["less alone in the world", "happy to be helped by someone", "grateful to have someone to rely on"], "input": {"head": "PersonX rests PersonX's ___ on PersonY's shoulder", "relation": "xReact", "prompt": "PersonX rests PersonX's ___ on PersonY's shoulder. PersonX will be"}}
{"generation": ["the one to call the function"], "references": ["happy", "satisfied", "accomlished"], "input": {"head": "PersonX gets it to work", "relation": "xReact", "prompt": "PersonX gets it to work. PersonX will be"}}
{"generation": ["able to see PersonY's car"], "references": ["happy that he or she is on the way to the destination", "happy he was able to get a ride.", "sheltered and safe.", "reassured that the person is safe", "satisfied that person made it home safely."], "input": {"head": "PersonX walks to PersonY's car", "relation": "xReact", "prompt": "PersonX walks to PersonY's car. PersonX will be"}}
{"generation": ["more likely to make ___"], "references": ["productive", "happy"], "input": {"head": "PersonX makes ___ more often", "relation": "xReact", "prompt": "PersonX makes ___ more often. PersonX will be"}}
{"generation": ["the one to eat the hamburger"], "references": ["full", "like they are full.", "satisfied"], "input": {"head": "PersonX eats a hamburger", "relation": "xReact", "prompt": "PersonX eats a hamburger. PersonX will be"}}
{"generation": ["a father"], "references": ["nurturing", "blessed", "loving", "caring", "exhausted"], "input": {"head": "PersonX has a baby girl", "relation": "xReact", "prompt": "PersonX has a baby girl. PersonX will be"}}
{"generation": ["unable to hear anything"], "references": ["accomplished", "happy", "numb", "pain", "sore", "satisfied"], "input": {"head": "PersonX pierces PersonX's ears", "relation": "xReact", "prompt": "PersonX pierces PersonX's ears. PersonX will be"}}
{"generation": ["the one who is the target of the attack"], "references": ["like an imposter because he looks like someone else", "nan"], "input": {"head": "PersonX looks like a PersonY", "relation": "xReact", "prompt": "PersonX looks like a PersonY. PersonX will be"}}
{"generation": ["the one to give the ___"], "references": ["satisfied"], "input": {"head": "PersonX grants women the ___", "relation": "xReact", "prompt": "PersonX grants women the ___. PersonX will be"}}
{"generation": ["the one to read it"], "references": ["intelligent", "happy", "entertained", "satisfied"], "input": {"head": "PersonX gets the book", "relation": "xReact", "prompt": "PersonX gets the book. PersonX will be"}}
{"generation": ["the one to call the function"], "references": ["regretful", "calm", "angry", "annoyed"], "input": {"head": "PersonX falls in line", "relation": "xReact", "prompt": "PersonX falls in line. PersonX will be"}}
{"generation": ["the one to move"], "references": ["guilty", "like a hero", "good", "confident", "competent"], "input": {"head": "PersonX puts PersonY's head down", "relation": "xReact", "prompt": "PersonX puts PersonY's head down. PersonX will be"}}
{"generation": ["the one to get the milk"], "references": ["happy", "accomplished", "thirsty", "satisfied"], "input": {"head": "PersonX gets the milk", "relation": "xReact", "prompt": "PersonX gets the milk. PersonX will be"}}
{"generation": ["able to see the person's eyes, but will"], "references": ["impatient", "flirtatious", "embarrassed", "excited"], "input": {"head": "PersonX bats PersonX's eyes", "relation": "xReact", "prompt": "PersonX bats PersonX's eyes. PersonX will be"}}
{"generation": ["able to see the person's face, and will"], "references": ["in control", "glad to complete the task", "frustrated that others couldn't do it", "proactive", "successful and happy", "empowered"], "input": {"head": "PersonX takes matters into PersonX's own hands", "relation": "xReact", "prompt": "PersonX takes matters into PersonX's own hands. PersonX will be"}}
{"generation": ["the one to get the money"], "references": ["mad", "nan", "guilty", "stressed"], "input": {"head": "PersonX twists PersonY's arm", "relation": "xReact", "prompt": "PersonX twists PersonY's arm. PersonX will be"}}
{"generation": ["able to see the results of the practice"], "references": ["accomplished", "motivated", "satisfied"], "input": {"head": "PersonX practices ___ for weeks", "relation": "xReact", "prompt": "PersonX practices ___ for weeks. PersonX will be"}}
{"generation": ["able to see the car's location and speed"], "references": ["excited and happy"], "input": {"head": "PersonX leaves the car", "relation": "xReact", "prompt": "PersonX leaves the car. PersonX will be"}}
{"generation": ["able to see the player's location"], "references": ["proud", "scared"], "input": {"head": "PersonX flees the scene", "relation": "xReact", "prompt": "PersonX flees the scene. PersonX will be"}}
{"generation": ["thrown at the tv"], "references": ["guilty", "angry", "awful", "guilty about it", "satisfied"], "input": {"head": "PersonX throws ___ at the tv", "relation": "xReact", "prompt": "PersonX throws ___ at the tv. PersonX will be"}}
{"generation": ["the object that is being passed to the __init"], "references": ["compulsive", "obsessive", "happy", "very good and satisfied"], "input": {"head": "PersonX revises every ___", "relation": "xReact", "prompt": "PersonX revises every ___. PersonX will be"}}
{"generation": ["the one to initiate the attack"], "references": ["angry"], "input": {"head": "PersonX uses PersonY's middle finger", "relation": "xReact", "prompt": "PersonX uses PersonY's middle finger. PersonX will be"}}
{"generation": ["given a prescription for a medication that will help him"], "references": ["happy", "reassured", "relieved", "composed"], "input": {"head": "PersonX goes to the doctor 's office", "relation": "xReact", "prompt": "PersonX goes to the doctor 's office. PersonX will be"}}
{"generation": ["fired"], "references": ["ill", "guilty", "sick", "nervous", "apologetic", "disappointed"], "input": {"head": "PersonX misses ___ at work", "relation": "xReact", "prompt": "PersonX misses ___ at work. PersonX will be"}}
{"generation": ["the one who is the target of the attack"], "references": ["good", "like a doppelganger", "fine", "indifferent"], "input": {"head": "PersonX looks like PersonY", "relation": "xReact", "prompt": "PersonX looks like PersonY. PersonX will be"}}
{"generation": ["the one to cast the spell"], "references": ["noticed", "focused"], "input": {"head": "PersonX casts PersonY's eyes", "relation": "xReact", "prompt": "PersonX casts PersonY's eyes. PersonX will be"}}
{"generation": ["the one to grab the keys"], "references": ["thankful to be able to use the car.", "dominant"], "input": {"head": "PersonX grabs PersonY's keys", "relation": "xReact", "prompt": "PersonX grabs PersonY's keys. PersonX will be"}}
{"generation": ["able to see the backpack, but not the person"], "references": ["prepared for the day", "good.", "satisfied"], "input": {"head": "PersonX puts ___ in PersonY's backpack", "relation": "xReact", "prompt": "PersonX puts ___ in PersonY's backpack. PersonX will be"}}
{"generation": ["happy to give you money"], "references": ["thankful", "relief", "grateful"], "input": {"head": "PersonX asks PersonY for money", "relation": "xReact", "prompt": "PersonX asks PersonY for money. PersonX will be"}}
{"generation": ["sent to the same place PersonY was sent to"], "references": ["sad"], "input": {"head": "PersonX sends PersonY off", "relation": "xReact", "prompt": "PersonX sends PersonY off. PersonX will be"}}
{"generation": ["able to fly the ship, and will be able"], "references": ["accomplished", "talented", "thrilled", "scared", "competent", "learned", "satisfied"], "input": {"head": "PersonX becomes a pilot", "relation": "xReact", "prompt": "PersonX becomes a pilot. PersonX will be"}}
{"generation": ["the one to hit the ball"], "references": ["hopeful", "athletic", "great"], "input": {"head": "PersonX swings the bat", "relation": "xReact", "prompt": "PersonX swings the bat. PersonX will be"}}
{"generation": ["able to find a good one"], "references": ["excited and happy", "excited."], "input": {"head": "PersonX finds a good one", "relation": "xReact", "prompt": "PersonX finds a good one. PersonX will be"}}
{"generation": ["happy to see that PersonX is not the only"], "references": ["remorseful", "sad", "shameful", "annoyed", "bad", "unhappy", "upset"], "input": {"head": "PersonX hangs PersonX's ___ in shame", "relation": "xReact", "prompt": "PersonX hangs PersonX's ___ in shame. PersonX will be"}}
{"generation": ["able to eat the food, and the food will"], "references": ["satisfied, full", "satiated"], "input": {"head": "PersonX gets something to eat", "relation": "xReact", "prompt": "PersonX gets something to eat. PersonX will be"}}
{"generation": ["the person who is currently logged in"], "references": ["happy"], "input": {"head": "PersonX visits every ___", "relation": "xReact", "prompt": "PersonX visits every ___. PersonX will be"}}
{"generation": ["the new PersonY"], "references": ["happy"], "input": {"head": "PersonX represents PersonY increase", "relation": "xReact", "prompt": "PersonX represents PersonY increase. PersonX will be"}}
{"generation": ["a new company, but we will be using the"], "references": ["that he had made an impact on the younger employees", "happy", "good about themselves", "happy.", "satisfied"], "input": {"head": "PersonX shares PersonX's experience", "relation": "xReact", "prompt": "PersonX shares PersonX's experience. PersonX will be"}}
{"generation": ["a series of short stories, each one focusing on"], "references": ["responsible"], "input": {"head": "PersonX takes place over a period", "relation": "xReact", "prompt": "PersonX takes place over a period. PersonX will be"}}
{"generation": ["the one to eat the sushi"], "references": ["excited they branched out", "interested", "pleased", "delighted", "adventurous", "disgusted"], "input": {"head": "PersonX tries sushi", "relation": "xReact", "prompt": "PersonX tries sushi. PersonX will be"}}
{"generation": ["the person who is the target of the test"], "references": ["weary and tired", "eager."], "input": {"head": "PersonX finishes the test", "relation": "xReact", "prompt": "PersonX finishes the test. PersonX will be"}}
{"generation": ["the parent of PersonY"], "references": ["happy and tired", "satisfied in life."], "input": {"head": "PersonX rears PersonY's children", "relation": "xReact", "prompt": "PersonX rears PersonY's children. PersonX will be"}}
{"generation": ["able to see the sunburned person's face"], "references": ["sad", "to have treatment", "very sad  and feared"], "input": {"head": "PersonX gets sunburned", "relation": "xReact", "prompt": "PersonX gets sunburned. PersonX will be"}}
{"generation": ["able to see the person's car, but not"], "references": ["contended", "determined"], "input": {"head": "PersonX drives ___ on the highway", "relation": "xReact", "prompt": "PersonX drives ___ on the highway. PersonX will be"}}
{"generation": ["the one to push it"], "references": ["strong", "good", "challenged", "tired", "satisfied"], "input": {"head": "PersonX pushes it", "relation": "xReact", "prompt": "PersonX pushes it. PersonX will be"}}
{"generation": ["a lot of work"], "references": ["poor", "sad", "stressed and disappointed", "downtrodden"], "input": {"head": "PersonX needs a lot of work", "relation": "xReact", "prompt": "PersonX needs a lot of work. PersonX will be"}}
{"generation": ["able to see PersonY's hair color change"], "references": ["hardworking", "helpful", "excited", "professional", "pretty", "pleased", "tired"], "input": {"head": "PersonX dyes PersonY's hair red", "relation": "xReact", "prompt": "PersonX dyes PersonY's hair red. PersonX will be"}}
{"generation": ["the person who is hiding"], "references": ["powerful", "releived", "angry"], "input": {"head": "PersonX tans PersonY's hide", "relation": "xReact", "prompt": "PersonX tans PersonY's hide. PersonX will be"}}
{"generation": ["the one to talk to"], "references": ["sociable", "like they were heard", "friendly", "less lonely", "more knowledgeable"], "input": {"head": "PersonX speaks with PersonY", "relation": "xReact", "prompt": "PersonX speaks with PersonY. PersonX will be"}}
{"generation": ["thrown away, and PersonY will be left behind"], "references": ["malicious", "happy", "mean", "relieved"], "input": {"head": "PersonX throws PersonY overboard", "relation": "xReact", "prompt": "PersonX throws PersonY overboard. PersonX will be"}}
{"generation": ["able to read the book, but will not be"], "references": ["relaxed", "happy", "content", "good", "smarter"], "input": {"head": "PersonX decides to read a book", "relation": "xReact", "prompt": "PersonX decides to read a book. PersonX will be"}}
{"generation": ["the first to be able to use the new features"], "references": ["desire", "longing", "hope"], "input": {"head": "PersonX really wants", "relation": "xReact", "prompt": "PersonX really wants. PersonX will be"}}
{"generation": ["a new project that will be released in the near"], "references": ["hurried", "happy", "good about themselves", "satisfied"], "input": {"head": "PersonX is getting ready for work", "relation": "xReact", "prompt": "PersonX is getting ready for work. PersonX will be"}}
{"generation": ["able to tell the ___ from the dance"], "references": ["excited", "he like a dance"], "input": {"head": "PersonX knows the ___ from the dance", "relation": "xReact", "prompt": "PersonX knows the ___ from the dance. PersonX will be"}}
{"generation": ["the one to take the first step"], "references": ["rested", "tired"], "input": {"head": "PersonX leans back in PersonY's seat", "relation": "xReact", "prompt": "PersonX leans back in PersonY's seat. PersonX will be"}}
{"generation": ["a new type of object that will be able to"], "references": ["like they are getting somewhere", "brave", "like they are moving", "satisfied"], "input": {"head": "PersonX takes a step forward", "relation": "xReact", "prompt": "PersonX takes a step forward. PersonX will be"}}
{"generation": ["able to see the results of the second opinion"], "references": ["confused, worried about something", "accomplished", "satisfied with his decidion"], "input": {"head": "PersonX gets a second opinion", "relation": "xReact", "prompt": "PersonX gets a second opinion. PersonX will be"}}
{"generation": ["able to see the car's license plate"], "references": ["responsible", "upset"], "input": {"head": "PersonX leaves ___ in PersonY's car", "relation": "xReact", "prompt": "PersonX leaves ___ in PersonY's car. PersonX will be"}}
{"generation": ["the person who is currently in the room"], "references": ["thoughtful", "relieved", "helpful", "good about themselves"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "xReact", "prompt": "PersonX gives the ___ PersonY's name. PersonX will be"}}
{"generation": ["the first to admit that he is not a very"], "references": ["wore out", "old-timer", "worn out and weary", "ancient"], "input": {"head": "PersonX is an old man", "relation": "xReact", "prompt": "PersonX is an old man. PersonX will be"}}
{"generation": ["the first to be released on the Nintendo Switch"], "references": ["great for winning"], "input": {"head": "PersonX wins several awards", "relation": "xReact", "prompt": "PersonX wins several awards. PersonX will be"}}
{"generation": ["the first to be affected"], "references": ["scared.", "filthy", "scared"], "input": {"head": "PersonX starts to sink", "relation": "xReact", "prompt": "PersonX starts to sink. PersonX will be"}}
{"generation": ["a person who is not a person"], "references": ["frustrated", "angry", "hated", "unloved"], "input": {"head": "PersonX becomes intolerable", "relation": "xReact", "prompt": "PersonX becomes intolerable. PersonX will be"}}
{"generation": ["the person who is currently in the room"], "references": ["happy", "useful", "happy to have made a friend"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "xReact", "prompt": "PersonX gives PersonY PersonX's name. PersonX will be"}}
{"generation": ["a great tool for the community to use to help"], "references": ["off track", "helpless", "in trouble", "powerless"], "input": {"head": "PersonX falls into the wrong hands", "relation": "xReact", "prompt": "PersonX falls into the wrong hands. PersonX will be"}}
{"generation": ["able to see the homework and will be able to"], "references": ["satisfied", "happy with themselves for being there for a friend", "helpful", "happy to do that, but after may be feels why i do that for this person... next time the person should manage their time.."], "input": {"head": "PersonX finishes PersonY's homework", "relation": "xReact", "prompt": "PersonX finishes PersonY's homework. PersonX will be"}}
{"generation": ["the one who will be the one to tell the"], "references": ["learned", "happy"], "input": {"head": "PersonX forms PersonY opinion", "relation": "xReact", "prompt": "PersonX forms PersonY opinion. PersonX will be"}}
{"generation": ["in the office from 8:00am to 5"], "references": ["accomplished", "tired and wants to rest", "motivated and good about himself."], "input": {"head": "PersonX practices day and night", "relation": "xReact", "prompt": "PersonX practices day and night. PersonX will be"}}
{"generation": ["able to see the person's face, and will"], "references": ["happy", "giddy", "happy and loved"], "input": {"head": "PersonX kisses ___ on the cheek", "relation": "xReact", "prompt": "PersonX kisses ___ on the cheek. PersonX will be"}}
{"generation": ["paid ___"], "references": ["productive", "accomplished", "brisk", "tired"], "input": {"head": "PersonX spends a ___ working", "relation": "xReact", "prompt": "PersonX spends a ___ working. PersonX will be"}}
{"generation": ["the first to tell you that it's not a"], "references": ["dangered", "tired", "relieved"], "input": {"head": "PersonX holds on for dear life", "relation": "xReact", "prompt": "PersonX holds on for dear life. PersonX will be"}}
{"generation": ["know what you want to do next"], "references": ["to say thanks for making it", "to eat it", "to produce something", "to be in their good graces"], "input": {"head": "PersonX pleases ___ to make", "relation": "xWant", "prompt": "PersonX pleases ___ to make. After, PersonX will want to"}}
{"generation": ["know if you are still interested in dating"], "references": ["to keep in contact for 2nd dates", "to propose", "to go to the movies", "to go to dinner", "to get married"], "input": {"head": "PersonX dates for years", "relation": "xWant", "prompt": "PersonX dates for years. After, PersonX will want to"}}
{"generation": ["know what the PersonX team is working on"], "references": ["Get ready to do more work.", "Relax after the work.", "to keep his job.", "to succeed."], "input": {"head": "PersonX goes about PersonX's work", "relation": "xWant", "prompt": "PersonX goes about PersonX's work. After, PersonX will want to"}}
{"generation": ["know what the person is doing"], "references": ["to take a step backward.", "to escape being bit by a snake", "place foot on the ground.", "rebalance themselves", "run away", "to avoid embarrassing people"], "input": {"head": "PersonX takes a step back", "relation": "xWant", "prompt": "PersonX takes a step back. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["Apologize for breaking wind", "Attempt to minimize the odors that accompany flatulence (fanning, spraying air freshener, opening windows)"], "input": {"head": "PersonX breaks wind", "relation": "xWant", "prompt": "PersonX breaks wind. After, PersonX will want to"}}
{"generation": ["spend it"], "references": ["to spend the money", "to give some to charity", "To have success", "To be successful", "to save money", "to open an account.", "to spend money"], "input": {"head": "PersonX earns money", "relation": "xWant", "prompt": "PersonX earns money. After, PersonX will want to"}}
{"generation": ["see ___ again"], "references": ["talk to the other", "to go back inside", "approach the other", "to scream", "to get some rest", "to get away"], "input": {"head": "PersonX sees ___ away", "relation": "xWant", "prompt": "PersonX sees ___ away. After, PersonX will want to"}}
{"generation": ["talk to PersonY"], "references": ["to mock personY", "to laugh about it", "to get away from PersonY.", "to explain that it wasn't PersonX's fault."], "input": {"head": "PersonX loses PersonY temper", "relation": "xWant", "prompt": "PersonX loses PersonY temper. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["nothing because they dead", "nothing because they are still dead", "nothing, they're dead", "nothing", "to explore the afterlife", "nothing they are dead"], "input": {"head": "PersonX is found dead morning at PersonY's home in", "relation": "xWant", "prompt": "PersonX is found dead morning at PersonY's home in. After, PersonX will want to"}}
{"generation": ["know what you think"], "references": ["to rest", "to be in their spot", "to show who's boss", "to carry out the task"], "input": {"head": "PersonX takes place soon", "relation": "xWant", "prompt": "PersonX takes place soon. After, PersonX will want to"}}
{"generation": ["go to the gym"], "references": ["to get out of the car", "to think what else they can get", "to leave right away", "to go back home", "to think about what they got", "to rest", "to cry"], "input": {"head": "PersonX gets ___ from work", "relation": "xWant", "prompt": "PersonX gets ___ from work. After, PersonX will want to"}}
{"generation": ["be the one to take the credit for the work"], "references": ["to have people admire him", "to have people talk about him", "to be lazy", "take a nap", "think about life", "to always have all the praise", "drink a coffee", "to rely on his past accomplishments", "to get an award"], "input": {"head": "PersonX rests on PersonX's laurels", "relation": "xWant", "prompt": "PersonX rests on PersonX's laurels. After, PersonX will want to"}}
{"generation": ["know what you think of ___"], "references": ["to travel all around the world", "to strenghten the relationship", "to spend time with them", "to explore the world"], "input": {"head": "PersonX loves ___ than anything", "relation": "xWant", "prompt": "PersonX loves ___ than anything. After, PersonX will want to"}}
{"generation": ["know if PersonY is available"], "references": ["to thank the friend for coming,", "to get ready for the date", "take rest", "feel happy", "to take his friend back home", "take the other person to a restaurant", "to have a romantic relationship", "to go on the date"], "input": {"head": "PersonX makes a date", "relation": "xWant", "prompt": "PersonX makes a date. After, PersonX will want to"}}
{"generation": ["know if the job is still open"], "references": ["to go to work", "to make money", "to gain financial security", "to obtain employment", "to buy a car"], "input": {"head": "PersonX applies for jobs", "relation": "xWant", "prompt": "PersonX applies for jobs. After, PersonX will want to"}}
{"generation": ["talk to you"], "references": ["to share joy with others", "to remain happy", "to have fun", "laugh", "get productive", "get things done"], "input": {"head": "PersonX is in a good mood", "relation": "xWant", "prompt": "PersonX is in a good mood. After, PersonX will want to"}}
{"generation": ["know what the other person wants"], "references": ["to ask for another one", "have another one", "to buy another one", "regret the decision"], "input": {"head": "PersonX wants another one", "relation": "xWant", "prompt": "PersonX wants another one. After, PersonX will want to"}}
{"generation": ["go to the next level"], "references": ["show their friend the way", "sit down", "to help them sit down", "to move out of the desert", "be kind", "to look at the compass"], "input": {"head": "PersonX helps PersonY along", "relation": "xWant", "prompt": "PersonX helps PersonY along. After, PersonX will want to"}}
{"generation": ["know what PersonY thinks about the situation"], "references": ["To make Y understand", "To give guidance", "comfort PersonY", "hug PersonY", "To comfort Y", "To publish results of research"], "input": {"head": "PersonX puts PersonY's mind at ease", "relation": "xWant", "prompt": "PersonX puts PersonY's mind at ease. After, PersonX will want to"}}
{"generation": ["send PersonY to PersonZ"], "references": ["to help PersonY", "to do what was asked by PersonY", "to thank personY for the help", "to hope it goes over well"], "input": {"head": "PersonX delivers PersonY address", "relation": "xWant", "prompt": "PersonX delivers PersonY address. After, PersonX will want to"}}
{"generation": ["know if PersonY is still interested in him"], "references": ["to see the appreciate being thanked", "person Y to feel appreciated", "to enjoy what they did for them", "return the favor", "to promise to return PersonY's favor someday", "to help PersonY someday"], "input": {"head": "PersonX thanks PersonY's profusely", "relation": "xWant", "prompt": "PersonX thanks PersonY's profusely. After, PersonX will want to"}}
{"generation": ["know how much money PersonY has"], "references": ["make a purchase of the item", "to take advantage of the deal", "to save money", "to show off their savings", "to save some money", "tell someone else about the deal"], "input": {"head": "PersonX finds a good deal", "relation": "xWant", "prompt": "PersonX finds a good deal. After, PersonX will want to"}}
{"generation": ["pull PersonY's hand back"], "references": ["to turn off the stove", "to put out the fire", "introduce themselves", "run from the area"], "input": {"head": "PersonX pulls PersonY's hand back", "relation": "xWant", "prompt": "PersonX pulls PersonY's hand back. After, PersonX will want to"}}
{"generation": ["learn how to play the piano"], "references": ["to start their online singing lessons.", "to perform for people.", "to find a singing coach", "practice", "contact singing coach"], "input": {"head": "PersonX wants to learn how to sing", "relation": "xWant", "prompt": "PersonX wants to learn how to sing. After, PersonX will want to"}}
{"generation": ["leave the room"], "references": ["to do nothing with him anymore", "to turn around", "to walk away"], "input": {"head": "PersonX leaves PersonY's alone", "relation": "xWant", "prompt": "PersonX leaves PersonY's alone. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["They run", "avoid drama", "avoid anything to do with the event", "They go home", "avoid trouble", "to do something else", "to not think about what happened", "never talk about the event"], "input": {"head": "PersonX turns a blind eye", "relation": "xWant", "prompt": "PersonX turns a blind eye. After, PersonX will want to"}}
{"generation": ["hurt PersonY"], "references": ["to hurt PersonY emotionally", "To make truce", "to punch PersonY", "to kick PersonY", "To apologies"], "input": {"head": "PersonX wants to hurt PersonY", "relation": "xWant", "prompt": "PersonX wants to hurt PersonY. After, PersonX will want to"}}
{"generation": ["get back to his normal life"], "references": ["reminisce over what happened", "improve one's station", "to celebrate his victory", "take some time alone", "to be recognized", "relax", "to celebrate the event", "to throw a party"], "input": {"head": "PersonX goes from zero to hero", "relation": "xWant", "prompt": "PersonX goes from zero to hero. After, PersonX will want to"}}
{"generation": ["donate plasma to PersonY"], "references": ["eat food", "to earn money", "to help people in trouble", "get's a band aid", "get happiness from it", "to help others"], "input": {"head": "PersonX donates plasma", "relation": "xWant", "prompt": "PersonX donates plasma. After, PersonX will want to"}}
{"generation": ["take the ___ to prevent"], "references": ["test the plan out", "make sure the plan works", "to continue to take his medications", "to stay healthy"], "input": {"head": "PersonX takes ___ to prevent", "relation": "xWant", "prompt": "PersonX takes ___ to prevent. After, PersonX will want to"}}
{"generation": ["know how to get to the century"], "references": ["read", "to live in the moment", "watch tv", "unclear", "to make a statement"], "input": {"head": "PersonX takes place in the century", "relation": "xWant", "prompt": "PersonX takes place in the century. After, PersonX will want to"}}
{"generation": ["join the band"], "references": ["record performance", "to launch the band", "to book performances", "to play music with band", "perform on stage", "to perform in front of the audience"], "input": {"head": "PersonX forms a band", "relation": "xWant", "prompt": "PersonX forms a band. After, PersonX will want to"}}
{"generation": ["sleep"], "references": ["to be energized for the next day", "to relax", "to go to work earlier than usual.", "to feel fresh in the morning."], "input": {"head": "PersonX sleeps tonight", "relation": "xWant", "prompt": "PersonX sleeps tonight. After, PersonX will want to"}}
{"generation": ["play PersonY's new game"], "references": ["to play games with PersonY", "to beat PersonY", "to finish all stages of the new games", "to punch Y in the mouth for winning the game because he cheated.", "to invite their friends to play with them", "to celebrate that X won the game over Y."], "input": {"head": "PersonX plays PersonY's new game", "relation": "xWant", "prompt": "PersonX plays PersonY's new game. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["to solve the case", "to come to a conclusion", "to see what they find out", "Gather information.", "to make sure everyone is professional"], "input": {"head": "PersonX appoints a ___ to investigate", "relation": "xWant", "prompt": "PersonX appoints a ___ to investigate. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["to throw away napkin", "to stop sweat dripping into eyes", "to drink water", "dry forehead"], "input": {"head": "PersonX wipes PersonX's forehead", "relation": "xWant", "prompt": "PersonX wipes PersonX's forehead. After, PersonX will want to"}}
{"generation": ["know what you want to do with the ___ Person"], "references": ["to be known", "to let PersonX know the news", "to book a room", "to change the name"], "input": {"head": "PersonX gives the ___ PersonX's name", "relation": "xWant", "prompt": "PersonX gives the ___ PersonX's name. After, PersonX will want to"}}
{"generation": ["print the string 'Hello World' to the printer"], "references": ["to get hired as a printer", "to check their progress", "to test their knowledge", "put paper in", "to print a paper", "to begin printing materials"], "input": {"head": "PersonX learns the printer 's ___", "relation": "xWant", "prompt": "PersonX learns the printer 's ___. After, PersonX will want to"}}
{"generation": ["get rid of the nails"], "references": ["clean up mess", "place hand in mouth again", "walk away to calm down", "talk to person who caused it", "finish woodwork", "look at fingers"], "input": {"head": "PersonX spits nails", "relation": "xWant", "prompt": "PersonX spits nails. After, PersonX will want to"}}
{"generation": ["be friends with PersonY"], "references": ["to hang out with his friend", "to get lunch with his friend", "eat fun foods", "play games"], "input": {"head": "PersonX becomes great friends", "relation": "xWant", "prompt": "PersonX becomes great friends. After, PersonX will want to"}}
{"generation": ["send the money to PersonY's wallet"], "references": ["drive back home", "to go back to get PersonY's wallet", "retrieve forgotten item", "to remember PersonY's wallet"], "input": {"head": "PersonX forgets PersonY's wallet", "relation": "xWant", "prompt": "PersonX forgets PersonY's wallet. After, PersonX will want to"}}
{"generation": ["burn the ___ at both ends"], "references": ["to enjoy the rewards from working so hard", "To throw away", "to relax", "Put the candle away", "Clean up", "To turn it to ashes"], "input": {"head": "PersonX burns the ___ at both ends", "relation": "xWant", "prompt": "PersonX burns the ___ at both ends. After, PersonX will want to"}}
{"generation": ["know what PersonY likes"], "references": ["to have a break from class", "tell someone about it", "go to another class", "to leave the class"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "xWant", "prompt": "PersonX enjoys PersonY's class. After, PersonX will want to"}}
{"generation": ["know how many people are in the group"], "references": ["to make sure it's the right fit", "To finish the work", "to show independence", "to find another one", "To get the work done", "to show accuracy"], "input": {"head": "PersonX measures the ___ directly", "relation": "xWant", "prompt": "PersonX measures the ___ directly. After, PersonX will want to"}}
{"generation": ["talk to you"], "references": ["to vent his anger", "to shout at him", "to understand the situation and to be cool", "to stay calm"], "input": {"head": "PersonX looks angry", "relation": "xWant", "prompt": "PersonX looks angry. After, PersonX will want to"}}
{"generation": ["know if PersonY is going to be okay"], "references": ["to take the dog to the dog pound", "to return the dog to PersonY", "to ask PersonY out", "to give the animal back", "to make sure it is okay"], "input": {"head": "PersonX catches PersonY's dog", "relation": "xWant", "prompt": "PersonX catches PersonY's dog. After, PersonX will want to"}}
{"generation": ["know what the ___"], "references": ["think of fond memories of visit", "go home", "to go back home", "to visit other places", "to explore more places", "to rest"], "input": {"head": "PersonX visits every ___", "relation": "xWant", "prompt": "PersonX visits every ___. After, PersonX will want to"}}
{"generation": ["use the ___ to increase the ___ again"], "references": ["to try to make amends", "to make a new agreement", "Keep looking for more ways.", "Fire some people."], "input": {"head": "PersonX increases the ___ at the expense", "relation": "xWant", "prompt": "PersonX increases the ___ at the expense. After, PersonX will want to"}}
{"generation": ["use the new PersonX"], "references": ["clock out after work", "to have dinner", "save", "work hard", "to finish their work", "obey bosses", "to travel back home", "to make money", "to fill in back to work forms", "complete the work day"], "input": {"head": "PersonX starts working again", "relation": "xWant", "prompt": "PersonX starts working again. After, PersonX will want to"}}
{"generation": ["get revenge on PersonY"], "references": ["Walk away and do something else", "to tell his friends what he said", "to laugh at Person Y", "to avoid repercussions.", "Keep picking on PersonY", "to continue the belittlement.", "Physically attack PersonY"], "input": {"head": "PersonX picks on PersonY", "relation": "xWant", "prompt": "PersonX picks on PersonY. After, PersonX will want to"}}
{"generation": ["pass around PersonY"], "references": ["to avoid PersonY", "to see PersonY's boss instead of them", "to appear generous", "to bump into personY", "to share", "to have fun", "to hide from PersonY", "to make sure persony has fun"], "input": {"head": "PersonX passes around PersonY", "relation": "xWant", "prompt": "PersonX passes around PersonY. After, PersonX will want to"}}
{"generation": ["share the value of the shares with PersonY"], "references": ["money", "to clock out and go home", "to see if everyone is happy", "home"], "input": {"head": "PersonX shares ___ equally", "relation": "xWant", "prompt": "PersonX shares ___ equally. After, PersonX will want to"}}
{"generation": ["eat again"], "references": ["to enjoy the tastes", "to satisfy their hunger", "to finish their meal", "to be full"], "input": {"head": "PersonX begins to eat", "relation": "xWant", "prompt": "PersonX begins to eat. After, PersonX will want to"}}
{"generation": ["know how to do the same thing"], "references": ["to give up", "to get a better grade", "to work harder", "to be more responsible", "Make the F into an A.", "Lie to his parents."], "input": {"head": "PersonX fails PersonX's math class", "relation": "xWant", "prompt": "PersonX fails PersonX's math class. After, PersonX will want to"}}
{"generation": ["know how PersonY did it"], "references": ["to let them know they did well", "to encourage PersonY", "to assign PersonY more work", "to encourage them to go further", "to praise PersonY"], "input": {"head": "PersonX impresses by PersonY's work", "relation": "xWant", "prompt": "PersonX impresses by PersonY's work. After, PersonX will want to"}}
{"generation": ["know if the person is still alive"], "references": ["to go to sleep", "to go home", "to avoid danger", "to stay safe"], "input": {"head": "PersonX is much more careful", "relation": "xWant", "prompt": "PersonX is much more careful. After, PersonX will want to"}}
{"generation": ["get the best deal possible"], "references": ["people to respect his opinion", "negotiate", "walk away", "to win the negotiation"], "input": {"head": "PersonX plays hardball", "relation": "xWant", "prompt": "PersonX plays hardball. After, PersonX will want to"}}
{"generation": ["move to the right, and PersonY will want"], "references": ["to talk to him", "to tease him", "say hello", "wave"], "input": {"head": "PersonX is right next to PersonY", "relation": "xWant", "prompt": "PersonX is right next to PersonY. After, PersonX will want to"}}
{"generation": ["take PersonY"], "references": ["sleep", "take person y", "to do something", "eat", "to go home", "to make sure Y does it right.", "to lead Y."], "input": {"head": "PersonX can take PersonY", "relation": "xWant", "prompt": "PersonX can take PersonY. After, PersonX will want to"}}
{"generation": ["go back to the hole"], "references": ["to interact with the hole", "to look inside the hole", "to prevent leak", "to see what's inside the hole", "fill the hole", "to shine a flashlight in the hole"], "input": {"head": "PersonX finds a hole", "relation": "xWant", "prompt": "PersonX finds a hole. After, PersonX will want to"}}
{"generation": ["dye his hair red"], "references": ["a new look", "to look in the mirror", "to get attention", "to look unique", "to take some photos of their hair", "to shock everyone"], "input": {"head": "PersonX dyes PersonX's hair blue", "relation": "xWant", "prompt": "PersonX dyes PersonX's hair blue. After, PersonX will want to"}}
{"generation": ["know what to do"], "references": ["to keep an eye on their evolution", "sends a hospital bill", "to dispose of syringes", "to ask them how they feel", "to issue bill for service", "do more research"], "input": {"head": "PersonX prevents ___ in patients", "relation": "xWant", "prompt": "PersonX prevents ___ in patients. After, PersonX will want to"}}
{"generation": ["kiss you"], "references": ["to make out", "to take photgraph", "to hug", "to turn someone on", "to have embrace reciprocated", "Have sex", "Cuddle"], "input": {"head": "PersonX french kisses", "relation": "xWant", "prompt": "PersonX french kisses. After, PersonX will want to"}}
{"generation": ["know what you want to do next"], "references": ["to perform again", "to get a reward", "get a laugh", "get an ovation"], "input": {"head": "PersonX takes a bow", "relation": "xWant", "prompt": "PersonX takes a bow. After, PersonX will want to"}}
{"generation": ["know if PersonY owns a dog"], "references": ["Feed the dog", "walk dog", "to train it to become a good dog", "to take care of it well", "Walk the dog", "play with dog"], "input": {"head": "PersonX owns a dog", "relation": "xWant", "prompt": "PersonX owns a dog. After, PersonX will want to"}}
{"generation": ["sell his one"], "references": ["to get new shoes", "to go home", "to use the shoes for a job interview", "to meet a need", "to try it out", "to eat something tasty"], "input": {"head": "PersonX buys PersonX's one", "relation": "xWant", "prompt": "PersonX buys PersonX's one. After, PersonX will want to"}}
{"generation": ["know if PersonY is the same as PersonX"], "references": ["to be seen as a leader", "to part ways", "to tell everyone that peace is the best", "to persuade", "to take everyone's money and run", "to carry out something", "to continue talking"], "input": {"head": "PersonX convinces every ___", "relation": "xWant", "prompt": "PersonX convinces every ___. After, PersonX will want to"}}
{"generation": ["kill PersonY"], "references": ["to get away with crime", "to get away from the scene", "to destroy all evidences", "to exact revenge", "to get a job", "to meet people"], "input": {"head": "PersonX murders PersonY", "relation": "xWant", "prompt": "PersonX murders PersonY. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to fight", "to give up", "to figure out the situation.", "to cheer up", "to calm down", "to scream", "to calm down."], "input": {"head": "PersonX becomes very frustrated", "relation": "xWant", "prompt": "PersonX becomes very frustrated. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to go online and search for a sale", "to get home quickly", "to enter the store and buy everything", "to do something else", "to call and find out the progress", "to stop waiting"], "input": {"head": "PersonX waits all day", "relation": "xWant", "prompt": "PersonX waits all day. After, PersonX will want to"}}
{"generation": ["know more about the person"], "references": ["to be loved back", "to consummate the love", "to tell the person he loves them", "to get married", "to love and care for someone", "to propose marriage"], "input": {"head": "PersonX quickly fell in love", "relation": "xWant", "prompt": "PersonX quickly fell in love. After, PersonX will want to"}}
{"generation": ["go to the door"], "references": ["monitor the door", "take shifts with another person", "to release the animal from the trap away from the door", "to save his life from enemies", "to guard his home", "to bring the animal to animal control"], "input": {"head": "PersonX keeps the ___ from the door", "relation": "xWant", "prompt": "PersonX keeps the ___ from the door. After, PersonX will want to"}}
{"generation": ["throw a frisbee"], "references": ["to have fun", "to enjoy the nice weather", "have fun", "come back home"], "input": {"head": "PersonX throws a frisbee", "relation": "xWant", "prompt": "PersonX throws a frisbee. After, PersonX will want to"}}
{"generation": ["be friends with PersonY"], "references": ["to cry", "to go out and make more friends", "to make friends", "to so something fun"], "input": {"head": "PersonX does n't have many friends", "relation": "xWant", "prompt": "PersonX does n't have many friends. After, PersonX will want to"}}
{"generation": ["know if you want to play with him"], "references": ["to give up", "to practice more in order to succeed next time", "to sleep", "to go home", "to get better", "to go home and sulk alone"], "input": {"head": "PersonX does n't make the cut", "relation": "xWant", "prompt": "PersonX does n't make the cut. After, PersonX will want to"}}
{"generation": ["be the one to do the influencing"], "references": ["to take charge", "give contact information", "for people to be helped", "to change rules", "look for person's reaction", "to opress people", "to things to work out well"], "input": {"head": "PersonX exerts PersonX's influence", "relation": "xWant", "prompt": "PersonX exerts PersonX's influence. After, PersonX will want to"}}
{"generation": ["know if PersonY is okay"], "references": ["get their way", "fight", "talk", "argue", "slam the door", "leave"], "input": {"head": "PersonX confronts PersonY's roommate", "relation": "xWant", "prompt": "PersonX confronts PersonY's roommate. After, PersonX will want to"}}
{"generation": ["get rid of the item"], "references": ["to apologise", "to be more attentive", "get paper towel", "wipe it out", "to clean clothes", "to clean the mess"], "input": {"head": "PersonX accidentally poured", "relation": "xWant", "prompt": "PersonX accidentally poured. After, PersonX will want to"}}
{"generation": ["get to the next level"], "references": ["to scope out the place", "to get a good seat"], "input": {"head": "PersonX gets there early", "relation": "xWant", "prompt": "PersonX gets there early. After, PersonX will want to"}}
{"generation": ["know who is in PersonY"], "references": ["to watch a movie", "to find his mom", "to look at everything", "leave", "to ask the price of the house", "see what is in there", "to go inside"], "input": {"head": "PersonX peers inside", "relation": "xWant", "prompt": "PersonX peers inside. After, PersonX will want to"}}
{"generation": ["go to the hospital"], "references": ["Engage in leisure activities with PersonY's daughter", "Have an enjoyable social call", "Catch up on old times", "to go home", "to visit with persony"], "input": {"head": "PersonX visits PersonY's daughter", "relation": "xWant", "prompt": "PersonX visits PersonY's daughter. After, PersonX will want to"}}
{"generation": ["know if PersonY is okay"], "references": ["to get a dog", "get dog food"], "input": {"head": "PersonX begs PersonY's parents for one", "relation": "xWant", "prompt": "PersonX begs PersonY's parents for one. After, PersonX will want to"}}
{"generation": ["know what to do next"], "references": ["to read a response", "to hear PersonY's response", "to smile at PersonY", "to talk to PersonY about the note", "to await a response", "to write another note"], "input": {"head": "PersonX gives PersonY a note", "relation": "xWant", "prompt": "PersonX gives PersonY a note. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["get up", "to rest", "to sleep", "rest"], "input": {"head": "PersonX lays on PersonY's bed", "relation": "xWant", "prompt": "PersonX lays on PersonY's bed. After, PersonX will want to"}}
{"generation": ["be able to do more than just show the user"], "references": ["to reach the end", "to find purpose", "to ask help someone", "to reach home", "to find direction", "to meet people", "to keep going"], "input": {"head": "PersonX has a long way to go", "relation": "xWant", "prompt": "PersonX has a long way to go. After, PersonX will want to"}}
{"generation": ["know who is PersonX"], "references": ["to be president", "to join politics", "to work for the community", "to help community"], "input": {"head": "PersonX provides ___ to the public", "relation": "xWant", "prompt": "PersonX provides ___ to the public. After, PersonX will want to"}}
{"generation": ["go back to the original world"], "references": ["to go crazy", "Make new sense.", "Find his sense.", "to do something reckless"], "input": {"head": "PersonX loses PersonX's sense", "relation": "xWant", "prompt": "PersonX loses PersonX's sense. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to catch someone before they leave", "to check his invention", "to stop the vase from falling", "to keep flying", "to stop moving", "to check the ceiling"], "input": {"head": "PersonX flies across the room", "relation": "xWant", "prompt": "PersonX flies across the room. After, PersonX will want to"}}
{"generation": ["know what the person is doing"], "references": ["to learn", "call the police", "to investigate", "to find out what happened", "chase after the thing they are watching", "to stay hidden so that they are not noticed", "take note of actions"], "input": {"head": "PersonX watches intently", "relation": "xWant", "prompt": "PersonX watches intently. After, PersonX will want to"}}
{"generation": ["know what happened to ___"], "references": ["Stop listening.", "Turn off something.", "to ask a question", "to leave"], "input": {"head": "PersonX hears the end of ___", "relation": "xWant", "prompt": "PersonX hears the end of ___. After, PersonX will want to"}}
{"generation": ["go to the gym"], "references": ["win a game", "be the best at something", "win the contest", "to get better", "to win the competition", "take part in the contest"], "input": {"head": "PersonX practices all day", "relation": "xWant", "prompt": "PersonX practices all day. After, PersonX will want to"}}
{"generation": ["help PersonY's brother again"], "references": ["to relax", "a glass of water", "to go home", "to be thanked", "to get some rest", "to go home and rest"], "input": {"head": "PersonX helps PersonY's brother", "relation": "xWant", "prompt": "PersonX helps PersonY's brother. After, PersonX will want to"}}
{"generation": ["play the song again"], "references": ["to play beautiful music", "to see if the guitar still works", "start to play quitar", "to show skill", "take a bow", "to play a good performance"], "input": {"head": "PersonX tunes PersonX's guitar", "relation": "xWant", "prompt": "PersonX tunes PersonX's guitar. After, PersonX will want to"}}
{"generation": ["know if PersonY is in the same room as"], "references": ["tell others the persons name", "to indite y", "talk with that person", "to gather information", "to ask them out.", "to report them."], "input": {"head": "PersonX knows PersonY's name", "relation": "xWant", "prompt": "PersonX knows PersonY's name. After, PersonX will want to"}}
{"generation": ["know what PersonY's favorite color is"], "references": ["to make sure PersonY succeeds", "to pay PersonY", "to find more students", "to help PersonY know how to do things", "to thank PersonY", "to evaluate PersonY", "to teach PersonY"], "input": {"head": "PersonX offer to teach PersonY", "relation": "xWant", "prompt": "PersonX offer to teach PersonY. After, PersonX will want to"}}
{"generation": ["surf"], "references": ["to put on their wetsuit", "to show off their skills", "to relax afterwards", "to surf", "to go to the beach", "to grab their board", "to wear sunscreen", "to catch some waves"], "input": {"head": "PersonX loves to surf", "relation": "xWant", "prompt": "PersonX loves to surf. After, PersonX will want to"}}
{"generation": ["know if PersonY is still alive"], "references": ["to see what PersonY is doing", "to talk to personY", "to talk to PersonY", "to ask if they want to play a game"], "input": {"head": "PersonX sees PersonY alone", "relation": "xWant", "prompt": "PersonX sees PersonY alone. After, PersonX will want to"}}
{"generation": ["eat ___ again"], "references": ["to fast", "to loose weight", "to get healthy", "to goto GYM as he ate for 100days", "lose weight", "to no longer be sick"], "input": {"head": "PersonX eats ___ for days", "relation": "xWant", "prompt": "PersonX eats ___ for days. After, PersonX will want to"}}
{"generation": ["get rid of the person who is causing the problem"], "references": ["to get medicine", "To become normal", "to drink some water", "go to the hospital", "to take a break", "To go back to normal"], "input": {"head": "PersonX starts to swell", "relation": "xWant", "prompt": "PersonX starts to swell. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to spray air freshner", "to light a candle", "look for the smell", "clean up the mess", "Got gloves", "use air freshener", "Spot treated", "seek out the source of the smell"], "input": {"head": "PersonX notices a strange smell", "relation": "xWant", "prompt": "PersonX notices a strange smell. After, PersonX will want to"}}
{"generation": ["give you PersonY account"], "references": ["to split the money", "to hide the evidence"], "input": {"head": "PersonX gives you PersonY account", "relation": "xWant", "prompt": "PersonX gives you PersonY account. After, PersonX will want to"}}
{"generation": ["know how to get the ___"], "references": ["to pick up a paycheck", "to cash a paychck"], "input": {"head": "PersonX teaches ___ in schools", "relation": "xWant", "prompt": "PersonX teaches ___ in schools. After, PersonX will want to"}}
{"generation": ["go to the er"], "references": ["for them to heal", "to admit someone to the er", "to make sure they see a doctor", "to stay at the ER", "to explain to the doctor", "to find out what is wrong", "to fill out forms"], "input": {"head": "PersonX takes ___ to the er", "relation": "xWant", "prompt": "PersonX takes ___ to the er. After, PersonX will want to"}}
{"generation": ["know what you did to get him to stand up"], "references": ["to show their gratitude and appreciation.", "to see this person perform again.", "to show appreciation", "to respect someone"], "input": {"head": "PersonX gives ___ a standing ovation", "relation": "xWant", "prompt": "PersonX gives ___ a standing ovation. After, PersonX will want to"}}
{"generation": ["know what happened to PersonY's phone"], "references": ["to retrace their steps", "for PersonY not to find out it's lost", "to find it", "to cover it up", "to apologize", "to remember where the phone is", "to pay PersonY some money for the phone"], "input": {"head": "PersonX has lost PersonY's phone", "relation": "xWant", "prompt": "PersonX has lost PersonY's phone. After, PersonX will want to"}}
{"generation": ["talk to PersonY"], "references": ["ask what is wrong", "to talk about healthy choices", "to punish PersonY", "to suffocate PersonY", "to discuss honesty", "talk about situation"], "input": {"head": "PersonX hangs PersonY's head", "relation": "xWant", "prompt": "PersonX hangs PersonY's head. After, PersonX will want to"}}
{"generation": ["fight you"], "references": ["to make people nervous", "to feel powerful", "to be avoided", "to keep doing it", "to be in charge"], "input": {"head": "PersonX bosses ___ around", "relation": "xWant", "prompt": "PersonX bosses ___ around. After, PersonX will want to"}}
{"generation": ["know if PersonY is still alive"], "references": ["to be ashamed", "to tell Person Y the reason that he did that", "to apologize to Person Y", "to apologize", "to diffuse the situation.", "to defend from further attacks.", "to make sure Y does not fight back."], "input": {"head": "PersonX smacks PersonY", "relation": "xWant", "prompt": "PersonX smacks PersonY. After, PersonX will want to"}}
{"generation": ["leave the ___ alone"], "references": ["to move on to something else", "to walk away", "to start fresh", "to be less reliant"], "input": {"head": "PersonX leaves the ___ alone", "relation": "xWant", "prompt": "PersonX leaves the ___ alone. After, PersonX will want to"}}
{"generation": ["go to the farm to see the cows"], "references": ["to to feed them", "start their own farm", "volunteer at farm", "to pet the animals", "learn about animals", "to check out the animals", "to buy some vegtables"], "input": {"head": "PersonX visits a farm", "relation": "xWant", "prompt": "PersonX visits a farm. After, PersonX will want to"}}
{"generation": ["set the rights of PersonY"], "references": ["to tell everyone to calm down", "to make new policies", "to decide the issue", "to implement the decision"], "input": {"head": "PersonX sets ___ to rights", "relation": "xWant", "prompt": "PersonX sets ___ to rights. After, PersonX will want to"}}
{"generation": ["go to the ___"], "references": ["to wish his father to go to heaven", "to pray", "to make a speech", "to make a toast", "to talk to father one last time", "to miss father", "to cry"], "input": {"head": "PersonX attends PersonX's father 's ___", "relation": "xWant", "prompt": "PersonX attends PersonX's father 's ___. After, PersonX will want to"}}
{"generation": ["know if PersonY has a job"], "references": ["To purchase food", "to go pay bills", "to sign a payback agreement", "to pocket money", "to go to someone else to ask for money", "to keep money in wallet", "to thank PersonY", "to say thanks to PersonY"], "input": {"head": "PersonX asks PersonY for money", "relation": "xWant", "prompt": "PersonX asks PersonY for money. After, PersonX will want to"}}
{"generation": ["move PersonY's car"], "references": ["make sure they are parked correctly", "to get out of the car", "to wash the car.", "get out of car", "to place something else in its place.", "to lock the car"], "input": {"head": "PersonX moves PersonX's car", "relation": "xWant", "prompt": "PersonX moves PersonX's car. After, PersonX will want to"}}
{"generation": ["get rid of PersonY"], "references": ["to collect the crop", "wash it", "to sew it", "to get rid of it", "to burn it", "to get past it"], "input": {"head": "PersonX cuts a swath", "relation": "xWant", "prompt": "PersonX cuts a swath. After, PersonX will want to"}}
{"generation": ["call ___"], "references": ["to be appreciated.", "to make something else", "a lucrative career", "to get money.", "to go to a good college", "to continue making soething"], "input": {"head": "PersonX always makes ___", "relation": "xWant", "prompt": "PersonX always makes ___. After, PersonX will want to"}}
{"generation": ["get back to the game"], "references": ["to have fun", "to relax", "to be miserable", "to drown their sorrows"], "input": {"head": "PersonX goes down the tubes", "relation": "xWant", "prompt": "PersonX goes down the tubes. After, PersonX will want to"}}
{"generation": ["know why PersonY did it"], "references": ["to build good relationship with people", "make friends with Person Y", "to enforce more rules for Person Y", "forget the incident", "it to not happen again", "to take people into confidence"], "input": {"head": "PersonX forgives ___ PersonY's trespasses", "relation": "xWant", "prompt": "PersonX forgives ___ PersonY's trespasses. After, PersonX will want to"}}
{"generation": ["play a game of basketball"], "references": ["improve skills", "meet people", "to demonstrate athleticism", "to train for the olympics", "to be in shape", "compete", "to try out for a professional soccer team", "get exercise"], "input": {"head": "PersonX plays many sports", "relation": "xWant", "prompt": "PersonX plays many sports. After, PersonX will want to"}}
{"generation": ["go to the next area"], "references": ["to lie down", "take a nap", "to park the car", "to enter the event", "to sit down"], "input": {"head": "PersonX finds a good spot", "relation": "xWant", "prompt": "PersonX finds a good spot. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["sleep", "to establish healthy habits", "get some food", "to go back to work or school", "breath deeply", "to follow up with the doctor", "get a drink"], "input": {"head": "PersonX feels a ___ better", "relation": "xWant", "prompt": "PersonX feels a ___ better. After, PersonX will want to"}}
{"generation": ["replace the tire"], "references": ["to drive home", "to keep driving", "to be paid", "drive the vehicle", "to buy another spare", "to get in the car", "to get a move on", "to put the other tire away"], "input": {"head": "PersonX replaces the tire", "relation": "xWant", "prompt": "PersonX replaces the tire. After, PersonX will want to"}}
{"generation": ["know what the ___ is"], "references": ["to have fun with their significant other", "to share their findings", "to do better with coworkers", "to test it out"], "input": {"head": "PersonX gets the ___ right", "relation": "xWant", "prompt": "PersonX gets the ___ right. After, PersonX will want to"}}
{"generation": ["kill PersonY, and PersonY will want to"], "references": ["to have a purpose.", "To help Y", "to help PersonY", "to make PersonY feel better about themself", "to  see a reason for life.", "To assist Y"], "input": {"head": "PersonX justifies PersonY's existence", "relation": "xWant", "prompt": "PersonX justifies PersonY's existence. After, PersonX will want to"}}
{"generation": ["know what happened to PersonX's family"], "references": ["to keep his family happy", "to smile", "to hug everyone", "to enjoy the holidays with his family"], "input": {"head": "PersonX surprises PersonX's family", "relation": "xWant", "prompt": "PersonX surprises PersonX's family. After, PersonX will want to"}}
{"generation": ["help you with problems"], "references": ["to stay humble", "to ensure that problems do not occur in the future", "to thank the people for coming to him", "to be rewarded"], "input": {"head": "PersonX helps ___ with problems", "relation": "xWant", "prompt": "PersonX helps ___ with problems. After, PersonX will want to"}}
{"generation": ["go to the mall"], "references": ["arrive at destination", "go back home"], "input": {"head": "PersonX drives on the highway", "relation": "xWant", "prompt": "PersonX drives on the highway. After, PersonX will want to"}}
{"generation": ["replace the tire"], "references": ["fix the old tire", "drive", "to wash their hands", "rest"], "input": {"head": "PersonX replaces PersonX's tire", "relation": "xWant", "prompt": "PersonX replaces PersonX's tire. After, PersonX will want to"}}
{"generation": ["become a lawyer"], "references": ["to win in court", "client", "to get clients", "practice", "celebrate with family", "get a job at a law firm"], "input": {"head": "PersonX becomes a lawyer", "relation": "xWant", "prompt": "PersonX becomes a lawyer. After, PersonX will want to"}}
{"generation": ["know how to get rid of PersonX"], "references": ["to show off", "to get smarter", "She graduates College.", "Becomes the doctor.", "To further her academics", "To pass a test"], "input": {"head": "PersonX becomes smarter", "relation": "xWant", "prompt": "PersonX becomes smarter. After, PersonX will want to"}}
{"generation": ["kiss PersonY again"], "references": ["to be loved", "kiss them again", "to kiss PersonY", "to make love", "to grab PersonY", "ask them on a date"], "input": {"head": "PersonX wants to kiss PersonY", "relation": "xWant", "prompt": "PersonX wants to kiss PersonY. After, PersonX will want to"}}
{"generation": ["play the game again"], "references": ["take pictures", "to eat something", "to perform in front of others", "invite friends", "to go home", "to rest a bit", "has to impress"], "input": {"head": "PersonX has tons of fun", "relation": "xWant", "prompt": "PersonX has tons of fun. After, PersonX will want to"}}
{"generation": ["drink the glass"], "references": ["offer PersonY some cheese and crackers", "to sit down and talk to PersonY", "pour themselves a drink", "to wash the glass", "to put it away", "close cabinet"], "input": {"head": "PersonX hands PersonY a glass", "relation": "xWant", "prompt": "PersonX hands PersonY a glass. After, PersonX will want to"}}
{"generation": ["return to PersonY"], "references": ["to impress", "to propose to her", "to love", "to talk things out", "to look at trees", "to go for a walk"], "input": {"head": "PersonX takes PersonY outside", "relation": "xWant", "prompt": "PersonX takes PersonY outside. After, PersonX will want to"}}
{"generation": ["get the ___"], "references": ["set new goal", "Use the thing", "to prepare for her first day on the job", "to attend orientation", "celebrate", "tell other people about it.", "to go to the office building"], "input": {"head": "PersonX finally got ___", "relation": "xWant", "prompt": "PersonX finally got ___. After, PersonX will want to"}}
{"generation": ["play for PersonX"], "references": ["to win", "get applause", "receive positive feedback", "to practice more", "to have fun", "to take a rest"], "input": {"head": "PersonX plays for PersonX", "relation": "xWant", "prompt": "PersonX plays for PersonX. After, PersonX will want to"}}
{"generation": ["know how to get the next person"], "references": ["drink water", "to make abs", "make something to eat", "to drink water", "have some rest", "relax", "to eat healthy"], "input": {"head": "PersonX gets some exercise", "relation": "xWant", "prompt": "PersonX gets some exercise. After, PersonX will want to"}}
{"generation": ["ride PersonX's bike"], "references": ["buy helmet", "to spend the whole day riding their bike", "go on a bike ride", "to race with others"], "input": {"head": "PersonX loves riding PersonX's bike", "relation": "xWant", "prompt": "PersonX loves riding PersonX's bike. After, PersonX will want to"}}
{"generation": ["help PersonY"], "references": ["help person y keep having courage", "to watch them try", "To be helpful", "give them ways to stay brave", "to see them succeed", "To encourage Y"], "input": {"head": "PersonX gives PersonY courage", "relation": "xWant", "prompt": "PersonX gives PersonY courage. After, PersonX will want to"}}
{"generation": ["see the post"], "references": ["check for comments", "attention", "to store memorable pictures", "to share with friends", "to show pictures to facebook friends", "logout facebook"], "input": {"head": "PersonX posts ___ on fb", "relation": "xWant", "prompt": "PersonX posts ___ on fb. After, PersonX will want to"}}
{"generation": ["know what the ___"], "references": ["to place the knife on a table", "to take what's in the box", "to see what inside the box", "to start cutting", "to use the item found inside the box right away", "to close blade"], "input": {"head": "PersonX cuts open ___", "relation": "xWant", "prompt": "PersonX cuts open ___. After, PersonX will want to"}}
{"generation": ["leave"], "references": ["to apologize for the mistake", "to pick it up", "get a broom to sweep it up", "pick it up"], "input": {"head": "PersonX drops ___ on the floor", "relation": "xWant", "prompt": "PersonX drops ___ on the floor. After, PersonX will want to"}}
{"generation": ["drag PersonY along"], "references": ["to show PersonY the museum", "to take PersonY on the fair rides", "to enjoy the party", "someone to come with", "companionship on the trip", "to dance with Y"], "input": {"head": "PersonX drags PersonY along", "relation": "xWant", "prompt": "PersonX drags PersonY along. After, PersonX will want to"}}
{"generation": ["know what PersonY is doing"], "references": ["the item to be protected", "wants a relationship", "wants company", "the item to be safe"], "input": {"head": "PersonX takes it everywhere with PersonY", "relation": "xWant", "prompt": "PersonX takes it everywhere with PersonY. After, PersonX will want to"}}
{"generation": ["go to the next tree"], "references": ["see a doctor to check any injuries", "to cry out in pain", "to laugh at themself", "get hurt", "get up and limp back into the house", "call out for help", "tell someone the story of falling out of the tree", "scream"], "input": {"head": "PersonX falls from the tree", "relation": "xWant", "prompt": "PersonX falls from the tree. After, PersonX will want to"}}
{"generation": ["know if ___ is a friend"], "references": ["to ask for more money", "to express thanks", "to get some help", "to get a loan"], "input": {"head": "PersonX asks ___ for money", "relation": "xWant", "prompt": "PersonX asks ___ for money. After, PersonX will want to"}}
{"generation": ["know if PersonY is still alive"], "references": ["to complete an observation survey", "to catch him on the spot", "to find out Y's house", "to get close to persony", "check his activities", "to record persony's action"], "input": {"head": "PersonX watches PersonY", "relation": "xWant", "prompt": "PersonX watches PersonY. After, PersonX will want to"}}
{"generation": ["know how to get the best out of PersonX"], "references": ["to gamble", "to buy something", "to do something", "to be happy"], "input": {"head": "PersonX feels lucky", "relation": "xWant", "prompt": "PersonX feels lucky. After, PersonX will want to"}}
{"generation": ["get back to the original position"], "references": ["save himself", "hold breath", "flail around", "swim", "choke on water", "drop some weight"], "input": {"head": "PersonX starts to sink", "relation": "xWant", "prompt": "PersonX starts to sink. After, PersonX will want to"}}
{"generation": ["know if PersonY is a person or not"], "references": ["to make use of information", "to show support", "to explain PersonY's example", "to go on with the presentation", "work", "Assignment"], "input": {"head": "PersonX takes PersonY example", "relation": "xWant", "prompt": "PersonX takes PersonY example. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["Joins in on what's going on", "make an informed conclusion on why its going on", "to investigate why its going on", "Walks away", "to say something", "to keep watching"], "input": {"head": "PersonX sees what was going on", "relation": "xWant", "prompt": "PersonX sees what was going on. After, PersonX will want to"}}
{"generation": ["know what the ___ is"], "references": ["to reach a conclusion", "Ask someone for their opinion", "Look up more information", "to make life easier", "to share it with others", "to be correct"], "input": {"head": "PersonX interprets the ___ in ways", "relation": "xWant", "prompt": "PersonX interprets the ___ in ways. After, PersonX will want to"}}
{"generation": ["be with PersonY"], "references": ["to propose marriage", "to feel love back.", "to get engaged", "to get married", "to help plan wedding", "to spend more time with Peterson Y."], "input": {"head": "PersonX loves PersonY with all my heart", "relation": "xWant", "prompt": "PersonX loves PersonY with all my heart. After, PersonX will want to"}}
{"generation": ["bite PersonY's ___ to keep"], "references": ["to spit out the blood", "rinse their mouth out"], "input": {"head": "PersonX bites PersonX's ___ to keep", "relation": "xWant", "prompt": "PersonX bites PersonX's ___ to keep. After, PersonX will want to"}}
{"generation": ["know if PersonY is still alive"], "references": ["to know everyone's name", "to figure out why they forgot", "to think about them", "to share past experiences", "to be polite", "to greet"], "input": {"head": "PersonX remembers PersonY's name", "relation": "xWant", "prompt": "PersonX remembers PersonY's name. After, PersonX will want to"}}
{"generation": ["know where the next ride is"], "references": ["To take a long drive", "to go home", "get something to eat", "to drop people off", "To go on vacation"], "input": {"head": "PersonX takes ___ for a ride", "relation": "xWant", "prompt": "PersonX takes ___ for a ride. After, PersonX will want to"}}
{"generation": ["know what you think"], "references": ["to say goodbye", "to cheer someone up", "to leave for work", "to be close to me", "to spend a lot of time with me", "to be seen as nice"], "input": {"head": "PersonX makes my day", "relation": "xWant", "prompt": "PersonX makes my day. After, PersonX will want to"}}
{"generation": ["know who bought PersonX's wife"], "references": ["to wish her for her birthday", "to express his love", "to celebrate a milestone", "to give something to the wife", "to ask the wife if she likes it"], "input": {"head": "PersonX buys PersonX's wife ___", "relation": "xWant", "prompt": "PersonX buys PersonX's wife ___. After, PersonX will want to"}}
{"generation": ["know what the other person is doing"], "references": ["to go home", "go home", "to use the bathroom", "to use the restroom", "use the bathroom"], "input": {"head": "PersonX leaves the table", "relation": "xWant", "prompt": "PersonX leaves the table. After, PersonX will want to"}}
{"generation": ["know if the other person is the same person as"], "references": ["to listen to it", "to see what happens", "to learn it", "to hope it arrives on time", "to reinforce his battlements", "to prepare for battle"], "input": {"head": "PersonX expects another ___", "relation": "xWant", "prompt": "PersonX expects another ___. After, PersonX will want to"}}
{"generation": ["go to the next room"], "references": ["to take rest", "to be free", "to leave the place", "run", "to regain control", "to get away"], "input": {"head": "PersonX breaks free", "relation": "xWant", "prompt": "PersonX breaks free. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["have a conversaton", "talk to person", "to ask questions", "to talk to someone", "solidify plans", "leave a voice mail", "plan a get together", "say goodbye", "hang up"], "input": {"head": "PersonX calls ___ the next day", "relation": "xWant", "prompt": "PersonX calls ___ the next day. After, PersonX will want to"}}
{"generation": ["know how to do it"], "references": ["Keep giving them advice.", "Make sure they're doing the right thing.", "to add to them", "to review them", "to take a trip", "to pack the suitcase"], "input": {"head": "PersonX puts PersonY's ___ together", "relation": "xWant", "prompt": "PersonX puts PersonY's ___ together. After, PersonX will want to"}}
{"generation": ["pay PersonY's ___ to the king"], "references": ["To stay in good standing", "tell others about the event", "To gain respect from the King", "remember the event"], "input": {"head": "PersonX pays PersonX's ___ to the king", "relation": "xWant", "prompt": "PersonX pays PersonX's ___ to the king. After, PersonX will want to"}}
{"generation": ["know who is the one who is the most powerful"], "references": ["to apologize", "to continue dominating", "to win something", "to give it a rest"], "input": {"head": "PersonX turns the tables", "relation": "xWant", "prompt": "PersonX turns the tables. After, PersonX will want to"}}
{"generation": ["get rid of PersonY's car"], "references": ["polish", "to dry the car", "to get paid", "to have a nap", "to wax the car", "dry off"], "input": {"head": "PersonX washes PersonY's car", "relation": "xWant", "prompt": "PersonX washes PersonY's car. After, PersonX will want to"}}
{"generation": ["know if PersonY is happy or sad"], "references": ["to look at their skin.", "to close the album", "to tell him his conclusions", "to examinate personY's face", "to look at their eyes.", "to put the album away"], "input": {"head": "PersonX looks at PersonY's face", "relation": "xWant", "prompt": "PersonX looks at PersonY's face. After, PersonX will want to"}}
{"generation": ["talk to PersonY"], "references": ["to go home.", "to drink and forget the scene", "to go out and have fun.", "to follow up with witnesses", "to hide", "meet the police chief to discuss their findings"], "input": {"head": "PersonX leaves the scene", "relation": "xWant", "prompt": "PersonX leaves the scene. After, PersonX will want to"}}
{"generation": ["grind ___ for a week"], "references": ["To finish work", "to get rewarded", "To complete the work", "to finish their work"], "input": {"head": "PersonX grinds ___ for a week", "relation": "xWant", "prompt": "PersonX grinds ___ for a week. After, PersonX will want to"}}
{"generation": ["talk to PersonY"], "references": ["to do something productive", "to let it charge", "use any information that was gained", "understand any information that was gained"], "input": {"head": "PersonX puts the phone away", "relation": "xWant", "prompt": "PersonX puts the phone away. After, PersonX will want to"}}
{"generation": ["visit PersonY's mother's ___"], "references": ["to sit around and chat", "to have dinner", "to see how they are doing", "to say hello"], "input": {"head": "PersonX visits PersonY's mother 's ___", "relation": "xWant", "prompt": "PersonX visits PersonY's mother 's ___. After, PersonX will want to"}}
{"generation": ["meet the band"], "references": ["to start playing music", "to congratulate the band", "to thank the band for the performance", "to shake hands with the band members", "to say hello", "to sign a contract"], "input": {"head": "PersonX meets the band", "relation": "xWant", "prompt": "PersonX meets the band. After, PersonX will want to"}}
{"generation": ["talk to PersonY"], "references": ["let go", "shave chin", "to brush their hair.", "to start a fight", "to push him over", "examine side of head", "to kiss them.", "to horseplay"], "input": {"head": "PersonX tips PersonY's head", "relation": "xWant", "prompt": "PersonX tips PersonY's head. After, PersonX will want to"}}
{"generation": ["know how to lose weight"], "references": ["buy new clothes", "celebrate"], "input": {"head": "PersonX loses 100 pounds", "relation": "xWant", "prompt": "PersonX loses 100 pounds. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to celebrate", "to meet new people", "She opens the door.", "She invites them in.", "to socialize", "to have fun"], "input": {"head": "PersonX has a dinner party", "relation": "xWant", "prompt": "PersonX has a dinner party. After, PersonX will want to"}}
{"generation": ["grab PersonY's hand"], "references": ["take something", "ask person y why they were hiding it", "use the object they found", "move away from PersonY"], "input": {"head": "PersonX reaches behind PersonY", "relation": "xWant", "prompt": "PersonX reaches behind PersonY. After, PersonX will want to"}}
{"generation": ["ride a bike"], "references": ["to take a trip into the country", "to have a drink", "to get a car", "to enjoy his leisure", "to relax himself", "to get in shape"], "input": {"head": "PersonX rides bikes", "relation": "xWant", "prompt": "PersonX rides bikes. After, PersonX will want to"}}
{"generation": ["move PersonY to the right"], "references": ["to continue helping PersonY", "to follow suit", "apologize", "encourage", "to take a rest", "to be successful"], "input": {"head": "PersonX takes PersonY step", "relation": "xWant", "prompt": "PersonX takes PersonY step. After, PersonX will want to"}}
{"generation": ["set the cap to ___"], "references": ["to wipe their forehead", "to marry her", "to settle down in life", "to set the hat at an angle", "to sit down", "to rub their head", "to rest", "to check the look in a morror", "to raise the cap"], "input": {"head": "PersonX sets PersonX's cap at ___", "relation": "xWant", "prompt": "PersonX sets PersonX's cap at ___. After, PersonX will want to"}}
{"generation": ["move to the next position"], "references": ["to celebrate", "to help their subordinates", "to get a promotion", "to become a boss", "to improve her career further", "to have nicer things"], "input": {"head": "PersonX improves PersonX's position", "relation": "xWant", "prompt": "PersonX improves PersonX's position. After, PersonX will want to"}}
{"generation": ["talk to PersonY"], "references": ["finish getting person y better.", "tell person y what to do to keep themselves healthy.", "receive thanks", "have the favor returned", "let them rest", "periodically check on their condition", "to be paid", "peron y to stay healthy"], "input": {"head": "PersonX nurses PersonY back", "relation": "xWant", "prompt": "PersonX nurses PersonY back. After, PersonX will want to"}}
{"generation": ["know if PersonY is still alive"], "references": ["Apologize for hurting Y's feelings.", "Explain reasoning to Y", "Get away from Y", "Get some alone time", "To talk to PersonY", "To get away from PersonY"], "input": {"head": "PersonX rejects PersonY", "relation": "xWant", "prompt": "PersonX rejects PersonY. After, PersonX will want to"}}
{"generation": ["know how to get the poem published"], "references": ["to show the poetry to others", "to try to get their poetry published", "to publish the poetry", "to recite their poetry to family", "to share their poetry online"], "input": {"head": "PersonX writes poetry", "relation": "xWant", "prompt": "PersonX writes poetry. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["to celebrate", "have a party", "go to sleep", "take a nap", "to clean up the spill", "to throw the paper away"], "input": {"head": "PersonX gets ___ on the paper", "relation": "xWant", "prompt": "PersonX gets ___ on the paper. After, PersonX will want to"}}
{"generation": ["know what the other person thinks about the matter"], "references": ["invests money", "to gather many supporters", "earn lots of money", "decision", "To become successful", "enjoyment", "to earn lots of money", "to set up a hospital", "ponders the future", "To be famous"], "input": {"head": "PersonX thinks would become", "relation": "xWant", "prompt": "PersonX thinks would become. After, PersonX will want to"}}
{"generation": ["use the same method to get the same result"], "references": ["to go to work", "to take pictures", "to get dressed", "to go out on the town", "to take a photo", "to take a shower"], "input": {"head": "PersonX looks better", "relation": "xWant", "prompt": "PersonX looks better. After, PersonX will want to"}}
{"generation": ["know what you think of the game"], "references": ["to impress", "for people to take notice", "works hard", "to make a toast", "let nothing interfere in their work", "to drink champagne"], "input": {"head": "PersonX pulls out all the stops", "relation": "xWant", "prompt": "PersonX pulls out all the stops. After, PersonX will want to"}}
{"generation": ["know if PersonX is the same as PersonY"], "references": ["to write down what they see", "to go to lunch", "to use their knowledge", "to go home", "to prepare for tomorrow"], "input": {"head": "PersonX sees every ___", "relation": "xWant", "prompt": "PersonX sees every ___. After, PersonX will want to"}}
{"generation": ["know what PersonY is going to say"], "references": ["to keep PersonY going", "to be in power", "to boss more people around", "to make sure PersonY doesn't fail", "to think of something else", "to see the reaction", "for PersonY to listen"], "input": {"head": "PersonX tells PersonY to say", "relation": "xWant", "prompt": "PersonX tells PersonY to say. After, PersonX will want to"}}
{"generation": ["do the same thing to PersonY"], "references": ["to flash someone", "To reach an area of the body", "to ask the doctor a ?", "To stretch"], "input": {"head": "PersonX opens PersonX's legs", "relation": "xWant", "prompt": "PersonX opens PersonX's legs. After, PersonX will want to"}}
{"generation": ["get back to his car"], "references": ["unlock the car", "fuel", "drive home", "car"], "input": {"head": "PersonX finds PersonX's car", "relation": "xWant", "prompt": "PersonX finds PersonX's car. After, PersonX will want to"}}
{"generation": ["know if you want to go to the next level"], "references": ["to make them listen", "to have a relationship", "to share information", "to be informative"], "input": {"head": "PersonX tells my friend", "relation": "xWant", "prompt": "PersonX tells my friend. After, PersonX will want to"}}
{"generation": ["go to the beach"], "references": ["to join the olympics team", "to learn how to swim other styles", "to keep practicing", "to compete", "To compete", "To take part in swimming competition"], "input": {"head": "PersonX is a good swimmer", "relation": "xWant", "prompt": "PersonX is a good swimmer. After, PersonX will want to"}}
{"generation": ["know what the ingredients are"], "references": ["to bake a cake", "to cook food", "put them in the oven", "to do recipes", "to cook", "mix them up"], "input": {"head": "PersonX gathers all the ingredients", "relation": "xWant", "prompt": "PersonX gathers all the ingredients. After, PersonX will want to"}}
{"generation": ["get back to the game"], "references": ["to give a speech", "celebrates with friends and family", "to put the award on the mantle", "collects the trophy's"], "input": {"head": "PersonX wins several awards", "relation": "xWant", "prompt": "PersonX wins several awards. After, PersonX will want to"}}
{"generation": ["go home"], "references": ["to travel to work/school on the bus", "to exit the bus at the right stop", "to get off at their stop", "to ride the bus to work", "to walk from the bus stop to work/school", "goes to the football game", "goes shopping"], "input": {"head": "PersonX catches the bus to work", "relation": "xWant", "prompt": "PersonX catches the bus to work. After, PersonX will want to"}}
{"generation": ["go to the pub"], "references": ["to thank the driver", "to arrive at their destination", "to go into their hotel", "to get out of the car"], "input": {"head": "PersonX takes a ride to tyburn", "relation": "xWant", "prompt": "PersonX takes a ride to tyburn. After, PersonX will want to"}}
{"generation": ["know if PersonY is still there"], "references": ["wipe off dirt", "getting angry", "Help PersonY", "sit and breathe", "Check PersonY for injury", "to be alone"], "input": {"head": "PersonX pulls PersonY out", "relation": "xWant", "prompt": "PersonX pulls PersonY out. After, PersonX will want to"}}
{"generation": ["use the laptop to access the internet"], "references": ["to watch movie", "to mail", "to edit their vacation photos.", "to do some work.", "to complete assignment"], "input": {"head": "PersonX takes PersonX's laptop", "relation": "xWant", "prompt": "PersonX takes PersonX's laptop. After, PersonX will want to"}}
{"generation": ["know where PersonY is"], "references": ["to find person y", "call them", "to give it back", "to return the ring"], "input": {"head": "PersonX finds PersonY's ring", "relation": "xWant", "prompt": "PersonX finds PersonY's ring. After, PersonX will want to"}}
{"generation": ["know what kind of fish he likes"], "references": ["to eat fish.", "to clean fish."], "input": {"head": "PersonX likes fish", "relation": "xWant", "prompt": "PersonX likes fish. After, PersonX will want to"}}
{"generation": ["go to the hospital"], "references": ["To go for a ride", "close door", "to go in house", "to take person Y somewhere"], "input": {"head": "PersonX walks PersonY to PersonX's car", "relation": "xWant", "prompt": "PersonX walks PersonY to PersonX's car. After, PersonX will want to"}}
{"generation": ["throw the object back"], "references": ["to hinder others", "To show anger", "to remain powerful", "To display frustration", "to prevent cars from meeting an accident", "to stop the car"], "input": {"head": "PersonX throws ___ in the way", "relation": "xWant", "prompt": "PersonX throws ___ in the way. After, PersonX will want to"}}
{"generation": ["get back to work"], "references": ["Enjoyed", "Happy", "hydrate", "shower", "to be more healthy", "to gain more muscle"], "input": {"head": "PersonX starts working out", "relation": "xWant", "prompt": "PersonX starts working out. After, PersonX will want to"}}
{"generation": ["get rid of the person who has been using him"], "references": ["to separate themselves from bad people", "to get out of a bad situation"], "input": {"head": "PersonX falls into the wrong hands", "relation": "xWant", "prompt": "PersonX falls into the wrong hands. After, PersonX will want to"}}
{"generation": ["use the same method to get the same result"], "references": ["to earn more money", "go to a different store", "to buy something affordable", "want to earn", "To avoid deby", "hardwork", "to save money", "to count their money", "to find clients", "To be frugal"], "input": {"head": "PersonX is much cheaper", "relation": "xWant", "prompt": "PersonX is much cheaper. After, PersonX will want to"}}
{"generation": ["know if PersonY is still inside"], "references": ["to spend time outside", "to mow the yard", "to play outside", "to return something"], "input": {"head": "PersonX takes PersonY's outside", "relation": "xWant", "prompt": "PersonX takes PersonY's outside. After, PersonX will want to"}}
{"generation": ["be free"], "references": ["He got a many things are free", "to push through it", "to be strong", "He is a slave"], "input": {"head": "PersonX endures ___ and free", "relation": "xWant", "prompt": "PersonX endures ___ and free. After, PersonX will want to"}}
{"generation": ["know if the patient is alive or dead"], "references": ["relay the results of the evaluation to others", "to prescribe medicine", "make plans to address areas of concern", "to educate the patient"], "input": {"head": "PersonX evaluates the patient 's ___", "relation": "xWant", "prompt": "PersonX evaluates the patient 's ___. After, PersonX will want to"}}
{"generation": ["know what the person is doing"], "references": ["He keeps talking.", "He likes to impress her.", "to smile", "to express their ideas", "to get a good grade", "to think clearly"], "input": {"head": "PersonX makes perfect sense", "relation": "xWant", "prompt": "PersonX makes perfect sense. After, PersonX will want to"}}
{"generation": ["use the same method to get the same result"], "references": ["send writing to publishers", "share his writing with friends", "to have the writing typed out", "to make copies of what they wrote"], "input": {"head": "PersonX writes ___ using", "relation": "xWant", "prompt": "PersonX writes ___ using. After, PersonX will want to"}}
{"generation": ["know how to get back to the beginning"], "references": ["to change", "take a break", "do better", "make plans"], "input": {"head": "PersonX takes place over a period", "relation": "xWant", "prompt": "PersonX takes place over a period. After, PersonX will want to"}}
{"generation": ["get back to the main menu"], "references": ["to get out of the car", "to get away from something", "turn off car", "to get to a destination", "to go somewhere", "arrive at location"], "input": {"head": "PersonX drives anyway", "relation": "xWant", "prompt": "PersonX drives anyway. After, PersonX will want to"}}
{"generation": ["protect ___ from harm"], "references": ["to make sure they are ok", "to find out if the dog is ok", "to check up on the children", "to look around"], "input": {"head": "PersonX protects ___ from harm", "relation": "xWant", "prompt": "PersonX protects ___ from harm. After, PersonX will want to"}}
{"generation": ["do something about it"], "references": ["To change his situation", "to try to do something to fix the situation", "to give up", "To feel empowered"], "input": {"head": "PersonX feels helpless", "relation": "xWant", "prompt": "PersonX feels helpless. After, PersonX will want to"}}
{"generation": ["send the report to the server"], "references": ["to hand in a report", "to read feedback", "to make another report", "to get updates", "to read updates", "to make corrections"], "input": {"head": "PersonX files a report", "relation": "xWant", "prompt": "PersonX files a report. After, PersonX will want to"}}
{"generation": ["know what you're doing"], "references": ["to return something", "stops taking it everywhere", "to hold onto it", "to use something", "puts down it", "to keep track of it"], "input": {"head": "PersonX takes it everywhere", "relation": "xWant", "prompt": "PersonX takes it everywhere. After, PersonX will want to"}}
{"generation": ["eat cake"], "references": ["to buy a cake.", "to get a cake", "to eat more cake", "to eat a cake.", "to buy cake", "to eat the cake"], "input": {"head": "PersonX loves cake", "relation": "xWant", "prompt": "PersonX loves cake. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to sleep", "get something to eat"], "input": {"head": "PersonX finally got home", "relation": "xWant", "prompt": "PersonX finally got home. After, PersonX will want to"}}
{"generation": ["send the wallet to PersonY"], "references": ["return wallet", "To buy another one", "search for wallet", "To go wallet shopping"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "xWant", "prompt": "PersonX loses PersonY's wallet. After, PersonX will want to"}}
{"generation": ["know what the other person is doing"], "references": ["Reject the call", "to answer it", "to pick up the phone", "Answer the call", "to talk to the person in question", "to ignore the call"], "input": {"head": "PersonX gets the call", "relation": "xWant", "prompt": "PersonX gets the call. After, PersonX will want to"}}
{"generation": ["know what PersonY thinks about PersonX"], "references": ["to make him succeed", "to ask question about the subject", "to help PersonY", "to get thanked", "to keep teaching", "to refine his tastes", "to be of use"], "input": {"head": "PersonX teaches PersonY things", "relation": "xWant", "prompt": "PersonX teaches PersonY things. After, PersonX will want to"}}
{"generation": ["know how much money you have"], "references": ["enjoy what they paid for", "get more money"], "input": {"head": "PersonX pays well", "relation": "xWant", "prompt": "PersonX pays well. After, PersonX will want to"}}
{"generation": ["get rid of the cats"], "references": ["Take care of her feline", "Give her feline food and water"], "input": {"head": "PersonX hats cats", "relation": "xWant", "prompt": "PersonX hats cats. After, PersonX will want to"}}
{"generation": ["know how to get the next person to join"], "references": ["to enter the competition", "to celebrate", "to keep doing a good job", "to go home", "to collect the winnings", "to win the competition"], "input": {"head": "PersonX always beat ___", "relation": "xWant", "prompt": "PersonX always beat ___. After, PersonX will want to"}}
{"generation": ["know if PersonY is a person or not"], "references": ["to show PersonY what they learned", "to imitate person Y's behavior", "to closely watch what person Y does", "for them to see what they did", "to apply PersonY's example", "for them to learn from them"], "input": {"head": "PersonX takes as PersonY example", "relation": "xWant", "prompt": "PersonX takes as PersonY example. After, PersonX will want to"}}
{"generation": ["know what to do next"], "references": ["to express his feelings", "to hear some consoling words", "to vent his feelings", "to express feelings", "to ask someone something", "to get advice", "to wait for a response", "to show affection"], "input": {"head": "PersonX pours PersonX's heart", "relation": "xWant", "prompt": "PersonX pours PersonX's heart. After, PersonX will want to"}}
{"generation": ["know if the test was successful"], "references": ["to get a good class grade.", "to celebrate", "to pass the test.", "to take a nap"], "input": {"head": "PersonX finishes the test", "relation": "xWant", "prompt": "PersonX finishes the test. After, PersonX will want to"}}
{"generation": ["eat the food"], "references": ["to eat some of the food.", "drink some water", "wash and dry hands", "to throw more food."], "input": {"head": "PersonX throws the food", "relation": "xWant", "prompt": "PersonX throws the food. After, PersonX will want to"}}
{"generation": ["go to the beach again"], "references": ["to relax", "to swim", "to enjoy the great weather", "a tan", "to sunbathe", "to get a tan"], "input": {"head": "PersonX spends ___ at the beach", "relation": "xWant", "prompt": "PersonX spends ___ at the beach. After, PersonX will want to"}}
{"generation": ["be able to do the same thing"], "references": ["to enjoy being great", "to continue being great", "to show others his greatness", "to get out of the spotlight"], "input": {"head": "PersonX becomes great", "relation": "xWant", "prompt": "PersonX becomes great. After, PersonX will want to"}}
{"generation": ["eat, and PersonY will want to eat,"], "references": ["to give Person Y some money for food.", "eat himself", "to get more food for Person Y.", "prepare other needs of PersonY"], "input": {"head": "PersonX keeps PersonY from starving", "relation": "xWant", "prompt": "PersonX keeps PersonY from starving. After, PersonX will want to"}}
{"generation": ["go to the store"], "references": ["deliver something", "to go to the mall", "to get exercise", "buy something", "to go home", "to get something to eat"], "input": {"head": "PersonX is walking down the street", "relation": "xWant", "prompt": "PersonX is walking down the street. After, PersonX will want to"}}
{"generation": ["add the PersonX's inside"], "references": ["get some fresh air", "to breath fresh air", "to go outside for a while", "to enjoy some sunshine.", "to breathe fresh air.", "walk around"], "input": {"head": "PersonX takes PersonX's outside", "relation": "xWant", "prompt": "PersonX takes PersonX's outside. After, PersonX will want to"}}
{"generation": ["know what the other person thinks"], "references": ["to show strength", "win the case", "get compensated", "to defend beliefs"], "input": {"head": "PersonX takes PersonX's stand", "relation": "xWant", "prompt": "PersonX takes PersonX's stand. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to finally do something else", "to give up"], "input": {"head": "PersonX spends almost an hour", "relation": "xWant", "prompt": "PersonX spends almost an hour. After, PersonX will want to"}}
{"generation": ["throw the ball again"], "references": ["begin playing a sport", "to see who has the ball and what is happening next", "to play catch with friends", "to be prepared to catch the ball again", "to win a ball game", "have someone throw sports equipment back"], "input": {"head": "PersonX throws the ball", "relation": "xWant", "prompt": "PersonX throws the ball. After, PersonX will want to"}}
{"generation": ["get rid of PersonY"], "references": ["to spend it", "spend his winnings", "gamble some more", "to save it"], "input": {"head": "PersonX wins some money", "relation": "xWant", "prompt": "PersonX wins some money. After, PersonX will want to"}}
{"generation": ["know what you want to do next"], "references": ["to celebrate", "to scream with joy"], "input": {"head": "PersonX helps the ___ along", "relation": "xWant", "prompt": "PersonX helps the ___ along. After, PersonX will want to"}}
{"generation": ["know what the new PersonX is"], "references": ["take a photograph of themself", "to change their apperance", "go out on the town", "to have fun", "to do something different", "to be different from others"], "input": {"head": "PersonX looks different", "relation": "xWant", "prompt": "PersonX looks different. After, PersonX will want to"}}
{"generation": ["put ___ in PersonY's backpack"], "references": ["To have the right supplies", "to surprise PersonY", "to close PersonY's backpack", "to tell PersonY what they have done", "To be prepared", "to sneak away"], "input": {"head": "PersonX puts ___ in PersonY's backpack", "relation": "xWant", "prompt": "PersonX puts ___ in PersonY's backpack. After, PersonX will want to"}}
{"generation": ["know what to do next"], "references": ["exercise", "have a better outlook", "get some rest", "to go home", "relax", "stretch"], "input": {"head": "PersonX feels relief", "relation": "xWant", "prompt": "PersonX feels relief. After, PersonX will want to"}}
{"generation": ["donate to charity"], "references": ["balance their checkbook", "to go to the bank", "to feel satisfied", "to feel good about themselves", "to rest in their good feelings", "to tell friends what he/she did"], "input": {"head": "PersonX donates ___ to charity", "relation": "xWant", "prompt": "PersonX donates ___ to charity. After, PersonX will want to"}}
{"generation": ["know how to get the best out of PersonX"], "references": ["to answer questions", "to have fun .", "to go on adventures.", "to help students with their own writing", "to experience the same thing with others", "to write about PersonX's eperience"], "input": {"head": "PersonX shares PersonX's experience", "relation": "xWant", "prompt": "PersonX shares PersonX's experience. After, PersonX will want to"}}
{"generation": ["move PersonY's eyes to the left"], "references": ["\"to say \"\"guess who?\"\"", "to laugh", "to leave and go home", "make sure PersonY is okay\""], "input": {"head": "PersonX shields PersonY's eyes", "relation": "xWant", "prompt": "PersonX shields PersonY's eyes. After, PersonX will want to"}}
{"generation": ["marry PersonY"], "references": ["to celebrate the wedding", "to not let PersonY down", "To look beautiful", "to go to the wedding", "To dress up well", "to go home and rest"], "input": {"head": "PersonX is PersonY's maid of honor", "relation": "xWant", "prompt": "PersonX is PersonY's maid of honor. After, PersonX will want to"}}
{"generation": ["know what happened to PersonY"], "references": ["donate money", "to embrace person y", "to give money to person y", "to see them live well", "make wishes come true", "to be thanked for it"], "input": {"head": "PersonX changes PersonY's lives", "relation": "xWant", "prompt": "PersonX changes PersonY's lives. After, PersonX will want to"}}
{"generation": ["go to the beach"], "references": ["come out of sea", "to take chances", "see fishes", "to be adventurous"], "input": {"head": "PersonX goes scuba diving", "relation": "xWant", "prompt": "PersonX goes scuba diving. After, PersonX will want to"}}
{"generation": ["eat a hamburger"], "references": ["to enjoy the hamburger", "to have dessert", "wipe mouth with napkin", "eat more food", "leave tips", "to take a rest"], "input": {"head": "PersonX eats a hamburger", "relation": "xWant", "prompt": "PersonX eats a hamburger. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["wash hands", "spit out nails", "Enjoy the pleasure from the biting.", "Scold their self for biting.", "file nails", "spit nail out"], "input": {"head": "PersonX bites PersonX's nails", "relation": "xWant", "prompt": "PersonX bites PersonX's nails. After, PersonX will want to"}}
{"generation": ["know what you want to do next"], "references": ["to pray", "to cherish them", "to help others in need", "to attend church", "to hold them dearly", "to go to church"], "input": {"head": "PersonX loves the ___ with all PersonX's heart", "relation": "xWant", "prompt": "PersonX loves the ___ with all PersonX's heart. After, PersonX will want to"}}
{"generation": ["know if PersonY is the same as PersonX"], "references": ["observe what they seen", "to watch something in there view", "to post photos", "to tell others about it"], "input": {"head": "PersonX evens saw ___", "relation": "xWant", "prompt": "PersonX evens saw ___. After, PersonX will want to"}}
{"generation": ["set PersonY up"], "references": ["give the reward", "Meet up with the new person", "to go back to work", "Make a reservation", "to go home", "get connected with person y"], "input": {"head": "PersonX sets PersonY up", "relation": "xWant", "prompt": "PersonX sets PersonY up. After, PersonX will want to"}}
{"generation": ["go to bed"], "references": ["to wake up", "to pray", "to have breakfast", "to cover themselves"], "input": {"head": "PersonX goes ___ to bed", "relation": "xWant", "prompt": "PersonX goes ___ to bed. After, PersonX will want to"}}
{"generation": ["move PersonY to the front of the group"], "references": ["to listen", "tap PersonY", "Set sideways to see around them.", "to observe", "Try to be quiet.", "say hello"], "input": {"head": "PersonX sits behind PersonY", "relation": "xWant", "prompt": "PersonX sits behind PersonY. After, PersonX will want to"}}
{"generation": ["use the ___"], "references": ["to teach others", "to do a good job", "to make sure nothing is wasted", "to be efficient", "to complete a task", "to train others"], "input": {"head": "PersonX uses the ___ effectively", "relation": "xWant", "prompt": "PersonX uses the ___ effectively. After, PersonX will want to"}}
{"generation": ["get a bigger loan"], "references": ["to start his business", "to repay loan"], "input": {"head": "PersonX gets a small loan", "relation": "xWant", "prompt": "PersonX gets a small loan. After, PersonX will want to"}}
{"generation": ["know what to expect"], "references": ["He fights in the war.", "to hope for the best", "to ask questions", "They call him in.", "to read about what they are abou to do", "to add certainty to the situation", "to wait and learn"], "input": {"head": "PersonX does n't know what to expect", "relation": "xWant", "prompt": "PersonX does n't know what to expect. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to express anger", "to hit the wall", "to solve the problem that's frustrating them", "to be understood", "to calm down"], "input": {"head": "PersonX gets frustrated", "relation": "xWant", "prompt": "PersonX gets frustrated. After, PersonX will want to"}}
{"generation": ["go to the dragon's head"], "references": ["runs away from dragon", "to run away", "sees if dragon liked it", "to put hand down", "to make it laugh", "to run in fear"], "input": {"head": "PersonX tickles the dragons tail", "relation": "xWant", "prompt": "PersonX tickles the dragons tail. After, PersonX will want to"}}
{"generation": ["go to the store"], "references": ["more enjoyment", "to go home", "night dinner", "thank them"], "input": {"head": "PersonX spends ___ at PersonY's house", "relation": "xWant", "prompt": "PersonX spends ___ at PersonY's house. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["to walk again", "administer first aid", "see their family", "wait for ambulence", "live", "to make sure the person is ok", "to calm them down"], "input": {"head": "PersonX calls an ambulance", "relation": "xWant", "prompt": "PersonX calls an ambulance. After, PersonX will want to"}}
{"generation": ["know what cheese is"], "references": ["to learn how to make cheese at home", "taste a sample", "to buy more cheese", "to make grilled cheese sandwich", "grocery shop"], "input": {"head": "PersonX likes cheese", "relation": "xWant", "prompt": "PersonX likes cheese. After, PersonX will want to"}}
{"generation": ["talk to you about the situation"], "references": ["to grow with their family", "to make a campfire", "to do campfire", "to be in nature", "to watch nightsky", "to go hiking"], "input": {"head": "PersonX camps with PersonX's family", "relation": "xWant", "prompt": "PersonX camps with PersonX's family. After, PersonX will want to"}}
{"generation": ["know what PersonY is doing"], "references": ["to converse", "say good bye", "hang up the receiver", "to ask questions"], "input": {"head": "PersonX talks to PersonY on the phone", "relation": "xWant", "prompt": "PersonX talks to PersonY on the phone. After, PersonX will want to"}}
{"generation": ["talk to you"], "references": ["finish work", "to impress others", "drives PersonX home", "go home", "relax", "packs up his papers and book", "to show his knowledge"], "input": {"head": "PersonX gives a presentation", "relation": "xWant", "prompt": "PersonX gives a presentation. After, PersonX will want to"}}
{"generation": ["know what you did to get him to do that"], "references": ["give gift"], "input": {"head": "recieving favor", "relation": "xWant", "prompt": "recieving favor. After, PersonX will want to"}}
{"generation": ["know how much it cost"], "references": ["to show it to friends", "take a picture", "drive it home", "to register and insure the car", "to take it driving", "to drive the car home"], "input": {"head": "PersonX buys a car", "relation": "xWant", "prompt": "PersonX buys a car. After, PersonX will want to"}}
{"generation": ["assign the same group to the same person"], "references": ["to exercise leadership", "commited", "fun", "to make sure everything goes smoothly", "to divide properly", "to stay in control"], "input": {"head": "PersonX assigns ___ to groups", "relation": "xWant", "prompt": "PersonX assigns ___ to groups. After, PersonX will want to"}}
{"generation": ["know what to do next"], "references": ["move a step back", "get closer still"], "input": {"head": "PersonX feels closer", "relation": "xWant", "prompt": "PersonX feels closer. After, PersonX will want to"}}
{"generation": ["save PersonY's ___ from PersonX's sins"], "references": ["to yell at personY", "them to be sorry for their sins", "to tell PersonY the truth", "to sacrifice themselves", "to approach personY", "them to live a good life"], "input": {"head": "PersonX saves PersonY's ___ from PersonX's sins", "relation": "xWant", "prompt": "PersonX saves PersonY's ___ from PersonX's sins. After, PersonX will want to"}}
{"generation": ["pay PersonY more"], "references": ["to give a bonus", "to hire them for more work"], "input": {"head": "PersonX pays PersonY well", "relation": "xWant", "prompt": "PersonX pays PersonY well. After, PersonX will want to"}}
{"generation": ["go to the car"], "references": ["insert the key", "start the car", "sit in car", "Gets her keys out.", "Cranks up the engine."], "input": {"head": "PersonX walks to the car", "relation": "xWant", "prompt": "PersonX walks to the car. After, PersonX will want to"}}
{"generation": ["get rid of the money"], "references": ["to get another job", "to get a new job to make money", "to make some", "to save whatever little they have", "to save it", "to ask someone for help", "to borrow money from another person"], "input": {"head": "PersonX does n't have a lot of money", "relation": "xWant", "prompt": "PersonX does n't have a lot of money. After, PersonX will want to"}}
{"generation": ["buy ___ for PersonX's wife"], "references": ["hug and kiss her", "to celebrate with them", "to see the person open their present", "give the gift to his wife", "get ready for the occasion he is going to give his wife the gift at", "wrap the gift or bring her to the gift"], "input": {"head": "PersonX buys ___ for PersonX's wife", "relation": "xWant", "prompt": "PersonX buys ___ for PersonX's wife. After, PersonX will want to"}}
{"generation": ["catch a fly"], "references": ["buy fly traps", "to keep flies from coming in", "to have fun", "to enjoy", "to dispose of the flies", "dump outside"], "input": {"head": "PersonX catches flies", "relation": "xWant", "prompt": "PersonX catches flies. After, PersonX will want to"}}
{"generation": ["call PersonY"], "references": ["to demonstrate something", "help", "them to start working", "contact HR", "to teach", "give training"], "input": {"head": "PersonX employs another ___", "relation": "xWant", "prompt": "PersonX employs another ___. After, PersonX will want to"}}
{"generation": ["know what you want to do"], "references": ["to share their knowledge", "to see others succeed", "to test someone", "to continue teaching"], "input": {"head": "PersonX teaches ___ to use", "relation": "xWant", "prompt": "PersonX teaches ___ to use. After, PersonX will want to"}}
{"generation": ["use the same method to get the same result"], "references": ["to make some money", "to go to sleep"], "input": {"head": "PersonX works last night", "relation": "xWant", "prompt": "PersonX works last night. After, PersonX will want to"}}
{"generation": ["know what you think"], "references": ["to support the cause", "Go home", "to join the group", "to enjoy life", "Agree some more", "avoid confrontation", "to get along", "to avoid arguments with anyone"], "input": {"head": "PersonX agrees on anything", "relation": "xWant", "prompt": "PersonX agrees on anything. After, PersonX will want to"}}
{"generation": ["know what the hell is going on"], "references": ["to take some rest", "to eat", "to keep playing", "stop playing", "put the ball away", "to go home", "to rest"], "input": {"head": "PersonX is playing ball", "relation": "xWant", "prompt": "PersonX is playing ball. After, PersonX will want to"}}
{"generation": ["meet PersonX's husband again"], "references": ["to thank their husband for helping", "to live with him from now on", "to ask him for help", "them to do all the tasks on the list", "to check to make sure all is ready", "to give their husband a kiss", "to get to know their husband", "to grow with their husband"], "input": {"head": "PersonX meets PersonX's husband", "relation": "xWant", "prompt": "PersonX meets PersonX's husband. After, PersonX will want to"}}
{"generation": ["know who PersonX is"], "references": ["to ignore it", "Looks in mirror", "reflects on it", "change there look", "to keep looking like them", "to impersonate someone"], "input": {"head": "PersonX looks like someone", "relation": "xWant", "prompt": "PersonX looks like someone. After, PersonX will want to"}}
{"generation": ["know what the ___ is"], "references": ["to show off", "to take possession", "to sell it", "to hang the picture in the office", "to study it", "to paste the picture in the home", "to ask questions about it"], "input": {"head": "PersonX obtains a ___ as possible", "relation": "xWant", "prompt": "PersonX obtains a ___ as possible. After, PersonX will want to"}}
{"generation": ["know if PersonY is still alive"], "references": ["to wonder about PersonY", "go out with PersonY", "to keep themselves busy", "to see Person Y", "meet PersonY", "to do something with Person Y"], "input": {"head": "PersonX waits for PersonY", "relation": "xWant", "prompt": "PersonX waits for PersonY. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to run away", "move quickly", "lift legs", "to go somewhere", "to get somewhere fast", "to get something done"], "input": {"head": "PersonX accidentally ran", "relation": "xWant", "prompt": "PersonX accidentally ran. After, PersonX will want to"}}
{"generation": ["know how much you want to pay"], "references": ["to make money", "to offer more discounts", "sell", "to sell more books to others"], "input": {"head": "PersonX offers ___ on this book when ordered", "relation": "xWant", "prompt": "PersonX offers ___ on this book when ordered. After, PersonX will want to"}}
{"generation": ["know if PersonY is okay"], "references": ["energy", "to walk up to PersonY's car", "key", "to give PersonY a ticket", "to quesiton him", "to get his license and registration"], "input": {"head": "PersonX pulls PersonY's car over", "relation": "xWant", "prompt": "PersonX pulls PersonY's car over. After, PersonX will want to"}}
{"generation": ["sell it to PersonY"], "references": ["to wrap the present.", "give it to PersonY.", "to surprise them with it", "to deliver the gift", "to give it to Y", "to wrap the present"], "input": {"head": "PersonX buys one for PersonY", "relation": "xWant", "prompt": "PersonX buys one for PersonY. After, PersonX will want to"}}
{"generation": ["get warm"], "references": ["to take some cloths off to cool down", "to cool off", "to take a cold shower to cool off", "to turn on the A/C", "to fall asleep"], "input": {"head": "PersonX gets warm", "relation": "xWant", "prompt": "PersonX gets warm. After, PersonX will want to"}}
{"generation": ["know if PersonY is still alive"], "references": ["to talk", "to take Y's son to principal", "to tell son to get out of their house", "to tell son to mow the yard", "to tell son that PersonY is dead", "to tell son that PersonY got into an accident", "to teach", "to make plans"], "input": {"head": "PersonX calls PersonY's son", "relation": "xWant", "prompt": "PersonX calls PersonY's son. After, PersonX will want to"}}
{"generation": ["sell ___ for my wife"], "references": ["to wrap up the item as a gift.", "to surprise his wife with the item.", "to give the gift to the wife", "to get a thank you"], "input": {"head": "PersonX buys ___ for my wife", "relation": "xWant", "prompt": "PersonX buys ___ for my wife. After, PersonX will want to"}}
{"generation": ["know what you think"], "references": ["to feel better", "to part ways", "to finish with the meeting", "to continue giving advice"], "input": {"head": "PersonX gives PersonX's opinion", "relation": "xWant", "prompt": "PersonX gives PersonX's opinion. After, PersonX will want to"}}
{"generation": ["know what happened to the other person"], "references": ["to collect their raffle prize", "to cash in their lottery ticket", "pick up the money on the ground"], "input": {"head": "PersonX can n't believe PersonX's luck", "relation": "xWant", "prompt": "PersonX can n't believe PersonX's luck. After, PersonX will want to"}}
{"generation": ["do something with the data"], "references": ["comb hair", "change clothes", "to feel better", "for others to not see them", "to rest"], "input": {"head": "PersonX looks awful", "relation": "xWant", "prompt": "PersonX looks awful. After, PersonX will want to"}}
{"generation": ["know what you want to do next"], "references": ["improve lives", "ask for guidance", "to finish the task", "to pick up the turtle and place it on the other side of the road", "to help more", "to escort the lady across the road"], "input": {"head": "PersonX helps ___ along", "relation": "xWant", "prompt": "PersonX helps ___ along. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["to apologize to PersonY", "to hug PersonY", "to smile at PersonY", "to hold PersonY", "to give PersonY tissue"], "input": {"head": "PersonX brings ___ to PersonY's eyes", "relation": "xWant", "prompt": "PersonX brings ___ to PersonY's eyes. After, PersonX will want to"}}
{"generation": ["know what you want to do"], "references": ["to finish something", "to make use of items", "to get things done", "to be responsible"], "input": {"head": "PersonX gets ___ to make", "relation": "xWant", "prompt": "PersonX gets ___ to make. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to leave PersonY somewhere", "to help PersonY with other things", "to ask them to leave", "to jail PersonY", "to see them wave from inside", "to watch them unlock their house door"], "input": {"head": "PersonX escorts PersonY back", "relation": "xWant", "prompt": "PersonX escorts PersonY back. After, PersonX will want to"}}
{"generation": ["go back to the first room and talk to the"], "references": ["to pick up the suicase he forgot", "to get out of the car", "to get his wallet", "to get to their destination", "to go back home", "to retrieve something"], "input": {"head": "PersonX drives all the way back", "relation": "xWant", "prompt": "PersonX drives all the way back. After, PersonX will want to"}}
{"generation": ["move to PersonY"], "references": ["feel ashamed", "to stand up", "to apologize", "apologize", "to go to the hospital"], "input": {"head": "PersonX falls on PersonY", "relation": "xWant", "prompt": "PersonX falls on PersonY. After, PersonX will want to"}}
{"generation": ["know if PersonY is a good person"], "references": ["take questions", "call on people", "to give person y a gift", "to get more feedback"], "input": {"head": "PersonX thanks the ___ for PersonY's comments", "relation": "xWant", "prompt": "PersonX thanks the ___ for PersonY's comments. After, PersonX will want to"}}
{"generation": ["throw the hat back"], "references": ["to go home", "leave the house for the store", "buy a new headgear", "to check where it has fallen"], "input": {"head": "PersonX throws PersonX's hat over the wall", "relation": "xWant", "prompt": "PersonX throws PersonX's hat over the wall. After, PersonX will want to"}}
{"generation": ["know what PersonY's name is"], "references": ["to tell PersonY to get them everything", "to not care about how PersonY feels"], "input": {"head": "PersonX puts upon PersonY", "relation": "xWant", "prompt": "PersonX puts upon PersonY. After, PersonX will want to"}}
{"generation": ["know what happened to the person who was with him"], "references": ["find the source of the bad feeling", "stay on a cautionary path", "don't make any sudden moves", "to escape by watching a funny tv sho", "to find out the truth", "relieve the bad feeling", "to throw up", "be reassured", "to get to the bottom of the issue", "to take a bath"], "input": {"head": "PersonX has a bad feeling", "relation": "xWant", "prompt": "PersonX has a bad feeling. After, PersonX will want to"}}
{"generation": ["know what PersonY is doing"], "references": ["to relax on the couch", "to come out of PersonY", "to think about Person Y", "to laugh at PersonY"], "input": {"head": "PersonX stirs within PersonY", "relation": "xWant", "prompt": "PersonX stirs within PersonY. After, PersonX will want to"}}
{"generation": ["get the PersonX's hands dirty"], "references": ["to put the plants and seeds into the holes", "to pick what grows and eat it", "to gain something", "to wash their hands", "to not be fancy", "to water them often", "to clean their hands off", "to cover them in dirt and water"], "input": {"head": "PersonX gets PersonX's hands dirty", "relation": "xWant", "prompt": "PersonX gets PersonX's hands dirty. After, PersonX will want to"}}
{"generation": ["know what PersonY thinks about the situation"], "references": ["Gets really close to her.", "to surprise PersonY", "He shows her more dance moves.", "to learn more", "to answer PersonY's questions", "to talk to Y"], "input": {"head": "PersonX blows PersonY's mind", "relation": "xWant", "prompt": "PersonX blows PersonY's mind. After, PersonX will want to"}}
{"generation": ["talk to PersonY"], "references": ["say excuse me", "get ahead of the pack", "be noticed", "apologize", "to get to class", "get somewhere", "to beat person y to the gym"], "input": {"head": "PersonX walks in front of PersonY", "relation": "xWant", "prompt": "PersonX walks in front of PersonY. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["to put lotion on the burn.", "to put on lotion", "to stay out of the sun from now on.", "to get out of the sun"], "input": {"head": "PersonX gets sunburned", "relation": "xWant", "prompt": "PersonX gets sunburned. After, PersonX will want to"}}
{"generation": ["go to the next level and win the championship"], "references": ["to feel proud", "Get on TV.", "to win a medal", "Get his trophy."], "input": {"head": "PersonX wins the championship", "relation": "xWant", "prompt": "PersonX wins the championship. After, PersonX will want to"}}
{"generation": ["know how to get the best out of PersonX"], "references": ["to do their best", "to expand business", "to show the work to his parents", "to sell his paintings", "to learn more", "to be proud of himself"], "input": {"head": "PersonX impresses with PersonX's work", "relation": "xWant", "prompt": "PersonX impresses with PersonX's work. After, PersonX will want to"}}
{"generation": ["go to the bathroom"], "references": ["their mom to buy lunch.", "their mom to feel good.", "to come back home", "to help his mother"], "input": {"head": "PersonX goes ___ with PersonX's mom", "relation": "xWant", "prompt": "PersonX goes ___ with PersonX's mom. After, PersonX will want to"}}
{"generation": ["know what to do next"], "references": ["make a plan", "to handle it", "to carry out a plan", "to make sure it's finished", "call friends", "to rest"], "input": {"head": "PersonX would take care of it", "relation": "xWant", "prompt": "PersonX would take care of it. After, PersonX will want to"}}
{"generation": ["know what PersonY is thinking"], "references": ["speak for PersonY's mind", "to break up", "to continue the friendship", "become PersonY's best friend", "to know more about himself/herself", "to speculate about others' nature"], "input": {"head": "PersonX understands PersonY's nature", "relation": "xWant", "prompt": "PersonX understands PersonY's nature. After, PersonX will want to"}}
{"generation": ["read books"], "references": ["to read", "write books", "puts finished books on shelf", "sit down", "read books", "buy more books"], "input": {"head": "PersonX loves reading books", "relation": "xWant", "prompt": "PersonX loves reading books. After, PersonX will want to"}}
{"generation": ["know what happened to his friend"], "references": ["to have a funeral", "to be buried", "to be remembered", "to rest in peace"], "input": {"head": "PersonX dies peacefully", "relation": "xWant", "prompt": "PersonX dies peacefully. After, PersonX will want to"}}
{"generation": ["eat ___ again"], "references": ["to rest and relax", "To order another pie", "to lay down", "to wash their hands", "to slow down and enjoy it", "To wash dishes"], "input": {"head": "PersonX eats ___ very quickly", "relation": "xWant", "prompt": "PersonX eats ___ very quickly. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["to eat", "to sell the table they made", "Tell her how to make it.", "Give her the ingredients.", "to wash dishes", "to shout and yell", "to wear what they made"], "input": {"head": "PersonX makes ___ the other day", "relation": "xWant", "prompt": "PersonX makes ___ the other day. After, PersonX will want to"}}
{"generation": ["cancel PersonX's plans"], "references": ["to delete their appointments", "to reschedule the original activity", "to do the thing she had to cancel her plans to do", "to do something else", "to open their calendar", "to just be alone", "to alert the people"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "xWant", "prompt": "PersonX has to cancel PersonX's plans. After, PersonX will want to"}}
{"generation": ["use the ___ to describe the person"], "references": ["to describe the words", "to describe the feelings", "to ask for questions from anyone", "to ask if someone comprehends", "to pack up his materials, pen, pointer, briefcase, etc.", "to continue describing something"], "input": {"head": "PersonX uses the ___ to describe", "relation": "xWant", "prompt": "PersonX uses the ___ to describe. After, PersonX will want to"}}
{"generation": ["know if PersonY is happy for PersonX"], "references": ["Try to accomplish their own goals", "to congratulate PersonY", "to wish PersonY best of luck", "to hug PersonY", "Hug PersonY", "Congratulate PersonY", "to celebrate with PersonY"], "input": {"head": "PersonX is happy for PersonY", "relation": "xWant", "prompt": "PersonX is happy for PersonY. After, PersonX will want to"}}
{"generation": ["be a part of the community, and will want"], "references": ["to do better", "to regain position", "to get back up", "to land safely", "help", "to be forgiven", "to regain his credibility", "to mend his ways"], "input": {"head": "PersonX falls from grace", "relation": "xWant", "prompt": "PersonX falls from grace. After, PersonX will want to"}}
{"generation": ["know what you think of the new game"], "references": ["to be the center of the attraction", "to say they are popular", "people to look at her", "to make sure everyone knows they are there", "to talk to everyone by force"], "input": {"head": "PersonX attention whores", "relation": "xWant", "prompt": "PersonX attention whores. After, PersonX will want to"}}
{"generation": ["put ___ on PersonY's shoulders"], "references": ["to tell PersonY they did a good job", "to say sorry", "to hug PersonY", "to help PersonY", "to tell PersonY that everything is going to be ok", "to leave"], "input": {"head": "PersonX puts ___ on PersonY's shoulders", "relation": "xWant", "prompt": "PersonX puts ___ on PersonY's shoulders. After, PersonX will want to"}}
{"generation": ["know where PersonX is"], "references": ["to get out of the car", "to take rest", "to check all luggages", "to go on to her next destination.", "to go inside", "to do what she went there to do."], "input": {"head": "PersonX arrives at PersonX's destination", "relation": "xWant", "prompt": "PersonX arrives at PersonX's destination. After, PersonX will want to"}}
{"generation": ["know how to get the next ___"], "references": ["to win everything", "to celebrate", "to take a vacation", "to retire", "to win the medal", "to be known by everybody"], "input": {"head": "PersonX wins every ___", "relation": "xWant", "prompt": "PersonX wins every ___. After, PersonX will want to"}}
{"generation": ["move to the next person"], "references": ["to study their similarities", "to look sexy", "to look closely at the figure", "to be conscious of apperance", "to look at themselves in the mirror", "to change how they look"], "input": {"head": "PersonX looks like figure", "relation": "xWant", "prompt": "PersonX looks like figure. After, PersonX will want to"}}
{"generation": ["use PersonY to do something, and PersonY"], "references": ["for PersonY to show generosity", "correct PersonY", "watch PersonY", "to relieve responsibilities"], "input": {"head": "PersonX puts PersonY to use", "relation": "xWant", "prompt": "PersonX puts PersonY to use. After, PersonX will want to"}}
{"generation": ["know what you think of the dunk"], "references": ["score", "to win the game", "get back on defense", "to continue practicing", "run back to the game", "celebrate"], "input": {"head": "PersonX slams dunk", "relation": "xWant", "prompt": "PersonX slams dunk. After, PersonX will want to"}}
{"generation": ["renew by day"], "references": ["to heal themselves more", "own many returned customers", "attract a lot of customers", "to look good.", "to get strong", "to feel good."], "input": {"head": "PersonX renews ___ by day", "relation": "xWant", "prompt": "PersonX renews ___ by day. After, PersonX will want to"}}
{"generation": ["put ___ all together"], "references": ["to show encouragement", "to see how they did", "to move on to something else", "to show it to everyone", "to give them tissue to wipe their tears", "for PersonY to succeed"], "input": {"head": "PersonX puts ___ all together", "relation": "xWant", "prompt": "PersonX puts ___ all together. After, PersonX will want to"}}
{"generation": ["put PersonX's ___ together"], "references": ["love", "health", "to reflect even further", "to rest", "to test out the item", "to learn from it"], "input": {"head": "PersonX puts PersonX's ___ together", "relation": "xWant", "prompt": "PersonX puts PersonX's ___ together. After, PersonX will want to"}}
{"generation": ["move to the next ___"], "references": ["to relax for a while", "to settle down in one spot"], "input": {"head": "PersonX moves every ___", "relation": "xWant", "prompt": "PersonX moves every ___. After, PersonX will want to"}}
{"generation": ["know who PersonY is"], "references": ["to fight the enemies", "to ask PersonY if they're okay", "to hold Person Y", "to cast a spell", "to talk to Person Y", "to bring PersonY to a safe place", "to comfort PersonY"], "input": {"head": "PersonX protects PersonY", "relation": "xWant", "prompt": "PersonX protects PersonY. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["stay and converse", "to let go of PersonY", "to show PersonY how to say no", "to ask PersonY if they are in pain", "to control PersonY", "to give PersonY a massage", "walk away"], "input": {"head": "PersonX shakes PersonY's heads", "relation": "xWant", "prompt": "PersonX shakes PersonY's heads. After, PersonX will want to"}}
{"generation": ["be friends with PersonY"], "references": ["to run away", "to make amends", "to hide", "to cry", "to improve their confidence"], "input": {"head": "PersonX feels embarrassed", "relation": "xWant", "prompt": "PersonX feels embarrassed. After, PersonX will want to"}}
{"generation": ["know what you want to do"], "references": ["to get a reply", "to wait for the reply", "for a letter in return", "to check if it has been received", "for it to be something good", "to communicate"], "input": {"head": "PersonX sends a letter", "relation": "xWant", "prompt": "PersonX sends a letter. After, PersonX will want to"}}
{"generation": ["know what the doctor is going to do"], "references": ["to assure themselves of their health", "to receive good news"], "input": {"head": "PersonX asks the doctor", "relation": "xWant", "prompt": "PersonX asks the doctor. After, PersonX will want to"}}
{"generation": ["know if PersonX is a man or a woman"], "references": ["to prove they are feminine", "to just be normal", "to ask women out", "to con people", "to buy more dresses", "to act appropriate"], "input": {"head": "PersonX looks like a man", "relation": "xWant", "prompt": "PersonX looks like a man. After, PersonX will want to"}}
{"generation": ["go to the town's center and talk to the"], "references": ["to rebuild after the fighting", "to have a set of moral codes"], "input": {"head": "PersonX paints the town red", "relation": "xWant", "prompt": "PersonX paints the town red. After, PersonX will want to"}}
{"generation": ["pay ___ to the government"], "references": ["to make more money", "to be a good citizen", "to avoid problems", "cry", "to complain", "to pay more money"], "input": {"head": "PersonX pays ___ to the government", "relation": "xWant", "prompt": "PersonX pays ___ to the government. After, PersonX will want to"}}
{"generation": ["know what happened"], "references": ["to make more money", "To enjoy the promotion", "Thank them for the extra income.", "Go out and enjoy with friends", "Keep giving all they got.", "get a promotion"], "input": {"head": "PersonX gets ___ at work", "relation": "xWant", "prompt": "PersonX gets ___ at work. After, PersonX will want to"}}
{"generation": ["know if PersonY is still alive"], "references": ["to look at the star map", "to watch another", "to make some popcorn", "to look up the birds they saw", "to take PersonY home", "to get a snack"], "input": {"head": "PersonX watches one with PersonY", "relation": "xWant", "prompt": "PersonX watches one with PersonY. After, PersonX will want to"}}
{"generation": ["know who that person is"], "references": ["to ignore them", "to talk to them", "Scare the crap out of them.", "Sneak up on them.", "to keep walking", "ignore them"], "input": {"head": "PersonX notices someone", "relation": "xWant", "prompt": "PersonX notices someone. After, PersonX will want to"}}
{"generation": ["know who is behind the attack"], "references": ["to spend time alone", "to scream because of panic", "to go home before the light goes", "to control the riot", "to do well", "to never trust anyone", "to improve more", "to manage the situation", "to see the world"], "input": {"head": "PersonX comes to light", "relation": "xWant", "prompt": "PersonX comes to light. After, PersonX will want to"}}
{"generation": ["kill PersonY, but PersonY will not want"], "references": ["take a vacation", "protects and provides", "loves children", "enjoy family life", "shows affection"], "input": {"head": "PersonX rears PersonY's children", "relation": "xWant", "prompt": "PersonX rears PersonY's children. After, PersonX will want to"}}
{"generation": ["know what you want to do"], "references": ["to do something else", "move on to next task", "to go home and rest", "verify other person understood the way"], "input": {"head": "PersonX teaches ___ the way", "relation": "xWant", "prompt": "PersonX teaches ___ the way. After, PersonX will want to"}}
{"generation": ["know how much the restaurant charges for the meal"], "references": ["to satisfy a craving", "to eat it", "to eat food", "to wait for the food to come", "to take the leftovers", "to enjoy a meal"], "input": {"head": "PersonX orders ___ at a restaurant", "relation": "xWant", "prompt": "PersonX orders ___ at a restaurant. After, PersonX will want to"}}
{"generation": ["change the spray to PersonY"], "references": ["wash off", "protection", "to smell good", "to dry off", "get a towel", "to change clothes"], "input": {"head": "PersonX sprays PersonX", "relation": "xWant", "prompt": "PersonX sprays PersonX. After, PersonX will want to"}}
{"generation": ["teach PersonY the way"], "references": ["to ask PersonY to do it on their own", "to be there for PersonY when they have questions", "for them to learn it", "to guide PersonY all the way", "to test PersonY's knowledge on the way", "to make sure PersonY understands the way", "for them to teach others"], "input": {"head": "PersonX teaches PersonY the way", "relation": "xWant", "prompt": "PersonX teaches PersonY the way. After, PersonX will want to"}}
{"generation": ["know how to build it"], "references": ["to look at it", "Complete the work", "Finished building work", "to use it", "test it out", "give a gift"], "input": {"head": "PersonX builds something", "relation": "xWant", "prompt": "PersonX builds something. After, PersonX will want to"}}
{"generation": ["see PersonY naked"], "references": ["to have sex", "to be intimate", "to touch PersonY", "to apologize", "to turn away", "to fulfill desires"], "input": {"head": "PersonX sees PersonY naked", "relation": "xWant", "prompt": "PersonX sees PersonY naked. After, PersonX will want to"}}
{"generation": ["know what you're talking about"], "references": ["to take speaking course", "to hide the secret", "to escape trouble", "to speak louder"], "input": {"head": "PersonX minces words", "relation": "xWant", "prompt": "PersonX minces words. After, PersonX will want to"}}
{"generation": ["know what to do next"], "references": ["to celebrate", "to go camping with friends", "to call some friends", "to play a game"], "input": {"head": "PersonX is rather excited", "relation": "xWant", "prompt": "PersonX is rather excited. After, PersonX will want to"}}
{"generation": ["make a new PersonX"], "references": ["to try something else", "put supplies down", "to ask questions", "to see if they succeed", "to tell everyone about it"], "input": {"head": "PersonX tries PersonX's ___ at making", "relation": "xWant", "prompt": "PersonX tries PersonX's ___ at making. After, PersonX will want to"}}
{"generation": ["know if PersonY is a good person"], "references": ["write a report", "to catch PersonY redhanded", "to make an apprehension", "to find a witness", "to report PersonY to the police", "convict PersonY"], "input": {"head": "PersonX conducts PersonY investigation", "relation": "xWant", "prompt": "PersonX conducts PersonY investigation. After, PersonX will want to"}}
{"generation": ["know if PersonY is okay"], "references": ["to pour water on PersonY's head", "to give PersonY some water", "to tell PersonY to go and fight"], "input": {"head": "PersonX wipes PersonY's forehead", "relation": "xWant", "prompt": "PersonX wipes PersonY's forehead. After, PersonX will want to"}}
{"generation": ["go to the next town"], "references": ["to get way", "to stop", "to get out of the car", "car", "to experience some place new", "city"], "input": {"head": "PersonX blows through town", "relation": "xWant", "prompt": "PersonX blows through town. After, PersonX will want to"}}
{"generation": ["you"], "references": ["hurtful & uncaring.", "to be domineering"], "input": {"head": "PersonX inflicts ___ on others", "relation": "xIntent", "prompt": "PersonX inflicts ___ on others. PersonX did this to"}}
{"generation": ["get dressed for school"], "references": ["to go to school on time", "to get ready to go to school", "to feel comfortable", "to wear an outfit they like"], "input": {"head": "PersonX gets dressed for school", "relation": "xIntent", "prompt": "PersonX gets dressed for school. PersonX did this to"}}
{"generation": ["make sure that the numbers were correct"], "references": ["to look good", "to show off skills", "to be productive"], "input": {"head": "PersonX makes up the numbers", "relation": "xIntent", "prompt": "PersonX makes up the numbers. PersonX did this to"}}
{"generation": ["make the class more readable"], "references": ["none"], "input": {"head": "PersonX fails PersonX's math class", "relation": "xIntent", "prompt": "PersonX fails PersonX's math class. PersonX did this to"}}
{"generation": ["get the ___"], "references": ["none"], "input": {"head": "PersonX moves every ___", "relation": "xIntent", "prompt": "PersonX moves every ___. PersonX did this to"}}
{"generation": ["get the food"], "references": ["to start a food fight", "to humiliate the server", "to show disatisfaction"], "input": {"head": "PersonX throws the food", "relation": "xIntent", "prompt": "PersonX throws the food. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["see where person goes"], "input": {"head": "PersonX watches PersonY go", "relation": "xIntent", "prompt": "PersonX watches PersonY go. PersonX did this to"}}
{"generation": ["himself"], "references": ["none", "to understand the risk"], "input": {"head": "PersonX fears would lose", "relation": "xIntent", "prompt": "PersonX fears would lose. PersonX did this to"}}
{"generation": ["get a new game"], "references": ["to see what it is like", "to play together", "think about buying it", "to try a different game"], "input": {"head": "PersonX plays PersonY's new game", "relation": "xIntent", "prompt": "PersonX plays PersonY's new game. PersonX did this to"}}
{"generation": ["make money"], "references": ["to eat it", "to help celebrate a birthday", "to make money", "to have fun", "to enjoy a dessert", "to feed others"], "input": {"head": "PersonX makes cakes", "relation": "xIntent", "prompt": "PersonX makes cakes. PersonX did this to"}}
{"generation": ["get PersonY to come"], "references": ["to see person", "none"], "input": {"head": "PersonX wants PersonY to come", "relation": "xIntent", "prompt": "PersonX wants PersonY to come. PersonX did this to"}}
{"generation": ["get a reward"], "references": ["to eat", "to serve his guests", "to share food with others"], "input": {"head": "PersonX bakes an apple pie", "relation": "xIntent", "prompt": "PersonX bakes an apple pie. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["none"], "input": {"head": "PersonX suits PersonY", "relation": "xIntent", "prompt": "PersonX suits PersonY. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX feels hopeless", "relation": "xIntent", "prompt": "PersonX feels hopeless. PersonX did this to"}}
{"generation": ["make PersonY feel good"], "references": ["to show love.", "to satisfy persony", "has a foot fetish", "wants to show appreciation"], "input": {"head": "PersonX kisses PersonY's feet", "relation": "xIntent", "prompt": "PersonX kisses PersonY's feet. PersonX did this to"}}
{"generation": ["make PersonY feel special"], "references": ["to express love or adoration", "to show respect to persony"], "input": {"head": "PersonX kisses PersonY's ring", "relation": "xIntent", "prompt": "PersonX kisses PersonY's ring. PersonX did this to"}}
{"generation": ["me"], "references": ["to be villain", "to be criminal", "to seem important"], "input": {"head": "PersonX cuts a swath", "relation": "xIntent", "prompt": "PersonX cuts a swath. PersonX did this to"}}
{"generation": ["me"], "references": ["to go to concerts"], "input": {"head": "PersonX often went", "relation": "xIntent", "prompt": "PersonX often went. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX thinks would become", "relation": "xIntent", "prompt": "PersonX thinks would become. PersonX did this to"}}
{"generation": ["save PersonX's ___"], "references": ["to earn money", "to advance in a career", "to be secure", "to work a lot", "to have money"], "input": {"head": "PersonX spends PersonX's ___ working", "relation": "xIntent", "prompt": "PersonX spends PersonX's ___ working. PersonX did this to"}}
{"generation": ["me"], "references": ["get published"], "input": {"head": "write story", "relation": "xIntent", "prompt": "write story. PersonX did this to"}}
{"generation": ["make the game look more like a real person"], "references": ["to show respect", "to be dry", "their head covered", "to be warm", "to be shielded from the rain"], "input": {"head": "PersonX covers PersonX's head", "relation": "xIntent", "prompt": "PersonX covers PersonX's head. PersonX did this to"}}
{"generation": ["the car"], "references": ["go somewhere", "drive car"], "input": {"head": "move car", "relation": "xIntent", "prompt": "move car. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["none", "to have all the facts"], "input": {"head": "PersonX finds PersonY explanation", "relation": "xIntent", "prompt": "PersonX finds PersonY explanation. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to groom person y", "to help"], "input": {"head": "PersonX curls PersonY's hair", "relation": "xIntent", "prompt": "PersonX curls PersonY's hair. PersonX did this to"}}
{"generation": ["get in shape for the upcoming competition"], "references": ["to get healthy", "to build muscle"], "input": {"head": "PersonX starts working out", "relation": "xIntent", "prompt": "PersonX starts working out. PersonX did this to"}}
{"generation": ["himself"], "references": ["to express shame", "thing that is bad", "none", "to show regret"], "input": {"head": "PersonX hangs PersonX's ___ in shame", "relation": "xIntent", "prompt": "PersonX hangs PersonX's ___ in shame. PersonX did this to"}}
{"generation": ["avoid confusion with PersonY"], "references": ["to be polite", "to help someone", "persony was a new acquaintence"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "xIntent", "prompt": "PersonX gives PersonY PersonX's name. PersonX did this to"}}
{"generation": ["me"], "references": ["to do other things"], "input": {"head": "PersonX never been on one", "relation": "xIntent", "prompt": "PersonX never been on one. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX comes of age", "relation": "xIntent", "prompt": "PersonX comes of age. PersonX did this to"}}
{"generation": ["himself"], "references": ["none", "to wash off the mud he was covered with"], "input": {"head": "PersonX needs a bath", "relation": "xIntent", "prompt": "PersonX needs a bath. PersonX did this to"}}
{"generation": ["me"], "references": ["it to be functioning", "it to be fixed", "to have it be usable"], "input": {"head": "PersonX gets it to work", "relation": "xIntent", "prompt": "PersonX gets it to work. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["none", "to be kind", "to show they are special", "to be thoughtful"], "input": {"head": "PersonX remembers PersonY's name", "relation": "xIntent", "prompt": "PersonX remembers PersonY's name. PersonX did this to"}}
{"generation": ["avoid being seen by PersonY"], "references": ["none"], "input": {"head": "PersonX loses sight of PersonY", "relation": "xIntent", "prompt": "PersonX loses sight of PersonY. PersonX did this to"}}
{"generation": ["make sure that the coupons were not being used by"], "references": ["to save money", "to get a discount on some items"], "input": {"head": "PersonX uses PersonX's coupons", "relation": "xIntent", "prompt": "PersonX uses PersonX's coupons. PersonX did this to"}}
{"generation": ["PersonY's face"], "references": ["to say something to them.", "to be attentive", "to look at the other person.", "to see their expression.", "to look at them."], "input": {"head": "PersonX looks at PersonY's face", "relation": "xIntent", "prompt": "PersonX looks at PersonY's face. PersonX did this to"}}
{"generation": ["get a discount"], "references": ["to get some bread", "to buy tissues", "to buy some groceries"], "input": {"head": "PersonX stops at a store", "relation": "xIntent", "prompt": "PersonX stops at a store. PersonX did this to"}}
{"generation": ["prevent the ___ from getting in"], "references": ["stay safe"], "input": {"head": "PersonX keeps the ___ from the door", "relation": "xIntent", "prompt": "PersonX keeps the ___ from the door. PersonX did this to"}}
{"generation": ["get the best of both worlds"], "references": ["to show y something", "wants to help someone", "to be with someone"], "input": {"head": "PersonX gets PersonY hands on", "relation": "xIntent", "prompt": "PersonX gets PersonY hands on. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to get persony what they want", "persony to be happy", "none"], "input": {"head": "PersonX finds ___ PersonY wanted", "relation": "xIntent", "prompt": "PersonX finds ___ PersonY wanted. PersonX did this to"}}
{"generation": ["make the player feel like they were in the shoes"], "references": ["to get ready for the running", "to rush for the tennis court", "to rush to the exercise session", "to keep his feet warm", "to look stylish."], "input": {"head": "PersonX wears PersonX's boots", "relation": "xIntent", "prompt": "PersonX wears PersonX's boots. PersonX did this to"}}
{"generation": ["avoid the risk of being seen by PersonY"], "references": ["teach them something", "to help person y", "to guide y in the right direction"], "input": {"head": "PersonX directs PersonY's steps", "relation": "xIntent", "prompt": "PersonX directs PersonY's steps. PersonX did this to"}}
{"generation": ["get away from the \"strict\" rules of"], "references": ["to get fresh air", "none"], "input": {"head": "PersonX wants to play outside", "relation": "xIntent", "prompt": "PersonX wants to play outside. PersonX did this to"}}
{"generation": ["make sure that the person who was being attacked was"], "references": ["to be finished quickly", "to hurry up", "to be efficient"], "input": {"head": "PersonX immediately began", "relation": "xIntent", "prompt": "PersonX immediately began. PersonX did this to"}}
{"generation": ["avoid the consequences of his actions"], "references": ["none", "to stay at home"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "xIntent", "prompt": "PersonX has to cancel PersonX's plans. PersonX did this to"}}
{"generation": ["___"], "references": ["to be evil", "to punish people", "to be dominant", "to punish", "to hurt people"], "input": {"head": "PersonX puts ___ to death", "relation": "xIntent", "prompt": "PersonX puts ___ to death. PersonX did this to"}}
{"generation": ["me"], "references": ["to be polite", "to be thankful", "to show appreciation"], "input": {"head": "PersonX thanks the ___ for PersonY's comments", "relation": "xIntent", "prompt": "PersonX thanks the ___ for PersonY's comments. PersonX did this to"}}
{"generation": ["find ___"], "references": ["none", "to find his phone"], "input": {"head": "PersonX finds ___ later", "relation": "xIntent", "prompt": "PersonX finds ___ later. PersonX did this to"}}
{"generation": ["me"], "references": ["to make it"], "input": {"head": "PersonX reproduces this ___ regardless", "relation": "xIntent", "prompt": "PersonX reproduces this ___ regardless. PersonX did this to"}}
{"generation": ["me"], "references": ["to escape their life", "to play ball", "to experience a drug"], "input": {"head": "PersonX trips balls", "relation": "xIntent", "prompt": "PersonX trips balls. PersonX did this to"}}
{"generation": ["avoid the risk of being sued by PersonY"], "references": ["to make a large purchase", "to spend money"], "input": {"head": "PersonX withdraws money", "relation": "xIntent", "prompt": "PersonX withdraws money. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX loses track of time", "relation": "xIntent", "prompt": "PersonX loses track of time. PersonX did this to"}}
{"generation": ["get milk"], "references": ["to drink", "to be healthy", "to make something that requires milk", "get milk", "to drink something"], "input": {"head": "PersonX gets milk", "relation": "xIntent", "prompt": "PersonX gets milk. PersonX did this to"}}
{"generation": ["get the attention of the judge"], "references": ["to tell the truth", "to be loyal", "to conceal the truth", "to obey the law"], "input": {"head": "PersonX takes the stand", "relation": "xIntent", "prompt": "PersonX takes the stand. PersonX did this to"}}
{"generation": ["me"], "references": ["to items are be in a single place", "make sense of things", "to things to be organized", "to create the toy"], "input": {"head": "PersonX puts it all together", "relation": "xIntent", "prompt": "PersonX puts it all together. PersonX did this to"}}
{"generation": ["the person"], "references": ["to learn", "to have a hobby", "to escape", "to learn something", "to learn about penguins"], "input": {"head": "PersonX wants to read", "relation": "xIntent", "prompt": "PersonX wants to read. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to ensure the well being of person y", "none", "to help persony."], "input": {"head": "PersonX has to take care of PersonY", "relation": "xIntent", "prompt": "PersonX has to take care of PersonY. PersonX did this to"}}
{"generation": ["get back at PersonX's mom"], "references": ["to spend time with personx's mom", "to go shopping with personx's mom", "to go places with her mom all the time."], "input": {"head": "PersonX goes ___ with PersonX's mom", "relation": "xIntent", "prompt": "PersonX goes ___ with PersonX's mom. PersonX did this to"}}
{"generation": ["get the job"], "references": ["none", "upset"], "input": {"head": "PersonX is fired from PersonX's job", "relation": "xIntent", "prompt": "PersonX is fired from PersonX's job. PersonX did this to"}}
{"generation": ["get the attention of the person who was in the"], "references": ["to be on someone", "none"], "input": {"head": "PersonX lands on PersonY's leg", "relation": "xIntent", "prompt": "PersonX lands on PersonY's leg. PersonX did this to"}}
{"generation": ["make the game more fun"], "references": ["to be close to person", "to eat food with the person"], "input": {"head": "PersonX sits next to PersonY", "relation": "xIntent", "prompt": "PersonX sits next to PersonY. PersonX did this to"}}
{"generation": ["hide his identity"], "references": ["to hide from the boogeyman", "to not be sean", "to be hidden", "to go unnoticed"], "input": {"head": "PersonX hides under the covers", "relation": "xIntent", "prompt": "PersonX hides under the covers. PersonX did this to"}}
{"generation": ["get the laptop back"], "references": ["to borrow it for a school project.", "to put their friend's laptop away", "to finish his essay"], "input": {"head": "PersonX takes PersonY's laptop", "relation": "xIntent", "prompt": "PersonX takes PersonY's laptop. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX has lost PersonX's phone", "relation": "xIntent", "prompt": "PersonX has lost PersonX's phone. PersonX did this to"}}
{"generation": ["make ___ every morning"], "references": ["to make it", "to be wide awake", "to be ready to go", "to accomplish something"], "input": {"head": "PersonX makes ___ every morning", "relation": "xIntent", "prompt": "PersonX makes ___ every morning. PersonX did this to"}}
{"generation": ["create PersonY structure"], "references": ["to help out y"], "input": {"head": "PersonX creates PersonY structure", "relation": "xIntent", "prompt": "PersonX creates PersonY structure. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX feels terrible", "relation": "xIntent", "prompt": "PersonX feels terrible. PersonX did this to"}}
{"generation": ["get ___"], "references": ["none", "to get something done", "to accomplish something", "to look pretty"], "input": {"head": "PersonX gets ___ at the store", "relation": "xIntent", "prompt": "PersonX gets ___ at the store. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX draws the short straw", "relation": "xIntent", "prompt": "PersonX draws the short straw. PersonX did this to"}}
{"generation": ["get PersonY to speak"], "references": ["person y to talk about something", "to hear his side of the story", "help in speaking"], "input": {"head": "PersonX asks PersonY to speak", "relation": "xIntent", "prompt": "PersonX asks PersonY to speak. PersonX did this to"}}
{"generation": ["himself"], "references": ["to be near his parents.", "none"], "input": {"head": "PersonX has to go to a new school", "relation": "xIntent", "prompt": "PersonX has to go to a new school. PersonX did this to"}}
{"generation": ["the nature"], "references": ["none", "to educate others"], "input": {"head": "PersonX sheds ___ on the nature", "relation": "xIntent", "prompt": "PersonX sheds ___ on the nature. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to communicate a message to the person", "to see the person."], "input": {"head": "PersonX looks at PersonY like that", "relation": "xIntent", "prompt": "PersonX looks at PersonY like that. PersonX did this to"}}
{"generation": ["get the ___"], "references": ["to help them get inside", "to watch something interesting"], "input": {"head": "PersonX pulls open the ___", "relation": "xIntent", "prompt": "PersonX pulls open the ___. PersonX did this to"}}
{"generation": ["me"], "references": ["to be a successful employee.", "complete the job"], "input": {"head": "PersonX works really well", "relation": "xIntent", "prompt": "PersonX works really well. PersonX did this to"}}
{"generation": ["get the attention of the guard"], "references": ["to release frustration.", "to express anger", "to express frustration", "to be upset", "to show anger."], "input": {"head": "PersonX throws ___ at the wall", "relation": "xIntent", "prompt": "PersonX throws ___ at the wall. PersonX did this to"}}
{"generation": ["get the car to stop"], "references": ["to get somewhere", "to drive home", "to drive"], "input": {"head": "PersonX walks to the car", "relation": "xIntent", "prompt": "PersonX walks to the car. PersonX did this to"}}
{"generation": ["get to the office"], "references": ["to go to work"], "input": {"head": "PersonX drives to the office", "relation": "xIntent", "prompt": "PersonX drives to the office. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX burns ___ badly", "relation": "xIntent", "prompt": "PersonX burns ___ badly. PersonX did this to"}}
{"generation": ["avoid the risk of injury to PersonY"], "references": ["to take off their pants", "to undress"], "input": {"head": "PersonX unbuckles PersonY's belt", "relation": "xIntent", "prompt": "PersonX unbuckles PersonY's belt. PersonX did this to"}}
{"generation": ["me"], "references": ["to become a philosopher", "to find ways to prosperity", "to find the purpose of his existance"], "input": {"head": "PersonX thinks a lot", "relation": "xIntent", "prompt": "PersonX thinks a lot. PersonX did this to"}}
{"generation": ["me"], "references": ["to good", "to be dependable", "to be hardworking", "none"], "input": {"head": "PersonX works really hard", "relation": "xIntent", "prompt": "PersonX works really hard. PersonX did this to"}}
{"generation": ["me"], "references": ["to entertain themselves", "to dance hard", "to celebrate his lover's birthday", "to spend the evening in a relaxed way", "to feel good"], "input": {"head": "PersonX plays PersonX's favorite song", "relation": "xIntent", "prompt": "PersonX plays PersonX's favorite song. PersonX did this to"}}
{"generation": ["avoid the person who was trying to kill him"], "references": ["see something", "none", "to look"], "input": {"head": "PersonX sees ___ out of the corner of PersonX's eye", "relation": "xIntent", "prompt": "PersonX sees ___ out of the corner of PersonX's eye. PersonX did this to"}}
{"generation": ["make the game more fun"], "references": ["to be organized", "none", "to be nice", "to surprise little brother"], "input": {"head": "PersonX puts everything together", "relation": "xIntent", "prompt": "PersonX puts everything together. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["none"], "input": {"head": "PersonX never occurred to PersonY", "relation": "xIntent", "prompt": "PersonX never occurred to PersonY. PersonX did this to"}}
{"generation": ["make ___"], "references": ["it to happen that day", "none", "to be productive", "to make something"], "input": {"head": "PersonX makes ___ that day", "relation": "xIntent", "prompt": "PersonX makes ___ that day. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to help persony", "to help someone in need", "to do something good", "to do a nice job"], "input": {"head": "PersonX nurses PersonY back", "relation": "xIntent", "prompt": "PersonX nurses PersonY back. PersonX did this to"}}
{"generation": ["avoid the risk of being sued by the other party"], "references": ["to have resources", "to treat themself", "a good deal", "to enjoy life"], "input": {"head": "PersonX eventually bought ___", "relation": "xIntent", "prompt": "PersonX eventually bought ___. PersonX did this to"}}
{"generation": ["me"], "references": ["explain her situation", "have sympathy", "to get away with something", "to be pitied", "get her way"], "input": {"head": "PersonX plays the gender card", "relation": "xIntent", "prompt": "PersonX plays the gender card. PersonX did this to"}}
{"generation": ["make the game more accessible to new players"], "references": ["to take time to do something"], "input": {"head": "PersonX takes place over a period", "relation": "xIntent", "prompt": "PersonX takes place over a period. PersonX did this to"}}
{"generation": ["me"], "references": ["to make a decision", "to have some resolution", "be correct"], "input": {"head": "PersonX jumps to conclusions", "relation": "xIntent", "prompt": "PersonX jumps to conclusions. PersonX did this to"}}
{"generation": ["save the world"], "references": ["to improve their life", "improve themself", "to be healthier", "to be a better person", "prove themselves to others"], "input": {"head": "PersonX changes PersonX's lives", "relation": "xIntent", "prompt": "PersonX changes PersonX's lives. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to talk"], "input": {"head": "PersonX comes see PersonY", "relation": "xIntent", "prompt": "PersonX comes see PersonY. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX not knows which end is up", "relation": "xIntent", "prompt": "PersonX not knows which end is up. PersonX did this to"}}
{"generation": ["me"], "references": ["to be a rebel", "to look like a tough guy", "to be clean", "to clear x's mouth"], "input": {"head": "PersonX spits nails", "relation": "xIntent", "prompt": "PersonX spits nails. PersonX did this to"}}
{"generation": ["me"], "references": ["to look nice person", "to be happy", "to have fun", "to be friendly", "to show her joy"], "input": {"head": "PersonX gives a small smile", "relation": "xIntent", "prompt": "PersonX gives a small smile. PersonX did this to"}}
{"generation": ["me"], "references": ["none", "to be a good reader"], "input": {"head": "PersonX loves reading books", "relation": "xIntent", "prompt": "PersonX loves reading books. PersonX did this to"}}
{"generation": ["make the other person think that PersonX was talking"], "references": ["to make sure no one is offended."], "input": {"head": "PersonX watches PersonX's mouth", "relation": "xIntent", "prompt": "PersonX watches PersonX's mouth. PersonX did this to"}}
{"generation": ["get his parents to let him go to the hospital"], "references": ["to hang out with friends", "to gain their parents' approval", "them to give in", "to go to an event", "to go", "a puppy", "to go abroad for his studies"], "input": {"head": "PersonX convinces PersonX's parents", "relation": "xIntent", "prompt": "PersonX convinces PersonX's parents. PersonX did this to"}}
{"generation": ["women because they are women"], "references": ["to be helpful", "proactive", "reformative", "to help women be more equal"], "input": {"head": "PersonX increases women 's ___", "relation": "xIntent", "prompt": "PersonX increases women 's ___. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX feels lucky", "relation": "xIntent", "prompt": "PersonX feels lucky. PersonX did this to"}}
{"generation": ["himself"], "references": ["to analyze a matter/issue", "none", "knowledge"], "input": {"head": "PersonX realizes something", "relation": "xIntent", "prompt": "PersonX realizes something. PersonX did this to"}}
{"generation": ["make PersonY more likely to resist"], "references": ["to show his opposition to person y's policy", "persony to be rebellious"], "input": {"head": "PersonX makes PersonY resistance", "relation": "xIntent", "prompt": "PersonX makes PersonY resistance. PersonX did this to"}}
{"generation": ["you"], "references": ["a vitamin", "also happy satisfied", "to stay healthy"], "input": {"head": "PersonX takes ___ daily", "relation": "xIntent", "prompt": "PersonX takes ___ daily. PersonX did this to"}}
{"generation": ["get the attention of the other players"], "references": ["to go in the room"], "input": {"head": "PersonX decides to enter", "relation": "xIntent", "prompt": "PersonX decides to enter. PersonX did this to"}}
{"generation": ["me"], "references": ["i like this fact in this face"], "input": {"head": "PersonX looks a ___ in the face", "relation": "xIntent", "prompt": "PersonX looks a ___ in the face. PersonX did this to"}}
{"generation": ["me"], "references": ["to find a job they enjoy"], "input": {"head": "PersonX changes ___ frequently", "relation": "xIntent", "prompt": "PersonX changes ___ frequently. PersonX did this to"}}
{"generation": ["me"], "references": ["to graduate."], "input": {"head": "PersonX studies as much", "relation": "xIntent", "prompt": "PersonX studies as much. PersonX did this to"}}
{"generation": ["___"], "references": ["to educate people", "to educate the poor."], "input": {"head": "PersonX teaches ___ to use", "relation": "xIntent", "prompt": "PersonX teaches ___ to use. PersonX did this to"}}
{"generation": ["get a better grade"], "references": ["none"], "input": {"head": "PersonX misses class", "relation": "xIntent", "prompt": "PersonX misses class. PersonX did this to"}}
{"generation": ["help the community, and we are grateful for their"], "references": ["to get good", "to be the best", "to improve skills"], "input": {"head": "PersonX practices together", "relation": "xIntent", "prompt": "PersonX practices together. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to be helpful", "to give a good future"], "input": {"head": "PersonX turns PersonY's life around", "relation": "xIntent", "prompt": "PersonX turns PersonY's life around. PersonX did this to"}}
{"generation": ["find ___"], "references": ["less commute."], "input": {"head": "PersonX finds ___ at home", "relation": "xIntent", "prompt": "PersonX finds ___ at home. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX feels helpless", "relation": "xIntent", "prompt": "PersonX feels helpless. PersonX did this to"}}
{"generation": ["me"], "references": ["to learn about new things", "none"], "input": {"head": "PersonX loves reading", "relation": "xIntent", "prompt": "PersonX loves reading. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to be helpful", "helpful", "to handle a problem"], "input": {"head": "PersonX cleans PersonY", "relation": "xIntent", "prompt": "PersonX cleans PersonY. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX has anger problems", "relation": "xIntent", "prompt": "PersonX has anger problems. PersonX did this to"}}
{"generation": ["me"], "references": ["to better something", "something", "to replace the radio."], "input": {"head": "PersonX gets ___ , though", "relation": "xIntent", "prompt": "PersonX gets ___ , though. PersonX did this to"}}
{"generation": ["me"], "references": ["be a perfectionist", "none"], "input": {"head": "PersonX is twenty minutes late", "relation": "xIntent", "prompt": "PersonX is twenty minutes late. PersonX did this to"}}
{"generation": ["save PersonY's soul"], "references": ["them to be saved spiritually", "to help"], "input": {"head": "PersonX saves PersonY's ___ from PersonY's sins", "relation": "xIntent", "prompt": "PersonX saves PersonY's ___ from PersonY's sins. PersonX did this to"}}
{"generation": ["me"], "references": ["to be friendly and optimistic."], "input": {"head": "PersonX looks like fun", "relation": "xIntent", "prompt": "PersonX looks like fun. PersonX did this to"}}
{"generation": ["get closer to the other members of the team"], "references": ["to win.", "to be a member of the team.", "to learn swimming", "to prove himself.", "to be in the team"], "input": {"head": "PersonX joins the swim team", "relation": "xIntent", "prompt": "PersonX joins the swim team. PersonX did this to"}}
{"generation": ["avoid the \"unnecessary\" and \"unnecessary"], "references": ["to be heard", "to make noise", "to ask a question", "to express an opinion", "to make a statement"], "input": {"head": "PersonX opens PersonX's ___ to speak", "relation": "xIntent", "prompt": "PersonX opens PersonX's ___ to speak. PersonX did this to"}}
{"generation": ["you"], "references": ["to be arrogant", "to use his power as a minister"], "input": {"head": "PersonX hurts anyone 's ___", "relation": "xIntent", "prompt": "PersonX hurts anyone 's ___. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to be violent", "to cause harm to person"], "input": {"head": "PersonX wants to hurt PersonY", "relation": "xIntent", "prompt": "PersonX wants to hurt PersonY. PersonX did this to"}}
{"generation": ["get the ring back"], "references": ["none", "wear it"], "input": {"head": "PersonX finds PersonX's ring", "relation": "xIntent", "prompt": "PersonX finds PersonX's ring. PersonX did this to"}}
{"generation": ["me"], "references": ["to enjoy the music", "to party", "to have fun"], "input": {"head": "PersonX dances all night", "relation": "xIntent", "prompt": "PersonX dances all night. PersonX did this to"}}
{"generation": ["me"], "references": ["to show he cares for person", "to show love and affection.", "to be loving"], "input": {"head": "PersonX kisses PersonY gently", "relation": "xIntent", "prompt": "PersonX kisses PersonY gently. PersonX did this to"}}
{"generation": ["show that the \"real\" world is not a"], "references": ["to read", "to learn something"], "input": {"head": "PersonX borrows this thesis for use", "relation": "xIntent", "prompt": "PersonX borrows this thesis for use. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX barely missed ___", "relation": "xIntent", "prompt": "PersonX barely missed ___. PersonX did this to"}}
{"generation": ["find the ___"], "references": ["provide the estimate"], "input": {"head": "PersonX finds every ___", "relation": "xIntent", "prompt": "PersonX finds every ___. PersonX did this to"}}
{"generation": ["me"], "references": ["to show they are happy", "to have positive attitude.", "to show how content he is"], "input": {"head": "PersonX smiles happily", "relation": "xIntent", "prompt": "PersonX smiles happily. PersonX did this to"}}
{"generation": ["me"], "references": ["to do well", "to score good marks", "to be successful"], "input": {"head": "PersonX studies for an exam", "relation": "xIntent", "prompt": "PersonX studies for an exam. PersonX did this to"}}
{"generation": ["get the best of both worlds"], "references": ["to complete a task", "to make something"], "input": {"head": "PersonX puts ___ all together", "relation": "xIntent", "prompt": "PersonX puts ___ all together. PersonX did this to"}}
{"generation": ["make it easier to get started with the project"], "references": ["none", "to be respectful"], "input": {"head": "PersonX starts with a clean sheet", "relation": "xIntent", "prompt": "PersonX starts with a clean sheet. PersonX did this to"}}
{"generation": ["get a sense of what people are like, and"], "references": ["to show off", "share the selfies on social media", "to show love for themselves", "to look good online", "to remember how they look now"], "input": {"head": "PersonX takes selfies", "relation": "xIntent", "prompt": "PersonX takes selfies. PersonX did this to"}}
{"generation": ["himself"], "references": ["a higher status", "to earn more because he financially committed"], "input": {"head": "PersonX increases PersonX's ___ at the expense", "relation": "xIntent", "prompt": "PersonX increases PersonX's ___ at the expense. PersonX did this to"}}
{"generation": ["make the god happy"], "references": ["positive", "to do everything in the name of god"], "input": {"head": "PersonX calls god 's ___", "relation": "xIntent", "prompt": "PersonX calls god 's ___. PersonX did this to"}}
{"generation": ["get the attention of the police"], "references": ["to escape getting arrested", "to not get blamed", "to avoid being caught", "to runaway", "to get away"], "input": {"head": "PersonX leaves the scene", "relation": "xIntent", "prompt": "PersonX leaves the scene. PersonX did this to"}}
{"generation": ["the lord's ___"], "references": ["to be a good citizen"], "input": {"head": "PersonX discerns the lord 's ___", "relation": "xIntent", "prompt": "PersonX discerns the lord 's ___. PersonX did this to"}}
{"generation": ["get a better view of the store"], "references": ["to buy something", "to grab some bread", "to pick up some broccoli"], "input": {"head": "PersonX stops at the store", "relation": "xIntent", "prompt": "PersonX stops at the store. PersonX did this to"}}
{"generation": ["avoid paying taxes on the income from PersonY"], "references": ["to help persony", "to be helpful", "person y to be current", "to do something good", "to be nice"], "input": {"head": "PersonX pays PersonY taxes", "relation": "xIntent", "prompt": "PersonX pays PersonY taxes. PersonX did this to"}}
{"generation": ["get a frisbee"], "references": ["to play disc golf", "to play with his dog", "to have fun."], "input": {"head": "PersonX throws a frisbee", "relation": "xIntent", "prompt": "PersonX throws a frisbee. PersonX did this to"}}
{"generation": ["get to the other side of the pool"], "references": ["to be swimmer", "to learn new things"], "input": {"head": "PersonX wants to learn how to swim", "relation": "xIntent", "prompt": "PersonX wants to learn how to swim. PersonX did this to"}}
{"generation": ["obtain a ___"], "references": ["help from someone because want to go tour"], "input": {"head": "PersonX obtains a ___ as possible", "relation": "xIntent", "prompt": "PersonX obtains a ___ as possible. PersonX did this to"}}
{"generation": ["me"], "references": ["to go home", "to go to a parking lot.", "to take other route"], "input": {"head": "PersonX makes a turn", "relation": "xIntent", "prompt": "PersonX makes a turn. PersonX did this to"}}
{"generation": ["me"], "references": ["to be nice.", "to show affection", "her to have it", "to be a good spouse"], "input": {"head": "PersonX buys ___ for my wife", "relation": "xIntent", "prompt": "PersonX buys ___ for my wife. PersonX did this to"}}
{"generation": ["learn the language of the other person"], "references": ["to be understand culture", "to learn", "accomplishment", "knowledge"], "input": {"head": "PersonX learns a new language", "relation": "xIntent", "prompt": "PersonX learns a new language. PersonX did this to"}}
{"generation": ["get to the beach"], "references": ["none"], "input": {"head": "PersonX enjoys swimming", "relation": "xIntent", "prompt": "PersonX enjoys swimming. PersonX did this to"}}
{"generation": ["save ___"], "references": ["to make something.", "none"], "input": {"head": "PersonX spends ___ making", "relation": "xIntent", "prompt": "PersonX spends ___ making. PersonX did this to"}}
{"generation": ["make it easier to see the difference between the two"], "references": ["to make petty distinction", "to argue", "to get in a fight"], "input": {"head": "PersonX splits hairs", "relation": "xIntent", "prompt": "PersonX splits hairs. PersonX did this to"}}
{"generation": ["get the result"], "references": ["to receive payment", "to be fit", "to be fair", "to participate", "none"], "input": {"head": "PersonX takes ___ as a result", "relation": "xIntent", "prompt": "PersonX takes ___ as a result. PersonX did this to"}}
{"generation": ["get a response from ___"], "references": ["to get answers"], "input": {"head": "PersonX calls ___ the next day", "relation": "xIntent", "prompt": "PersonX calls ___ the next day. PersonX did this to"}}
{"generation": ["get food"], "references": ["to express their anger", "to waste food", "to be negative", "to show their displeasure", "a food fight"], "input": {"head": "PersonX throws food", "relation": "xIntent", "prompt": "PersonX throws food. PersonX did this to"}}
{"generation": ["the ___"], "references": ["order"], "input": {"head": "PersonX smooths away the ___", "relation": "xIntent", "prompt": "PersonX smooths away the ___. PersonX did this to"}}
{"generation": ["get the PersonY instance"], "references": ["to emulate"], "input": {"head": "PersonX takes PersonY example", "relation": "xIntent", "prompt": "PersonX takes PersonY example. PersonX did this to"}}
{"generation": ["get the car to stop"], "references": ["to stop driving", "to stop"], "input": {"head": "PersonX pulls the car over", "relation": "xIntent", "prompt": "PersonX pulls the car over. PersonX did this to"}}
{"generation": ["make the impression more convincing"], "references": ["to be funny", "none"], "input": {"head": "PersonX forms PersonY impression", "relation": "xIntent", "prompt": "PersonX forms PersonY impression. PersonX did this to"}}
{"generation": ["make the class more accessible to the user"], "references": ["learn", "none"], "input": {"head": "PersonX enjoys PersonX's class", "relation": "xIntent", "prompt": "PersonX enjoys PersonX's class. PersonX did this to"}}
{"generation": ["me"], "references": ["to eat something"], "input": {"head": "PersonX tries sushi before", "relation": "xIntent", "prompt": "PersonX tries sushi before. PersonX did this to"}}
{"generation": ["me"], "references": ["to be efficent", "to continue his duty"], "input": {"head": "PersonX gets right back", "relation": "xIntent", "prompt": "PersonX gets right back. PersonX did this to"}}
{"generation": ["avoid the need to use a function that would have"], "references": ["to choose the best option"], "input": {"head": "PersonX chooses among alternatives", "relation": "xIntent", "prompt": "PersonX chooses among alternatives. PersonX did this to"}}
{"generation": ["get a better deal on the trip"], "references": ["to enjoy", "to go somewhere fun", "to go on vacation"], "input": {"head": "PersonX plans a trip", "relation": "xIntent", "prompt": "PersonX plans a trip. PersonX did this to"}}
{"generation": ["avoid paying taxes on the income"], "references": ["wants his bills paid", "to be a problem", "the service of others"], "input": {"head": "PersonX pays ___ at the rate", "relation": "xIntent", "prompt": "PersonX pays ___ at the rate. PersonX did this to"}}
{"generation": ["get the attention of the media"], "references": ["a lot of toys", "entertained", "materialistic", "a lot of gadgets."], "input": {"head": "PersonX spends a lot of money", "relation": "xIntent", "prompt": "PersonX spends a lot of money. PersonX did this to"}}
{"generation": ["get closer to PersonY"], "references": ["to touch her", "to protect person", "to show affection for person", "to talk to person"], "input": {"head": "PersonX gets close to PersonY", "relation": "xIntent", "prompt": "PersonX gets close to PersonY. PersonX did this to"}}
{"generation": ["me"], "references": ["to play", "none"], "input": {"head": "PersonX has a new toy", "relation": "xIntent", "prompt": "PersonX has a new toy. PersonX did this to"}}
{"generation": ["me"], "references": ["to interact with persony", "to visit", "likes them", "to maintain a friendship", "company"], "input": {"head": "PersonX sees PersonY frequently", "relation": "xIntent", "prompt": "PersonX sees PersonY frequently. PersonX did this to"}}
{"generation": ["make PersonY feel like he was being watched"], "references": ["to help persony.", "to help person y", "to dive in the swimming pool", "to take a shower", "y cannot do it on their own so they ask x"], "input": {"head": "PersonX takes PersonY's watch off", "relation": "xIntent", "prompt": "PersonX takes PersonY's watch off. PersonX did this to"}}
{"generation": ["avoid having to use the __getitem__ method"], "references": ["limit their caloric intake", "to win someone's affection"], "input": {"head": "PersonX sets PersonX's cap at ___", "relation": "xIntent", "prompt": "PersonX sets PersonX's cap at ___. PersonX did this to"}}
{"generation": ["get the value of the property PersonY"], "references": ["to ask a question", "to share information", "to promote or fire the person", "to talk to them"], "input": {"head": "PersonX calls PersonY in", "relation": "xIntent", "prompt": "PersonX calls PersonY in. PersonX did this to"}}
{"generation": ["get the attention of the person who was the target"], "references": ["to make the payment easier", "to show the best way to solve the problem"], "input": {"head": "PersonX uses the ___ as a means", "relation": "xIntent", "prompt": "PersonX uses the ___ as a means. PersonX did this to"}}
{"generation": ["me"], "references": ["to go somewhere.", "to the store."], "input": {"head": "PersonX quickly went", "relation": "xIntent", "prompt": "PersonX quickly went. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX slips PersonY's tongue", "relation": "xIntent", "prompt": "PersonX slips PersonY's tongue. PersonX did this to"}}
{"generation": ["PersonY because PersonY was a threat to Person"], "references": ["not see them anymore", "to kill Person Y", "to hurt Person Y badly", "to end Person Y life"], "input": {"head": "PersonX murders PersonY", "relation": "xIntent", "prompt": "PersonX murders PersonY. PersonX did this to"}}
{"generation": ["get the attention of the ambulance crew"], "references": ["to help someone", "to save someone", "help for a person", "to get help", "medical treatment"], "input": {"head": "PersonX calls the ambulance", "relation": "xIntent", "prompt": "PersonX calls the ambulance. PersonX did this to"}}
{"generation": ["the person"], "references": ["to throw away old food", "to feed the ducks"], "input": {"head": "PersonX throws some bread", "relation": "xIntent", "prompt": "PersonX throws some bread. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX feels unhappy", "relation": "xIntent", "prompt": "PersonX feels unhappy. PersonX did this to"}}
{"generation": ["make the game more accessible to new players"], "references": ["none"], "input": {"head": "PersonX takes place in the century", "relation": "xIntent", "prompt": "PersonX takes place in the century. PersonX did this to"}}
{"generation": ["save money"], "references": ["gas in their car", "to fill up the car", "to win the lottery"], "input": {"head": "PersonX buys ___ at the gas station", "relation": "xIntent", "prompt": "PersonX buys ___ at the gas station. PersonX did this to"}}
{"generation": ["me"], "references": ["to stretch."], "input": {"head": "PersonX stretches out PersonX's hand", "relation": "xIntent", "prompt": "PersonX stretches out PersonX's hand. PersonX did this to"}}
{"generation": ["get the ball"], "references": ["to be a nice friend.", "none", "to locate a lost item"], "input": {"head": "PersonX finds PersonX's ball", "relation": "xIntent", "prompt": "PersonX finds PersonX's ball. PersonX did this to"}}
{"generation": ["get a ticket, but he was not speeding"], "references": ["none", "to go really fast."], "input": {"head": "PersonX is pulled over for speeding", "relation": "xIntent", "prompt": "PersonX is pulled over for speeding. PersonX did this to"}}
{"generation": ["avoid the \"unexpected\" call to ___"], "references": ["to be sure his friend is safe.", "to speak to someone", "to inform others", "to be prudent", "to help"], "input": {"head": "PersonX calls ___ immediately", "relation": "xIntent", "prompt": "PersonX calls ___ immediately. PersonX did this to"}}
{"generation": ["get PersonY's hands"], "references": ["to warm the person's hands.", "to play"], "input": {"head": "PersonX gets PersonY's hands", "relation": "xIntent", "prompt": "PersonX gets PersonY's hands. PersonX did this to"}}
{"generation": ["me"], "references": ["to feel recharged", "to feel replenished", "to feel relaxed", "none"], "input": {"head": "PersonX feels refreshed", "relation": "xIntent", "prompt": "PersonX feels refreshed. PersonX did this to"}}
{"generation": ["make the movement more fluid"], "references": ["to help out", "to be apart of something"], "input": {"head": "PersonX plays a ___ in the movement", "relation": "xIntent", "prompt": "PersonX plays a ___ in the movement. PersonX did this to"}}
{"generation": ["me"], "references": ["a piece of cake"], "input": {"head": "PersonX would like", "relation": "xIntent", "prompt": "PersonX would like. PersonX did this to"}}
{"generation": ["make it easier to test the PersonX class"], "references": ["none"], "input": {"head": "PersonX fails all of PersonX's classes", "relation": "xIntent", "prompt": "PersonX fails all of PersonX's classes. PersonX did this to"}}
{"generation": ["get the information that PersonY was in the area"], "references": ["to talk", "to rekindle an old friendship", "to visit", "to catch up"], "input": {"head": "PersonX makes contact with PersonY", "relation": "xIntent", "prompt": "PersonX makes contact with PersonY. PersonX did this to"}}
{"generation": ["make PersonY feel better about himself"], "references": ["none", "to meet person y", "to see what/who is in his office."], "input": {"head": "PersonX sees PersonY in PersonX's office", "relation": "xIntent", "prompt": "PersonX sees PersonY in PersonX's office. PersonX did this to"}}
{"generation": ["get to the car, and PersonY did this"], "references": ["to use this car because their own car is being repaired", "to go for a drive", "to go somewhere", "to pick something up"], "input": {"head": "PersonX borrows PersonY's car", "relation": "xIntent", "prompt": "PersonX borrows PersonY's car. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to help someone out", "help persony because they cannot dye their own hair", "to help persony prepare for a party", "to fulfill their job as a stylist"], "input": {"head": "PersonX dyes PersonY's hair pink", "relation": "xIntent", "prompt": "PersonX dyes PersonY's hair pink. PersonX did this to"}}
{"generation": ["the person"], "references": ["to show affection", "to feel connected to someone.", "to feel the softness and warmth of persons skin"], "input": {"head": "PersonX touches PersonY's skin", "relation": "xIntent", "prompt": "PersonX touches PersonY's skin. PersonX did this to"}}
{"generation": ["me"], "references": ["to give in."], "input": {"head": "PersonX says PersonY nay", "relation": "xIntent", "prompt": "PersonX says PersonY nay. PersonX did this to"}}
{"generation": ["hide PersonY's hide"], "references": ["to hurt persony", "justice", "mad at person y"], "input": {"head": "PersonX tans PersonY's hide", "relation": "xIntent", "prompt": "PersonX tans PersonY's hide. PersonX did this to"}}
{"generation": ["avoid the risk of a double spend"], "references": ["to help the other person", "to explain to persony"], "input": {"head": "PersonX gives PersonY a account", "relation": "xIntent", "prompt": "PersonX gives PersonY a account. PersonX did this to"}}
{"generation": ["me"], "references": ["to administer cpr.", "to kiss person"], "input": {"head": "PersonX leans PersonY's head back", "relation": "xIntent", "prompt": "PersonX leans PersonY's head back. PersonX did this to"}}
{"generation": ["make it easier to find the dates of the most"], "references": ["not to commit", "to be in a relationship", "romance"], "input": {"head": "PersonX dates for years", "relation": "xIntent", "prompt": "PersonX dates for years. PersonX did this to"}}
{"generation": ["get the ___"], "references": ["to prioritize"], "input": {"head": "PersonX seeks first the ___", "relation": "xIntent", "prompt": "PersonX seeks first the ___. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX throws the baby out with the bathwater", "relation": "xIntent", "prompt": "PersonX throws the baby out with the bathwater. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX catches a cold", "relation": "xIntent", "prompt": "PersonX catches a cold. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["person is not breathing"], "input": {"head": "PersonX fills PersonY's lungs", "relation": "xIntent", "prompt": "PersonX fills PersonY's lungs. PersonX did this to"}}
{"generation": ["get the attention of the girl he likes"], "references": ["to be a part of it", "none", "to be a basket ball player"], "input": {"head": "PersonX is on PersonY's school 's basketball team", "relation": "xIntent", "prompt": "PersonX is on PersonY's school 's basketball team. PersonX did this to"}}
{"generation": ["get back at PersonY"], "references": ["to go home.", "to share affection."], "input": {"head": "PersonX sees PersonX's wife", "relation": "xIntent", "prompt": "PersonX sees PersonX's wife. PersonX did this to"}}
{"generation": ["get a drink"], "references": ["social", "to celebrate", "hang out", "wants to share in the revelry"], "input": {"head": "PersonX is at the bar with friends", "relation": "xIntent", "prompt": "PersonX is at the bar with friends. PersonX did this to"}}
{"generation": ["me"], "references": ["to be great comunication country", "subject"], "input": {"head": "PersonX links together ___", "relation": "xIntent", "prompt": "PersonX links together ___. PersonX did this to"}}
{"generation": ["make the player feel like they were in control of"], "references": ["to be nice to person", "to show affection to person", "to be kind", "to comfort person"], "input": {"head": "PersonX pats PersonY's head", "relation": "xIntent", "prompt": "PersonX pats PersonY's head. PersonX did this to"}}
{"generation": ["get to the bus stop"], "references": ["on time", "on the move", "moving", "to save gas", "go somewhere"], "input": {"head": "PersonX catches the bus", "relation": "xIntent", "prompt": "PersonX catches the bus. PersonX did this to"}}
{"generation": ["get the attention of the person who was the most"], "references": ["to see someone or something", "to mourn them", "to show his affection for others"], "input": {"head": "PersonX visits PersonX's mother 's ___", "relation": "xIntent", "prompt": "PersonX visits PersonX's mother 's ___. PersonX did this to"}}
{"generation": ["make the game more fun"], "references": ["because person is absent", "his friend to stay home where it is safe", "to spend time with them", "to help them"], "input": {"head": "PersonX takes PersonY place", "relation": "xIntent", "prompt": "PersonX takes PersonY place. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["none"], "input": {"head": "PersonX knows much about PersonY", "relation": "xIntent", "prompt": "PersonX knows much about PersonY. PersonX did this to"}}
{"generation": ["get to the car"], "references": ["to make sure someone reached their car safely", "to reach the mode of transportation", "to get a ride with person.", "to travel somewhere quickly", "to get into the car.", "person to drive home safely."], "input": {"head": "PersonX walks to PersonY's car", "relation": "xIntent", "prompt": "PersonX walks to PersonY's car. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX has trouble falling asleep", "relation": "xIntent", "prompt": "PersonX has trouble falling asleep. PersonX did this to"}}
{"generation": ["save money"], "references": ["extra money", "to have fun in the future"], "input": {"head": "PersonX wants to save money", "relation": "xIntent", "prompt": "PersonX wants to save money. PersonX did this to"}}
{"generation": ["get a better understanding of the game and to get"], "references": ["to relax"], "input": {"head": "PersonX spends the summer", "relation": "xIntent", "prompt": "PersonX spends the summer. PersonX did this to"}}
{"generation": ["me"], "references": ["to spend time with them.", "to be happy and take in the moment"], "input": {"head": "PersonX enjoys ___ together", "relation": "xIntent", "prompt": "PersonX enjoys ___ together. PersonX did this to"}}
{"generation": ["get to the ___"], "references": ["talk to someone", "persons crosses the  grasess  to get", "to get to a place", "go home", "to go to school"], "input": {"head": "PersonX crosses the ___ to get", "relation": "xIntent", "prompt": "PersonX crosses the ___ to get. PersonX did this to"}}
{"generation": ["make the child's name unique"], "references": ["to feel cared for,", "to give"], "input": {"head": "PersonX gives PersonY children", "relation": "xIntent", "prompt": "PersonX gives PersonY children. PersonX did this to"}}
{"generation": ["make the game more accessible to new players"], "references": ["to be first", "to be prepared"], "input": {"head": "PersonX takes place soon", "relation": "xIntent", "prompt": "PersonX takes place soon. PersonX did this to"}}
{"generation": ["avoid the risk of the bags being stolen"], "references": ["to be helpful and kind.", "him or her to leave", "to be a family"], "input": {"head": "PersonX packs PersonY's bags", "relation": "xIntent", "prompt": "PersonX packs PersonY's bags. PersonX did this to"}}
{"generation": ["get a job"], "references": ["to create music", "to jam out with friends"], "input": {"head": "PersonX starts a band", "relation": "xIntent", "prompt": "PersonX starts a band. PersonX did this to"}}
{"generation": ["me"], "references": ["have children"], "input": {"head": "reproduce", "relation": "xIntent", "prompt": "reproduce. PersonX did this to"}}
{"generation": ["get a discount on the pizza"], "references": ["personx wants pizza", "food", "to eat", "to not be hungry", "to not make dinner"], "input": {"head": "PersonX decides to order pizza", "relation": "xIntent", "prompt": "PersonX decides to order pizza. PersonX did this to"}}
{"generation": ["teach ___ the way"], "references": ["to show support", "to be kind", "yes  i am  very  happy"], "input": {"head": "PersonX teaches ___ the way", "relation": "xIntent", "prompt": "PersonX teaches ___ the way. PersonX did this to"}}
{"generation": ["___"], "references": ["to show his love and affection", "to be loved", "to show state pride"], "input": {"head": "PersonX loves ___ with PersonX's heart", "relation": "xIntent", "prompt": "PersonX loves ___ with PersonX's heart. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to be mean", "none", "to kill that person", "to irritate that person"], "input": {"head": "PersonX breaks PersonY heart", "relation": "xIntent", "prompt": "PersonX breaks PersonY heart. PersonX did this to"}}
{"generation": ["make the game more accessible to people who are not"], "references": ["to rule the country"], "input": {"head": "PersonX takes place as a result", "relation": "xIntent", "prompt": "PersonX takes place as a result. PersonX did this to"}}
{"generation": ["make it easier to use the library"], "references": ["to inform them of an accident", "to tell them personx will not be able to make it", "to check his hours", "to call in sick."], "input": {"head": "PersonX calls PersonX's work", "relation": "xIntent", "prompt": "PersonX calls PersonX's work. PersonX did this to"}}
{"generation": ["get a job at the company"], "references": ["to earn money", "to make more money", "to learn a new skill", "to make money", "to be gentle", "to advance their career", "to take a responsibility", "to be happier"], "input": {"head": "PersonX takes the new job", "relation": "xIntent", "prompt": "PersonX takes the new job. PersonX did this to"}}
{"generation": ["PersonY, and PersonY did this to Person"], "references": ["to teach a lesson"], "input": {"head": "PersonX gives PersonY what-for", "relation": "xIntent", "prompt": "PersonX gives PersonY what-for. PersonX did this to"}}
{"generation": ["protect PersonY from the consequences of his actions"], "references": ["to keep persony out of trouble", "to help person y.", "to help persony steal something.", "to keep persony away from criminals.", "to be secretive", "to be respectful"], "input": {"head": "PersonX conceals PersonY's identity", "relation": "xIntent", "prompt": "PersonX conceals PersonY's identity. PersonX did this to"}}
{"generation": ["make sure that the person who took the exam was"], "references": ["to be prepared", "to be sure they get a good grade", "to do well", "to get a good grade"], "input": {"head": "PersonX studies for PersonX's exam", "relation": "xIntent", "prompt": "PersonX studies for PersonX's exam. PersonX did this to"}}
{"generation": ["me"], "references": ["to make sure they're safe", "to be the responsible parent", "to make sure they are okay"], "input": {"head": "PersonX watches the kids", "relation": "xIntent", "prompt": "PersonX watches the kids. PersonX did this to"}}
{"generation": ["me"], "references": ["to feel powerful and demean others"], "input": {"head": "PersonX takes liberties", "relation": "xIntent", "prompt": "PersonX takes liberties. PersonX did this to"}}
{"generation": ["me"], "references": ["to be victorious", "to get home"], "input": {"head": "PersonX romps home", "relation": "xIntent", "prompt": "PersonX romps home. PersonX did this to"}}
{"generation": ["make the person look taller"], "references": ["the person to relax", "to have better posture", "to sit up straight", "to invoke confidence"], "input": {"head": "PersonX squares PersonY's shoulders", "relation": "xIntent", "prompt": "PersonX squares PersonY's shoulders. PersonX did this to"}}
{"generation": ["avoid the risk of a collision with PersonY"], "references": ["say goodbye"], "input": {"head": "PersonX sends PersonY off", "relation": "xIntent", "prompt": "PersonX sends PersonY off. PersonX did this to"}}
{"generation": ["me"], "references": ["none", "to scrap pasture"], "input": {"head": "PersonX puts out to pasture", "relation": "xIntent", "prompt": "PersonX puts out to pasture. PersonX did this to"}}
{"generation": ["the ___"], "references": ["every night going to party", "every day iam happy"], "input": {"head": "PersonX shaves every ___", "relation": "xIntent", "prompt": "PersonX shaves every ___. PersonX did this to"}}
{"generation": ["get to the car"], "references": ["to go into the house", "return the favour", "to go into the store", "use the restoom in the gas station"], "input": {"head": "PersonX leaves PersonY's car", "relation": "xIntent", "prompt": "PersonX leaves PersonY's car. PersonX did this to"}}
{"generation": ["avoid paying taxes"], "references": ["to be a law-abiding citizen", "to stay out of jail", "to be responsible.", "to follow the law", "to fulfill his duty"], "input": {"head": "PersonX pays taxes", "relation": "xIntent", "prompt": "PersonX pays taxes. PersonX did this to"}}
{"generation": ["me"], "references": ["to feel superior", "to be informed", "to be intimidating", "to look smart", "to be educated", "none", "to be smart"], "input": {"head": "PersonX knows much", "relation": "xIntent", "prompt": "PersonX knows much. PersonX did this to"}}
{"generation": ["get to the beach"], "references": ["to have fun.", "to have adventure", "to be in shape", "none"], "input": {"head": "PersonX loves to surf", "relation": "xIntent", "prompt": "PersonX loves to surf. PersonX did this to"}}
{"generation": ["protect ___ from abuse"], "references": ["to be that person responsibility", "to protect"], "input": {"head": "PersonX protects ___ from abuse", "relation": "xIntent", "prompt": "PersonX protects ___ from abuse. PersonX did this to"}}
{"generation": ["get the shoes"], "references": ["shoes that match her clothes", "none", "to wear the shoes", "she is barefoot"], "input": {"head": "PersonX finds the shoes", "relation": "xIntent", "prompt": "PersonX finds the shoes. PersonX did this to"}}
{"generation": ["me"], "references": ["to still be friends with that person", "to be sociable"], "input": {"head": "PersonX remains friends", "relation": "xIntent", "prompt": "PersonX remains friends. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX sees a pretty girl", "relation": "xIntent", "prompt": "PersonX sees a pretty girl. PersonX did this to"}}
{"generation": ["make PersonY feel better"], "references": ["to clean person's ears", "to know he is near to him"], "input": {"head": "PersonX reaches PersonY's ears", "relation": "xIntent", "prompt": "PersonX reaches PersonY's ears. PersonX did this to"}}
{"generation": ["avoid the need to use the __() operator"], "references": ["to understand the situation.", "statue"], "input": {"head": "PersonX draws another ___", "relation": "xIntent", "prompt": "PersonX draws another ___. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to buy groceries", "to have money now"], "input": {"head": "PersonX owes PersonY", "relation": "xIntent", "prompt": "PersonX owes PersonY. PersonX did this to"}}
{"generation": ["me"], "references": ["to get somewhere", "to go out of state", "to save time"], "input": {"head": "PersonX drives on the highway", "relation": "xIntent", "prompt": "PersonX drives on the highway. PersonX did this to"}}
{"generation": ["the system"], "references": ["to be a part of things", "none"], "input": {"head": "PersonX plays a ___ in the system", "relation": "xIntent", "prompt": "PersonX plays a ___ in the system. PersonX did this to"}}
{"generation": ["avoid the need to pay royalties to the copyright holders"], "references": ["be rebellious", "to be rogue"], "input": {"head": "PersonX distributes in forms without permission", "relation": "xIntent", "prompt": "PersonX distributes in forms without permission. PersonX did this to"}}
{"generation": ["save money"], "references": ["to have an aquarium for the living room in her house.", "paper towels for its home", "dinner to eat"], "input": {"head": "PersonX buys ___ for PersonX's house", "relation": "xIntent", "prompt": "PersonX buys ___ for PersonX's house. PersonX did this to"}}
{"generation": ["get a better understanding of the game"], "references": ["to be friendly with the other person", "because they like persony", "to build a team"], "input": {"head": "PersonX invites PersonY to play", "relation": "xIntent", "prompt": "PersonX invites PersonY to play. PersonX did this to"}}
{"generation": ["me"], "references": ["body-shame", "to laugh", "mean", "funny"], "input": {"head": "PersonX laughs PersonY's asses", "relation": "xIntent", "prompt": "PersonX laughs PersonY's asses. PersonX did this to"}}
{"generation": ["get a better view of the garden"], "references": ["none", "to enjoy a rewarding hobby"], "input": {"head": "PersonX loves to garden", "relation": "xIntent", "prompt": "PersonX loves to garden. PersonX did this to"}}
{"generation": ["avoid ___"], "references": ["none"], "input": {"head": "PersonX misses ___ at work", "relation": "xIntent", "prompt": "PersonX misses ___ at work. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to stop seeing a thing", "to stop thinking a thing", "to not be involved", "change there mind"], "input": {"head": "PersonX turns PersonX's ___ elsewhere", "relation": "xIntent", "prompt": "PersonX turns PersonX's ___ elsewhere. PersonX did this to"}}
{"generation": ["get the car to stop"], "references": ["to give someone a ticket", "inform them of an infraction", "to give persony a ticket"], "input": {"head": "PersonX pulls PersonY's car over", "relation": "xIntent", "prompt": "PersonX pulls PersonY's car over. PersonX did this to"}}
{"generation": ["catch the dog"], "references": ["it to come home safe", "to keep the dog from running away", "to catch personx's dog"], "input": {"head": "PersonX catches PersonX's dog", "relation": "xIntent", "prompt": "PersonX catches PersonX's dog. PersonX did this to"}}
{"generation": ["get a child"], "references": ["to have a family", "have children", "raise kids", "to share his/her life with other people and have a family"], "input": {"head": "PersonX starts a family", "relation": "xIntent", "prompt": "PersonX starts a family. PersonX did this to"}}
{"generation": ["me"], "references": ["wait in comfort", "relax their feet", "seem cool and relaxed", "to rest", "to watch people"], "input": {"head": "PersonX leans back against the wall", "relation": "xIntent", "prompt": "PersonX leans back against the wall. PersonX did this to"}}
{"generation": ["me"], "references": ["none", "to achieve", "to succeed", "to move the object"], "input": {"head": "PersonX pushes it", "relation": "xIntent", "prompt": "PersonX pushes it. PersonX did this to"}}
{"generation": ["get back at PersonY"], "references": ["to follow instructions", "none"], "input": {"head": "PersonX stops but PersonY did n't listen", "relation": "xIntent", "prompt": "PersonX stops but PersonY did n't listen. PersonX did this to"}}
{"generation": ["get in shape for the upcoming season of Survivor"], "references": ["feel confident", "to be in shape", "to be healthy.", "to be healthy"], "input": {"head": "PersonX starts working out every day", "relation": "xIntent", "prompt": "PersonX starts working out every day. PersonX did this to"}}
{"generation": ["me"], "references": ["a cheater"], "input": {"head": "PersonX tells PersonY must be", "relation": "xIntent", "prompt": "PersonX tells PersonY must be. PersonX did this to"}}
{"generation": ["me"], "references": ["to be appreciated", "wants to be a good employee", "to fulfill needs", "to make money"], "input": {"head": "PersonX does a wonderful job", "relation": "xIntent", "prompt": "PersonX does a wonderful job. PersonX did this to"}}
{"generation": ["get back at PersonY for not being able to"], "references": ["does not agree with person y's boyfriend", "they are cheating on persony", "to right a wrong", "to be in charge", "the boyfriend won't breakup with persony"], "input": {"head": "PersonX argues with PersonY's boyfriend", "relation": "xIntent", "prompt": "PersonX argues with PersonY's boyfriend. PersonX did this to"}}
{"generation": ["help PersonY"], "references": ["to show gratitude", "to show appreciation.", "to show appreciation"], "input": {"head": "PersonX thanks the ___ for PersonY's contributions", "relation": "xIntent", "prompt": "PersonX thanks the ___ for PersonY's contributions. PersonX did this to"}}
{"generation": ["get back at PersonY for not being able to"], "references": ["money", "to help persony", "to be helpful to their cousin", "helpful"], "input": {"head": "PersonX babysits PersonY's cousin", "relation": "xIntent", "prompt": "PersonX babysits PersonY's cousin. PersonX did this to"}}
{"generation": ["me"], "references": ["to establish a relationship", "none"], "input": {"head": "PersonX likes a girl", "relation": "xIntent", "prompt": "PersonX likes a girl. PersonX did this to"}}
{"generation": ["me"], "references": ["to get on the dean's honor roll", "to get a reward from their parents", "to be a success", "to get good grades", "to get a good job", "to get into a good college"], "input": {"head": "PersonX does very well in school", "relation": "xIntent", "prompt": "PersonX does very well in school. PersonX did this to"}}
{"generation": ["me"], "references": ["to prevent death", "to protect themselves", "to keep from falling", "none"], "input": {"head": "PersonX holds on for dear life", "relation": "xIntent", "prompt": "PersonX holds on for dear life. PersonX did this to"}}
{"generation": ["me"], "references": ["to stay uninjured", "to be safe"], "input": {"head": "PersonX drives straight", "relation": "xIntent", "prompt": "PersonX drives straight. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX loses track of the time", "relation": "xIntent", "prompt": "PersonX loses track of the time. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["to be obedient", "approval"], "input": {"head": "PersonX works PersonY's way", "relation": "xIntent", "prompt": "PersonX works PersonY's way. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["none"], "input": {"head": "PersonX understands PersonY's nature", "relation": "xIntent", "prompt": "PersonX understands PersonY's nature. PersonX did this to"}}
{"generation": ["himself"], "references": ["i likr this free", "none"], "input": {"head": "PersonX endures ___ and free", "relation": "xIntent", "prompt": "PersonX endures ___ and free. PersonX did this to"}}
{"generation": ["god because god is a bad person"], "references": ["trying to get students'", "to feel closer to god"], "input": {"head": "PersonX offer ___ to god", "relation": "xIntent", "prompt": "PersonX offer ___ to god. PersonX did this to"}}
{"generation": ["get the car to stop"], "references": ["to drive home.", "to go somewhere", "to steal something from personx"], "input": {"head": "PersonX enters PersonX's car", "relation": "xIntent", "prompt": "PersonX enters PersonX's car. PersonX did this to"}}
{"generation": ["get revenge on PersonY"], "references": ["to get ahead by cheating", "to profit from his position"], "input": {"head": "PersonX abuses PersonX's power", "relation": "xIntent", "prompt": "PersonX abuses PersonX's power. PersonX did this to"}}
{"generation": ["me"], "references": ["to be responsible", "none"], "input": {"head": "PersonX takes ___ of things", "relation": "xIntent", "prompt": "PersonX takes ___ of things. PersonX did this to"}}
{"generation": ["avoid confusion with PersonY"], "references": ["to continue his names importance"], "input": {"head": "PersonX gives it PersonX's name", "relation": "xIntent", "prompt": "PersonX gives it PersonX's name. PersonX did this to"}}
{"generation": ["get the ___"], "references": ["to take a break from his own house", "to spend more time with persony", "to be close to persony", "to visit with person y"], "input": {"head": "PersonX spends the ___ at PersonY's house", "relation": "xIntent", "prompt": "PersonX spends the ___ at PersonY's house. PersonX did this to"}}
{"generation": ["get the ring back"], "references": ["to be helpful", "to be a friend", "none", "to help them"], "input": {"head": "PersonX finds PersonY's ring", "relation": "xIntent", "prompt": "PersonX finds PersonY's ring. PersonX did this to"}}
{"generation": ["avoid the need to call PersonY"], "references": ["make sure his baby child didn't fall off", "to contain him"], "input": {"head": "PersonX holds PersonY in place", "relation": "xIntent", "prompt": "PersonX holds PersonY in place. PersonX did this to"}}
{"generation": ["me"], "references": ["to waste time", "to have fun", "to enjoy their time", "to exlore"], "input": {"head": "PersonX skates around", "relation": "xIntent", "prompt": "PersonX skates around. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX becomes scared", "relation": "xIntent", "prompt": "PersonX becomes scared. PersonX did this to"}}
{"generation": ["the person who was the most influential to him"], "references": ["to dominate others"], "input": {"head": "PersonX exerts PersonX's influence", "relation": "xIntent", "prompt": "PersonX exerts PersonX's influence. PersonX did this to"}}
{"generation": ["me"], "references": ["to proceed to the next phase of a plan"], "input": {"head": "PersonX makes PersonY assault", "relation": "xIntent", "prompt": "PersonX makes PersonY assault. PersonX did this to"}}
{"generation": ["get a blueberry"], "references": ["to taste the blueberries", "to eat them"], "input": {"head": "PersonX picks blueberries", "relation": "xIntent", "prompt": "PersonX picks blueberries. PersonX did this to"}}
{"generation": ["the ___"], "references": ["to be responsible", "responsible", "respected"], "input": {"head": "PersonX performs PersonX's ___ in a manner", "relation": "xIntent", "prompt": "PersonX performs PersonX's ___ in a manner. PersonX did this to"}}
{"generation": ["get a dog"], "references": ["to save an animal's life", "to have a companion", "to have a pet", "a friend"], "input": {"head": "PersonX owns a dog", "relation": "xIntent", "prompt": "PersonX owns a dog. PersonX did this to"}}
{"generation": ["me"], "references": ["socialize", "to be social"], "input": {"head": "PersonX meets some friends", "relation": "xIntent", "prompt": "PersonX meets some friends. PersonX did this to"}}
{"generation": ["get a free ticket to the game"], "references": ["to exercise", "to practice", "to socialize with friends", "to have fun", "to play a game"], "input": {"head": "PersonX plays hockey", "relation": "xIntent", "prompt": "PersonX plays hockey. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["them to have an easier existence", "help persony have a better life"], "input": {"head": "PersonX turns PersonY's life", "relation": "xIntent", "prompt": "PersonX turns PersonY's life. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX looks like an idiot", "relation": "xIntent", "prompt": "PersonX looks like an idiot. PersonX did this to"}}
{"generation": ["himself"], "references": ["to be heartfelt", "to talk to someone about it."], "input": {"head": "PersonX pours PersonX's heart", "relation": "xIntent", "prompt": "PersonX pours PersonX's heart. PersonX did this to"}}
{"generation": ["me"], "references": ["to connect things"], "input": {"head": "PersonX links ___ together", "relation": "xIntent", "prompt": "PersonX links ___ together. PersonX did this to"}}
{"generation": ["bob"], "references": ["to help bob", "to be friendly"], "input": {"head": "PersonX gives bob ___", "relation": "xIntent", "prompt": "PersonX gives bob ___. PersonX did this to"}}
{"generation": ["get a better understanding of the market and to get"], "references": ["to be an author", "none"], "input": {"head": "PersonX gets published", "relation": "xIntent", "prompt": "PersonX gets published. PersonX did this to"}}
{"generation": ["me"], "references": ["to help and support.", "none"], "input": {"head": "PersonX makes my day", "relation": "xIntent", "prompt": "PersonX makes my day. PersonX did this to"}}
{"generation": ["me"], "references": ["none", "to be easygoing"], "input": {"head": "PersonX would like it", "relation": "xIntent", "prompt": "PersonX would like it. PersonX did this to"}}
{"generation": ["me"], "references": ["he wants to say something", "he like to see", "he want to play"], "input": {"head": "PersonX looks ___ in the face", "relation": "xIntent", "prompt": "PersonX looks ___ in the face. PersonX did this to"}}
{"generation": ["get a better view of the sun"], "references": ["a tan"], "input": {"head": "PersonX catches some rays", "relation": "xIntent", "prompt": "PersonX catches some rays. PersonX did this to"}}
{"generation": ["PersonY because PersonY was a threat to Person"], "references": ["to be affectionate"], "input": {"head": "PersonX passionately rucked PersonY", "relation": "xIntent", "prompt": "PersonX passionately rucked PersonY. PersonX did this to"}}
{"generation": ["me"], "references": ["collect a things"], "input": {"head": "PersonX sees every ___", "relation": "xIntent", "prompt": "PersonX sees every ___. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX is a long drive", "relation": "xIntent", "prompt": "PersonX is a long drive. PersonX did this to"}}
{"generation": ["the database"], "references": ["to renew something.", "to have energy for the day."], "input": {"head": "PersonX renews ___ by day", "relation": "xIntent", "prompt": "PersonX renews ___ by day. PersonX did this to"}}
{"generation": ["get the milk"], "references": ["to quince thirst", "to make something", "milk", "to be relaxed", "to eat it with cookies", "to drink something"], "input": {"head": "PersonX gets the milk", "relation": "xIntent", "prompt": "PersonX gets the milk. PersonX did this to"}}
{"generation": ["get back at ___"], "references": ["to keep something safe"], "input": {"head": "PersonX leaves ___ in PersonX's car", "relation": "xIntent", "prompt": "PersonX leaves ___ in PersonX's car. PersonX did this to"}}
{"generation": ["me"], "references": ["to have something for themselves", "to enjoy it."], "input": {"head": "PersonX makes ___ the other day", "relation": "xIntent", "prompt": "PersonX makes ___ the other day. PersonX did this to"}}
{"generation": ["me"], "references": ["feel good", "to achieve"], "input": {"head": "PersonX busts a nut", "relation": "xIntent", "prompt": "PersonX busts a nut. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX gets a call", "relation": "xIntent", "prompt": "PersonX gets a call. PersonX did this to"}}
{"generation": ["make the user's ___"], "references": ["none", "qualification"], "input": {"head": "PersonX meets the user 's ___", "relation": "xIntent", "prompt": "PersonX meets the user 's ___. PersonX did this to"}}
{"generation": ["avoid the risk of a conflict of interest"], "references": ["none"], "input": {"head": "PersonX appoints a ___ to investigate", "relation": "xIntent", "prompt": "PersonX appoints a ___ to investigate. PersonX did this to"}}
{"generation": ["me"], "references": ["to be frugal", "to conserve", "to do the right thing"], "input": {"head": "PersonX does n't want to waste it", "relation": "xIntent", "prompt": "PersonX does n't want to waste it. PersonX did this to"}}
{"generation": ["make it easier to use the API"], "references": ["to show off skills", "to achieve his goal", "to control his fate"], "input": {"head": "PersonX achieves PersonX's purpose", "relation": "xIntent", "prompt": "PersonX achieves PersonX's purpose. PersonX did this to"}}
{"generation": ["PersonY"], "references": ["him not to forget important moments", "him to join without fear"], "input": {"head": "PersonX reminds PersonX of PersonY", "relation": "xIntent", "prompt": "PersonX reminds PersonX of PersonY. PersonX did this to"}}
{"generation": ["me"], "references": ["have fun"], "input": {"head": "live", "relation": "xIntent", "prompt": "live. PersonX did this to"}}
{"generation": ["me"], "references": ["to be perfect in everything"], "input": {"head": "PersonX makes perfect", "relation": "xIntent", "prompt": "PersonX makes perfect. PersonX did this to"}}
{"generation": ["make PersonY feel better"], "references": ["to show love and affection.", "to escort person"], "input": {"head": "PersonX takes PersonY in PersonY's arms", "relation": "xIntent", "prompt": "PersonX takes PersonY in PersonY's arms. PersonX did this to"}}
{"generation": ["make the code more readable"], "references": ["to be contented.", "none"], "input": {"head": "PersonX fits PersonX's needs", "relation": "xIntent", "prompt": "PersonX fits PersonX's needs. PersonX did this to"}}
{"generation": ["get the attention of the other players"], "references": ["to eat", "to be healthy"], "input": {"head": "PersonX scrambles eggs for breakfast", "relation": "xIntent", "prompt": "PersonX scrambles eggs for breakfast. PersonX did this to"}}
{"generation": ["avoid the damage from the ___"], "references": ["take a photo of a picture on the wall with their friend's phone.", "to make it noticed"], "input": {"head": "PersonX turns PersonX's ___ to the wall", "relation": "xIntent", "prompt": "PersonX turns PersonX's ___ to the wall. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX seems better", "relation": "xIntent", "prompt": "PersonX seems better. PersonX did this to"}}
{"generation": ["make the game more fun"], "references": ["to work", "to achieve a goal", "is responsible", "needs money"], "input": {"head": "PersonX goes on with PersonX's work", "relation": "xIntent", "prompt": "PersonX goes on with PersonX's work. PersonX did this to"}}
{"generation": ["save PersonY's life"], "references": ["control", "to be evil", "to stop a rebellion"], "input": {"head": "PersonX puts PersonY's ___ to death", "relation": "xIntent", "prompt": "PersonX puts PersonY's ___ to death. PersonX did this to"}}
{"generation": ["get a job"], "references": ["to show off", "to get stronger", "to gain muscle", "to get in shape"], "input": {"head": "PersonX pumps iron", "relation": "xIntent", "prompt": "PersonX pumps iron. PersonX did this to"}}
{"generation": ["get the car to stop"], "references": ["to be away from their car", "to get to the place"], "input": {"head": "PersonX leaves PersonX's car", "relation": "xIntent", "prompt": "PersonX leaves PersonX's car. PersonX did this to"}}
{"generation": ["get ___ right"], "references": ["to prove his ability"], "input": {"head": "PersonX gets ___ right", "relation": "xIntent", "prompt": "PersonX gets ___ right. PersonX did this to"}}
{"generation": ["me"], "references": ["thought", "resolve the problem."], "input": {"head": "PersonX brings the ___ to a head", "relation": "xIntent", "prompt": "PersonX brings the ___ to a head. PersonX did this to"}}
{"generation": ["get the attention of the other players"], "references": ["none"], "input": {"head": "PersonX lands on PersonX's leg", "relation": "xIntent", "prompt": "PersonX lands on PersonX's leg. PersonX did this to"}}
{"generation": ["PersonY because PersonY was in the way"], "references": ["to drag them down the hill"], "input": {"head": "PersonX pulls PersonY's legs", "relation": "xIntent", "prompt": "PersonX pulls PersonY's legs. PersonX did this to"}}
{"generation": ["me"], "references": ["to be mean", "to get their way", "to make fun of others"], "input": {"head": "PersonX bullies in school", "relation": "xIntent", "prompt": "PersonX bullies in school. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX comes to light", "relation": "xIntent", "prompt": "PersonX comes to light. PersonX did this to"}}
{"generation": ["me"], "references": ["go home from work", "to move on from a bad event", "to be strong"], "input": {"head": "PersonX makes it through the day", "relation": "xIntent", "prompt": "PersonX makes it through the day. PersonX did this to"}}
{"generation": ["me"], "references": ["none"], "input": {"head": "PersonX has never been happier", "relation": "xIntent", "prompt": "PersonX has never been happier. PersonX did this to"}}
{"generation": ["get the animals to come to him"], "references": ["to see nature", "to learn about other species", "none", "to look and understand"], "input": {"head": "PersonX sees the animals", "relation": "xIntent", "prompt": "PersonX sees the animals. PersonX did this to"}}
{"generation": ["me"], "references": ["to be protected from illness", "none", "to be healthy"], "input": {"head": "PersonX gets a shot", "relation": "xIntent", "prompt": "PersonX gets a shot. PersonX did this to"}}
{"generation": ["get a letter from the post office"], "references": ["to mail something.", "to mail a package."], "input": {"head": "PersonX goes to the post office", "relation": "xIntent", "prompt": "PersonX goes to the post office. PersonX did this to"}}
{"generation": ["get the swine to attack him"], "references": ["none", "casts pearls in office"], "input": {"head": "PersonX casts ___ before swine", "relation": "xIntent", "prompt": "PersonX casts ___ before swine. PersonX did this to"}}
{"generation": ["himself"], "references": ["none"], "input": {"head": "PersonX is feeling sick", "relation": "xIntent", "prompt": "PersonX is feeling sick. PersonX did this to"}}
{"generation": ["get the attention of the police"], "references": ["to keep something safe", "none"], "input": {"head": "PersonX leaves ___ in PersonY's car", "relation": "xIntent", "prompt": "PersonX leaves ___ in PersonY's car. PersonX did this to"}}
{"generation": ["save money"], "references": ["to be able to drive their car", "to use a boat.", "to drive somewhere.", "to drive"], "input": {"head": "PersonX buys gas", "relation": "xIntent", "prompt": "PersonX buys gas. PersonX did this to"}}
{"generation": ["me"], "references": ["none", "to be ready for what's next"], "input": {"head": "PersonX recovers quickly", "relation": "xIntent", "prompt": "PersonX recovers quickly. PersonX did this to"}}
{"generation": ["the same as if PersonX had saved PersonY"], "references": ["none", "becomes grateful", "cheers with happiness", "sighs in relief"], "input": {"head": "PersonX saves PersonY's people", "relation": "oEffect", "prompt": "PersonX saves PersonY's people. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX has many friends", "relation": "oEffect", "prompt": "PersonX has many friends. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX says goodnight", "relation": "oEffect", "prompt": "PersonX says goodnight. The effect on others will be"}}
{"generation": ["the same as if you were to skateboard with"], "references": ["shakes head in jealously", "none", "frowns"], "input": {"head": "PersonX skateboards with PersonY's friends", "relation": "oEffect", "prompt": "PersonX skateboards with PersonY's friends. The effect on others will be"}}
{"generation": ["the same"], "references": ["gains new knowledge", "becomes inquisitive"], "input": {"head": "PersonX makes perfect sense", "relation": "oEffect", "prompt": "PersonX makes perfect sense. The effect on others will be"}}
{"generation": ["the same as if the person had been washed by"], "references": ["none"], "input": {"head": "PersonX washes PersonY's car", "relation": "oEffect", "prompt": "PersonX washes PersonY's car. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX is in a good mood", "relation": "oEffect", "prompt": "PersonX is in a good mood. The effect on others will be"}}
{"generation": ["the same as if you had used the spell on"], "references": ["none"], "input": {"head": "PersonX also stopped", "relation": "oEffect", "prompt": "PersonX also stopped. The effect on others will be"}}
{"generation": ["the same"], "references": ["becomes grateful", "learns valuable lessons", "gains confidence", "becomes better friends with X", "none"], "input": {"head": "PersonX turns PersonY's life around", "relation": "oEffect", "prompt": "PersonX turns PersonY's life around. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX jumps ship", "relation": "oEffect", "prompt": "PersonX jumps ship. The effect on others will be"}}
{"generation": ["the same as the effect on the original person"], "references": ["accepts more load", "smiles", "none"], "input": {"head": "PersonX increases PersonX's capacity", "relation": "oEffect", "prompt": "PersonX increases PersonX's capacity. The effect on others will be"}}
{"generation": ["the same as if they had used the same effect"], "references": ["Admires X's work", "Helps X learn", "none"], "input": {"head": "PersonX tries PersonX's ___ at making", "relation": "oEffect", "prompt": "PersonX tries PersonX's ___ at making. The effect on others will be"}}
{"generation": ["the same"], "references": ["loses all their money", "Walks forward", "Gets to another place", "falls"], "input": {"head": "PersonX stops but PersonY did n't listen", "relation": "oEffect", "prompt": "PersonX stops but PersonY did n't listen. The effect on others will be"}}
{"generation": ["the same as if you had used the ___"], "references": ["none"], "input": {"head": "PersonX covers every ___", "relation": "oEffect", "prompt": "PersonX covers every ___. The effect on others will be"}}
{"generation": ["the same as the effect on the original person"], "references": ["are told what to do", "reach out for help", "given unfair consequences or punishment", "none"], "input": {"head": "PersonX abuses PersonX's power", "relation": "oEffect", "prompt": "PersonX abuses PersonX's power. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX loves PersonX's dog", "relation": "oEffect", "prompt": "PersonX loves PersonX's dog. The effect on others will be"}}
{"generation": ["the same as if PersonX had bought one for"], "references": ["PersonY likes PersonX.", "smiles", "jumps up and down", "PersonY gains an item."], "input": {"head": "PersonX buys one for PersonY", "relation": "oEffect", "prompt": "PersonX buys one for PersonY. The effect on others will be"}}
{"generation": ["he same"], "references": ["none"], "input": {"head": "PersonX meets customers ' ___", "relation": "oEffect", "prompt": "PersonX meets customers ' ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX makes ___ every year", "relation": "oEffect", "prompt": "PersonX makes ___ every year. The effect on others will be"}}
{"generation": ["the same as if they were the one who was"], "references": ["thanks PersonX", "rests in bed", "is relaxed", "collapses on ground", "is comfortable", "thanks Y"], "input": {"head": "PersonX gives PersonY relief", "relation": "oEffect", "prompt": "PersonX gives PersonY relief. The effect on others will be"}}
{"generation": ["the same as if the caller was the one who"], "references": ["wants to hang out", "hopes they answer", "none"], "input": {"head": "PersonX gets a call", "relation": "oEffect", "prompt": "PersonX gets a call. The effect on others will be"}}
{"generation": ["the same as it was on him"], "references": ["none"], "input": {"head": "PersonX lit another cigarette", "relation": "oEffect", "prompt": "PersonX lit another cigarette. The effect on others will be"}}
{"generation": ["the same as the effect on the author"], "references": ["none"], "input": {"head": "PersonX examines critically the ___", "relation": "oEffect", "prompt": "PersonX examines critically the ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX closes that day", "relation": "oEffect", "prompt": "PersonX closes that day. The effect on others will be"}}
{"generation": ["the same as if the loan were given to the"], "references": ["none"], "input": {"head": "PersonX gets a small loan", "relation": "oEffect", "prompt": "PersonX gets a small loan. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX increases the ___ at the expense", "relation": "oEffect", "prompt": "PersonX increases the ___ at the expense. The effect on others will be"}}
{"generation": ["the same as if the player had been in the"], "references": ["none"], "input": {"head": "PersonX loses track of the time", "relation": "oEffect", "prompt": "PersonX loses track of the time. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX goes in PersonX ear and out the other", "relation": "oEffect", "prompt": "PersonX goes in PersonX ear and out the other. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX looks ___ in the face", "relation": "oEffect", "prompt": "PersonX looks ___ in the face. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX gets the shoes", "relation": "oEffect", "prompt": "PersonX gets the shoes. The effect on others will be"}}
{"generation": ["the same as if he had been the one to"], "references": ["none"], "input": {"head": "PersonX starts to worry", "relation": "oEffect", "prompt": "PersonX starts to worry. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX gets something to eat", "relation": "oEffect", "prompt": "PersonX gets something to eat. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX finds ___ though", "relation": "oEffect", "prompt": "PersonX finds ___ though. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX puts PersonX's mind to it", "relation": "oEffect", "prompt": "PersonX puts PersonX's mind to it. The effect on others will be"}}
{"generation": ["the same as if they had put ___ on top"], "references": ["none"], "input": {"head": "PersonX puts ___ on top", "relation": "oEffect", "prompt": "PersonX puts ___ on top. The effect on others will be"}}
{"generation": ["the same"], "references": ["they tell others to avoid him", "avoid personX", "communicate less with person X.", "works hard to find his own solutions.", "none"], "input": {"head": "PersonX not does PersonY any favours", "relation": "oEffect", "prompt": "PersonX not does PersonY any favours. The effect on others will be"}}
{"generation": ["the same as if the visitor had visited PersonX"], "references": ["gets hugged", "none", "gets stressed", "gets excited"], "input": {"head": "PersonX visits PersonX's daughter", "relation": "oEffect", "prompt": "PersonX visits PersonX's daughter. The effect on others will be"}}
{"generation": ["the same"], "references": ["Sighs in contentment", "Ends up with X", "gets receipt", "gets cash back", "none"], "input": {"head": "PersonX fits PersonY's needs", "relation": "oEffect", "prompt": "PersonX fits PersonY's needs. The effect on others will be"}}
{"generation": ["___"], "references": ["behaves more carefully", "develops insight", "contemplates the warning", "nods head"], "input": {"head": "PersonX gives ___ a warning", "relation": "oEffect", "prompt": "PersonX gives ___ a warning. The effect on others will be"}}
{"generation": ["positive"], "references": ["none"], "input": {"head": "PersonX is a good person", "relation": "oEffect", "prompt": "PersonX is a good person. The effect on others will be"}}
{"generation": ["the same as if the player had won the match"], "references": ["none"], "input": {"head": "PersonX wins the match", "relation": "oEffect", "prompt": "PersonX wins the match. The effect on others will be"}}
{"generation": ["the same as if the boss had called PersonX"], "references": ["Y explains his side of the situation", "Boss talks to PersonX about a project.", "Boss tells PersonX about a new hire in PersonX's department.", "none", "Person Y gets confronted by X about the call."], "input": {"head": "PersonX gets a call from PersonY's boss", "relation": "oEffect", "prompt": "PersonX gets a call from PersonY's boss. The effect on others will be"}}
{"generation": ["the same as if they had been poisoned"], "references": ["none"], "input": {"head": "PersonX waters PersonX's garden", "relation": "oEffect", "prompt": "PersonX waters PersonX's garden. The effect on others will be"}}
{"generation": ["the same as if you had used the spell"], "references": ["none"], "input": {"head": "PersonX starts a campfire", "relation": "oEffect", "prompt": "PersonX starts a campfire. The effect on others will be"}}
{"generation": ["the same as if you had not renewed"], "references": ["none"], "input": {"head": "PersonX renews within days", "relation": "oEffect", "prompt": "PersonX renews within days. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX tries again next year", "relation": "oEffect", "prompt": "PersonX tries again next year. The effect on others will be"}}
{"generation": ["the same"], "references": ["people congratulate PersonX", "people clap for PersonX", "photographers take a photo of PersonX", "people award PersonX", "none"], "input": {"head": "PersonX never lost", "relation": "oEffect", "prompt": "PersonX never lost. The effect on others will be"}}
{"generation": ["the same as if the target had been the target"], "references": ["none"], "input": {"head": "PersonX gains PersonY's confidence", "relation": "oEffect", "prompt": "PersonX gains PersonY's confidence. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX loses thirty pounds", "relation": "oEffect", "prompt": "PersonX loses thirty pounds. The effect on others will be"}}
{"generation": ["the same as if you had used the word \""], "references": ["sharpens their ability to converse", "none", "must respond to the other person"], "input": {"head": "PersonX uses ___ to communicate", "relation": "oEffect", "prompt": "PersonX uses ___ to communicate. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX gets the stain", "relation": "oEffect", "prompt": "PersonX gets the stain. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX gains confidence", "relation": "oEffect", "prompt": "PersonX gains confidence. The effect on others will be"}}
{"generation": ["___"], "references": ["none"], "input": {"head": "PersonX goes ___ in the lake", "relation": "oEffect", "prompt": "PersonX goes ___ in the lake. The effect on others will be"}}
{"generation": ["the same as the effect on the person who is"], "references": ["Has sense of being needed", "none", "Processes question"], "input": {"head": "PersonX asks PersonX's sister", "relation": "oEffect", "prompt": "PersonX asks PersonX's sister. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX uses ___ anyway", "relation": "oEffect", "prompt": "PersonX uses ___ anyway. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX reminds PersonX of PersonY", "relation": "oEffect", "prompt": "PersonX reminds PersonX of PersonY. The effect on others will be"}}
{"generation": ["___"], "references": ["none"], "input": {"head": "PersonX receives ___ from the lord", "relation": "oEffect", "prompt": "PersonX receives ___ from the lord. The effect on others will be"}}
{"generation": ["the same"], "references": ["Experiences shock", "shouts", "recoils", "Struggles at first to comprehebd, thoughts race"], "input": {"head": "PersonX blows PersonY's mind", "relation": "oEffect", "prompt": "PersonX blows PersonY's mind. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX hangs PersonX's ___ in shame", "relation": "oEffect", "prompt": "PersonX hangs PersonX's ___ in shame. The effect on others will be"}}
{"generation": ["the same as if he were to enjoy swimming"], "references": ["none"], "input": {"head": "PersonX enjoys swimming", "relation": "oEffect", "prompt": "PersonX enjoys swimming. The effect on others will be"}}
{"generation": ["the same as if you were to take a trip"], "references": ["none"], "input": {"head": "PersonX takes a cruise", "relation": "oEffect", "prompt": "PersonX takes a cruise. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX sings PersonX's heart", "relation": "oEffect", "prompt": "PersonX sings PersonX's heart. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX finally worked", "relation": "oEffect", "prompt": "PersonX finally worked. The effect on others will be"}}
{"generation": ["the same"], "references": ["they catch the flu from him", "none", "they have to take care of him"], "input": {"head": "PersonX diagnoses with the flu", "relation": "oEffect", "prompt": "PersonX diagnoses with the flu. The effect on others will be"}}
{"generation": ["the same"], "references": ["walk away without being noticed.", "none", "get away with stealing somegthing."], "input": {"head": "PersonX looks the other way", "relation": "oEffect", "prompt": "PersonX looks the other way. The effect on others will be"}}
{"generation": ["the same"], "references": ["get timely help", "send a response unit", "the damages become restricted", "calm PersonX down", "will get prepared for an emergency", "will respond to the call"], "input": {"head": "PersonX calls the fire department", "relation": "oEffect", "prompt": "PersonX calls the fire department. The effect on others will be"}}
{"generation": ["the same as if PersonX had advised PersonY"], "references": ["none"], "input": {"head": "PersonX seeks PersonY's advice", "relation": "oEffect", "prompt": "PersonX seeks PersonY's advice. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX is well prepared", "relation": "oEffect", "prompt": "PersonX is well prepared. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX loves the experience", "relation": "oEffect", "prompt": "PersonX loves the experience. The effect on others will be"}}
{"generation": ["the same as if the object was a class"], "references": ["none"], "input": {"head": "PersonX manages one 's ___", "relation": "oEffect", "prompt": "PersonX manages one 's ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["have a date with person X", "become answerable", "have their issues with X resolved.", "feel the opposition", "none"], "input": {"head": "PersonX finally worked up ___", "relation": "oEffect", "prompt": "PersonX finally worked up ___. The effect on others will be"}}
{"generation": ["the same as if PersonX had conducted the investigation"], "references": ["PersonY sweats from nervousness", "cries", "asks PersonX to do more", "PersonY is arrested", "none"], "input": {"head": "PersonX conducts PersonY investigation", "relation": "oEffect", "prompt": "PersonX conducts PersonY investigation. The effect on others will be"}}
{"generation": ["the same as if you had called the function with"], "references": ["none"], "input": {"head": "PersonX puts together a ___", "relation": "oEffect", "prompt": "PersonX puts together a ___. The effect on others will be"}}
{"generation": ["the same as if you had called the pay phone"], "references": ["none"], "input": {"head": "PersonX finds a pay phone", "relation": "oEffect", "prompt": "PersonX finds a pay phone. The effect on others will be"}}
{"generation": ["the same as if you had distributed the same work"], "references": ["none"], "input": {"head": "PersonX distributes in forms without permission", "relation": "oEffect", "prompt": "PersonX distributes in forms without permission. The effect on others will be"}}
{"generation": ["the same as if you had made the arrangements yourself"], "references": ["is asked questions", "none", "hears about the plan"], "input": {"head": "PersonX makes arrangements", "relation": "oEffect", "prompt": "PersonX makes arrangements. The effect on others will be"}}
{"generation": ["the same as if the person had been killed"], "references": ["none"], "input": {"head": "PersonX waits at home", "relation": "oEffect", "prompt": "PersonX waits at home. The effect on others will be"}}
{"generation": ["the same"], "references": ["Buys more food", "none", "Yells at X"], "input": {"head": "PersonX eats everything", "relation": "oEffect", "prompt": "PersonX eats everything. The effect on others will be"}}
{"generation": ["the same as if the child had been given the"], "references": ["they have a sweet treat", "are dancing because they are happy to receive gifts from PersonX", "are drinking soda pop", "playing with the toys and paper hearts, PersonX gave them", "they laugh"], "input": {"head": "PersonX gives the children ___", "relation": "oEffect", "prompt": "PersonX gives the children ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["Take pictures", "Receive diploma", "Person Y shakes the hand of Person X", "none", "Person Y sees Person X"], "input": {"head": "PersonX sees PersonY graduate", "relation": "oEffect", "prompt": "PersonX sees PersonY graduate. The effect on others will be"}}
{"generation": ["the same"], "references": ["REALISED", "none"], "input": {"head": "PersonX changes PersonX's lives", "relation": "oEffect", "prompt": "PersonX changes PersonX's lives. The effect on others will be"}}
{"generation": ["the same as if ___ PersonX had been made"], "references": ["is approached by PersonX", "is engaged in conversation by PersonX", "submits required papers", "finds paperwork", "none"], "input": {"head": "PersonX recalls ___ PersonY be made", "relation": "oEffect", "prompt": "PersonX recalls ___ PersonY be made. The effect on others will be"}}
{"generation": ["the same as if PersonX had worn PersonY"], "references": ["is confused", "they need their boots", "gets angry", "have t buy new boots", "none"], "input": {"head": "PersonX wears PersonY's boots", "relation": "oEffect", "prompt": "PersonX wears PersonY's boots. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX starts with a clean sheet", "relation": "oEffect", "prompt": "PersonX starts with a clean sheet. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX works tirelessly", "relation": "oEffect", "prompt": "PersonX works tirelessly. The effect on others will be"}}
{"generation": ["a bit different, but it's still a good"], "references": ["Gets a good job done", "Promotes X", "none"], "input": {"head": "PersonX works really well", "relation": "oEffect", "prompt": "PersonX works really well. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX cries tears of joy", "relation": "oEffect", "prompt": "PersonX cries tears of joy. The effect on others will be"}}
{"generation": ["the same as if you had visited the city"], "references": ["none"], "input": {"head": "PersonX visits the city", "relation": "oEffect", "prompt": "PersonX visits the city. The effect on others will be"}}
{"generation": ["the same as if you were talking on a phone"], "references": ["none"], "input": {"head": "PersonX talks on PersonX's phone", "relation": "oEffect", "prompt": "PersonX talks on PersonX's phone. The effect on others will be"}}
{"generation": ["the same as if the visitor had visited the zoo"], "references": ["none"], "input": {"head": "PersonX visits the zoo", "relation": "oEffect", "prompt": "PersonX visits the zoo. The effect on others will be"}}
{"generation": ["the same as the effect on the need"], "references": ["see's what is needed", "none", "decides what should be done"], "input": {"head": "PersonX draws ___ to the need", "relation": "oEffect", "prompt": "PersonX draws ___ to the need. The effect on others will be"}}
{"generation": ["the same as if PersonX had walked up to"], "references": ["dies", "has a friend", "goes with someone", "gets injured", "gets exercise", "sees new things"], "input": {"head": "PersonX takes PersonY on a hike", "relation": "oEffect", "prompt": "PersonX takes PersonY on a hike. The effect on others will be"}}
{"generation": ["the same as if PersonX had been the one"], "references": ["none"], "input": {"head": "PersonX manages PersonY's ___ well", "relation": "oEffect", "prompt": "PersonX manages PersonY's ___ well. The effect on others will be"}}
{"generation": ["the same as if PersonX had sat on Person"], "references": ["none"], "input": {"head": "PersonX sits on PersonY's couch", "relation": "oEffect", "prompt": "PersonX sits on PersonY's couch. The effect on others will be"}}
{"generation": ["the same as if PersonX had been the one"], "references": ["goes to the dmv", "Gets ticket", "left", "had their identity stolen", "Drives home", "Take the license back"], "input": {"head": "PersonX gets PersonY's license", "relation": "oEffect", "prompt": "PersonX gets PersonY's license. The effect on others will be"}}
{"generation": ["the same"], "references": ["Hand out candy", "none", "Open door"], "input": {"head": "PersonX tricks or treat", "relation": "oEffect", "prompt": "PersonX tricks or treat. The effect on others will be"}}
{"generation": ["the same as if PersonX called PersonY's"], "references": ["PersonY's son smiles", "PersonY is grateful towards personX"], "input": {"head": "PersonX calls PersonY's son", "relation": "oEffect", "prompt": "PersonX calls PersonY's son. The effect on others will be"}}
{"generation": ["the same as if you had said \"I'm"], "references": ["none"], "input": {"head": "PersonX drives ___ to the beach", "relation": "oEffect", "prompt": "PersonX drives ___ to the beach. The effect on others will be"}}
{"generation": ["the same"], "references": ["Smack them", "none", "Punches them"], "input": {"head": "PersonX really pisses PersonY off", "relation": "oEffect", "prompt": "PersonX really pisses PersonY off. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX runs laps", "relation": "oEffect", "prompt": "PersonX runs laps. The effect on others will be"}}
{"generation": ["the same as if you had sold ___ on cra"], "references": ["none", "opens a package", "mails a check"], "input": {"head": "PersonX sells ___ on craigslist", "relation": "oEffect", "prompt": "PersonX sells ___ on craigslist. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX looks PersonY in the face", "relation": "oEffect", "prompt": "PersonX looks PersonY in the face. The effect on others will be"}}
{"generation": ["the same as if PersonX had pulled PersonY"], "references": ["cries because personY is drunk", "screams from anger"], "input": {"head": "PersonX pulls PersonY's car over", "relation": "oEffect", "prompt": "PersonX pulls PersonY's car over. The effect on others will be"}}
{"generation": ["the same as if PersonX had granted PersonY"], "references": ["thanks personX", "Person Y prepares to go on vacation.", "smiles", "appreciates personX", "Person Y thanks person X", "gets something"], "input": {"head": "PersonX grants PersonY's request", "relation": "oEffect", "prompt": "PersonX grants PersonY's request. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX peers inside", "relation": "oEffect", "prompt": "PersonX peers inside. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX falls off the back of a lorry", "relation": "oEffect", "prompt": "PersonX falls off the back of a lorry. The effect on others will be"}}
{"generation": ["the same as if you had chosen to play with"], "references": ["none"], "input": {"head": "PersonX finds ___ to play with", "relation": "oEffect", "prompt": "PersonX finds ___ to play with. The effect on others will be"}}
{"generation": ["to make them more likely to do the same"], "references": ["they do not argue", "none", "they resolve their issues"], "input": {"head": "PersonX keeps the peace", "relation": "oEffect", "prompt": "PersonX keeps the peace. The effect on others will be"}}
{"generation": ["the same"], "references": ["ignores PersonX", "get yelled at", "rejects PersonX", "none", "smile"], "input": {"head": "PersonX begs PersonY's parents", "relation": "oEffect", "prompt": "PersonX begs PersonY's parents. The effect on others will be"}}
{"generation": ["the same as if PersonX had committed the same"], "references": ["becomes angry", "none", "becomes sad"], "input": {"head": "PersonX commits ___ with PersonY in PersonX's heart", "relation": "oEffect", "prompt": "PersonX commits ___ with PersonY in PersonX's heart. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX loves the dog", "relation": "oEffect", "prompt": "PersonX loves the dog. The effect on others will be"}}
{"generation": ["the same as if they had been in the same"], "references": ["hears a knock", "none", "walks to the door"], "input": {"head": "PersonX goes to PersonY's place", "relation": "oEffect", "prompt": "PersonX goes to PersonY's place. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX books a ticket", "relation": "oEffect", "prompt": "PersonX books a ticket. The effect on others will be"}}
{"generation": ["the same as if the ___"], "references": ["none"], "input": {"head": "PersonX employs another ___", "relation": "oEffect", "prompt": "PersonX employs another ___. The effect on others will be"}}
{"generation": ["the same as the effect on the person who asked"], "references": ["Person Y's sister goes home.", "none", "Person Y's sister explains in detail"], "input": {"head": "PersonX asks PersonY's sister", "relation": "oEffect", "prompt": "PersonX asks PersonY's sister. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX has a laugh", "relation": "oEffect", "prompt": "PersonX has a laugh. The effect on others will be"}}
{"generation": ["the same as if the computer had been bought by"], "references": ["none"], "input": {"head": "PersonX buys the computer", "relation": "oEffect", "prompt": "PersonX buys the computer. The effect on others will be"}}
{"generation": ["the same as the effect on the boss"], "references": ["none"], "input": {"head": "PersonX gets a call from PersonX's boss", "relation": "oEffect", "prompt": "PersonX gets a call from PersonX's boss. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX costs the earth", "relation": "oEffect", "prompt": "PersonX costs the earth. The effect on others will be"}}
{"generation": ["the same"], "references": ["becomes closer to PersonX", "becomes grateful to personX", "gains information", "learns new information"], "input": {"head": "PersonX tells my mother", "relation": "oEffect", "prompt": "PersonX tells my mother. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX feels sad", "relation": "oEffect", "prompt": "PersonX feels sad. The effect on others will be"}}
{"generation": ["the same as if PersonX had killed PersonY"], "references": ["PersonY body slumps.", "gets eulogy held", "cremated", "PersonY dies.", "none"], "input": {"head": "PersonX puts PersonY to death", "relation": "oEffect", "prompt": "PersonX puts PersonY to death. The effect on others will be"}}
{"generation": ["___"], "references": ["none"], "input": {"head": "PersonX enjoys ___ together", "relation": "oEffect", "prompt": "PersonX enjoys ___ together. The effect on others will be"}}
{"generation": ["the same as the effect on the player"], "references": ["loses", "focus more", "none"], "input": {"head": "PersonX steps up PersonX's game", "relation": "oEffect", "prompt": "PersonX steps up PersonX's game. The effect on others will be"}}
{"generation": ["the same as if PersonX had been the one"], "references": ["is grateful to personX", "Things are easier", "asked for help", "asked for compensation"], "input": {"head": "PersonX helps PersonY along", "relation": "oEffect", "prompt": "PersonX helps PersonY along. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX would like", "relation": "oEffect", "prompt": "PersonX would like. The effect on others will be"}}
{"generation": ["the same"], "references": ["know more", "listen", "understand", "are informed"], "input": {"head": "PersonX tells PersonY a little", "relation": "oEffect", "prompt": "PersonX tells PersonY a little. The effect on others will be"}}
{"generation": ["the same"], "references": ["none", "Avoid X when possible", "Catch on to X's manipulation"], "input": {"head": "PersonX plays many games", "relation": "oEffect", "prompt": "PersonX plays many games. The effect on others will be"}}
{"generation": ["the same"], "references": ["cakewalk", "none", "antic"], "input": {"head": "PersonX romps home", "relation": "oEffect", "prompt": "PersonX romps home. The effect on others will be"}}
{"generation": ["the same as if the player had jumped"], "references": ["none"], "input": {"head": "PersonX commits ___ by jumping", "relation": "oEffect", "prompt": "PersonX commits ___ by jumping. The effect on others will be"}}
{"generation": ["the same as if they had been in the same"], "references": ["none", "talks to Person X", "walks with Person X"], "input": {"head": "PersonX takes ___ outside", "relation": "oEffect", "prompt": "PersonX takes ___ outside. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX works last night", "relation": "oEffect", "prompt": "PersonX works last night. The effect on others will be"}}
{"generation": ["the same as the effect on the person"], "references": ["Person Y stops talking", "Person Y got appreciation from his manager for that drawing.", "Person Y got appraisal in office.", "Person Y starts to interrupt"], "input": {"head": "PersonX draws PersonY conclusion", "relation": "oEffect", "prompt": "PersonX draws PersonY conclusion. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX cuts a swath", "relation": "oEffect", "prompt": "PersonX cuts a swath. The effect on others will be"}}
{"generation": ["the same"], "references": ["He has sand in his mouth.", "none", "He hits X."], "input": {"head": "PersonX puts PersonX's head in the sand", "relation": "oEffect", "prompt": "PersonX puts PersonX's head in the sand. The effect on others will be"}}
{"generation": ["the same"], "references": ["no effect", "none", "gets rejected by personx"], "input": {"head": "PersonX is a good soccer player", "relation": "oEffect", "prompt": "PersonX is a good soccer player. The effect on others will be"}}
{"generation": ["the same as if they were to take PersonX"], "references": ["respects personX", "none", "hears what they say"], "input": {"head": "PersonX takes PersonX's stand", "relation": "oEffect", "prompt": "PersonX takes PersonX's stand. The effect on others will be"}}
{"generation": ["the same as if the person had poured their heart"], "references": ["PersonX's love interest becomes more relaxed around PersonX", "none", "PersonX's love interest mentally sees them in a non-platonic light"], "input": {"head": "PersonX pours PersonX's heart", "relation": "oEffect", "prompt": "PersonX pours PersonX's heart. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX finds ___ at home", "relation": "oEffect", "prompt": "PersonX finds ___ at home. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX wins several awards", "relation": "oEffect", "prompt": "PersonX wins several awards. The effect on others will be"}}
{"generation": ["the same as if the player had spoken to the"], "references": ["none"], "input": {"head": "PersonX makes a speech", "relation": "oEffect", "prompt": "PersonX makes a speech. The effect on others will be"}}
{"generation": ["the same as if you had used the ___"], "references": ["DO GLAD", "none", "GLAD", "NONE"], "input": {"head": "PersonX explains fully the ___", "relation": "oEffect", "prompt": "PersonX explains fully the ___. The effect on others will be"}}
{"generation": ["the same as if the player had swung the bat"], "references": ["get hit with the ball", "none", "follow the ball through the sky"], "input": {"head": "PersonX swings the bat", "relation": "oEffect", "prompt": "PersonX swings the bat. The effect on others will be"}}
{"generation": ["the same as if the ___"], "references": ["none"], "input": {"head": "PersonX considers briefly the ___", "relation": "oEffect", "prompt": "PersonX considers briefly the ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX trusts ___ anymore", "relation": "oEffect", "prompt": "PersonX trusts ___ anymore. The effect on others will be"}}
{"generation": ["the same as if you were a freshman in college"], "references": ["none"], "input": {"head": "PersonX is a freshman in college", "relation": "oEffect", "prompt": "PersonX is a freshman in college. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX turns over a new leaf", "relation": "oEffect", "prompt": "PersonX turns over a new leaf. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX walks in the park ___", "relation": "oEffect", "prompt": "PersonX walks in the park ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX watches ___ anymore", "relation": "oEffect", "prompt": "PersonX watches ___ anymore. The effect on others will be"}}
{"generation": ["the same as if the cousin had visited PersonX"], "references": ["opens the door", "calls the cousin", "asks to go", "smiles at X"], "input": {"head": "PersonX visits PersonY's cousin", "relation": "oEffect", "prompt": "PersonX visits PersonY's cousin. The effect on others will be"}}
{"generation": ["the same"], "references": ["Many people will fight back the punishment.", "have grumbling stomachs", "become weak in their bodies", "Mane people will try to avoid the starvation."], "input": {"head": "PersonX starves the ___ into submission", "relation": "oEffect", "prompt": "PersonX starves the ___ into submission. The effect on others will be"}}
{"generation": ["the same as if the ___"], "references": ["none"], "input": {"head": "PersonX expects another ___", "relation": "oEffect", "prompt": "PersonX expects another ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX shakes the pagoda tree", "relation": "oEffect", "prompt": "PersonX shakes the pagoda tree. The effect on others will be"}}
{"generation": ["the same as if the person were sitting at the"], "references": ["none"], "input": {"head": "PersonX sits at the dinning room table", "relation": "oEffect", "prompt": "PersonX sits at the dinning room table. The effect on others will be"}}
{"generation": ["the same as the effect on the user"], "references": ["none"], "input": {"head": "PersonX increases PersonX's knowledge", "relation": "oEffect", "prompt": "PersonX increases PersonX's knowledge. The effect on others will be"}}
{"generation": ["the same as if the target had been hit by"], "references": ["none", "has a conversation with personX", "communicates"], "input": {"head": "PersonX makes contact", "relation": "oEffect", "prompt": "PersonX makes contact. The effect on others will be"}}
{"generation": ["the same as if they were in the same class"], "references": ["none"], "input": {"head": "PersonX enjoys PersonX's class", "relation": "oEffect", "prompt": "PersonX enjoys PersonX's class. The effect on others will be"}}
{"generation": ["negligible"], "references": ["none"], "input": {"head": "PersonX improves PersonX's sales", "relation": "oEffect", "prompt": "PersonX improves PersonX's sales. The effect on others will be"}}
{"generation": ["the same"], "references": ["town inhabitants have feelings about the red color", "none", "town inhabitants live in red town"], "input": {"head": "PersonX paints the town red", "relation": "oEffect", "prompt": "PersonX paints the town red. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX falls right", "relation": "oEffect", "prompt": "PersonX falls right. The effect on others will be"}}
{"generation": ["the same as if PersonX had used the ability"], "references": ["their stuff get's taken care of faster", "they get back to regular life", "they get their stuff packed sooner", "they twist their back"], "input": {"head": "PersonX helps PersonY's brother", "relation": "oEffect", "prompt": "PersonX helps PersonY's brother. The effect on others will be"}}
{"generation": ["the same as if PersonX had said \"I"], "references": ["looks at personx", "acknowldges personx", "none"], "input": {"head": "PersonX sits down across from PersonY", "relation": "oEffect", "prompt": "PersonX sits down across from PersonY. The effect on others will be"}}
{"generation": ["the same as if they had been warned"], "references": ["PersonY is warned", "PersonY thinks about what they did wrong", "PersonY apologizes", "PersonY takes more care around PersonX", "PersonY tries to follow the warning", "PersonY changes their behavior."], "input": {"head": "PersonX gives PersonY a warning", "relation": "oEffect", "prompt": "PersonX gives PersonY a warning. The effect on others will be"}}
{"generation": ["the same as if the ___"], "references": ["none", "shows interest in PersonX", "disagrees with PersonX"], "input": {"head": "PersonX includes another ___", "relation": "oEffect", "prompt": "PersonX includes another ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX wants to learn how to drive", "relation": "oEffect", "prompt": "PersonX wants to learn how to drive. The effect on others will be"}}
{"generation": ["the same as the effect on the player"], "references": ["none"], "input": {"head": "PersonX pushes PersonX's luck", "relation": "oEffect", "prompt": "PersonX pushes PersonX's luck. The effect on others will be"}}
{"generation": ["the same as if PersonX had lost PersonX"], "references": ["none"], "input": {"head": "PersonX has lost PersonX's phone", "relation": "oEffect", "prompt": "PersonX has lost PersonX's phone. The effect on others will be"}}
{"generation": ["the same as if they had given"], "references": ["donates to the Red Cross", "gives something away", "keeps something", "decides to also give"], "input": {"head": "PersonX tells PersonY to give", "relation": "oEffect", "prompt": "PersonX tells PersonY to give. The effect on others will be"}}
{"generation": ["the same as the effect on the original player"], "references": ["none"], "input": {"head": "PersonX follows PersonX's instructions", "relation": "oEffect", "prompt": "PersonX follows PersonX's instructions. The effect on others will be"}}
{"generation": ["the same as the effect on the creator"], "references": ["none"], "input": {"head": "PersonX comes into being", "relation": "oEffect", "prompt": "PersonX comes into being. The effect on others will be"}}
{"generation": ["the same as if PersonX called PersonY"], "references": ["PersonY talks to PersonX", "listens intently", "hangs up the phone", "scolds the person", "eats breakfast", "has a good day", "hugs PersonX"], "input": {"head": "PersonX calls PersonY this morning", "relation": "oEffect", "prompt": "PersonX calls PersonY this morning. The effect on others will be"}}
{"generation": ["the same as if the PersonX had caught Person"], "references": ["PersonY loses their eye", "Person Y is attracted to Person X.", "Person Y smiles at Person X.", "none", "PersonY in pain from blood loss"], "input": {"head": "PersonX catches PersonY eye", "relation": "oEffect", "prompt": "PersonX catches PersonY eye. The effect on others will be"}}
{"generation": ["the same as if PersonX had said \"I"], "references": ["is talked down to.", "PersonY stops talking to PersonX", "PersonY is reprimended", "walks away sad", "is yelled at", "pouts in embarrassment"], "input": {"head": "PersonX scolds PersonY", "relation": "oEffect", "prompt": "PersonX scolds PersonY. The effect on others will be"}}
{"generation": ["the same as if they were the same person"], "references": ["they buy something nice", "none", "they save a lot of money"], "input": {"head": "PersonX makes PersonY ___ every time", "relation": "oEffect", "prompt": "PersonX makes PersonY ___ every time. The effect on others will be"}}
{"generation": ["the same as if the player had killed the NPC"], "references": ["grieve", "Gain peace from event", "cry", "Fill the void"], "input": {"head": "PersonX dies peacefully", "relation": "oEffect", "prompt": "PersonX dies peacefully. The effect on others will be"}}
{"generation": ["the same as if the food had been burned"], "references": ["none"], "input": {"head": "PersonX burns the food", "relation": "oEffect", "prompt": "PersonX burns the food. The effect on others will be"}}
{"generation": ["the same as if the order were made by the"], "references": ["none"], "input": {"head": "PersonX orders ___ from the restaurant", "relation": "oEffect", "prompt": "PersonX orders ___ from the restaurant. The effect on others will be"}}
{"generation": ["the same as if PersonX had given PersonY"], "references": ["Get to raise these children", "feels good", "feels great", "Get to meet these children", "none"], "input": {"head": "PersonX gives PersonY children", "relation": "oEffect", "prompt": "PersonX gives PersonY children. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX is a quick learner", "relation": "oEffect", "prompt": "PersonX is a quick learner. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX sits and watch", "relation": "oEffect", "prompt": "PersonX sits and watch. The effect on others will be"}}
{"generation": ["the same"], "references": ["becomes rich", "receives promotion"], "input": {"head": "PersonX can n't believe PersonY's luck", "relation": "oEffect", "prompt": "PersonX can n't believe PersonY's luck. The effect on others will be"}}
{"generation": ["the same as if the person had been hit by"], "references": ["is attracted to PersonX", "notices X", "brings back a memory", "gets rejected", "blushes", "smiles"], "input": {"head": "PersonX catches PersonY's attention", "relation": "oEffect", "prompt": "PersonX catches PersonY's attention. The effect on others will be"}}
{"generation": ["the same as if they had been in the same"], "references": ["none", "looks for the traitor", "prosecutes the traitor"], "input": {"head": "PersonX gets the ___ into PersonY's hands", "relation": "oEffect", "prompt": "PersonX gets the ___ into PersonY's hands. The effect on others will be"}}
{"generation": ["the same as if ___ had told PersonX that"], "references": ["prays for persony", "thinks of persony", "screams", "cries"], "input": {"head": "PersonX tells ___ that PersonY had cancer", "relation": "oEffect", "prompt": "PersonX tells ___ that PersonY had cancer. The effect on others will be"}}
{"generation": ["the same as if you had not done the action"], "references": ["Patents stop bleeding", "felt pain", "saved from bleeding", "Patients groan in pain from the bleeding stopping"], "input": {"head": "PersonX prevents ___ in patients", "relation": "oEffect", "prompt": "PersonX prevents ___ in patients. The effect on others will be"}}
{"generation": ["the same as if you had used the spell"], "references": ["none"], "input": {"head": "PersonX uses ___ regularly", "relation": "oEffect", "prompt": "PersonX uses ___ regularly. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX brings down the house", "relation": "oEffect", "prompt": "PersonX brings down the house. The effect on others will be"}}
{"generation": ["the same"], "references": ["no effect", "none", "PersonY borrows his car to PersonX"], "input": {"head": "PersonX borrows the car", "relation": "oEffect", "prompt": "PersonX borrows the car. The effect on others will be"}}
{"generation": ["the same as if they had put ___ in Person"], "references": ["none"], "input": {"head": "PersonX puts ___ in PersonX's purse", "relation": "oEffect", "prompt": "PersonX puts ___ in PersonX's purse. The effect on others will be"}}
{"generation": ["the same as if you had divided ___ into groups"], "references": ["none"], "input": {"head": "PersonX divides ___ into groups", "relation": "oEffect", "prompt": "PersonX divides ___ into groups. The effect on others will be"}}
{"generation": ["the same as if PersonX had not been there"], "references": ["person y stays home", "finds out", "person y sleeps", "Cries", "forces their way into the event", "Yells"], "input": {"head": "PersonX prevents PersonY from coming", "relation": "oEffect", "prompt": "PersonX prevents PersonY from coming. The effect on others will be"}}
{"generation": ["the same as if the person had chosen to elect"], "references": ["none"], "input": {"head": "PersonX elects ___ to office", "relation": "oEffect", "prompt": "PersonX elects ___ to office. The effect on others will be"}}
{"generation": ["the same as if the snake were a person"], "references": ["none"], "input": {"head": "PersonX sees a snake", "relation": "oEffect", "prompt": "PersonX sees a snake. The effect on others will be"}}
{"generation": ["the same"], "references": ["they give him hours", "they make money off of him", "none"], "input": {"head": "PersonX spends a lot of money", "relation": "oEffect", "prompt": "PersonX spends a lot of money. The effect on others will be"}}
{"generation": ["the same as the effect on the original ___"], "references": ["none"], "input": {"head": "PersonX mentions another ___", "relation": "oEffect", "prompt": "PersonX mentions another ___. The effect on others will be"}}
{"generation": ["the same as if PersonX had come"], "references": ["none"], "input": {"head": "PersonX wants PersonY to come", "relation": "oEffect", "prompt": "PersonX wants PersonY to come. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX gets the book", "relation": "oEffect", "prompt": "PersonX gets the book. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX busts a nut", "relation": "oEffect", "prompt": "PersonX busts a nut. The effect on others will be"}}
{"generation": ["the same as if they had been given ___"], "references": ["none"], "input": {"head": "PersonX brings ___ to PersonY's mouth", "relation": "oEffect", "prompt": "PersonX brings ___ to PersonY's mouth. The effect on others will be"}}
{"generation": ["the same as if you had called ___"], "references": ["none"], "input": {"head": "PersonX always makes ___", "relation": "oEffect", "prompt": "PersonX always makes ___. The effect on others will be"}}
{"generation": ["the same, but the person will be more likely"], "references": ["none"], "input": {"head": "PersonX takes a leaf out of PersonY's book", "relation": "oEffect", "prompt": "PersonX takes a leaf out of PersonY's book. The effect on others will be"}}
{"generation": ["the same as the effect on the original person"], "references": ["gets kicked", "get connected", "talk to", "gets punched", "answers the phone", "talks"], "input": {"head": "PersonX rings PersonY", "relation": "oEffect", "prompt": "PersonX rings PersonY. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX throws ___ on the nature", "relation": "oEffect", "prompt": "PersonX throws ___ on the nature. The effect on others will be"}}
{"generation": ["the same"], "references": ["Other dislike and become upset by bully's presence", "none", "Self esteem of others is diminished"], "input": {"head": "PersonX bullies in school", "relation": "oEffect", "prompt": "PersonX bullies in school. The effect on others will be"}}
{"generation": ["the same as if the person had put their phone"], "references": ["none"], "input": {"head": "PersonX puts PersonX's phone", "relation": "oEffect", "prompt": "PersonX puts PersonX's phone. The effect on others will be"}}
{"generation": ["the same"], "references": ["PersonY asks personX not to say anything", "none", "PersonY is vulnerable because PersonX could tell people", "PersonY approaches personX about it"], "input": {"head": "PersonX knows PersonY's opinion", "relation": "oEffect", "prompt": "PersonX knows PersonY's opinion. The effect on others will be"}}
{"generation": ["the same as the one on the person who gave"], "references": ["smiles with pride", "cries out of joy", "no effect", "receive gratitude for praise", "none"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "oEffect", "prompt": "PersonX gives the ___ PersonY's name. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX does odd jobs", "relation": "oEffect", "prompt": "PersonX does odd jobs. The effect on others will be"}}
{"generation": ["the same as if the library were empty"], "references": ["none"], "input": {"head": "PersonX leaves the library", "relation": "oEffect", "prompt": "PersonX leaves the library. The effect on others will be"}}
{"generation": ["the same as if the player had been the one"], "references": ["none"], "input": {"head": "PersonX takes place in the course", "relation": "oEffect", "prompt": "PersonX takes place in the course. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX catches flies", "relation": "oEffect", "prompt": "PersonX catches flies. The effect on others will be"}}
{"generation": ["the same as if the boy were a girl"], "references": ["they play outside", "none", "they say high back"], "input": {"head": "PersonX sees a boy", "relation": "oEffect", "prompt": "PersonX sees a boy. The effect on others will be"}}
{"generation": ["the same as if you were to ask a child"], "references": ["none"], "input": {"head": "PersonX wants to learn how to draw", "relation": "oEffect", "prompt": "PersonX wants to learn how to draw. The effect on others will be"}}
{"generation": ["the same as if they had kissed PersonX"], "references": ["gets closer", "gains person X's saliva", "feels his lips", "passes herpes to person X"], "input": {"head": "PersonX kisses PersonY gently", "relation": "oEffect", "prompt": "PersonX kisses PersonY gently. The effect on others will be"}}
{"generation": ["the same as if PersonX was sitting behind Person"], "references": ["none"], "input": {"head": "PersonX sits behind PersonY", "relation": "oEffect", "prompt": "PersonX sits behind PersonY. The effect on others will be"}}
{"generation": ["the same as if you had ordered one yourself"], "references": ["none"], "input": {"head": "PersonX orders one", "relation": "oEffect", "prompt": "PersonX orders one. The effect on others will be"}}
{"generation": ["the same as if PersonX had shoved PersonY"], "references": ["none", "is touched", "is contacted"], "input": {"head": "PersonX shoves PersonY back", "relation": "oEffect", "prompt": "PersonX shoves PersonY back. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX presents the ___ in a manner", "relation": "oEffect", "prompt": "PersonX presents the ___ in a manner. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX blows this popsicle stand", "relation": "oEffect", "prompt": "PersonX blows this popsicle stand. The effect on others will be"}}
{"generation": ["the same as if the person had walked to the"], "references": ["none", "gives personX a ride", "allows personX to drive"], "input": {"head": "PersonX walks to PersonY's car", "relation": "oEffect", "prompt": "PersonX walks to PersonY's car. The effect on others will be"}}
{"generation": ["the same as if the user had slept for 24"], "references": ["none"], "input": {"head": "PersonX returns the next day", "relation": "oEffect", "prompt": "PersonX returns the next day. The effect on others will be"}}
{"generation": ["the same as if PersonX was the one who"], "references": ["none", "beyond grateful to be with PersonX.", "becomes secure being with PersonX."], "input": {"head": "PersonX is PersonY's boyfriend", "relation": "oEffect", "prompt": "PersonX is PersonY's boyfriend. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX studies as much", "relation": "oEffect", "prompt": "PersonX studies as much. The effect on others will be"}}
{"generation": ["the same as if they were wearing the same color"], "references": ["tips the hairdresser", "PersonY feels happy", "PersonY looks at new hair color", "PersonY feels bold", "smiles", "thanks person X", "sees himself in the mirror"], "input": {"head": "PersonX dyes PersonY's hair red", "relation": "oEffect", "prompt": "PersonX dyes PersonY's hair red. The effect on others will be"}}
{"generation": ["less dramatic"], "references": ["none", "might get in a vehicle accident if PersonX's quick change in direction is while driving a car", "a cop might need to pull over PersonX an give him a ticket if PersonX broke any traffic laws"], "input": {"head": "PersonX changes ___ quickly", "relation": "oEffect", "prompt": "PersonX changes ___ quickly. The effect on others will be"}}
{"generation": ["the same as the effect on the player"], "references": ["gets wet", "wakes up", "none"], "input": {"head": "PersonX splashes ___ on PersonX's face", "relation": "oEffect", "prompt": "PersonX splashes ___ on PersonX's face. The effect on others will be"}}
{"generation": ["the same as if the visitor had visited the farm"], "references": ["none"], "input": {"head": "PersonX visits a farm", "relation": "oEffect", "prompt": "PersonX visits a farm. The effect on others will be"}}
{"generation": ["the same as if the person had thrown the hat"], "references": ["hits someone", "win a match", "yells at someone", "none", "get challenged"], "input": {"head": "PersonX throws PersonX's hat in the ring", "relation": "oEffect", "prompt": "PersonX throws PersonX's hat in the ring. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX takes PersonY everywhere", "relation": "oEffect", "prompt": "PersonX takes PersonY everywhere. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX feels refreshed", "relation": "oEffect", "prompt": "PersonX feels refreshed. The effect on others will be"}}
{"generation": ["the same as the movement itself"], "references": ["lives a better life", "inspires change", "none"], "input": {"head": "PersonX plays a ___ in the movement", "relation": "oEffect", "prompt": "PersonX plays a ___ in the movement. The effect on others will be"}}
{"generation": ["the same as if PersonX had used the ability"], "references": ["Y is less sweaty.", "takes a deep sigh", "relaxes", "tries to sit straight", "takes deep breath", "Y is grateful to X."], "input": {"head": "PersonX wipes PersonY's forehead", "relation": "oEffect", "prompt": "PersonX wipes PersonY's forehead. The effect on others will be"}}
{"generation": ["the same"], "references": ["has a good employee", "none", "appreciates their work"], "input": {"head": "PersonX meets the company 's ___", "relation": "oEffect", "prompt": "PersonX meets the company 's ___. The effect on others will be"}}
{"generation": ["the same as if PersonX had kissed PersonY"], "references": ["none", "are startled", "feel a bit hurt by the contact"], "input": {"head": "PersonX passes PersonY's lips", "relation": "oEffect", "prompt": "PersonX passes PersonY's lips. The effect on others will be"}}
{"generation": ["the same as if the person had been a member"], "references": ["none"], "input": {"head": "PersonX runs errands", "relation": "oEffect", "prompt": "PersonX runs errands. The effect on others will be"}}
{"generation": ["the same as if they had been in the same"], "references": ["Invites X in", "makes it home", "thanks person X", "Yells", "Punch on x face", "Gets home safe"], "input": {"head": "PersonX escorts PersonY back", "relation": "oEffect", "prompt": "PersonX escorts PersonY back. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX gets everything", "relation": "oEffect", "prompt": "PersonX gets everything. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX plays a new game", "relation": "oEffect", "prompt": "PersonX plays a new game. The effect on others will be"}}
{"generation": ["the same as if they were in the same room"], "references": ["gets company", "gets friend", "none"], "input": {"head": "PersonX comes to PersonY house", "relation": "oEffect", "prompt": "PersonX comes to PersonY house. The effect on others will be"}}
{"generation": ["the same"], "references": ["gives up trying to find personX", "none", "keep trying to find personX"], "input": {"head": "PersonX is hard to find", "relation": "oEffect", "prompt": "PersonX is hard to find. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX eats the whole thing", "relation": "oEffect", "prompt": "PersonX eats the whole thing. The effect on others will be"}}
{"generation": ["the same as the effect on the player"], "references": ["none"], "input": {"head": "PersonX sprays PersonX", "relation": "oEffect", "prompt": "PersonX sprays PersonX. The effect on others will be"}}
{"generation": ["the same as if the dog had been killed"], "references": ["none"], "input": {"head": "PersonX catches the dog", "relation": "oEffect", "prompt": "PersonX catches the dog. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX has a say", "relation": "oEffect", "prompt": "PersonX has a say. The effect on others will be"}}
{"generation": ["the same as if you had slept with them"], "references": ["none"], "input": {"head": "PersonX sleeps tonight", "relation": "oEffect", "prompt": "PersonX sleeps tonight. The effect on others will be"}}
{"generation": ["the same as if you had defined it as a"], "references": ["none"], "input": {"head": "PersonX defines ___ as real", "relation": "oEffect", "prompt": "PersonX defines ___ as real. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX becomes frustrated", "relation": "oEffect", "prompt": "PersonX becomes frustrated. The effect on others will be"}}
{"generation": ["the same as if the person had eaten the meal"], "references": ["yell at PersonX", "they stay healthy", "raise their fist to hit PersonX", "none", "don't have to clean so much off their plate"], "input": {"head": "PersonX finishes PersonY's meal", "relation": "oEffect", "prompt": "PersonX finishes PersonY's meal. The effect on others will be"}}
{"generation": ["the same as if PersonX had taken PersonY"], "references": ["nods head", "thanks Person X", "none"], "input": {"head": "PersonX takes PersonY's stand", "relation": "oEffect", "prompt": "PersonX takes PersonY's stand. The effect on others will be"}}
{"generation": ["the same as if PersonX had dropped PersonY"], "references": ["and he gets out of the car", "and he goes inside"], "input": {"head": "PersonX drops PersonY off at home", "relation": "oEffect", "prompt": "PersonX drops PersonY off at home. The effect on others will be"}}
{"generation": ["the same as if they had answered the question themselves"], "references": ["PersonY thinks about their options", "none", "PersonY gives answer"], "input": {"head": "PersonX waits for PersonY's answer", "relation": "oEffect", "prompt": "PersonX waits for PersonY's answer. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX would work", "relation": "oEffect", "prompt": "PersonX would work. The effect on others will be"}}
{"generation": ["the same as if the player had picked up the"], "references": ["none"], "input": {"head": "PersonX looks in PersonY's cupboard", "relation": "oEffect", "prompt": "PersonX looks in PersonY's cupboard. The effect on others will be"}}
{"generation": ["the same"], "references": ["has butterflies", "is loved", "loves person X", "get engaged", "get a boyfriend", "goes out with person X"], "input": {"head": "PersonX quickly fell in love", "relation": "oEffect", "prompt": "PersonX quickly fell in love. The effect on others will be"}}
{"generation": ["different"], "references": ["none"], "input": {"head": "PersonX never been to one before", "relation": "oEffect", "prompt": "PersonX never been to one before. The effect on others will be"}}
{"generation": ["the same"], "references": ["person y smiles", "none", "person y breathes easier"], "input": {"head": "PersonX makes PersonY part", "relation": "oEffect", "prompt": "PersonX makes PersonY part. The effect on others will be"}}
{"generation": ["the same as if they were to have the ___"], "references": ["The writers gain knowledge about PersonX's history", "The writers receive a letter from PersonX", "none"], "input": {"head": "PersonX loves the ___ with PersonX's heart", "relation": "oEffect", "prompt": "PersonX loves the ___ with PersonX's heart. The effect on others will be"}}
{"generation": ["the same as if the pizza was ordered by the"], "references": ["none", "has to take their order", "has to make the pizza"], "input": {"head": "PersonX decides to order a pizza", "relation": "oEffect", "prompt": "PersonX decides to order a pizza. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX sees PersonY frequently", "relation": "oEffect", "prompt": "PersonX sees PersonY frequently. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX gets everything PersonY needed", "relation": "oEffect", "prompt": "PersonX gets everything PersonY needed. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX hurts like hell", "relation": "oEffect", "prompt": "PersonX hurts like hell. The effect on others will be"}}
{"generation": ["___"], "references": ["none"], "input": {"head": "PersonX makes the team ___", "relation": "oEffect", "prompt": "PersonX makes the team ___. The effect on others will be"}}
{"generation": ["the same as if PersonX had given a presentation"], "references": ["none"], "input": {"head": "PersonX gives PersonX's presentation", "relation": "oEffect", "prompt": "PersonX gives PersonX's presentation. The effect on others will be"}}
{"generation": ["the same as if PersonX had lost PersonX"], "references": ["loses life", "cries", "help with the prostetic", "na", "none"], "input": {"head": "PersonX loses PersonX's ___ in the war", "relation": "oEffect", "prompt": "PersonX loses PersonX's ___ in the war. The effect on others will be"}}
{"generation": ["the same"], "references": ["lessens heart rate.", "relax.", "create bond.", "smile.", "none"], "input": {"head": "PersonX enjoys PersonY's company", "relation": "oEffect", "prompt": "PersonX enjoys PersonY's company. The effect on others will be"}}
{"generation": ["the same as if you were to run full speed"], "references": ["none"], "input": {"head": "PersonX runs full speed", "relation": "oEffect", "prompt": "PersonX runs full speed. The effect on others will be"}}
{"generation": ["the same"], "references": ["none", "makes a new friend", "has a good time"], "input": {"head": "PersonX laughs PersonY's asses off", "relation": "oEffect", "prompt": "PersonX laughs PersonY's asses off. The effect on others will be"}}
{"generation": ["the same as if PersonX had seen PersonY"], "references": ["I asked who he was", "is greeted", "is observed", "they talked together", "none"], "input": {"head": "PersonX sees PersonY's wife", "relation": "oEffect", "prompt": "PersonX sees PersonY's wife. The effect on others will be"}}
{"generation": ["the same as the effect on the player"], "references": ["none", "Try to find hold", "Try to get in"], "input": {"head": "PersonX prevents the ___ from entering", "relation": "oEffect", "prompt": "PersonX prevents the ___ from entering. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX misses school", "relation": "oEffect", "prompt": "PersonX misses school. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX gets sunburned", "relation": "oEffect", "prompt": "PersonX gets sunburned. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX surmounts every ___", "relation": "oEffect", "prompt": "PersonX surmounts every ___. The effect on others will be"}}
{"generation": ["the same as if PersonX had called PersonY"], "references": ["pick up phone", "respond to information"], "input": {"head": "PersonX calls PersonX's work", "relation": "oEffect", "prompt": "PersonX calls PersonX's work. The effect on others will be"}}
{"generation": ["the same as if the two had met in person"], "references": ["meet PersonX", "tell X to stay away", "those people are luckey persons", "have more information about PersonX", "those persons can develope their relationship", "welcome X into the family"], "input": {"head": "PersonX meets PersonY's father", "relation": "oEffect", "prompt": "PersonX meets PersonY's father. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX loves to surf", "relation": "oEffect", "prompt": "PersonX loves to surf. The effect on others will be"}}
{"generation": ["___"], "references": ["none"], "input": {"head": "PersonX takes ___ daily", "relation": "oEffect", "prompt": "PersonX takes ___ daily. The effect on others will be"}}
{"generation": ["the same as if PersonX had left PersonY"], "references": ["wants to feel better", "looks groggy", "looks around", "exits room", "none"], "input": {"head": "PersonX leaves PersonY's alone", "relation": "oEffect", "prompt": "PersonX leaves PersonY's alone. The effect on others will be"}}
{"generation": ["the same as the effect on the original person"], "references": ["none"], "input": {"head": "PersonX makes PersonY resistance", "relation": "oEffect", "prompt": "PersonX makes PersonY resistance. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX looks both ways", "relation": "oEffect", "prompt": "PersonX looks both ways. The effect on others will be"}}
{"generation": ["the same as if PersonX had thrown the ball"], "references": ["none"], "input": {"head": "PersonX finds PersonX's ball", "relation": "oEffect", "prompt": "PersonX finds PersonX's ball. The effect on others will be"}}
{"generation": ["the same as if you had used a ___"], "references": ["find he is cold.", "none", "avoid personx also."], "input": {"head": "PersonX avoids every ___", "relation": "oEffect", "prompt": "PersonX avoids every ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX loves cake", "relation": "oEffect", "prompt": "PersonX loves cake. The effect on others will be"}}
{"generation": ["the same as if the person had thrown a rock"], "references": ["none"], "input": {"head": "PersonX throws ___ in the way", "relation": "oEffect", "prompt": "PersonX throws ___ in the way. The effect on others will be"}}
{"generation": ["the same as if the class had been created with"], "references": ["none"], "input": {"head": "PersonX leaves the class", "relation": "oEffect", "prompt": "PersonX leaves the class. The effect on others will be"}}
{"generation": ["the same as if PersonX had attacked PersonY"], "references": ["got in an argument", "become an accessory to a crime", "had to defend stance", "lose their livelihood"], "input": {"head": "PersonX brings PersonY into conflict", "relation": "oEffect", "prompt": "PersonX brings PersonY into conflict. The effect on others will be"}}
{"generation": ["the same as if the ___"], "references": ["none"], "input": {"head": "PersonX wins every ___", "relation": "oEffect", "prompt": "PersonX wins every ___. The effect on others will be"}}
{"generation": ["the same as the effect on the original person"], "references": ["none", "has a needed employee", "pays their salary"], "input": {"head": "PersonX lands the job", "relation": "oEffect", "prompt": "PersonX lands the job. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX drags through the mud", "relation": "oEffect", "prompt": "PersonX drags through the mud. The effect on others will be"}}
{"generation": ["the same as if you were to walk in the"], "references": ["none"], "input": {"head": "PersonX walks in the park", "relation": "oEffect", "prompt": "PersonX walks in the park. The effect on others will be"}}
{"generation": ["the same as if PersonX had been wearing a"], "references": ["got their match", "none", "are attracted to PersonX"], "input": {"head": "PersonX suits PersonY", "relation": "oEffect", "prompt": "PersonX suits PersonY. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX puts the phone", "relation": "oEffect", "prompt": "PersonX puts the phone. The effect on others will be"}}
{"generation": ["the same as if the person sitting on the person"], "references": ["gets more burdened", "lose circulation in legs.", "feel the weight of PersonX", "none", "sink into couch more."], "input": {"head": "PersonX sits on PersonY's lap", "relation": "oEffect", "prompt": "PersonX sits on PersonY's lap. The effect on others will be"}}
{"generation": ["the same"], "references": ["none", "their life is better", "they like being around him"], "input": {"head": "PersonX develops along lines", "relation": "oEffect", "prompt": "PersonX develops along lines. The effect on others will be"}}
{"generation": ["the same"], "references": ["none", "gets defeated", "cries"], "input": {"head": "PersonX always beat", "relation": "oEffect", "prompt": "PersonX always beat. The effect on others will be"}}
{"generation": ["the same as if PersonX had used the __"], "references": ["none"], "input": {"head": "PersonX gets PersonX's hands on ___", "relation": "oEffect", "prompt": "PersonX gets PersonX's hands on ___. The effect on others will be"}}
{"generation": ["the same as if PersonX had given PersonY"], "references": ["thinks about personY", "hears what is said", "gets robbed", "gets data stolen"], "input": {"head": "PersonX gives PersonY account", "relation": "oEffect", "prompt": "PersonX gives PersonY account. The effect on others will be"}}
{"generation": ["the same as if PersonX had married PersonY"], "references": ["PersonY's muscles tense up", "none", "PersonY yells at PersonX", "PerosnY's face turns red with rage"], "input": {"head": "PersonX sees PersonY wife", "relation": "oEffect", "prompt": "PersonX sees PersonY wife. The effect on others will be"}}
{"generation": ["the same"], "references": ["none", "get entertained", "have fun"], "input": {"head": "PersonX does the best PersonY could", "relation": "oEffect", "prompt": "PersonX does the best PersonY could. The effect on others will be"}}
{"generation": ["the same as if the person had bought a lottery"], "references": ["none"], "input": {"head": "PersonX purchases a lottery ticket", "relation": "oEffect", "prompt": "PersonX purchases a lottery ticket. The effect on others will be"}}
{"generation": ["the same as if they were looking at PersonX"], "references": ["stutters", "receives eye contact from another", "laughs", "must respond with a reaction", "breaths heavily", "see's what they do"], "input": {"head": "PersonX looks at PersonY's face", "relation": "oEffect", "prompt": "PersonX looks at PersonY's face. The effect on others will be"}}
{"generation": ["the same as if PersonX had asked PersonY"], "references": ["sits in it", "gets comfortable", "pulls out a chair", "starts to learn", "none"], "input": {"head": "PersonX asks PersonY to sit down", "relation": "oEffect", "prompt": "PersonX asks PersonY to sit down. The effect on others will be"}}
{"generation": ["the same as if PersonX had been babysitting"], "references": ["gets yelled at", "laughs", "screams", "plays", "none"], "input": {"head": "PersonX babysits PersonX's cousin", "relation": "oEffect", "prompt": "PersonX babysits PersonX's cousin. The effect on others will be"}}
{"generation": ["the same"], "references": ["argument.", "none", "yell"], "input": {"head": "PersonX does n't get along", "relation": "oEffect", "prompt": "PersonX does n't get along. The effect on others will be"}}
{"generation": ["the same as if the player had left the table"], "references": ["none"], "input": {"head": "PersonX leaves the table", "relation": "oEffect", "prompt": "PersonX leaves the table. The effect on others will be"}}
{"generation": ["the same"], "references": ["answer yay", "none", "smile"], "input": {"head": "PersonX says PersonY nay", "relation": "oEffect", "prompt": "PersonX says PersonY nay. The effect on others will be"}}
{"generation": ["the same as the effect on me"], "references": ["none"], "input": {"head": "PersonX has a test tomorrow", "relation": "oEffect", "prompt": "PersonX has a test tomorrow. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX misses work", "relation": "oEffect", "prompt": "PersonX misses work. The effect on others will be"}}
{"generation": ["the same as if the player had chosen to have"], "references": ["grows up", "none", "spends time with Person X"], "input": {"head": "PersonX starts a family", "relation": "oEffect", "prompt": "PersonX starts a family. The effect on others will be"}}
{"generation": ["the same as the effect on the player"], "references": ["People wonder why X threw the food.", "none", "People duck away from the food."], "input": {"head": "PersonX throws the food", "relation": "oEffect", "prompt": "PersonX throws the food. The effect on others will be"}}
{"generation": ["the same as if PersonX had been the one"], "references": ["none", "has a person watching on himself.", "is being watched."], "input": {"head": "PersonX watches PersonY", "relation": "oEffect", "prompt": "PersonX watches PersonY. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX breaks the news", "relation": "oEffect", "prompt": "PersonX breaks the news. The effect on others will be"}}
{"generation": ["the same"], "references": ["somebody continues dating PersonX", "none", "someone will feel very warm and happy."], "input": {"head": "PersonX dates for years", "relation": "oEffect", "prompt": "PersonX dates for years. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX pulls PersonX's socks up", "relation": "oEffect", "prompt": "PersonX pulls PersonX's socks up. The effect on others will be"}}
{"generation": ["the same as if the person had been the sole"], "references": ["none"], "input": {"head": "PersonX shares the ___ equally", "relation": "oEffect", "prompt": "PersonX shares the ___ equally. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX calls an ambulance", "relation": "oEffect", "prompt": "PersonX calls an ambulance. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX plays many sports", "relation": "oEffect", "prompt": "PersonX plays many sports. The effect on others will be"}}
{"generation": ["the same"], "references": ["forgive", "become disappointed in PersonY"], "input": {"head": "PersonX feels ashamed", "relation": "oEffect", "prompt": "PersonX feels ashamed. The effect on others will be"}}
{"generation": ["the same as if you were to make a salad"], "references": ["none"], "input": {"head": "PersonX makes a salad", "relation": "oEffect", "prompt": "PersonX makes a salad. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX chews the cud", "relation": "oEffect", "prompt": "PersonX chews the cud. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX sees all the animals", "relation": "oEffect", "prompt": "PersonX sees all the animals. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX makes bread", "relation": "oEffect", "prompt": "PersonX makes bread. The effect on others will be"}}
{"generation": ["the same as if you had used the ___"], "references": ["none"], "input": {"head": "PersonX links together the ___", "relation": "oEffect", "prompt": "PersonX links together the ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["Begins reading again", "Listens to PersonX", "accepts the apology", "hugs PersonX", "none"], "input": {"head": "PersonX lets PersonY explain", "relation": "oEffect", "prompt": "PersonX lets PersonY explain. The effect on others will be"}}
{"generation": ["the same as if they were playing for PersonX"], "references": ["none"], "input": {"head": "PersonX plays for PersonX", "relation": "oEffect", "prompt": "PersonX plays for PersonX. The effect on others will be"}}
{"generation": ["the same"], "references": ["TO AVODI IT", "work on communication skills", "learn something new", "none", "GET A NEW THING"], "input": {"head": "PersonX holds PersonY's attention", "relation": "oEffect", "prompt": "PersonX holds PersonY's attention. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX tries to relax", "relation": "oEffect", "prompt": "PersonX tries to relax. The effect on others will be"}}
{"generation": ["the same as if PersonX had set PersonX"], "references": ["none"], "input": {"head": "PersonX sets PersonX's cap at ___", "relation": "oEffect", "prompt": "PersonX sets PersonX's cap at ___. The effect on others will be"}}
{"generation": ["the same"], "references": ["they teach others", "none", "they learn from him"], "input": {"head": "PersonX puts the ___ together", "relation": "oEffect", "prompt": "PersonX puts the ___ together. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX never been on one", "relation": "oEffect", "prompt": "PersonX never been on one. The effect on others will be"}}
{"generation": ["the same as the effect on the original PersonX"], "references": ["none"], "input": {"head": "PersonX turns PersonX's ___ elsewhere", "relation": "oEffect", "prompt": "PersonX turns PersonX's ___ elsewhere. The effect on others will be"}}
{"generation": ["___"], "references": ["none"], "input": {"head": "PersonX spends a ___ working", "relation": "oEffect", "prompt": "PersonX spends a ___ working. The effect on others will be"}}
{"generation": ["the same as if the player had accepted the offer"], "references": ["none"], "input": {"head": "PersonX takes the offer", "relation": "oEffect", "prompt": "PersonX takes the offer. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX throws the book", "relation": "oEffect", "prompt": "PersonX throws the book. The effect on others will be"}}
{"generation": ["the same as if they were the one who did"], "references": ["makes a friend", "they are confused", "they are shocked", "none", "shakes hands"], "input": {"head": "PersonX goes to PersonY", "relation": "oEffect", "prompt": "PersonX goes to PersonY. The effect on others will be"}}
{"generation": ["the same"], "references": ["forgives them", "none", "understands"], "input": {"head": "PersonX gets nervous", "relation": "oEffect", "prompt": "PersonX gets nervous. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX can not believe PersonX's eyes", "relation": "oEffect", "prompt": "PersonX can not believe PersonX's eyes. The effect on others will be"}}
{"generation": ["the same as if you were to start working out"], "references": ["none"], "input": {"head": "PersonX starts working out", "relation": "oEffect", "prompt": "PersonX starts working out. The effect on others will be"}}
{"generation": ["the same"], "references": ["they look for one for themselves", "they like it"], "input": {"head": "PersonX finds a good one", "relation": "oEffect", "prompt": "PersonX finds a good one. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX fails to even go platinum", "relation": "oEffect", "prompt": "PersonX fails to even go platinum. The effect on others will be"}}
{"generation": ["the same as if PersonX had answered"], "references": ["gets answer", "none", "gives thanks"], "input": {"head": "PersonX seeks PersonY answer", "relation": "oEffect", "prompt": "PersonX seeks PersonY answer. The effect on others will be"}}
{"generation": ["different"], "references": ["none"], "input": {"head": "PersonX scratches the surface", "relation": "oEffect", "prompt": "PersonX scratches the surface. The effect on others will be"}}
{"generation": ["the same as if PersonX had been a different"], "references": ["none"], "input": {"head": "PersonX increases PersonX's ___ at the expense", "relation": "oEffect", "prompt": "PersonX increases PersonX's ___ at the expense. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX sees wood", "relation": "oEffect", "prompt": "PersonX sees wood. The effect on others will be"}}
{"generation": ["the same as if the player had put on the"], "references": ["is nice", "none", "lends the hat"], "input": {"head": "PersonX puts on PersonY's hat", "relation": "oEffect", "prompt": "PersonX puts on PersonY's hat. The effect on others will be"}}
{"generation": ["the same as if PersonX had not been created"], "references": ["none"], "input": {"head": "PersonX fails PersonX's classes", "relation": "oEffect", "prompt": "PersonX fails PersonX's classes. The effect on others will be"}}
{"generation": ["the same as if PersonX had been the one"], "references": ["stamps their foot", "yells", "is thanked by personX", "fumes", "hopes they like it"], "input": {"head": "PersonX gets PersonY's share", "relation": "oEffect", "prompt": "PersonX gets PersonY's share. The effect on others will be"}}
{"generation": ["the same as if you had said, \"I"], "references": ["none"], "input": {"head": "PersonX sees ___ on the street", "relation": "oEffect", "prompt": "PersonX sees ___ on the street. The effect on others will be"}}
{"generation": ["the same"], "references": ["has a new friend", "none", "receive help"], "input": {"head": "PersonX matters to PersonY", "relation": "oEffect", "prompt": "PersonX matters to PersonY. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX takes ___ in stride", "relation": "oEffect", "prompt": "PersonX takes ___ in stride. The effect on others will be"}}
{"generation": ["the same as if PersonX had walked behind Person"], "references": ["chases PersonX", "yells in fright", "yells", "walks faster", "none"], "input": {"head": "PersonX walks behind PersonY", "relation": "oEffect", "prompt": "PersonX walks behind PersonY. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX wants to wear", "relation": "oEffect", "prompt": "PersonX wants to wear. The effect on others will be"}}
{"generation": ["the same as the effect on the person who is"], "references": ["smiles in satisfaction", "is thanked", "none"], "input": {"head": "PersonX is PersonY's maid of honor", "relation": "oEffect", "prompt": "PersonX is PersonY's maid of honor. The effect on others will be"}}
{"generation": ["the same"], "references": ["none"], "input": {"head": "PersonX keeps ___ at bay", "relation": "oEffect", "prompt": "PersonX keeps ___ at bay. The effect on others will be"}}
{"generation": ["that they will think you are a sandal-"], "references": ["none"], "input": {"head": "PersonX wears sandals", "relation": "oEffect", "prompt": "PersonX wears sandals. The effect on others will be"}}
{"generation": ["the same as the effect on the person"], "references": ["PersonY is better understood", "none", "PersonY is evaluated"], "input": {"head": "PersonX conducts PersonY analysis", "relation": "oEffect", "prompt": "PersonX conducts PersonY analysis. The effect on others will be"}}
{"generation": ["the same"], "references": ["will be late for their own agenda", "they are inconvenienced", "have to hold up a meeting", "none", "they lose time waiting"], "input": {"head": "PersonX is twenty minutes late", "relation": "oEffect", "prompt": "PersonX is twenty minutes late. The effect on others will be"}}
{"generation": ["the same as if PersonX had touched PersonY"], "references": ["expresses annoyance", "looks back", "exclaims in surprise", "jumps back", "cuddles", "is comfortable"], "input": {"head": "PersonX reaches behind PersonY", "relation": "oEffect", "prompt": "PersonX reaches behind PersonY. The effect on others will be"}}
{"generation": ["that they are not as good as they could be"], "references": ["unhappy", "none"], "input": {"head": "PersonX faces ___ today", "relation": "oReact", "prompt": "PersonX faces ___ today. As a result, others feel"}}
{"generation": ["more confident in their own abilities"], "references": ["none"], "input": {"head": "PersonX builds muscle", "relation": "oReact", "prompt": "PersonX builds muscle. As a result, others feel"}}
{"generation": ["uncomfortable and uncomfortable"], "references": ["none"], "input": {"head": "PersonX uses the restroom", "relation": "oReact", "prompt": "PersonX uses the restroom. As a result, others feel"}}
{"generation": ["compelled to come"], "references": ["happy to see x", "happy that x wants them"], "input": {"head": "PersonX wants PersonY to come", "relation": "oReact", "prompt": "PersonX wants PersonY to come. As a result, others feel"}}
{"generation": ["that they are being judged"], "references": ["happy", "curious", "loved", "informed", "interested"], "input": {"head": "PersonX sends a letter", "relation": "oReact", "prompt": "PersonX sends a letter. As a result, others feel"}}
{"generation": ["uncomfortable around them"], "references": ["scared", "surprised", "fearful", "stupid"], "input": {"head": "PersonX shakes the ___ to PersonY's foundations", "relation": "oReact", "prompt": "PersonX shakes the ___ to PersonY's foundations. As a result, others feel"}}
{"generation": ["compelled to help PersonY"], "references": ["mad.", "person y will feel mad.", "trapped", "foiled"], "input": {"head": "PersonX prevents PersonY's escape", "relation": "oReact", "prompt": "PersonX prevents PersonY's escape. As a result, others feel"}}
{"generation": ["that PersonX is a better choice"], "references": ["none"], "input": {"head": "PersonX meets PersonX's standards", "relation": "oReact", "prompt": "PersonX meets PersonX's standards. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["happy", "none", "very happy"], "input": {"head": "PersonX can n't believe PersonY's luck", "relation": "oReact", "prompt": "PersonX can n't believe PersonY's luck. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["confused and angry", "none"], "input": {"head": "PersonX changes ___ quickly", "relation": "oReact", "prompt": "PersonX changes ___ quickly. As a result, others feel"}}
{"generation": ["more comfortable with him"], "references": ["none"], "input": {"head": "PersonX becomes smarter", "relation": "oReact", "prompt": "PersonX becomes smarter. As a result, others feel"}}
{"generation": ["that PersonY is responsible for the death of Person"], "references": ["scared", "awful"], "input": {"head": "PersonX is found dead morning at PersonY's home in", "relation": "oReact", "prompt": "PersonX is found dead morning at PersonY's home in. As a result, others feel"}}
{"generation": ["hat they are being treated unfairly"], "references": ["appreciative", "well tended to", "cared for."], "input": {"head": "PersonX meets PersonY's customers ' ___", "relation": "oReact", "prompt": "PersonX meets PersonY's customers ' ___. As a result, others feel"}}
{"generation": ["threatened by his presence"], "references": ["none"], "input": {"head": "PersonX likes to fish", "relation": "oReact", "prompt": "PersonX likes to fish. As a result, others feel"}}
{"generation": ["uncomfortable"], "references": ["happy", "none"], "input": {"head": "PersonX talks on PersonX's phone", "relation": "oReact", "prompt": "PersonX talks on PersonX's phone. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX forms PersonY opinion as", "relation": "oReact", "prompt": "PersonX forms PersonY opinion as. As a result, others feel"}}
{"generation": ["that PersonX is more trustworthy than PersonY"], "references": ["good", "none"], "input": {"head": "PersonX conveys PersonY impression", "relation": "oReact", "prompt": "PersonX conveys PersonY impression. As a result, others feel"}}
{"generation": ["that PersonX is more important than PersonY"], "references": ["named", "curious", "bad if it's a negative name.", "good if it's a good name.", "confused"], "input": {"head": "PersonX gives PersonY name", "relation": "oReact", "prompt": "PersonX gives PersonY name. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["friendly", "thankful", "appreciated", "grateful"], "input": {"head": "PersonX makes PersonY a present", "relation": "oReact", "prompt": "PersonX makes PersonY a present. As a result, others feel"}}
{"generation": ["that they have to do the same"], "references": ["happy", "helped"], "input": {"head": "PersonX sends ___ home", "relation": "oReact", "prompt": "PersonX sends ___ home. As a result, others feel"}}
{"generation": ["that the game is not as good as it could"], "references": ["humorous", "worried", "none", "worry"], "input": {"head": "PersonX quickly fell", "relation": "oReact", "prompt": "PersonX quickly fell. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX puts bread in the toaster", "relation": "oReact", "prompt": "PersonX puts bread in the toaster. As a result, others feel"}}
{"generation": ["that the game is a bit too easy"], "references": ["annoyed that x didn't get there sooner"], "input": {"head": "PersonX finally got back", "relation": "oReact", "prompt": "PersonX finally got back. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX has a fear of heights", "relation": "oReact", "prompt": "PersonX has a fear of heights. As a result, others feel"}}
{"generation": ["that the game is a bit too easy"], "references": ["understanding"], "input": {"head": "PersonX makes perfect sense", "relation": "oReact", "prompt": "PersonX makes perfect sense. As a result, others feel"}}
{"generation": ["that PersonX is a bad person"], "references": ["none", "unsure about purchasing the object"], "input": {"head": "PersonX begs PersonX's parents for one", "relation": "oReact", "prompt": "PersonX begs PersonX's parents for one. As a result, others feel"}}
{"generation": ["that PersonX is a threat to PersonY"], "references": ["happy", "none", "surprised"], "input": {"head": "PersonX finds PersonY at home", "relation": "oReact", "prompt": "PersonX finds PersonY at home. As a result, others feel"}}
{"generation": ["more comfortable talking to the PersonX"], "references": ["happy", "none", "surprised", "satisfied"], "input": {"head": "PersonX gives the ___ PersonY's name", "relation": "oReact", "prompt": "PersonX gives the ___ PersonY's name. As a result, others feel"}}
{"generation": ["that PersonX is a bad person"], "references": ["happy.", "sadness", "contempt"], "input": {"head": "PersonX buys PersonX's wife ___", "relation": "oReact", "prompt": "PersonX buys PersonX's wife ___. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["happy", "also curious", "surprised to see personx"], "input": {"head": "PersonX enters PersonY's office", "relation": "oReact", "prompt": "PersonX enters PersonY's office. As a result, others feel"}}
{"generation": ["that they are being judged by the person they are"], "references": ["none", "thankful."], "input": {"head": "PersonX arches PersonY's back", "relation": "oReact", "prompt": "PersonX arches PersonY's back. As a result, others feel"}}
{"generation": ["the need to take action"], "references": ["none"], "input": {"head": "PersonX falls into the wrong hands", "relation": "oReact", "prompt": "PersonX falls into the wrong hands. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["unhappy,hurt,disturbed"], "input": {"head": "PersonX is someone else 's ___", "relation": "oReact", "prompt": "PersonX is someone else 's ___. As a result, others feel"}}
{"generation": ["that they are not welcome in the community"], "references": ["sociable", "friendly", "none", "thankful"], "input": {"head": "PersonX visits ___ every day", "relation": "oReact", "prompt": "PersonX visits ___ every day. As a result, others feel"}}
{"generation": ["the need to step up and fill the void"], "references": ["irritated", "none"], "input": {"head": "PersonX sees an opening", "relation": "oReact", "prompt": "PersonX sees an opening. As a result, others feel"}}
{"generation": ["more comfortable coming to the site"], "references": ["none", "enlightened"], "input": {"head": "PersonX opens PersonX's doors", "relation": "oReact", "prompt": "PersonX opens PersonX's doors. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["powerful", "important and powerful", "satisfied"], "input": {"head": "PersonX licks PersonY's balls", "relation": "oReact", "prompt": "PersonX licks PersonY's balls. As a result, others feel"}}
{"generation": ["that they are being treated as a second class citizen"], "references": ["happy.", "none"], "input": {"head": "PersonX puts it together", "relation": "oReact", "prompt": "PersonX puts it together. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["good", "none", "happy to receive letter"], "input": {"head": "PersonX sends PersonY a letter", "relation": "oReact", "prompt": "PersonX sends PersonY a letter. As a result, others feel"}}
{"generation": ["that they are not getting the care they need"], "references": ["sad", "none"], "input": {"head": "PersonX diagnoses with the flu", "relation": "oReact", "prompt": "PersonX diagnoses with the flu. As a result, others feel"}}
{"generation": ["the need to step in and fill the void"], "references": ["none", "disgusted"], "input": {"head": "PersonX starts to sink", "relation": "oReact", "prompt": "PersonX starts to sink. As a result, others feel"}}
{"generation": ["that they are not being taken seriously"], "references": ["none"], "input": {"head": "PersonX takes ___ daily", "relation": "oReact", "prompt": "PersonX takes ___ daily. As a result, others feel"}}
{"generation": ["that they are being taken advantage of"], "references": ["happy", "none", "excited", "grateful"], "input": {"head": "PersonX gets a small loan", "relation": "oReact", "prompt": "PersonX gets a small loan. As a result, others feel"}}
{"generation": ["that PersonX is a liar"], "references": ["none"], "input": {"head": "PersonX can not believe PersonX's eyes", "relation": "oReact", "prompt": "PersonX can not believe PersonX's eyes. As a result, others feel"}}
{"generation": ["threatened and are afraid to speak up"], "references": ["none"], "input": {"head": "PersonX joins ___ for the protection", "relation": "oReact", "prompt": "PersonX joins ___ for the protection. As a result, others feel"}}
{"generation": ["that he is a bit of a bully"], "references": ["none"], "input": {"head": "PersonX eats quickly", "relation": "oReact", "prompt": "PersonX eats quickly. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["real bad"], "input": {"head": "PersonX puts upon PersonY", "relation": "oReact", "prompt": "PersonX puts upon PersonY. As a result, others feel"}}
{"generation": ["threatened"], "references": ["none"], "input": {"head": "PersonX takes a hike in the woods", "relation": "oReact", "prompt": "PersonX takes a hike in the woods. As a result, others feel"}}
{"generation": ["that the person is not the same person as the"], "references": ["relieved that the bleeding has stopped"], "input": {"head": "PersonX wraps PersonY's hand", "relation": "oReact", "prompt": "PersonX wraps PersonY's hand. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["happy.", "informed"], "input": {"head": "PersonX calls PersonY the next day", "relation": "oReact", "prompt": "PersonX calls PersonY the next day. As a result, others feel"}}
{"generation": ["that they are not as important as they should be"], "references": ["happy and satisfied", "happy that x wanted to meet their other friends."], "input": {"head": "PersonX meets PersonY's friends", "relation": "oReact", "prompt": "PersonX meets PersonY's friends. As a result, others feel"}}
{"generation": ["that they are not as good as they could be"], "references": ["none"], "input": {"head": "PersonX gets ___ right away", "relation": "oReact", "prompt": "PersonX gets ___ right away. As a result, others feel"}}
{"generation": ["happy as well"], "references": ["none"], "input": {"head": "PersonX becomes very happy", "relation": "oReact", "prompt": "PersonX becomes very happy. As a result, others feel"}}
{"generation": ["more comfortable with the idea of helping PersonX"], "references": ["thankful", "relieved", "grateful"], "input": {"head": "PersonX gives PersonY help", "relation": "oReact", "prompt": "PersonX gives PersonY help. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none"], "input": {"head": "PersonX makes bread", "relation": "oReact", "prompt": "PersonX makes bread. As a result, others feel"}}
{"generation": ["uncomfortable"], "references": ["none", "concerned"], "input": {"head": "PersonX reaches behind PersonY", "relation": "oReact", "prompt": "PersonX reaches behind PersonY. As a result, others feel"}}
{"generation": ["the need to defend the honor of the man"], "references": ["sad", "informed", "interested"], "input": {"head": "PersonX breaks the news", "relation": "oReact", "prompt": "PersonX breaks the news. As a result, others feel"}}
{"generation": ["that PersonX is a bit of a jerk"], "references": ["none"], "input": {"head": "PersonX keeps PersonX's fingers crossed", "relation": "oReact", "prompt": "PersonX keeps PersonX's fingers crossed. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["relieved."], "input": {"head": "PersonX looks the other way", "relation": "oReact", "prompt": "PersonX looks the other way. As a result, others feel"}}
{"generation": ["that they are not welcome at the dinner"], "references": ["fulfilled", "happy.", "none"], "input": {"head": "PersonX makes thanksgiving dinner", "relation": "oReact", "prompt": "PersonX makes thanksgiving dinner. As a result, others feel"}}
{"generation": ["compelled to meet him"], "references": ["happy", "liked", "excited"], "input": {"head": "PersonX meets someone", "relation": "oReact", "prompt": "PersonX meets someone. As a result, others feel"}}
{"generation": ["that the car is not as safe as it could"], "references": ["moved", "either pulled away from something bad", "none"], "input": {"head": "PersonX pulls the car", "relation": "oReact", "prompt": "PersonX pulls the car. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX gets on PersonX's feet", "relation": "oReact", "prompt": "PersonX gets on PersonX's feet. As a result, others feel"}}
{"generation": ["that the ingredients are not enough"], "references": ["none"], "input": {"head": "PersonX gathers all the ingredients", "relation": "oReact", "prompt": "PersonX gathers all the ingredients. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX takes matters", "relation": "oReact", "prompt": "PersonX takes matters. As a result, others feel"}}
{"generation": ["compelled to pay taxes to support the government"], "references": ["none"], "input": {"head": "PersonX pays ___ to the government", "relation": "oReact", "prompt": "PersonX pays ___ to the government. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["empowered", "elation", "backed up"], "input": {"head": "PersonX sticks with PersonY", "relation": "oReact", "prompt": "PersonX sticks with PersonY. As a result, others feel"}}
{"generation": ["compelled to do the same"], "references": ["unhappy about their loss of reputation.", "none"], "input": {"head": "PersonX brings the ___ into disrepute", "relation": "oReact", "prompt": "PersonX brings the ___ into disrepute. As a result, others feel"}}
{"generation": ["the heat"], "references": ["powerful", "none"], "input": {"head": "PersonX feels the heat", "relation": "oReact", "prompt": "PersonX feels the heat. As a result, others feel"}}
{"generation": ["compelled to help"], "references": ["angry and betrayed", "happy", "thankful", "grateful for the change."], "input": {"head": "PersonX changes PersonY's lives", "relation": "oReact", "prompt": "PersonX changes PersonY's lives. As a result, others feel"}}
{"generation": ["that he is an idiot"], "references": ["none"], "input": {"head": "PersonX looks like an idiot", "relation": "oReact", "prompt": "PersonX looks like an idiot. As a result, others feel"}}
{"generation": ["___ PersonX is a good person"], "references": ["none"], "input": {"head": "PersonX recalls ___ PersonY be made", "relation": "oReact", "prompt": "PersonX recalls ___ PersonY be made. As a result, others feel"}}
{"generation": ["that they are being watched"], "references": ["none"], "input": {"head": "PersonX is walking down the street", "relation": "oReact", "prompt": "PersonX is walking down the street. As a result, others feel"}}
{"generation": ["more comfortable around him"], "references": ["great", "grateful"], "input": {"head": "PersonX turns PersonY's life around", "relation": "oReact", "prompt": "PersonX turns PersonY's life around. As a result, others feel"}}
{"generation": ["that they are being cheated"], "references": ["sad.", "bad", "confused.", "hurt."], "input": {"head": "PersonX commits ___ by jumping", "relation": "oReact", "prompt": "PersonX commits ___ by jumping. As a result, others feel"}}
{"generation": ["comfortable to approach him"], "references": ["thankful for the patience", "none"], "input": {"head": "PersonX sits patiently", "relation": "oReact", "prompt": "PersonX sits patiently. As a result, others feel"}}
{"generation": ["that PersonX is a threat to them"], "references": ["clumsy", "sorry", "none", "hurt"], "input": {"head": "PersonX lands on PersonX's leg", "relation": "oReact", "prompt": "PersonX lands on PersonX's leg. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["none"], "input": {"head": "PersonX can n't believe PersonX's luck", "relation": "oReact", "prompt": "PersonX can n't believe PersonX's luck. As a result, others feel"}}
{"generation": ["compelled to join in"], "references": ["good to get to know person x"], "input": {"head": "PersonX looks like fun", "relation": "oReact", "prompt": "PersonX looks like fun. As a result, others feel"}}
{"generation": ["___"], "references": ["betrayed", "surprised", "nervous", "excited"], "input": {"head": "PersonX tells ___ PersonY had a surprise", "relation": "oReact", "prompt": "PersonX tells ___ PersonY had a surprise. As a result, others feel"}}
{"generation": ["that he is a bit of a jerk"], "references": ["none"], "input": {"head": "PersonX thinks a lot", "relation": "oReact", "prompt": "PersonX thinks a lot. As a result, others feel"}}
{"generation": ["uncomfortable around the ___"], "references": ["none", "free"], "input": {"head": "PersonX leaves the ___ alone", "relation": "oReact", "prompt": "PersonX leaves the ___ alone. As a result, others feel"}}
{"generation": ["that they owe PersonX"], "references": ["anxious", "helpful"], "input": {"head": "PersonX owes PersonY", "relation": "oReact", "prompt": "PersonX owes PersonY. As a result, others feel"}}
{"generation": ["like they have to defend him"], "references": ["none"], "input": {"head": "PersonX hurts like hell", "relation": "oReact", "prompt": "PersonX hurts like hell. As a result, others feel"}}
{"generation": ["uncomfortable"], "references": ["none"], "input": {"head": "PersonX decides to read a book", "relation": "oReact", "prompt": "PersonX decides to read a book. As a result, others feel"}}
{"generation": ["that PersonY is a good person"], "references": ["happy", "proud"], "input": {"head": "PersonX congratulates PersonY", "relation": "oReact", "prompt": "PersonX congratulates PersonY. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none"], "input": {"head": "PersonX finds every ___", "relation": "oReact", "prompt": "PersonX finds every ___. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["excited that personx is coming home", "none"], "input": {"head": "PersonX makes a turn", "relation": "oReact", "prompt": "PersonX makes a turn. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX gets dressed for school", "relation": "oReact", "prompt": "PersonX gets dressed for school. As a result, others feel"}}
{"generation": ["that they have to do it"], "references": ["none"], "input": {"head": "PersonX does n't want to waste it", "relation": "oReact", "prompt": "PersonX does n't want to waste it. As a result, others feel"}}
{"generation": ["that PersonX is a bad person"], "references": ["happy and satisfied", "broke", "helpful"], "input": {"head": "PersonX asks PersonY for money", "relation": "oReact", "prompt": "PersonX asks PersonY for money. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["none", "clean"], "input": {"head": "PersonX wipes PersonY's hands", "relation": "oReact", "prompt": "PersonX wipes PersonY's hands. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX lives next door", "relation": "oReact", "prompt": "PersonX lives next door. As a result, others feel"}}
{"generation": ["less pressure to conform to the norms of their gender"], "references": ["pleased", "thankful", "grateful"], "input": {"head": "PersonX gives PersonY relief", "relation": "oReact", "prompt": "PersonX gives PersonY relief. As a result, others feel"}}
{"generation": ["that PersonX is a little bit more important than"], "references": ["none"], "input": {"head": "PersonX asks PersonY's little brother", "relation": "oReact", "prompt": "PersonX asks PersonY's little brother. As a result, others feel"}}
{"generation": ["compelled to help"], "references": ["motivated", "none", "jealous", "proud"], "input": {"head": "PersonX changes PersonX's lives", "relation": "oReact", "prompt": "PersonX changes PersonX's lives. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none"], "input": {"head": "PersonX leaves ___ on the table", "relation": "oReact", "prompt": "PersonX leaves ___ on the table. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none", "proud"], "input": {"head": "PersonX runs for class president", "relation": "oReact", "prompt": "PersonX runs for class president. As a result, others feel"}}
{"generation": ["that the game is too easy"], "references": ["happy", "none"], "input": {"head": "PersonX comes again", "relation": "oReact", "prompt": "PersonX comes again. As a result, others feel"}}
{"generation": ["compelled to join the party"], "references": ["sad", "bored", "none", "content"], "input": {"head": "PersonX feels better than ever", "relation": "oReact", "prompt": "PersonX feels better than ever. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["bad", "like a cared for employee", "angry", "annoyed"], "input": {"head": "PersonX sends PersonY home", "relation": "oReact", "prompt": "PersonX sends PersonY home. As a result, others feel"}}
{"generation": ["that the game is not as good as it could"], "references": ["controlling", "powerful", "happy", "none"], "input": {"head": "PersonX falls in line", "relation": "oReact", "prompt": "PersonX falls in line. As a result, others feel"}}
{"generation": ["that PersonX is a better choice"], "references": ["none", "enlightened"], "input": {"head": "PersonX consolidates PersonX's position", "relation": "oReact", "prompt": "PersonX consolidates PersonX's position. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none", "bonded."], "input": {"head": "PersonX puts PersonX's head in the sand", "relation": "oReact", "prompt": "PersonX puts PersonX's head in the sand. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["sociable"], "input": {"head": "PersonX becomes PersonY member", "relation": "oReact", "prompt": "PersonX becomes PersonY member. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["needed", "none", "influential"], "input": {"head": "PersonX receives ___ based", "relation": "oReact", "prompt": "PersonX receives ___ based. As a result, others feel"}}
{"generation": ["that they have to do things that are not in"], "references": ["none"], "input": {"head": "PersonX does not have a lot of money", "relation": "oReact", "prompt": "PersonX does not have a lot of money. As a result, others feel"}}
{"generation": ["___"], "references": ["none"], "input": {"head": "PersonX enjoys ___ that night", "relation": "oReact", "prompt": "PersonX enjoys ___ that night. As a result, others feel"}}
{"generation": ["that he is a bit cold"], "references": ["none"], "input": {"head": "PersonX wears gloves", "relation": "oReact", "prompt": "PersonX wears gloves. As a result, others feel"}}
{"generation": ["that they have to be more than just a friend"], "references": ["none", "inquisitive"], "input": {"head": "PersonX has an important job interview", "relation": "oReact", "prompt": "PersonX has an important job interview. As a result, others feel"}}
{"generation": ["free to add their own"], "references": ["gratified", "appreciated", "glad to have helped x"], "input": {"head": "PersonX thanks ___ for comments", "relation": "oReact", "prompt": "PersonX thanks ___ for comments. As a result, others feel"}}
{"generation": ["less comfortable around him"], "references": ["none"], "input": {"head": "PersonX loses 100 pounds", "relation": "oReact", "prompt": "PersonX loses 100 pounds. As a result, others feel"}}
{"generation": ["that they are not welcome in the community"], "references": ["good about x coming to see them", "none"], "input": {"head": "PersonX finds ___ anywhere", "relation": "oReact", "prompt": "PersonX finds ___ anywhere. As a result, others feel"}}
{"generation": ["compelled to ride PersonX's bike"], "references": ["joyful", "happy to help person x", "happy to be useful to person x"], "input": {"head": "PersonX loves riding PersonY's bike", "relation": "oReact", "prompt": "PersonX loves riding PersonY's bike. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["frustrated", "competitive", "determined as well"], "input": {"head": "PersonX studies as much as PersonY could", "relation": "oReact", "prompt": "PersonX studies as much as PersonY could. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none"], "input": {"head": "PersonX gets the shoes", "relation": "oReact", "prompt": "PersonX gets the shoes. As a result, others feel"}}
{"generation": ["that PersonX is a better candidate for the job"], "references": ["none"], "input": {"head": "PersonX passes PersonX's exam", "relation": "oReact", "prompt": "PersonX passes PersonX's exam. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX renews PersonX's driver 's license", "relation": "oReact", "prompt": "PersonX renews PersonX's driver 's license. As a result, others feel"}}
{"generation": ["that he is a \"bad guy\" and that"], "references": ["happy"], "input": {"head": "PersonX dates a girl", "relation": "oReact", "prompt": "PersonX dates a girl. As a result, others feel"}}
{"generation": ["that they are being exploited"], "references": ["none"], "input": {"head": "PersonX gets a second job", "relation": "oReact", "prompt": "PersonX gets a second job. As a result, others feel"}}
{"generation": ["that they are being lied to"], "references": ["none"], "input": {"head": "PersonX smells something foul", "relation": "oReact", "prompt": "PersonX smells something foul. As a result, others feel"}}
{"generation": ["that the game is not as good as it could"], "references": ["none"], "input": {"head": "PersonX is able to fix it", "relation": "oReact", "prompt": "PersonX is able to fix it. As a result, others feel"}}
{"generation": ["that they are being judged by the person they are"], "references": ["good", "embarassed", "better", "cared for"], "input": {"head": "PersonX cleans PersonY", "relation": "oReact", "prompt": "PersonX cleans PersonY. As a result, others feel"}}
{"generation": ["uncomfortable"], "references": ["none", "glad to have bread"], "input": {"head": "PersonX stops at a store", "relation": "oReact", "prompt": "PersonX stops at a store. As a result, others feel"}}
{"generation": ["that they are not allowed to do the same"], "references": ["none"], "input": {"head": "PersonX puts ___ in a box", "relation": "oReact", "prompt": "PersonX puts ___ in a box. As a result, others feel"}}
{"generation": ["compelled to pay attention to PersonX"], "references": ["annoyed at personx", "annoyed", "scared"], "input": {"head": "PersonX demands PersonY's attention", "relation": "oReact", "prompt": "PersonX demands PersonY's attention. As a result, others feel"}}
{"generation": ["that they are being left behind"], "references": ["happy", "none", "relieved"], "input": {"head": "PersonX takes a new job", "relation": "oReact", "prompt": "PersonX takes a new job. As a result, others feel"}}
{"generation": ["that he is a doctor"], "references": ["none", "they feel grateful, thankful"], "input": {"head": "PersonX becomes a doctor", "relation": "oReact", "prompt": "PersonX becomes a doctor. As a result, others feel"}}
{"generation": ["uncomfortable around them"], "references": ["happy", "connected", "engaged", "full", "satisfied"], "input": {"head": "PersonX meets PersonY for lunch", "relation": "oReact", "prompt": "PersonX meets PersonY for lunch. As a result, others feel"}}
{"generation": ["that they are being judged by the same standards as"], "references": ["none"], "input": {"head": "PersonX makes that mistake again", "relation": "oReact", "prompt": "PersonX makes that mistake again. As a result, others feel"}}
{"generation": ["that PersonX is a more important person than Person"], "references": ["satisfied because they saw what they were curious about"], "input": {"head": "PersonX cranes PersonY's neck", "relation": "oReact", "prompt": "PersonX cranes PersonY's neck. As a result, others feel"}}
{"generation": ["that the game is too short"], "references": ["none"], "input": {"head": "PersonX drives all the way back", "relation": "oReact", "prompt": "PersonX drives all the way back. As a result, others feel"}}
{"generation": ["that PersonX is a bad person"], "references": ["adored", "none", "loved"], "input": {"head": "PersonX calls PersonX's son", "relation": "oReact", "prompt": "PersonX calls PersonX's son. As a result, others feel"}}
{"generation": ["that PersonY is a better person than PersonX"], "references": ["curious", "none"], "input": {"head": "PersonX finally meet PersonY", "relation": "oReact", "prompt": "PersonX finally meet PersonY. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none"], "input": {"head": "PersonX spends the summer", "relation": "oReact", "prompt": "PersonX spends the summer. As a result, others feel"}}
{"generation": ["the need to protect him"], "references": ["none"], "input": {"head": "PersonX gets hurt", "relation": "oReact", "prompt": "PersonX gets hurt. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["confused", "none", "frustrated"], "input": {"head": "PersonX leaves the table", "relation": "oReact", "prompt": "PersonX leaves the table. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX takes a ride to tyburn", "relation": "oReact", "prompt": "PersonX takes a ride to tyburn. As a result, others feel"}}
{"generation": ["___"], "references": ["hurt, fearful & disquieted.", "awful"], "input": {"head": "PersonX inflicts ___ on others", "relation": "oReact", "prompt": "PersonX inflicts ___ on others. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none"], "input": {"head": "PersonX shaves every ___", "relation": "oReact", "prompt": "PersonX shaves every ___. As a result, others feel"}}
{"generation": ["that PersonX is a scam"], "references": ["none"], "input": {"head": "PersonX earns PersonX's own money", "relation": "oReact", "prompt": "PersonX earns PersonX's own money. As a result, others feel"}}
{"generation": ["more comfortable with him"], "references": ["secure", "none"], "input": {"head": "PersonX earns more money", "relation": "oReact", "prompt": "PersonX earns more money. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none"], "input": {"head": "PersonX sifts out ___", "relation": "oReact", "prompt": "PersonX sifts out ___. As a result, others feel"}}
{"generation": ["the need to take action"], "references": ["frustrated", "irritated", "none", "upset"], "input": {"head": "PersonX becomes frustrated", "relation": "oReact", "prompt": "PersonX becomes frustrated. As a result, others feel"}}
{"generation": ["more comfortable using PersonX"], "references": ["none"], "input": {"head": "PersonX broadens PersonX's ___ to include", "relation": "oReact", "prompt": "PersonX broadens PersonX's ___ to include. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none", "astonished", "impressed"], "input": {"head": "PersonX practices all day", "relation": "oReact", "prompt": "PersonX practices all day. As a result, others feel"}}
{"generation": ["that the game is a bit too easy"], "references": ["none"], "input": {"head": "PersonX desperately needed", "relation": "oReact", "prompt": "PersonX desperately needed. As a result, others feel"}}
{"generation": ["that they are being treated as a second class citizen"], "references": ["none"], "input": {"head": "PersonX drives on the highway", "relation": "oReact", "prompt": "PersonX drives on the highway. As a result, others feel"}}
{"generation": ["more comfortable with the idea of being a part of"], "references": ["none"], "input": {"head": "PersonX gets PersonX's juices flowing", "relation": "oReact", "prompt": "PersonX gets PersonX's juices flowing. As a result, others feel"}}
{"generation": ["compelled to buy the same product at a lower price"], "references": ["happy"], "input": {"head": "PersonX purchases ___ at a price", "relation": "oReact", "prompt": "PersonX purchases ___ at a price. As a result, others feel"}}
{"generation": ["that they are being judged by the person they are"], "references": ["like their personal space is invaded.", "nan", "aroused"], "input": {"head": "PersonX reaches around PersonY", "relation": "oReact", "prompt": "PersonX reaches around PersonY. As a result, others feel"}}
{"generation": ["that PersonX is a friend of PersonY"], "references": ["sociable", "happy and socially-active.", "liked", "happy, thankful"], "input": {"head": "PersonX visits PersonY's friend", "relation": "oReact", "prompt": "PersonX visits PersonY's friend. As a result, others feel"}}
{"generation": ["that they are being treated as a second-class"], "references": ["social", "happy", "grateful", "accepted", "happy and excited"], "input": {"head": "PersonX takes PersonY everywhere", "relation": "oReact", "prompt": "PersonX takes PersonY everywhere. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX goes to the doctor for a checkup", "relation": "oReact", "prompt": "PersonX goes to the doctor for a checkup. As a result, others feel"}}
{"generation": ["that they are not as good as the person they"], "references": ["happy.", "happy"], "input": {"head": "PersonX goes ___ with PersonX's mom", "relation": "oReact", "prompt": "PersonX goes ___ with PersonX's mom. As a result, others feel"}}
{"generation": ["that they are being treated as a second class citizen"], "references": ["none"], "input": {"head": "PersonX makes some pasta", "relation": "oReact", "prompt": "PersonX makes some pasta. As a result, others feel"}}
{"generation": ["compelled to do something about it"], "references": ["none"], "input": {"head": "PersonX smells something terrible", "relation": "oReact", "prompt": "PersonX smells something terrible. As a result, others feel"}}
{"generation": ["that they are not as good as they could be"], "references": ["none"], "input": {"head": "PersonX studies ___ in college", "relation": "oReact", "prompt": "PersonX studies ___ in college. As a result, others feel"}}
{"generation": ["that PersonX is a good person"], "references": ["none"], "input": {"head": "PersonX puts PersonX's mind to it", "relation": "oReact", "prompt": "PersonX puts PersonX's mind to it. As a result, others feel"}}
{"generation": ["that they are not as good as they could be"], "references": ["appreciative", "none", "satisfied"], "input": {"head": "PersonX plays a new instrument", "relation": "oReact", "prompt": "PersonX plays a new instrument. As a result, others feel"}}
{"generation": ["compelled to do the same"], "references": ["none"], "input": {"head": "PersonX pisses money up the wall", "relation": "oReact", "prompt": "PersonX pisses money up the wall. As a result, others feel"}}
{"generation": ["more comfortable with him"], "references": ["happy", "none", "accepted", "acknowledged"], "input": {"head": "PersonX gives ___ a small smile", "relation": "oReact", "prompt": "PersonX gives ___ a small smile. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX is hot and humid", "relation": "oReact", "prompt": "PersonX is hot and humid. As a result, others feel"}}
{"generation": ["that they have to cancel their plans as well"], "references": ["sad", "none", "disappointed"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "oReact", "prompt": "PersonX has to cancel PersonX's plans. As a result, others feel"}}
{"generation": ["comfortable with PersonX's ___"], "references": ["good about person x's work", "loved"], "input": {"head": "PersonX manages PersonY's ___ well", "relation": "oReact", "prompt": "PersonX manages PersonY's ___ well. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["ashamed and disrespected"], "input": {"head": "PersonX hurts anyone 's ___", "relation": "oReact", "prompt": "PersonX hurts anyone 's ___. As a result, others feel"}}
{"generation": ["that he is not a good actor"], "references": ["none"], "input": {"head": "PersonX wants to be an actor", "relation": "oReact", "prompt": "PersonX wants to be an actor. As a result, others feel"}}
{"generation": ["that the game is not as good as it could"], "references": ["surprised", "angry", "annoyed", "none"], "input": {"head": "PersonX slips under the radar", "relation": "oReact", "prompt": "PersonX slips under the radar. As a result, others feel"}}
{"generation": ["unhappy"], "references": ["none"], "input": {"head": "PersonX feels unhappy", "relation": "oReact", "prompt": "PersonX feels unhappy. As a result, others feel"}}
{"generation": ["the same way"], "references": ["none"], "input": {"head": "PersonX continues PersonY's journey", "relation": "oReact", "prompt": "PersonX continues PersonY's journey. As a result, others feel"}}
{"generation": ["that the tire is not as good as the original"], "references": ["happy", "helped", "thankful"], "input": {"head": "PersonX replaces PersonY's tire", "relation": "oReact", "prompt": "PersonX replaces PersonY's tire. As a result, others feel"}}
{"generation": ["compelled to do the same"], "references": ["none"], "input": {"head": "PersonX is selling lemonade", "relation": "oReact", "prompt": "PersonX is selling lemonade. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["grateful.", "none"], "input": {"head": "PersonX puts ___ in PersonX's backpack", "relation": "oReact", "prompt": "PersonX puts ___ in PersonX's backpack. As a result, others feel"}}
{"generation": ["that they are being lied to"], "references": ["played", "none", "insecure"], "input": {"head": "PersonX lies to PersonY", "relation": "oReact", "prompt": "PersonX lies to PersonY. As a result, others feel"}}
{"generation": ["that they have to tell ___ that PersonY has"], "references": ["informed of a bad situation", "sorrow", "sad", "nervous", "distraught"], "input": {"head": "PersonX tells ___ that PersonY had cancer", "relation": "oReact", "prompt": "PersonX tells ___ that PersonY had cancer. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none"], "input": {"head": "PersonX makes ___ as well", "relation": "oReact", "prompt": "PersonX makes ___ as well. As a result, others feel"}}
{"generation": ["that they are not being treated equally"], "references": ["none"], "input": {"head": "PersonX takes PersonY step", "relation": "oReact", "prompt": "PersonX takes PersonY step. As a result, others feel"}}
{"generation": ["that PersonX is a better speaker than PersonY"], "references": ["interested.", "none"], "input": {"head": "PersonX gives PersonX's presentation", "relation": "oReact", "prompt": "PersonX gives PersonX's presentation. As a result, others feel"}}
{"generation": ["that he is a good person"], "references": ["they have someone their for them", "forgiven"], "input": {"head": "PersonX remains friends", "relation": "oReact", "prompt": "PersonX remains friends. As a result, others feel"}}
{"generation": ["threatened by them"], "references": ["none"], "input": {"head": "PersonX watches scary movies", "relation": "oReact", "prompt": "PersonX watches scary movies. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none", "concerned", "burdened", "overwhelmed"], "input": {"head": "PersonX misses ___ at work", "relation": "oReact", "prompt": "PersonX misses ___ at work. As a result, others feel"}}
{"generation": ["that the game is a bit too easy"], "references": ["none"], "input": {"head": "PersonX leaves it at that", "relation": "oReact", "prompt": "PersonX leaves it at that. As a result, others feel"}}
{"generation": ["uncomfortable"], "references": ["none"], "input": {"head": "PersonX walks to PersonX's room", "relation": "oReact", "prompt": "PersonX walks to PersonX's room. As a result, others feel"}}
{"generation": ["that the game is a waste of time"], "references": ["angered"], "input": {"head": "PersonX is a waste of money", "relation": "oReact", "prompt": "PersonX is a waste of money. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["scared"], "input": {"head": "PersonX has to take PersonY to the hospital", "relation": "oReact", "prompt": "PersonX has to take PersonY to the hospital. As a result, others feel"}}
{"generation": ["threatened and the situation escalates"], "references": ["sorry", "concerned", "informed of personx's feelings", "worried", "misunderstood", "challenged", "anxious"], "input": {"head": "PersonX confronts PersonX's roommate", "relation": "oReact", "prompt": "PersonX confronts PersonX's roommate. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX chooses one", "relation": "oReact", "prompt": "PersonX chooses one. As a result, others feel"}}
{"generation": ["that PersonX is a \"fringe\" group"], "references": ["cheated.", "none"], "input": {"head": "PersonX has PersonX's fingers in many pies", "relation": "oReact", "prompt": "PersonX has PersonX's fingers in many pies. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["safe"], "input": {"head": "PersonX escorts PersonY back", "relation": "oReact", "prompt": "PersonX escorts PersonY back. As a result, others feel"}}
{"generation": ["compelled to join the group"], "references": ["none"], "input": {"head": "PersonX sees ___ online", "relation": "oReact", "prompt": "PersonX sees ___ online. As a result, others feel"}}
{"generation": ["more comfortable with him"], "references": ["none", "satiated"], "input": {"head": "PersonX learns how to bake a cake", "relation": "oReact", "prompt": "PersonX learns how to bake a cake. As a result, others feel"}}
{"generation": ["that the dating site is a scam"], "references": ["caring", "none", "loving", "loved"], "input": {"head": "PersonX dates for years", "relation": "oReact", "prompt": "PersonX dates for years. As a result, others feel"}}
{"generation": ["that PersonX is a better person than PersonY"], "references": ["none"], "input": {"head": "PersonX puts on PersonX's hat", "relation": "oReact", "prompt": "PersonX puts on PersonX's hat. As a result, others feel"}}
{"generation": ["that PersonX is a better person than PersonY"], "references": ["happy to help someone", "none", "enjoyment after a playdate", "interested"], "input": {"head": "PersonX sees PersonY brother", "relation": "oReact", "prompt": "PersonX sees PersonY brother. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["mad", "none", "angry"], "input": {"head": "PersonX spills coffee", "relation": "oReact", "prompt": "PersonX spills coffee. As a result, others feel"}}
{"generation": ["that they are being treated as second-class citizens"], "references": ["frustrated", "none", "angry"], "input": {"head": "PersonX calls around", "relation": "oReact", "prompt": "PersonX calls around. As a result, others feel"}}
{"generation": ["that they are being cheated"], "references": ["angry"], "input": {"head": "PersonX forgets PersonY's wallet", "relation": "oReact", "prompt": "PersonX forgets PersonY's wallet. As a result, others feel"}}
{"generation": ["that they are being targeted by the person who is"], "references": ["none", "cold"], "input": {"head": "PersonX sprays PersonX", "relation": "oReact", "prompt": "PersonX sprays PersonX. As a result, others feel"}}
{"generation": ["the same way"], "references": ["haapy", "closed  to listen", "clean"], "input": {"head": "PersonX reaches PersonY's ears", "relation": "oReact", "prompt": "PersonX reaches PersonY's ears. As a result, others feel"}}
{"generation": ["that they are being judged by the person they are"], "references": ["invaded", "resentful", "thankful", "frightened"], "input": {"head": "PersonX searches PersonY", "relation": "oReact", "prompt": "PersonX searches PersonY. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none"], "input": {"head": "PersonX sees every day", "relation": "oReact", "prompt": "PersonX sees every day. As a result, others feel"}}
{"generation": ["compelled to do the same"], "references": ["sad", "excited"], "input": {"head": "PersonX blows this popsicle stand", "relation": "oReact", "prompt": "PersonX blows this popsicle stand. As a result, others feel"}}
{"generation": ["that the project is not moving forward"], "references": ["none"], "input": {"head": "PersonX has been deferred until test results are in", "relation": "oReact", "prompt": "PersonX has been deferred until test results are in. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["none"], "input": {"head": "PersonX spends PersonX's ___ making", "relation": "oReact", "prompt": "PersonX spends PersonX's ___ making. As a result, others feel"}}
{"generation": ["compelled to follow the example of PersonX"], "references": ["none"], "input": {"head": "PersonX exerts PersonY influence", "relation": "oReact", "prompt": "PersonX exerts PersonY influence. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none"], "input": {"head": "PersonX switches PersonX's major", "relation": "oReact", "prompt": "PersonX switches PersonX's major. As a result, others feel"}}
{"generation": ["that they are not as good as they could be"], "references": ["weak", "none", "relieved"], "input": {"head": "PersonX brings ___ to the eyes", "relation": "oReact", "prompt": "PersonX brings ___ to the eyes. As a result, others feel"}}
{"generation": ["uncomfortable and uncomfortable"], "references": ["controlled", "friendly", "nice", "engaged in conversation"], "input": {"head": "PersonX asks PersonY to sit down", "relation": "oReact", "prompt": "PersonX asks PersonY to sit down. As a result, others feel"}}
{"generation": ["the need to follow suit"], "references": ["appreciative", "thankful", "ready to work"], "input": {"head": "PersonX opens the doors", "relation": "oReact", "prompt": "PersonX opens the doors. As a result, others feel"}}
{"generation": ["that they are being judged by the person they are"], "references": ["sad", "regretful", "guilty"], "input": {"head": "PersonX sentences PersonY", "relation": "oReact", "prompt": "PersonX sentences PersonY. As a result, others feel"}}
{"generation": ["that the person is touching them"], "references": ["arroused", "also aroused by the touch", "appreciated and loved."], "input": {"head": "PersonX touches PersonY's skin", "relation": "oReact", "prompt": "PersonX touches PersonY's skin. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none"], "input": {"head": "PersonX exercises every ___", "relation": "oReact", "prompt": "PersonX exercises every ___. As a result, others feel"}}
{"generation": ["that the game is not as good as it could"], "references": ["none"], "input": {"head": "PersonX looks like was going", "relation": "oReact", "prompt": "PersonX looks like was going. As a result, others feel"}}
{"generation": ["compelled to join in"], "references": ["none"], "input": {"head": "PersonX has an amazing time", "relation": "oReact", "prompt": "PersonX has an amazing time. As a result, others feel"}}
{"generation": ["that PersonY is a person who is not a"], "references": ["watched", "enjoyment.", "none"], "input": {"head": "PersonX asks PersonY to read", "relation": "oReact", "prompt": "PersonX asks PersonY to read. As a result, others feel"}}
{"generation": ["compelled to join in"], "references": ["none", "excited", "grateful"], "input": {"head": "PersonX invites ___ over to play", "relation": "oReact", "prompt": "PersonX invites ___ over to play. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["calm", "forgotten"], "input": {"head": "PersonX leaves PersonY ___ alone", "relation": "oReact", "prompt": "PersonX leaves PersonY ___ alone. As a result, others feel"}}
{"generation": ["that the person who is eating is the one who"], "references": ["at least their meal did not go to waste.", "none", "helpful or sad, it depends on the context"], "input": {"head": "PersonX finishes PersonY's meal", "relation": "oReact", "prompt": "PersonX finishes PersonY's meal. As a result, others feel"}}
{"generation": ["that they are being used"], "references": ["none"], "input": {"head": "PersonX uses ___ as a means", "relation": "oReact", "prompt": "PersonX uses ___ as a means. As a result, others feel"}}
{"generation": ["compelled to skateboard with him"], "references": ["none"], "input": {"head": "PersonX loves to skateboard", "relation": "oReact", "prompt": "PersonX loves to skateboard. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX sees 's going on", "relation": "oReact", "prompt": "PersonX sees 's going on. As a result, others feel"}}
{"generation": ["that PersonX is a threat to them"], "references": ["none"], "input": {"head": "PersonX alters PersonX's course", "relation": "oReact", "prompt": "PersonX alters PersonX's course. As a result, others feel"}}
{"generation": ["the need to help"], "references": ["sad", "none"], "input": {"head": "PersonX drops ___ on the floor", "relation": "oReact", "prompt": "PersonX drops ___ on the floor. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none"], "input": {"head": "PersonX writes ___ using", "relation": "oReact", "prompt": "PersonX writes ___ using. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["dumb", "none"], "input": {"head": "PersonX takes PersonX's watch off", "relation": "oReact", "prompt": "PersonX takes PersonX's watch off. As a result, others feel"}}
{"generation": ["that PersonX is more important than PersonY"], "references": ["satisfied"], "input": {"head": "PersonX gives PersonY the impression", "relation": "oReact", "prompt": "PersonX gives PersonY the impression. As a result, others feel"}}
{"generation": ["that they have to do the same"], "references": ["none"], "input": {"head": "PersonX makes ___ that day", "relation": "oReact", "prompt": "PersonX makes ___ that day. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["high", "excited", "happy for having fun", "grateful for expanding their knowledge", "exhilarated"], "input": {"head": "PersonX stands on stage", "relation": "oReact", "prompt": "PersonX stands on stage. As a result, others feel"}}
{"generation": ["that he is a good person"], "references": ["none", "upset"], "input": {"head": "PersonX finds a gold ring", "relation": "oReact", "prompt": "PersonX finds a gold ring. As a result, others feel"}}
{"generation": ["that they are not being treated equally"], "references": ["responsible", "delighted"], "input": {"head": "PersonX gives PersonY children", "relation": "oReact", "prompt": "PersonX gives PersonY children. As a result, others feel"}}
{"generation": ["that they can learn ___ as well"], "references": ["none", "grateful"], "input": {"head": "PersonX teaches ___ the way", "relation": "oReact", "prompt": "PersonX teaches ___ the way. As a result, others feel"}}
{"generation": ["more comfortable to introduce themselves to PersonX"], "references": ["good", "none", "grateful"], "input": {"head": "PersonX provides PersonY introduction", "relation": "oReact", "prompt": "PersonX provides PersonY introduction. As a result, others feel"}}
{"generation": ["compelled to share their own experiences with the scent"], "references": ["none", "nervous"], "input": {"head": "PersonX smells nice", "relation": "oReact", "prompt": "PersonX smells nice. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none", "afraid"], "input": {"head": "PersonX peers inside", "relation": "oReact", "prompt": "PersonX peers inside. As a result, others feel"}}
{"generation": ["comfortable sharing their views"], "references": ["more knowledgeable about the situation in general", "more in touch with personx's feelings", "thoughtful", "none", "uncertain"], "input": {"head": "PersonX presents PersonX's views", "relation": "oReact", "prompt": "PersonX presents PersonX's views. As a result, others feel"}}
{"generation": ["that they are being judged by the person they are"], "references": ["refreshed", "tired"], "input": {"head": "PersonX walks PersonY", "relation": "oReact", "prompt": "PersonX walks PersonY. As a result, others feel"}}
{"generation": ["that the trip is a waste of time"], "references": ["happy", "none", "excited"], "input": {"head": "PersonX plans the trip", "relation": "oReact", "prompt": "PersonX plans the trip. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none", "helped", "clean"], "input": {"head": "PersonX waits tables", "relation": "oReact", "prompt": "PersonX waits tables. As a result, others feel"}}
{"generation": ["that PersonX is a better choice than PersonY"], "references": ["none", "grateful"], "input": {"head": "PersonX saves PersonX's breath", "relation": "oReact", "prompt": "PersonX saves PersonX's breath. As a result, others feel"}}
{"generation": ["that the game is too easy"], "references": ["none"], "input": {"head": "PersonX would like", "relation": "oReact", "prompt": "PersonX would like. As a result, others feel"}}
{"generation": ["less inclined to spend money on him"], "references": ["none"], "input": {"head": "PersonX spends ___ at the beach", "relation": "oReact", "prompt": "PersonX spends ___ at the beach. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["happy", "appreciated", "content", "loved", "good", "special"], "input": {"head": "PersonX spends the ___ at PersonY's house", "relation": "oReact", "prompt": "PersonX spends the ___ at PersonY's house. As a result, others feel"}}
{"generation": ["that the game is not as good as it could"], "references": ["none"], "input": {"head": "PersonX looks like new", "relation": "oReact", "prompt": "PersonX looks like new. As a result, others feel"}}
{"generation": ["that PersonY is not a real person"], "references": ["annoyed and limited.", "personx afraid of persony because of misunderstanding among them", "avoided"], "input": {"head": "PersonX prevents PersonY's return", "relation": "oReact", "prompt": "PersonX prevents PersonY's return. As a result, others feel"}}
{"generation": ["that PersonX is a better choice"], "references": ["sad and betrayed by a friend"], "input": {"head": "PersonX retains PersonX's position", "relation": "oReact", "prompt": "PersonX retains PersonX's position. As a result, others feel"}}
{"generation": ["that the new version is not as good as the"], "references": ["none"], "input": {"head": "PersonX replaces the old one", "relation": "oReact", "prompt": "PersonX replaces the old one. As a result, others feel"}}
{"generation": ["more comfortable around him"], "references": ["confident", "proud", "supportive."], "input": {"head": "PersonX gains PersonY's confidence", "relation": "oReact", "prompt": "PersonX gains PersonY's confidence. As a result, others feel"}}
{"generation": ["that they are not as good as the person they"], "references": ["happy", "an aversion to her", "affectionate", "none", "happy as well"], "input": {"head": "PersonX meets PersonX's husband", "relation": "oReact", "prompt": "PersonX meets PersonX's husband. As a result, others feel"}}
{"generation": ["the need to do the same"], "references": ["none"], "input": {"head": "PersonX drops a log", "relation": "oReact", "prompt": "PersonX drops a log. As a result, others feel"}}
{"generation": ["___"], "references": ["appeased", "none"], "input": {"head": "PersonX presents ___ in a manner", "relation": "oReact", "prompt": "PersonX presents ___ in a manner. As a result, others feel"}}
{"generation": ["comfortable with him"], "references": ["happy", "none"], "input": {"head": "PersonX takes ___ in stride", "relation": "oReact", "prompt": "PersonX takes ___ in stride. As a result, others feel"}}
{"generation": ["that the X-T1 is a bit more"], "references": ["none"], "input": {"head": "PersonX seems larger and heavier at that elevation", "relation": "oReact", "prompt": "PersonX seems larger and heavier at that elevation. As a result, others feel"}}
{"generation": ["compelled to spend more on video games"], "references": ["none"], "input": {"head": "PersonX spends ___ on video games", "relation": "oReact", "prompt": "PersonX spends ___ on video games. As a result, others feel"}}
{"generation": ["that PersonX is a bad person"], "references": ["good.", "happy to be asked"], "input": {"head": "PersonX asks PersonX's sister", "relation": "oReact", "prompt": "PersonX asks PersonX's sister. As a result, others feel"}}
{"generation": ["compelled to follow suit"], "references": ["none"], "input": {"head": "PersonX rises to the challenge", "relation": "oReact", "prompt": "PersonX rises to the challenge. As a result, others feel"}}
{"generation": ["that they are being ignored"], "references": ["none"], "input": {"head": "PersonX waits for PersonY answer", "relation": "oReact", "prompt": "PersonX waits for PersonY answer. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["special"], "input": {"head": "PersonX sets a ___ at variance", "relation": "oReact", "prompt": "PersonX sets a ___ at variance. As a result, others feel"}}
{"generation": ["___ is not working"], "references": ["none"], "input": {"head": "PersonX prevents ___ from working", "relation": "oReact", "prompt": "PersonX prevents ___ from working. As a result, others feel"}}
{"generation": ["that they are not being treated equally"], "references": ["none"], "input": {"head": "PersonX skips class", "relation": "oReact", "prompt": "PersonX skips class. As a result, others feel"}}
{"generation": ["that PersonX is a threat to PersonY's"], "references": ["joyful", "sad", "good about person x relationship"], "input": {"head": "PersonX attends PersonY's father 's ___", "relation": "oReact", "prompt": "PersonX attends PersonY's father 's ___. As a result, others feel"}}
{"generation": ["that they are being treated as second-class citizens"], "references": ["none"], "input": {"head": "PersonX goes to the post office", "relation": "oReact", "prompt": "PersonX goes to the post office. As a result, others feel"}}
{"generation": ["threatened and the police are called"], "references": ["like they need to be more concerned about driving safely", "like pertson x got what they deserved.", "none"], "input": {"head": "PersonX is pulled over for speeding", "relation": "oReact", "prompt": "PersonX is pulled over for speeding. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["grateful."], "input": {"head": "PersonX pulls PersonY's car", "relation": "oReact", "prompt": "PersonX pulls PersonY's car. As a result, others feel"}}
{"generation": ["that the ambulance is not needed"], "references": ["concerned", "helped", "helpful", "nervous", "hurried", "businesslike", "determined"], "input": {"head": "PersonX calls the ambulance", "relation": "oReact", "prompt": "PersonX calls the ambulance. As a result, others feel"}}
{"generation": ["the need to set the thames on fire"], "references": ["mistreated", "none"], "input": {"head": "PersonX sets the thames on fire", "relation": "oReact", "prompt": "PersonX sets the thames on fire. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none"], "input": {"head": "PersonX can care less", "relation": "oReact", "prompt": "PersonX can care less. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX joins a gym", "relation": "oReact", "prompt": "PersonX joins a gym. As a result, others feel"}}
{"generation": ["less comfortable with women's participation in the community"], "references": ["happy", "glad", "grateful"], "input": {"head": "PersonX increases women 's ___", "relation": "oReact", "prompt": "PersonX increases women 's ___. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none"], "input": {"head": "PersonX always made", "relation": "oReact", "prompt": "PersonX always made. As a result, others feel"}}
{"generation": ["that they are being forced to choose between alternatives that"], "references": ["none"], "input": {"head": "PersonX chooses among alternatives", "relation": "oReact", "prompt": "PersonX chooses among alternatives. As a result, others feel"}}
{"generation": ["that PersonX is more dominant than PersonY"], "references": ["indebted.", "nervous", "thankful."], "input": {"head": "PersonX leans PersonY's head back", "relation": "oReact", "prompt": "PersonX leans PersonY's head back. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["happy", "grateful"], "input": {"head": "PersonX makes PersonY ___ every time", "relation": "oReact", "prompt": "PersonX makes PersonY ___ every time. As a result, others feel"}}
{"generation": ["that the term \"genderqueer\" is a"], "references": ["none"], "input": {"head": "PersonX would n't fit", "relation": "oReact", "prompt": "PersonX would n't fit. As a result, others feel"}}
{"generation": ["that they have to be a certain way"], "references": ["none"], "input": {"head": "PersonX wants a car", "relation": "oReact", "prompt": "PersonX wants a car. As a result, others feel"}}
{"generation": ["uncomfortable with the idea of a person who is not"], "references": ["happy if they are person y and want to hide out.", "grateful.", "protected", "angry.", "unhappy if persony is concealing himself for a criminal reason."], "input": {"head": "PersonX conceals PersonY's identity", "relation": "oReact", "prompt": "PersonX conceals PersonY's identity. As a result, others feel"}}
{"generation": ["more comfortable with PersonX"], "references": ["motivated", "educated", "enlightened", "overwhelmed"], "input": {"head": "PersonX broadens PersonY's ___ to include", "relation": "oReact", "prompt": "PersonX broadens PersonY's ___ to include. As a result, others feel"}}
{"generation": ["that the game is not worth playing"], "references": ["anguish", "pity", "loss", "struck with horror", "for an opponent, he must be happy", "victorious"], "input": {"head": "PersonX bites the dust", "relation": "oReact", "prompt": "PersonX bites the dust. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["none"], "input": {"head": "PersonX wastes PersonX's day", "relation": "oReact", "prompt": "PersonX wastes PersonX's day. As a result, others feel"}}
{"generation": ["uncomfortable"], "references": ["happy", "interested"], "input": {"head": "PersonX makes a date", "relation": "oReact", "prompt": "PersonX makes a date. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["happy"], "input": {"head": "PersonX kisses PersonY's way", "relation": "oReact", "prompt": "PersonX kisses PersonY's way. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX is also nervous", "relation": "oReact", "prompt": "PersonX is also nervous. As a result, others feel"}}
{"generation": ["more comfortable with the idea of a relationship between them"], "references": ["jelous,unhappy", "pressured"], "input": {"head": "PersonX reduces PersonY's dependence", "relation": "oReact", "prompt": "PersonX reduces PersonY's dependence. As a result, others feel"}}
{"generation": ["that they are being pushed"], "references": ["attracted", "none", "aroused"], "input": {"head": "PersonX opens PersonX's legs", "relation": "oReact", "prompt": "PersonX opens PersonX's legs. As a result, others feel"}}
{"generation": ["that PersonY is a person who is not trustworthy"], "references": ["suspicious", "none"], "input": {"head": "PersonX conducts PersonY investigation", "relation": "oReact", "prompt": "PersonX conducts PersonY investigation. As a result, others feel"}}
{"generation": ["that PersonX is the one who is being treated"], "references": ["surprised"], "input": {"head": "PersonX sees PersonY thing", "relation": "oReact", "prompt": "PersonX sees PersonY thing. As a result, others feel"}}
{"generation": ["that they are not worthy of the title of \""], "references": ["none"], "input": {"head": "PersonX builds castles in the air", "relation": "oReact", "prompt": "PersonX builds castles in the air. As a result, others feel"}}
{"generation": ["that the game is not worth playing"], "references": ["none"], "input": {"head": "PersonX looks awful", "relation": "oReact", "prompt": "PersonX looks awful. As a result, others feel"}}
{"generation": ["that the game is not for them"], "references": ["none"], "input": {"head": "PersonX goes down the pan", "relation": "oReact", "prompt": "PersonX goes down the pan. As a result, others feel"}}
{"generation": ["uncomfortable around the person"], "references": ["upset.", "angry", "upset", "scared"], "input": {"head": "PersonX throws ___ in PersonY's face", "relation": "oReact", "prompt": "PersonX throws ___ in PersonY's face. As a result, others feel"}}
{"generation": ["guilty for their sins"], "references": ["wronged", "happy and satisfied", "also happy satisfied"], "input": {"head": "PersonX saves PersonX's ___ from PersonY's sins", "relation": "oReact", "prompt": "PersonX saves PersonX's ___ from PersonY's sins. As a result, others feel"}}
{"generation": ["that PersonX is a threat to them"], "references": ["none"], "input": {"head": "PersonX bites PersonX's ___ to keep", "relation": "oReact", "prompt": "PersonX bites PersonX's ___ to keep. As a result, others feel"}}
{"generation": ["that they are not worthy of the title of \""], "references": ["none"], "input": {"head": "PersonX bows the ___ to baal", "relation": "oReact", "prompt": "PersonX bows the ___ to baal. As a result, others feel"}}
{"generation": ["compelled to do the same"], "references": ["happy", "none", "cherished", "loved"], "input": {"head": "PersonX adores PersonY", "relation": "oReact", "prompt": "PersonX adores PersonY. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["pleased", "overwhelmed with work and the boss want him to work overtime.", "upset", "commanding", "none"], "input": {"head": "PersonX gets a call from PersonX's boss", "relation": "oReact", "prompt": "PersonX gets a call from PersonX's boss. As a result, others feel"}}
{"generation": ["that PersonX is a ___"], "references": ["none"], "input": {"head": "PersonX wipes the ___ from PersonX's forehead", "relation": "oReact", "prompt": "PersonX wipes the ___ from PersonX's forehead. As a result, others feel"}}
{"generation": ["that the game is too short"], "references": ["fond of x."], "input": {"head": "PersonX would be fun", "relation": "oReact", "prompt": "PersonX would be fun. As a result, others feel"}}
{"generation": ["that PersonX is a good person"], "references": ["helped", "cared about and comfortable."], "input": {"head": "PersonX takes PersonY in PersonY's arms", "relation": "oReact", "prompt": "PersonX takes PersonY in PersonY's arms. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["happy, hungry, thankful", "none"], "input": {"head": "PersonX orders a cake", "relation": "oReact", "prompt": "PersonX orders a cake. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX walks in the park", "relation": "oReact", "prompt": "PersonX walks in the park. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none", "companionable"], "input": {"head": "PersonX takes PersonY up on the offer", "relation": "oReact", "prompt": "PersonX takes PersonY up on the offer. As a result, others feel"}}
{"generation": ["that he is not a good fit for the team"], "references": ["none"], "input": {"head": "PersonX misses class", "relation": "oReact", "prompt": "PersonX misses class. As a result, others feel"}}
{"generation": ["that PersonX is ___"], "references": ["none"], "input": {"head": "PersonX expresses PersonX's ___ in words", "relation": "oReact", "prompt": "PersonX expresses PersonX's ___ in words. As a result, others feel"}}
{"generation": ["that the game is a bit too easy"], "references": ["none"], "input": {"head": "PersonX sees if could make", "relation": "oReact", "prompt": "PersonX sees if could make. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["interested.", "none", "informed"], "input": {"head": "PersonX tells ___ about PersonX's day", "relation": "oReact", "prompt": "PersonX tells ___ about PersonX's day. As a result, others feel"}}
{"generation": ["less safe"], "references": ["shunned", "saddened", "none"], "input": {"head": "PersonX sees ___ away", "relation": "oReact", "prompt": "PersonX sees ___ away. As a result, others feel"}}
{"generation": ["that PersonX is more competent than PersonY"], "references": ["tested", "stressed"], "input": {"head": "PersonX tests PersonY's ability", "relation": "oReact", "prompt": "PersonX tests PersonY's ability. As a result, others feel"}}
{"generation": ["that the game is not as good as it could"], "references": ["none", "calm"], "input": {"head": "PersonX lands safely", "relation": "oReact", "prompt": "PersonX lands safely. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["finished", "none"], "input": {"head": "PersonX takes ___ at the end", "relation": "oReact", "prompt": "PersonX takes ___ at the end. As a result, others feel"}}
{"generation": ["the need to help"], "references": ["thankful", "noticed", "thankful.", "grateful"], "input": {"head": "PersonX realizes PersonY was lost", "relation": "oReact", "prompt": "PersonX realizes PersonY was lost. As a result, others feel"}}
{"generation": ["uncomfortable and uncomfortable"], "references": ["focused"], "input": {"head": "PersonX asks PersonY to sit", "relation": "oReact", "prompt": "PersonX asks PersonY to sit. As a result, others feel"}}
{"generation": ["that PersonX is a good person"], "references": ["none"], "input": {"head": "PersonX sings PersonX's heart", "relation": "oReact", "prompt": "PersonX sings PersonX's heart. As a result, others feel"}}
{"generation": ["that PersonX is a bad person"], "references": ["lost", "depressed", "sad", "greived", "hurt", "heartbroken", "rejected", "confused"], "input": {"head": "PersonX breaks PersonY's heart", "relation": "oReact", "prompt": "PersonX breaks PersonY's heart. As a result, others feel"}}
{"generation": ["that they are being ignored"], "references": ["none", "affection"], "input": {"head": "PersonX waits for PersonY", "relation": "oReact", "prompt": "PersonX waits for PersonY. As a result, others feel"}}
{"generation": ["compelled to buy one as well"], "references": ["none"], "input": {"head": "PersonX buys one anyway", "relation": "oReact", "prompt": "PersonX buys one anyway. As a result, others feel"}}
{"generation": ["uncomfortable around them"], "references": ["full", "engaged", "excited"], "input": {"head": "PersonX meets PersonY for dinner", "relation": "oReact", "prompt": "PersonX meets PersonY for dinner. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none", "grateful"], "input": {"head": "PersonX uses the ___ effectively", "relation": "oReact", "prompt": "PersonX uses the ___ effectively. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["friendly", "none"], "input": {"head": "PersonX chews the cud", "relation": "oReact", "prompt": "PersonX chews the cud. As a result, others feel"}}
{"generation": ["the need to make a cake for him"], "references": ["none"], "input": {"head": "PersonX loves the cake", "relation": "oReact", "prompt": "PersonX loves the cake. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["attracted", "none", "respectful"], "input": {"head": "PersonX gets dressed for work", "relation": "oReact", "prompt": "PersonX gets dressed for work. As a result, others feel"}}
{"generation": ["more comfortable with PersonX"], "references": ["happy", "safe", "thankful"], "input": {"head": "PersonX helps PersonY move", "relation": "oReact", "prompt": "PersonX helps PersonY move. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["like they are being misunderstood", "uncomfortable", "looked at"], "input": {"head": "PersonX looks at PersonY like that", "relation": "oReact", "prompt": "PersonX looks at PersonY like that. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["lovesick.", "appreciated , missed", "none"], "input": {"head": "PersonX misses PersonY a lot", "relation": "oReact", "prompt": "PersonX misses PersonY a lot. As a result, others feel"}}
{"generation": ["more comfortable with him"], "references": ["none"], "input": {"head": "PersonX gets something to drink", "relation": "oReact", "prompt": "PersonX gets something to drink. As a result, others feel"}}
{"generation": ["compelled to follow"], "references": ["unsatisfied", "sad", "sad if y hate him", "nervous", "disappointed"], "input": {"head": "PersonX sees where PersonY was going", "relation": "oReact", "prompt": "PersonX sees where PersonY was going. As a result, others feel"}}
{"generation": ["compelled to eat ___ for days"], "references": ["none"], "input": {"head": "PersonX eats ___ for days", "relation": "oReact", "prompt": "PersonX eats ___ for days. As a result, others feel"}}
{"generation": ["that PersonX is superior to PersonY"], "references": ["happy", "none", "educated"], "input": {"head": "PersonX enjoys PersonY's class", "relation": "oReact", "prompt": "PersonX enjoys PersonY's class. As a result, others feel"}}
{"generation": ["that the group is no longer relevant"], "references": ["none"], "input": {"head": "PersonX eventually moved", "relation": "oReact", "prompt": "PersonX eventually moved. As a result, others feel"}}
{"generation": ["that they are being forced to pay for the privilege"], "references": ["none"], "input": {"head": "PersonX wants to save money", "relation": "oReact", "prompt": "PersonX wants to save money. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["none"], "input": {"head": "PersonX gets beer", "relation": "oReact", "prompt": "PersonX gets beer. As a result, others feel"}}
{"generation": ["that they are being judged by the person they are"], "references": ["none", "included"], "input": {"head": "PersonX refers PersonY", "relation": "oReact", "prompt": "PersonX refers PersonY. As a result, others feel"}}
{"generation": ["that the ___"], "references": ["happy", "great"], "input": {"head": "PersonX evens gave ___", "relation": "oReact", "prompt": "PersonX evens gave ___. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["happy"], "input": {"head": "PersonX can play with PersonY", "relation": "oReact", "prompt": "PersonX can play with PersonY. As a result, others feel"}}
{"generation": ["that they are not being heard"], "references": ["none"], "input": {"head": "PersonX understands fully the ___", "relation": "oReact", "prompt": "PersonX understands fully the ___. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["none", "surprised"], "input": {"head": "PersonX sees PersonY's girlfriend", "relation": "oReact", "prompt": "PersonX sees PersonY's girlfriend. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["none"], "input": {"head": "PersonX reproduces this ___ regardless", "relation": "oReact", "prompt": "PersonX reproduces this ___ regardless. As a result, others feel"}}
{"generation": ["that PersonY is a bit of a jerk"], "references": ["amazed", "surprised about his knowledge about the person'"], "input": {"head": "PersonX names the films PersonY is most proud of", "relation": "oReact", "prompt": "PersonX names the films PersonY is most proud of. As a result, others feel"}}
{"generation": ["that the group is no longer relevant"], "references": ["none", "happy for him", "fortunate"], "input": {"head": "PersonX finally joined ___", "relation": "oReact", "prompt": "PersonX finally joined ___. As a result, others feel"}}
{"generation": ["that they are being treated unfairly"], "references": ["unhappy, sad, angry, frightened", "surprised", "shocked", "pain", "in pain"], "input": {"head": "PersonX falls on PersonY's neck", "relation": "oReact", "prompt": "PersonX falls on PersonY's neck. As a result, others feel"}}
{"generation": ["the need to pray for PersonX"], "references": ["hopeful", "happy", "content", "overwhelmed", "empathetic"], "input": {"head": "PersonX asks PersonY to pray", "relation": "oReact", "prompt": "PersonX asks PersonY to pray. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX uses ___ regularly", "relation": "oReact", "prompt": "PersonX uses ___ regularly. As a result, others feel"}}
{"generation": ["that PersonX is a jerk"], "references": ["none", "relieved", "helpful"], "input": {"head": "PersonX borrows PersonY's car", "relation": "oReact", "prompt": "PersonX borrows PersonY's car. As a result, others feel"}}
{"generation": ["uncomfortable around PersonX"], "references": ["none"], "input": {"head": "PersonX hangs PersonX's clothes", "relation": "oReact", "prompt": "PersonX hangs PersonX's clothes. As a result, others feel"}}
{"generation": ["that the game is a bit too easy"], "references": ["happy", "none", "safe"], "input": {"head": "PersonX wouldnt hurts a fly", "relation": "oReact", "prompt": "PersonX wouldnt hurts a fly. As a result, others feel"}}
{"generation": ["that they are not good enough for ___"], "references": ["none"], "input": {"head": "PersonX loves the ___ with all PersonX's heart", "relation": "oReact", "prompt": "PersonX loves the ___ with all PersonX's heart. As a result, others feel"}}
{"generation": ["compelled to help"], "references": ["loved and wanted", "cared for", "very pleased.", "loved"], "input": {"head": "PersonX makes PersonY's day", "relation": "oReact", "prompt": "PersonX makes PersonY's day. As a result, others feel"}}
{"generation": ["that PersonY is not a good person"], "references": ["happy", "informed", "connected"], "input": {"head": "PersonX calls PersonY this morning", "relation": "oReact", "prompt": "PersonX calls PersonY this morning. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["relieved that they could stay home", "none", "grateful"], "input": {"head": "PersonX takes PersonY place", "relation": "oReact", "prompt": "PersonX takes PersonY place. As a result, others feel"}}
{"generation": ["a need to be with her"], "references": ["happy.", "self conscious", "admired", "bashful"], "input": {"head": "PersonX sees a pretty girl", "relation": "oReact", "prompt": "PersonX sees a pretty girl. As a result, others feel"}}
{"generation": ["the need to call him out on his behavior"], "references": ["busy", "none"], "input": {"head": "PersonX gets a call", "relation": "oReact", "prompt": "PersonX gets a call. As a result, others feel"}}
{"generation": ["that PersonX is a better person than PersonY"], "references": ["more safe", "they can join them"], "input": {"head": "PersonX reminds PersonX of PersonY", "relation": "oReact", "prompt": "PersonX reminds PersonX of PersonY. As a result, others feel"}}
{"generation": ["that the world is a better place because of it"], "references": ["pleased", "assured"], "input": {"head": "PersonX thinks would happen", "relation": "oReact", "prompt": "PersonX thinks would happen. As a result, others feel"}}
{"generation": ["that they have to pay for it"], "references": ["none"], "input": {"head": "PersonX costs the earth", "relation": "oReact", "prompt": "PersonX costs the earth. As a result, others feel"}}
{"generation": ["compelled to do the same"], "references": ["happy", "none", "excitement", "anticipation"], "input": {"head": "PersonX books a ticket", "relation": "oReact", "prompt": "PersonX books a ticket. As a result, others feel"}}
{"generation": ["the pain of the burn"], "references": ["none"], "input": {"head": "PersonX burns the ___ at both ends", "relation": "oReact", "prompt": "PersonX burns the ___ at both ends. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX misses ___ to school", "relation": "oReact", "prompt": "PersonX misses ___ to school. As a result, others feel"}}
{"generation": ["uncomfortable around him"], "references": ["none"], "input": {"head": "PersonX eats ___ very quickly", "relation": "oReact", "prompt": "PersonX eats ___ very quickly. As a result, others feel"}}
{"generation": ["the need to do the same"], "references": ["none", "knowledgeable", "good because they found someone that needs what they have to give"], "input": {"head": "PersonX puts out feelers", "relation": "oReact", "prompt": "PersonX puts out feelers. As a result, others feel"}}
{"generation": ["___"], "references": ["overwhelmed"], "input": {"head": "PersonX brings ___ to PersonY eyes", "relation": "oReact", "prompt": "PersonX brings ___ to PersonY eyes. As a result, others feel"}}
{"generation": ["compelled to join in"], "references": ["none"], "input": {"head": "PersonX dances the night away", "relation": "oReact", "prompt": "PersonX dances the night away. As a result, others feel"}}
{"generation": ["that the story is not as important as the characters"], "references": ["none"], "input": {"head": "PersonX takes place over a period", "relation": "oReact", "prompt": "PersonX takes place over a period. As a result, others feel"}}
{"generation": ["that they are not being treated fairly"], "references": ["grateful", "beholden", "scared"], "input": {"head": "PersonX takes ___ to the er", "relation": "oReact", "prompt": "PersonX takes ___ to the er. As a result, others feel"}}
{"generation": ["that they are being taken advantage of"], "references": ["none", "overjoyed"], "input": {"head": "PersonX buys the computer", "relation": "oReact", "prompt": "PersonX buys the computer. As a result, others feel"}}
{"generation": ["that they have to buy the house, too"], "references": ["happy", "none"], "input": {"head": "PersonX buys the house", "relation": "oReact", "prompt": "PersonX buys the house. As a result, others feel"}}
{"generation": ["___"], "references": ["neutral", "angry", "upset"], "input": {"head": "PersonX gives ___ an f", "relation": "oReact", "prompt": "PersonX gives ___ an f. As a result, others feel"}}
{"generation": ["that they are not as good as they could be"], "references": ["none"], "input": {"head": "PersonX finds ___ later", "relation": "oReact", "prompt": "PersonX finds ___ later. As a result, others feel"}}
{"generation": ["compelled to do the same"], "references": ["none", "glad to see manners still exist"], "input": {"head": "PersonX thanks PersonY profusely", "relation": "oReact", "prompt": "PersonX thanks PersonY profusely. As a result, others feel"}}
{"generation": ["that he is a \"bad guy\" and that"], "references": ["none"], "input": {"head": "PersonX gets a tan", "relation": "oReact", "prompt": "PersonX gets a tan. As a result, others feel"}}
{"generation": ["that they are not as good as they could be"], "references": ["none"], "input": {"head": "PersonX wins every game", "relation": "oReact", "prompt": "PersonX wins every game. As a result, others feel"}}
{"generation": ["that the game is a bit too easy"], "references": ["none", "thankful"], "input": {"head": "PersonX reluctantly accepted", "relation": "oReact", "prompt": "PersonX reluctantly accepted. As a result, others feel"}}
{"generation": ["that the game is not as good as it could"], "references": ["none"], "input": {"head": "PersonX develops along lines", "relation": "oReact", "prompt": "PersonX develops along lines. As a result, others feel"}}
{"generation": ["that they are not getting the best deal"], "references": ["none"], "input": {"head": "PersonX buys dog food", "relation": "oReact", "prompt": "PersonX buys dog food. As a result, others feel"}}
{"generation": ["buy PersonX's wife"], "references": ["to thank the presenter", "to treat the person"], "input": {"head": "PersonX buys PersonY's wife ___", "relation": "oWant", "prompt": "PersonX buys PersonY's wife ___. After, others will want to"}}
{"generation": ["join the party"], "references": ["to thank PersonX", "to impress PersonX", "to walk away with what they accepted", "to shake PersonX's hands", "to have them as a partner.", "to promise PersonX they won't regret"], "input": {"head": "PersonX takes PersonY up on the offer", "relation": "oWant", "prompt": "PersonX takes PersonY up on the offer. After, others will want to"}}
{"generation": ["know what the f is for"], "references": ["Demand a retake", "to retake the test", "Study harder", "to study harder", "to study with x", "to strive for better grades"], "input": {"head": "PersonX gives PersonY an f", "relation": "oWant", "prompt": "PersonX gives PersonY an f. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX sees what happened", "relation": "oWant", "prompt": "PersonX sees what happened. After, others will want to"}}
{"generation": ["use it"], "references": ["to show person x where her desk is located", "none", "to have person x fill out the required new hire documents"], "input": {"head": "PersonX finally got ___", "relation": "oWant", "prompt": "PersonX finally got ___. After, others will want to"}}
{"generation": ["buy it"], "references": ["none"], "input": {"head": "PersonX buys one", "relation": "oWant", "prompt": "PersonX buys one. After, others will want to"}}
{"generation": ["kill him"], "references": ["none"], "input": {"head": "PersonX enjoys life", "relation": "oWant", "prompt": "PersonX enjoys life. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to tell other people the good news", "to congratulate them", "to cry.", "to hug person X.", "to yell."], "input": {"head": "PersonX breaks the news to PersonY", "relation": "oWant", "prompt": "PersonX breaks the news to PersonY. After, others will want to"}}
{"generation": ["know what happened to him"], "references": ["none"], "input": {"head": "PersonX hides under the covers", "relation": "oWant", "prompt": "PersonX hides under the covers. After, others will want to"}}
{"generation": ["be in the same place as you"], "references": ["to be helped", "to have good balance", "to say thanks", "sit down", "go to doctor", "to help them also"], "input": {"head": "PersonX maintains PersonY equilibrium", "relation": "oWant", "prompt": "PersonX maintains PersonY equilibrium. After, others will want to"}}
{"generation": ["save PersonX's people"], "references": ["to give PersonX an award", "keep the people safe", "to stay safe", "to calm down", "to make PersonX the chief of the army", "thank personX"], "input": {"head": "PersonX saves PersonY's people", "relation": "oWant", "prompt": "PersonX saves PersonY's people. After, others will want to"}}
{"generation": ["know what happened"], "references": ["hand", "remove it from their mouth to blow smoke", "puff on the cigarette", "friends", "to ask for something more of PersonX", "to push PersonX away", "none"], "input": {"head": "PersonX brings ___ to PersonY's mouth", "relation": "oWant", "prompt": "PersonX brings ___ to PersonY's mouth. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to find out about him", "to mingle with him", "none"], "input": {"head": "PersonX lives next door", "relation": "oWant", "prompt": "PersonX lives next door. After, others will want to"}}
{"generation": ["join the group"], "references": ["none"], "input": {"head": "PersonX quickly fell", "relation": "oWant", "prompt": "PersonX quickly fell. After, others will want to"}}
{"generation": ["know why"], "references": ["none"], "input": {"head": "PersonX fails math", "relation": "oWant", "prompt": "PersonX fails math. After, others will want to"}}
{"generation": ["join the group"], "references": ["PersonX to leave them alone", "none", "the bullying to stop"], "input": {"head": "PersonX bullies in school", "relation": "oWant", "prompt": "PersonX bullies in school. After, others will want to"}}
{"generation": ["get the shoes"], "references": ["none"], "input": {"head": "PersonX gets the shoes", "relation": "oWant", "prompt": "PersonX gets the shoes. After, others will want to"}}
{"generation": ["know what the hell is going on"], "references": ["to give raise", "to see more of the performance again", "an encore", "clap", "cry"], "input": {"head": "PersonX takes a bow", "relation": "oWant", "prompt": "PersonX takes a bow. After, others will want to"}}
{"generation": ["be like PersonX"], "references": ["to win the war", "thank PersonX", "to go out and talk to their crush", "to do more stuff in his life", "to be motivated", "leave the podium"], "input": {"head": "PersonX gives PersonY the courage", "relation": "oWant", "prompt": "PersonX gives PersonY the courage. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX breaks PersonX's toe", "relation": "oWant", "prompt": "PersonX breaks PersonX's toe. After, others will want to"}}
{"generation": ["buy it"], "references": ["none"], "input": {"head": "PersonX eventually bought ___", "relation": "oWant", "prompt": "PersonX eventually bought ___. After, others will want to"}}
{"generation": ["join the game"], "references": ["none"], "input": {"head": "PersonX wins every ___", "relation": "oWant", "prompt": "PersonX wins every ___. After, others will want to"}}
{"generation": ["know what the X is"], "references": ["to ask PersonX what they should do", "none", "to search for the missing person"], "input": {"head": "PersonX checks everywhere", "relation": "oWant", "prompt": "PersonX checks everywhere. After, others will want to"}}
{"generation": ["join the ___"], "references": ["to listen to PersonX", "to do what he is asking them to do", "to learn from PersonX", "to attend the meeting", "to give their opinions", "to listen to personX"], "input": {"head": "PersonX calls the ___ together", "relation": "oWant", "prompt": "PersonX calls the ___ together. After, others will want to"}}
{"generation": ["do the same"], "references": ["to make PersonX spend their money", "none", "to congratulate PersonX"], "input": {"head": "PersonX makes much money", "relation": "oWant", "prompt": "PersonX makes much money. After, others will want to"}}
{"generation": ["buy it"], "references": ["Person Y says thankyou", "none", "person Y wants to eat candy"], "input": {"head": "PersonX buys ___ , though", "relation": "oWant", "prompt": "PersonX buys ___ , though. After, others will want to"}}
{"generation": ["know what happened to her"], "references": ["to invite them home", "to guide", "to get their friend for them", "to say hello"], "input": {"head": "PersonX sees PersonY's mother", "relation": "oWant", "prompt": "PersonX sees PersonY's mother. After, others will want to"}}
{"generation": ["use it"], "references": ["none"], "input": {"head": "PersonX avoids every ___", "relation": "oWant", "prompt": "PersonX avoids every ___. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to call her friends and tell them about the puppy.", "thank personx for the cat", "take the cat home", "to thank X for the puppy."], "input": {"head": "PersonX finds ___ that PersonY liked", "relation": "oWant", "prompt": "PersonX finds ___ that PersonY liked. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX puts ___ into the oven", "relation": "oWant", "prompt": "PersonX puts ___ into the oven. After, others will want to"}}
{"generation": ["know what to do with the ingredients"], "references": ["none"], "input": {"head": "PersonX gathers all the ingredients", "relation": "oWant", "prompt": "PersonX gathers all the ingredients. After, others will want to"}}
{"generation": ["join"], "references": ["to pay him for his effort", "to help him learn the trade", "none"], "input": {"head": "PersonX gets PersonX's foot in the door", "relation": "oWant", "prompt": "PersonX gets PersonX's foot in the door. After, others will want to"}}
{"generation": ["know what it was like"], "references": ["to tell others about the beauty", "none", "to experience the beauty again"], "input": {"head": "PersonX thinks it was beautiful", "relation": "oWant", "prompt": "PersonX thinks it was beautiful. After, others will want to"}}
{"generation": ["know what you're doing"], "references": ["none"], "input": {"head": "PersonX makes that mistake again", "relation": "oWant", "prompt": "PersonX makes that mistake again. After, others will want to"}}
{"generation": ["know what the ___ is"], "references": ["none"], "input": {"head": "PersonX speaks the ___ fluently", "relation": "oWant", "prompt": "PersonX speaks the ___ fluently. After, others will want to"}}
{"generation": ["know where you found it"], "references": ["none"], "input": {"head": "PersonX finds ___ anywhere", "relation": "oWant", "prompt": "PersonX finds ___ anywhere. After, others will want to"}}
{"generation": ["join the party"], "references": ["none"], "input": {"head": "PersonX advances another ___", "relation": "oWant", "prompt": "PersonX advances another ___. After, others will want to"}}
{"generation": ["join the fight"], "references": ["to thank person X", "to check nothing untoward has happened."], "input": {"head": "PersonX pulls PersonY's hand away", "relation": "oWant", "prompt": "PersonX pulls PersonY's hand away. After, others will want to"}}
{"generation": ["call ___"], "references": ["to respond", "to listen", "to converse", "to ignore the call", "to pick up the call"], "input": {"head": "PersonX calls ___ immediately", "relation": "oWant", "prompt": "PersonX calls ___ immediately. After, others will want to"}}
{"generation": ["help him"], "references": ["none"], "input": {"head": "PersonX has a fear of heights", "relation": "oWant", "prompt": "PersonX has a fear of heights. After, others will want to"}}
{"generation": ["know what you did to get that ___"], "references": ["none"], "input": {"head": "PersonX grants a ___ by ccc", "relation": "oWant", "prompt": "PersonX grants a ___ by ccc. After, others will want to"}}
{"generation": ["buy cookies"], "references": ["none"], "input": {"head": "PersonX buys cookies", "relation": "oWant", "prompt": "PersonX buys cookies. After, others will want to"}}
{"generation": ["know what you're doing"], "references": ["to watch the presentation", "to express gratitude", "none"], "input": {"head": "PersonX puts everything together", "relation": "oWant", "prompt": "PersonX puts everything together. After, others will want to"}}
{"generation": ["know what happened to the other two"], "references": ["to catch them", "tell them to stop", "none"], "input": {"head": "PersonX takes liberties", "relation": "oWant", "prompt": "PersonX takes liberties. After, others will want to"}}
{"generation": ["know what you did to get that"], "references": ["fabric supply stores may send email or other advertisements to PersonX to promote the selling of materials that PersonX needs to buy in order to make clothes", "none", "other people who might have purchased PersonX's clothes will tell others, who will in turn possibly also buy the clothes"], "input": {"head": "PersonX makes ___ quickly", "relation": "oWant", "prompt": "PersonX makes ___ quickly. After, others will want to"}}
{"generation": ["work with him"], "references": ["none"], "input": {"head": "PersonX gets work", "relation": "oWant", "prompt": "PersonX gets work. After, others will want to"}}
{"generation": ["take over"], "references": ["to be with them till it's over", "to say goodbye to them", "none"], "input": {"head": "PersonX is coming to an end", "relation": "oWant", "prompt": "PersonX is coming to an end. After, others will want to"}}
{"generation": ["know how to do it"], "references": ["none"], "input": {"head": "PersonX follows the instructions", "relation": "oWant", "prompt": "PersonX follows the instructions. After, others will want to"}}
{"generation": ["join him"], "references": ["none"], "input": {"head": "PersonX walks to the car", "relation": "oWant", "prompt": "PersonX walks to the car. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX makes ___ every morning", "relation": "oWant", "prompt": "PersonX makes ___ every morning. After, others will want to"}}
{"generation": ["join in"], "references": ["none"], "input": {"head": "PersonX pisses up a rope", "relation": "oWant", "prompt": "PersonX pisses up a rope. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to say their last words", "to be freed from PersonX", "to ignore peer pressure", "to apologize to PersonX", "none"], "input": {"head": "PersonX hangs PersonY's head", "relation": "oWant", "prompt": "PersonX hangs PersonY's head. After, others will want to"}}
{"generation": ["use it"], "references": ["none"], "input": {"head": "PersonX is as good as new", "relation": "oWant", "prompt": "PersonX is as good as new. After, others will want to"}}
{"generation": ["see the appointment"], "references": ["To ask when is the rescheduled appointment", "to have the appointment", "To know what is Person X doing at the freed up time", "to get paid for their work", "none"], "input": {"head": "PersonX reschedules PersonX's appointment", "relation": "oWant", "prompt": "PersonX reschedules PersonX's appointment. After, others will want to"}}
{"generation": ["be with you"], "references": ["to tell PersonX to change", "to ignore PersonX"], "input": {"head": "PersonX becomes intolerable", "relation": "oWant", "prompt": "PersonX becomes intolerable. After, others will want to"}}
{"generation": ["know what it is"], "references": ["to stop PersonX from stop telling the secret to others", "congratulate person x", "to make the surprise happen", "ask more questions about the surprise"], "input": {"head": "PersonX tells PersonY had a surprise", "relation": "oWant", "prompt": "PersonX tells PersonY had a surprise. After, others will want to"}}
{"generation": ["use PersonX's ___"], "references": ["to yell at person x", "to steal from person x", "to help PersonX conquer the world", "none", "to find PersonX servants"], "input": {"head": "PersonX increases PersonX's ___ at the expense", "relation": "oWant", "prompt": "PersonX increases PersonX's ___ at the expense. After, others will want to"}}
{"generation": ["save money"], "references": ["none"], "input": {"head": "PersonX wants to save money", "relation": "oWant", "prompt": "PersonX wants to save money. After, others will want to"}}
{"generation": ["help PersonX"], "references": ["none"], "input": {"head": "PersonX sprains PersonX's leg", "relation": "oWant", "prompt": "PersonX sprains PersonX's leg. After, others will want to"}}
{"generation": ["know what happened"], "references": ["get an answer", "To set X straight", "to know why their boss called Person X.", "To deliver news to X", "to ask a question", "to talk to their boss about the phone call.", "To talk to personY", "hang up phone"], "input": {"head": "PersonX gets a call from PersonY's boss", "relation": "oWant", "prompt": "PersonX gets a call from PersonY's boss. After, others will want to"}}
{"generation": ["cast PersonX's eyes"], "references": ["none"], "input": {"head": "PersonX casts PersonY's eyes", "relation": "oWant", "prompt": "PersonX casts PersonY's eyes. After, others will want to"}}
{"generation": ["know how to make pasta"], "references": ["none"], "input": {"head": "PersonX makes pasta", "relation": "oWant", "prompt": "PersonX makes pasta. After, others will want to"}}
{"generation": ["join the party"], "references": ["none"], "input": {"head": "PersonX shakes the pagoda tree", "relation": "oWant", "prompt": "PersonX shakes the pagoda tree. After, others will want to"}}
{"generation": ["sit on PersonX's couch"], "references": ["to talk with Personx", "to have a chat with the other person on the couch", "to watch some television on the couch", "to put their feet up and get a blanket to get comfortable", "to watch the game"], "input": {"head": "PersonX sits on PersonY's couch", "relation": "oWant", "prompt": "PersonX sits on PersonY's couch. After, others will want to"}}
{"generation": ["use it"], "references": ["none"], "input": {"head": "PersonX uses ___ anyway", "relation": "oWant", "prompt": "PersonX uses ___ anyway. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX pulls PersonX's car over", "relation": "oWant", "prompt": "PersonX pulls PersonX's car over. After, others will want to"}}
{"generation": ["talk to PersonX"], "references": ["to have a good time", "to determine what to do next", "continue on their way", "go with PersonX to a bar", "none"], "input": {"head": "PersonX talks to PersonX's friends", "relation": "oWant", "prompt": "PersonX talks to PersonX's friends. After, others will want to"}}
{"generation": ["join the party"], "references": ["to thank PersonX", "none", "to pay PersonX"], "input": {"head": "PersonX pulls the car", "relation": "oWant", "prompt": "PersonX pulls the car. After, others will want to"}}
{"generation": ["know what you think"], "references": ["none"], "input": {"head": "PersonX would like", "relation": "oWant", "prompt": "PersonX would like. After, others will want to"}}
{"generation": ["join the party"], "references": ["get help", "to call for Mommy", "to slap PersonX", "to get treatment", "to see doctor", "to yell at PersonX", "to go to the hospital", "to cry"], "input": {"head": "PersonX falls on PersonY's neck", "relation": "oWant", "prompt": "PersonX falls on PersonY's neck. After, others will want to"}}
{"generation": ["know what you think"], "references": ["none"], "input": {"head": "PersonX always makes", "relation": "oWant", "prompt": "PersonX always makes. After, others will want to"}}
{"generation": ["know what the ___ is"], "references": ["to learn more about PersonX", "to hear what PersonX has to say", "to be thanked", "to be recognized"], "input": {"head": "PersonX expresses PersonX's ___ in words", "relation": "oWant", "prompt": "PersonX expresses PersonX's ___ in words. After, others will want to"}}
{"generation": ["join the game"], "references": ["none"], "input": {"head": "PersonX throws a frisbee", "relation": "oWant", "prompt": "PersonX throws a frisbee. After, others will want to"}}
{"generation": ["join"], "references": ["to have fun with everyone", "to listen to PersonX", "to protest", "none", "to get to know everyone"], "input": {"head": "PersonX brings people together", "relation": "oWant", "prompt": "PersonX brings people together. After, others will want to"}}
{"generation": ["help him"], "references": ["none"], "input": {"head": "PersonX looks sad", "relation": "oWant", "prompt": "PersonX looks sad. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX forgets the milk", "relation": "oWant", "prompt": "PersonX forgets the milk. After, others will want to"}}
{"generation": ["join"], "references": ["none", "to practice playing music", "to jam out together"], "input": {"head": "PersonX starts a band", "relation": "oWant", "prompt": "PersonX starts a band. After, others will want to"}}
{"generation": ["join the party"], "references": ["none"], "input": {"head": "PersonX goes down the drain", "relation": "oWant", "prompt": "PersonX goes down the drain. After, others will want to"}}
{"generation": ["know what they can do to help"], "references": ["none"], "input": {"head": "PersonX gets PersonX's feet wet", "relation": "oWant", "prompt": "PersonX gets PersonX's feet wet. After, others will want to"}}
{"generation": ["know if PersonX is the same person as Person"], "references": ["none"], "input": {"head": "PersonX gets PersonY's driver 's license", "relation": "oWant", "prompt": "PersonX gets PersonY's driver 's license. After, others will want to"}}
{"generation": ["know what you think"], "references": ["none"], "input": {"head": "PersonX finds a good one", "relation": "oWant", "prompt": "PersonX finds a good one. After, others will want to"}}
{"generation": ["join the party"], "references": ["none"], "input": {"head": "PersonX gathers the ingredients", "relation": "oWant", "prompt": "PersonX gathers the ingredients. After, others will want to"}}
{"generation": ["know what happened"], "references": ["sad", "to be enjoyed", "to be free", "cries"], "input": {"head": "PersonX scars ___ away", "relation": "oWant", "prompt": "PersonX scars ___ away. After, others will want to"}}
{"generation": ["use them too"], "references": ["to thank PersonX", "none", "to wonder how PersonX saved all that money"], "input": {"head": "PersonX uses PersonX's coupons", "relation": "oWant", "prompt": "PersonX uses PersonX's coupons. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX wipes the ___ from PersonX's forehead", "relation": "oWant", "prompt": "PersonX wipes the ___ from PersonX's forehead. After, others will want to"}}
{"generation": ["join in"], "references": ["to feel comfortable.", "to accept his love", "to marry him", "to feel loved.", "none"], "input": {"head": "PersonX passionately rucked PersonY", "relation": "oWant", "prompt": "PersonX passionately rucked PersonY. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX takes it outside", "relation": "oWant", "prompt": "PersonX takes it outside. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX would like it", "relation": "oWant", "prompt": "PersonX would like it. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX puts it in PersonX's purse", "relation": "oWant", "prompt": "PersonX puts it in PersonX's purse. After, others will want to"}}
{"generation": ["know how to coach PersonY"], "references": ["to practice what they learned", "thank PersonX", "perform better", "be great", "work hard", "to become better at a skill"], "input": {"head": "PersonX coachs PersonY", "relation": "oWant", "prompt": "PersonX coachs PersonY. After, others will want to"}}
{"generation": ["know what he likes"], "references": ["to ask if PersonX wants to buy anything else", "to sell PersonX some sweets", "none"], "input": {"head": "PersonX loves sweets", "relation": "oWant", "prompt": "PersonX loves sweets. After, others will want to"}}
{"generation": ["know how to do it"], "references": ["to keep playing with their dad", "to try to put Mr. Potato head together like their dad"], "input": {"head": "PersonX puts PersonY together", "relation": "oWant", "prompt": "PersonX puts PersonY together. After, others will want to"}}
{"generation": ["know what happened"], "references": ["Stand up", "see a doctor", "yell at X", "Punch someone", "to get medical attention", "to attack PersonX"], "input": {"head": "PersonX throws PersonY", "relation": "oWant", "prompt": "PersonX throws PersonY. After, others will want to"}}
{"generation": ["know what the difference is"], "references": ["none"], "input": {"head": "PersonX looks different", "relation": "oWant", "prompt": "PersonX looks different. After, others will want to"}}
{"generation": ["try it"], "references": ["none"], "input": {"head": "PersonX tries sushi before", "relation": "oWant", "prompt": "PersonX tries sushi before. After, others will want to"}}
{"generation": ["eat it"], "references": ["none"], "input": {"head": "PersonX begins to eat it", "relation": "oWant", "prompt": "PersonX begins to eat it. After, others will want to"}}
{"generation": ["know what he does for a living"], "references": ["none"], "input": {"head": "PersonX loves to garden", "relation": "oWant", "prompt": "PersonX loves to garden. After, others will want to"}}
{"generation": ["play PersonX's favorite game"], "references": ["none"], "input": {"head": "PersonX plays PersonX's favorite game", "relation": "oWant", "prompt": "PersonX plays PersonX's favorite game. After, others will want to"}}
{"generation": ["know what he's doing"], "references": ["to do their best", "to beat PersonX", "to win as well", "to cheer PersonX on", "to try Person X's baking.", "to mark a judging ballad."], "input": {"head": "PersonX enters a baking competition", "relation": "oWant", "prompt": "PersonX enters a baking competition. After, others will want to"}}
{"generation": ["play with him"], "references": ["to win", "none", "have fun"], "input": {"head": "PersonX wants to play", "relation": "oWant", "prompt": "PersonX wants to play. After, others will want to"}}
{"generation": ["learn how to cook"], "references": ["none"], "input": {"head": "PersonX wants to learn how to cook", "relation": "oWant", "prompt": "PersonX wants to learn how to cook. After, others will want to"}}
{"generation": ["join in"], "references": ["none"], "input": {"head": "PersonX catches some rays", "relation": "oWant", "prompt": "PersonX catches some rays. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX spills coffee", "relation": "oWant", "prompt": "PersonX spills coffee. After, others will want to"}}
{"generation": ["wipe their own forehead"], "references": ["none"], "input": {"head": "PersonX wipes PersonX's forehead", "relation": "oWant", "prompt": "PersonX wipes PersonX's forehead. After, others will want to"}}
{"generation": ["know what the ___ is"], "references": ["to understand what PersonX is saying", "none", "to ask PersonX questions"], "input": {"head": "PersonX presents the ___ in a manner", "relation": "oWant", "prompt": "PersonX presents the ___ in a manner. After, others will want to"}}
{"generation": ["know how to use PersonX"], "references": ["none"], "input": {"head": "PersonX studies for PersonX's exam", "relation": "oWant", "prompt": "PersonX studies for PersonX's exam. After, others will want to"}}
{"generation": ["know what happened to him"], "references": ["to do something else", "none", "to keep things in mind"], "input": {"head": "PersonX leaves it be", "relation": "oWant", "prompt": "PersonX leaves it be. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX goes in PersonX ear and out the other", "relation": "oWant", "prompt": "PersonX goes in PersonX ear and out the other. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX gets a shot", "relation": "oWant", "prompt": "PersonX gets a shot. After, others will want to"}}
{"generation": ["join the party"], "references": ["to work hard", "to be thankful", "to get new jobs", "to put the things away which they received", "none"], "input": {"head": "PersonX brings ___ to the people", "relation": "oWant", "prompt": "PersonX brings ___ to the people. After, others will want to"}}
{"generation": ["join the fight"], "references": ["to run away", "to hurt him", "To take revenge", "To hurt x back", "call the cops", "file a criminal lawsuit"], "input": {"head": "PersonX cuts PersonY's leg", "relation": "oWant", "prompt": "PersonX cuts PersonY's leg. After, others will want to"}}
{"generation": ["know how to do it"], "references": ["to make sure the vehicle is safe", "to talk to PersonX", "to get the keys back", "to call PersonX"], "input": {"head": "PersonX drives ___ in PersonY's new car", "relation": "oWant", "prompt": "PersonX drives ___ in PersonY's new car. After, others will want to"}}
{"generation": ["know what you think"], "references": ["none"], "input": {"head": "PersonX loves the world gave", "relation": "oWant", "prompt": "PersonX loves the world gave. After, others will want to"}}
{"generation": ["use it"], "references": ["to be heard", "none", "to interact further"], "input": {"head": "PersonX gets ___ from the library", "relation": "oWant", "prompt": "PersonX gets ___ from the library. After, others will want to"}}
{"generation": ["know what the ___"], "references": ["praise PersonX", "hold authority", "none", "to have more people following", "to have more people listening"], "input": {"head": "PersonX obeys every ___", "relation": "oWant", "prompt": "PersonX obeys every ___. After, others will want to"}}
{"generation": ["join the party"], "references": ["to chase PersonX", "Chase PersonX", "Report crime", "to call the police", "none"], "input": {"head": "PersonX snatches ___ away", "relation": "oWant", "prompt": "PersonX snatches ___ away. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to answer them", "to answer quickly", "to help them with other things", "to be helpful to person x"], "input": {"head": "PersonX waits for PersonY answer", "relation": "oWant", "prompt": "PersonX waits for PersonY answer. After, others will want to"}}
{"generation": ["know what happened"], "references": ["They kiss", "to thank hom", "to hug him", "They go home", "enjoyment", "celebrate"], "input": {"head": "PersonX makes PersonY's day", "relation": "oWant", "prompt": "PersonX makes PersonY's day. After, others will want to"}}
{"generation": ["know who PersonX is"], "references": ["none"], "input": {"head": "PersonX knows by PersonY's name", "relation": "oWant", "prompt": "PersonX knows by PersonY's name. After, others will want to"}}
{"generation": ["know about the girl"], "references": ["go home safe", "run away", "to hug PesonX", "to cry"], "input": {"head": "PersonX finds PersonX's daughter", "relation": "oWant", "prompt": "PersonX finds PersonX's daughter. After, others will want to"}}
{"generation": ["meet you"], "references": ["none"], "input": {"head": "PersonX meets friends", "relation": "oWant", "prompt": "PersonX meets friends. After, others will want to"}}
{"generation": ["run"], "references": ["none"], "input": {"head": "PersonX runs straight", "relation": "oWant", "prompt": "PersonX runs straight. After, others will want to"}}
{"generation": ["see it"], "references": ["none"], "input": {"head": "PersonX looks better", "relation": "oWant", "prompt": "PersonX looks better. After, others will want to"}}
{"generation": ["know what happened to PersonX"], "references": ["to thank PersonX", "to support PersonX", "to go away and never talk to PersonX", "to teach PersonX everything", "to push PersonX away"], "input": {"head": "PersonX takes PersonY place", "relation": "oWant", "prompt": "PersonX takes PersonY place. After, others will want to"}}
{"generation": ["help"], "references": ["to party", "to thank person x"], "input": {"head": "PersonX helps the ___ along", "relation": "oWant", "prompt": "PersonX helps the ___ along. After, others will want to"}}
{"generation": ["join the fight"], "references": ["none", "to move on to the next shot", "to help PersonX through"], "input": {"head": "PersonX gets the shot", "relation": "oWant", "prompt": "PersonX gets the shot. After, others will want to"}}
{"generation": ["join"], "references": ["go with person x somwhere", "help person x", "to sign a deal", "to have a meal", "none"], "input": {"head": "PersonX makes PersonY alliance", "relation": "oWant", "prompt": "PersonX makes PersonY alliance. After, others will want to"}}
{"generation": ["use ___ as a means"], "references": ["none"], "input": {"head": "PersonX uses ___ as a means", "relation": "oWant", "prompt": "PersonX uses ___ as a means. After, others will want to"}}
{"generation": ["know how much they are contributing to the total"], "references": ["not to become an engineer", "to become an engineer", "none"], "input": {"head": "PersonX measures ___ directly", "relation": "oWant", "prompt": "PersonX measures ___ directly. After, others will want to"}}
{"generation": ["visit him"], "references": ["to talk", "Person X to sleep over.", "to converse", "to make other plans", "to play a video game", "to invite Person X over again."], "input": {"head": "PersonX visits a friend", "relation": "oWant", "prompt": "PersonX visits a friend. After, others will want to"}}
{"generation": ["kiss you"], "references": ["Pull away", "to make out", "to be intimate", "to interact", "to smile", "Kiss back"], "input": {"head": "PersonX french kisses", "relation": "oWant", "prompt": "PersonX french kisses. After, others will want to"}}
{"generation": ["drive it"], "references": ["PersonX to relax", "yelp in glee", "PersonX to get a car", "none", "put on seatbelt"], "input": {"head": "PersonX drives PersonX's new car", "relation": "oWant", "prompt": "PersonX drives PersonX's new car. After, others will want to"}}
{"generation": ["kill PersonX"], "references": ["none"], "input": {"head": "PersonX loses PersonX's sight", "relation": "oWant", "prompt": "PersonX loses PersonX's sight. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to have the discussion they called PersonX for", "none", "to end the call"], "input": {"head": "PersonX gets a call", "relation": "oWant", "prompt": "PersonX gets a call. After, others will want to"}}
{"generation": ["join"], "references": ["to earn money", "to get work done", "none"], "input": {"head": "PersonX goes work", "relation": "oWant", "prompt": "PersonX goes work. After, others will want to"}}
{"generation": ["visit the city"], "references": ["none"], "input": {"head": "PersonX visits the city", "relation": "oWant", "prompt": "PersonX visits the city. After, others will want to"}}
{"generation": ["know what happened to him"], "references": ["none"], "input": {"head": "PersonX feels very sad", "relation": "oWant", "prompt": "PersonX feels very sad. After, others will want to"}}
{"generation": ["join the party"], "references": ["make another request", "celebrate", "say thank you", "to say thank you"], "input": {"head": "PersonX grants PersonY's request", "relation": "oWant", "prompt": "PersonX grants PersonY's request. After, others will want to"}}
{"generation": ["use ___"], "references": ["none"], "input": {"head": "PersonX uses ___ effectively", "relation": "oWant", "prompt": "PersonX uses ___ effectively. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to talk to PersonX on the phone", "to go to a counselor"], "input": {"head": "PersonX leaves PersonX's husband", "relation": "oWant", "prompt": "PersonX leaves PersonX's husband. After, others will want to"}}
{"generation": ["join the party"], "references": ["to slow down", "to catch breath", "to see how they do", "to pass baton to PersonX", "to thank personX", "none"], "input": {"head": "PersonX continues PersonY's journey", "relation": "oWant", "prompt": "PersonX continues PersonY's journey. After, others will want to"}}
{"generation": ["ride PersonX's bikes"], "references": ["to exercise", "to have fun", "to put the bike in the garage", "none", "to lock the bike up"], "input": {"head": "PersonX rides PersonY's bikes", "relation": "oWant", "prompt": "PersonX rides PersonY's bikes. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX gets ___ from work", "relation": "oWant", "prompt": "PersonX gets ___ from work. After, others will want to"}}
{"generation": ["know what happened"], "references": ["try to find the mobile device", "get mad at them", "none"], "input": {"head": "PersonX has lost PersonX's phone", "relation": "oWant", "prompt": "PersonX has lost PersonX's phone. After, others will want to"}}
{"generation": ["sit behind PersonX"], "references": ["move away", "wave", "Ask for a pencil.", "to feel more free", "Try to be quiet.", "turn around"], "input": {"head": "PersonX sits behind PersonY", "relation": "oWant", "prompt": "PersonX sits behind PersonY. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX rushes to school", "relation": "oWant", "prompt": "PersonX rushes to school. After, others will want to"}}
{"generation": ["follow"], "references": ["to wait for x", "to admonish x to speed up"], "input": {"head": "PersonX trails behind PersonY", "relation": "oWant", "prompt": "PersonX trails behind PersonY. After, others will want to"}}
{"generation": ["know if they can come to the same appointment"], "references": ["thank personX", "attent the rescheduled appointment"], "input": {"head": "PersonX reschedules PersonY's appointment", "relation": "oWant", "prompt": "PersonX reschedules PersonY's appointment. After, others will want to"}}
{"generation": ["follow"], "references": ["none"], "input": {"head": "PersonX takes a step forward", "relation": "oWant", "prompt": "PersonX takes a step forward. After, others will want to"}}
{"generation": ["attack him"], "references": ["none"], "input": {"head": "PersonX lands on PersonX's leg", "relation": "oWant", "prompt": "PersonX lands on PersonX's leg. After, others will want to"}}
{"generation": ["join in"], "references": ["none"], "input": {"head": "PersonX enjoys swimming", "relation": "oWant", "prompt": "PersonX enjoys swimming. After, others will want to"}}
{"generation": ["know what you think"], "references": ["To help X", "none", "To give X the right advice"], "input": {"head": "PersonX gets a second opinion", "relation": "oWant", "prompt": "PersonX gets a second opinion. After, others will want to"}}
{"generation": ["grab PersonX's hair"], "references": ["cry or scream in pain", "to fight back", "untangle their hair", "to scream", "for personx to let go", "be angry with the person"], "input": {"head": "PersonX grabs PersonY by the hair", "relation": "oWant", "prompt": "PersonX grabs PersonY by the hair. After, others will want to"}}
{"generation": ["be friends with PersonX"], "references": ["to perform well", "thanks PersonX", "to make PersonX proud", "to feel their best", "to reward PersonX", "to evaluate PersonX"], "input": {"head": "PersonX gives PersonY confidence", "relation": "oWant", "prompt": "PersonX gives PersonY confidence. After, others will want to"}}
{"generation": ["know how to get the same result"], "references": ["none"], "input": {"head": "PersonX knows no bounds", "relation": "oWant", "prompt": "PersonX knows no bounds. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX waits at home", "relation": "oWant", "prompt": "PersonX waits at home. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX is also nervous", "relation": "oWant", "prompt": "PersonX is also nervous. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to appreciate her", "none", "to follow her"], "input": {"head": "PersonX gets ___ as a result", "relation": "oWant", "prompt": "PersonX gets ___ as a result. After, others will want to"}}
{"generation": ["eat him"], "references": ["none", "to satisfy their hunger", "to finish their meal"], "input": {"head": "PersonX begins to eat", "relation": "oWant", "prompt": "PersonX begins to eat. After, others will want to"}}
{"generation": ["use it"], "references": ["to argue with PersonX", "to prove their point", "to play with PersonX", "none", "to have fun with PersonX"], "input": {"head": "PersonX uses PersonY's middle finger", "relation": "oWant", "prompt": "PersonX uses PersonY's middle finger. After, others will want to"}}
{"generation": ["know what happened to ___"], "references": ["put on backpack", "take backpack", "none"], "input": {"head": "PersonX puts ___ in PersonX's backpack", "relation": "oWant", "prompt": "PersonX puts ___ in PersonX's backpack. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX goes ___ for the first time", "relation": "oWant", "prompt": "PersonX goes ___ for the first time. After, others will want to"}}
{"generation": ["join the party"], "references": ["to yell", "none", "to get back at PersonX"], "input": {"head": "PersonX accidentally kicked", "relation": "oWant", "prompt": "PersonX accidentally kicked. After, others will want to"}}
{"generation": ["know how to get the same benefits"], "references": ["to help other people", "none", "to be on equal terms"], "input": {"head": "PersonX shares and share alike", "relation": "oWant", "prompt": "PersonX shares and share alike. After, others will want to"}}
{"generation": ["join the party"], "references": ["to see personX's reaction", "to keep walking", "to exchange opinions with him", "to talk to them"], "input": {"head": "PersonX stops dead in PersonY's tracks", "relation": "oWant", "prompt": "PersonX stops dead in PersonY's tracks. After, others will want to"}}
{"generation": ["know what happened"], "references": ["converse with X", "answer or ignore call", "to pick up the phone", "answer the phone", "solidify plans", "to ignore the call", "say goodbye", "listen to voice mail", "hang up"], "input": {"head": "PersonX calls ___ the next day", "relation": "oWant", "prompt": "PersonX calls ___ the next day. After, others will want to"}}
{"generation": ["join the fun"], "references": ["to get snack", "to spend time together", "to go home", "to play video games", "to play something els", "to practice tricks"], "input": {"head": "PersonX skateboards with PersonY's friends", "relation": "oWant", "prompt": "PersonX skateboards with PersonY's friends. After, others will want to"}}
{"generation": ["know how to get rid of him"], "references": ["none"], "input": {"head": "PersonX costs the earth", "relation": "oWant", "prompt": "PersonX costs the earth. After, others will want to"}}
{"generation": ["eat it too"], "references": ["none"], "input": {"head": "PersonX eats a hamburger", "relation": "oWant", "prompt": "PersonX eats a hamburger. After, others will want to"}}
{"generation": ["grind PersonX for a week"], "references": ["to brush PersonX off", "to talk to PersonX", "to get a reward", "to take a break"], "input": {"head": "PersonX grinds PersonY for a week", "relation": "oWant", "prompt": "PersonX grinds PersonY for a week. After, others will want to"}}
{"generation": ["know how to do it"], "references": ["to sign in relief", "to celebrate their accomplishment", "none"], "input": {"head": "PersonX lands ___ safely", "relation": "oWant", "prompt": "PersonX lands ___ safely. After, others will want to"}}
{"generation": ["talk to PersonX"], "references": ["ask questions", "To find out more", "see something", "To ignore X", "none"], "input": {"head": "PersonX directs PersonY's attention", "relation": "oWant", "prompt": "PersonX directs PersonY's attention. After, others will want to"}}
{"generation": ["visit PersonX"], "references": ["to say how much fun they had with PersonX", "To Have conversation with X", "To be friends too", "interact with personx", "make more plans with personx", "to spend more time with PersonX"], "input": {"head": "PersonX visits PersonY friend", "relation": "oWant", "prompt": "PersonX visits PersonY friend. After, others will want to"}}
{"generation": ["join the party"], "references": ["none"], "input": {"head": "PersonX has seen PersonX's day", "relation": "oWant", "prompt": "PersonX has seen PersonX's day. After, others will want to"}}
{"generation": ["replace the tire"], "references": ["none"], "input": {"head": "PersonX replaces the tire", "relation": "oWant", "prompt": "PersonX replaces the tire. After, others will want to"}}
{"generation": ["know what the inside looks like"], "references": ["none"], "input": {"head": "PersonX takes PersonX's outside", "relation": "oWant", "prompt": "PersonX takes PersonX's outside. After, others will want to"}}
{"generation": ["know how to help"], "references": ["none"], "input": {"head": "PersonX is losing weight", "relation": "oWant", "prompt": "PersonX is losing weight. After, others will want to"}}
{"generation": ["join him"], "references": ["none"], "input": {"head": "PersonX is walking along the beach", "relation": "oWant", "prompt": "PersonX is walking along the beach. After, others will want to"}}
{"generation": ["know what happened"], "references": ["thank PersonX", "none", "receive item"], "input": {"head": "PersonX sends ___ home", "relation": "oWant", "prompt": "PersonX sends ___ home. After, others will want to"}}
{"generation": ["paint it"], "references": ["none"], "input": {"head": "PersonX gets paint", "relation": "oWant", "prompt": "PersonX gets paint. After, others will want to"}}
{"generation": ["join"], "references": ["to thank Person X.", "to be like Person X.", "to put lessons into action.", "to learn from Person X.", "none"], "input": {"head": "PersonX enjoys PersonX's class", "relation": "oWant", "prompt": "PersonX enjoys PersonX's class. After, others will want to"}}
{"generation": ["know what they can do to help"], "references": ["none"], "input": {"head": "PersonX loves PersonX's work", "relation": "oWant", "prompt": "PersonX loves PersonX's work. After, others will want to"}}
{"generation": ["know what happened"], "references": ["call someone", "drive home"], "input": {"head": "PersonX sends PersonY's home", "relation": "oWant", "prompt": "PersonX sends PersonY's home. After, others will want to"}}
{"generation": ["join in"], "references": ["none"], "input": {"head": "PersonX nurses it back to health", "relation": "oWant", "prompt": "PersonX nurses it back to health. After, others will want to"}}
{"generation": ["work"], "references": ["none"], "input": {"head": "PersonX spends the ___ working", "relation": "oWant", "prompt": "PersonX spends the ___ working. After, others will want to"}}
{"generation": ["know who PersonX is"], "references": ["reach out", "to ask PersonX more questions", "to tell PersonX what their reward will be", "get contact info", "to keep everything a secret", "to know everything"], "input": {"head": "PersonX gives PersonY the name", "relation": "oWant", "prompt": "PersonX gives PersonY the name. After, others will want to"}}
{"generation": ["know what is ___"], "references": ["none"], "input": {"head": "PersonX sifts out ___", "relation": "oWant", "prompt": "PersonX sifts out ___. After, others will want to"}}
{"generation": ["know what you think"], "references": ["x to buy the work", "to continue making work", "accept job", "to show x some more work", "tell others about their work", "advertise", "to express gratitude"], "input": {"head": "PersonX loves PersonY's work", "relation": "oWant", "prompt": "PersonX loves PersonY's work. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to defend themselves.", "none", "to ask them why they are so nosy."], "input": {"head": "PersonX discovers in PersonY's bed", "relation": "oWant", "prompt": "PersonX discovers in PersonY's bed. After, others will want to"}}
{"generation": ["know what he thinks about the matter"], "references": ["to make their counterclaims", "to listen to PersonX", "end the conversation", "avoid confrontation", "none"], "input": {"head": "PersonX agrees to disagree", "relation": "oWant", "prompt": "PersonX agrees to disagree. After, others will want to"}}
{"generation": ["use it"], "references": ["a summary of what they did", "none", "a phone call"], "input": {"head": "PersonX finally worked", "relation": "oWant", "prompt": "PersonX finally worked. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX takes place on the day", "relation": "oWant", "prompt": "PersonX takes place on the day. After, others will want to"}}
{"generation": ["know what happened to the other two"], "references": ["to talk to PersonX", "none", "to ignore PersonX"], "input": {"head": "PersonX finally worked up", "relation": "oWant", "prompt": "PersonX finally worked up. After, others will want to"}}
{"generation": ["dye their hair blue as well"], "references": ["to pay", "to thank person X", "to admire their new look", "none", "to see the results", "to say thank you"], "input": {"head": "PersonX dyes PersonY's hair blue", "relation": "oWant", "prompt": "PersonX dyes PersonY's hair blue. After, others will want to"}}
{"generation": ["join"], "references": ["to go home themself", "none", "to say goodbye"], "input": {"head": "PersonX makes PersonX's exit", "relation": "oWant", "prompt": "PersonX makes PersonX's exit. After, others will want to"}}
{"generation": ["add their own content"], "references": ["none"], "input": {"head": "PersonX starts with a clean sheet", "relation": "oWant", "prompt": "PersonX starts with a clean sheet. After, others will want to"}}
{"generation": ["watch them"], "references": ["none"], "input": {"head": "PersonX watches old movies", "relation": "oWant", "prompt": "PersonX watches old movies. After, others will want to"}}
{"generation": ["join the fight"], "references": ["none"], "input": {"head": "PersonX breaks free", "relation": "oWant", "prompt": "PersonX breaks free. After, others will want to"}}
{"generation": ["know how to do it"], "references": ["none"], "input": {"head": "PersonX practices really hard", "relation": "oWant", "prompt": "PersonX practices really hard. After, others will want to"}}
{"generation": ["see PersonX naked"], "references": ["to have sex", "to be a turn on", "to tell PersonX to leave", "to cover themselves", "to accept PersonX", "to receive an apology"], "input": {"head": "PersonX sees PersonY naked", "relation": "oWant", "prompt": "PersonX sees PersonY naked. After, others will want to"}}
{"generation": ["follow suit"], "references": ["none", "to listen to PersonX", "to apologize to PersonX"], "input": {"head": "PersonX wipes the slate clean", "relation": "oWant", "prompt": "PersonX wipes the slate clean. After, others will want to"}}
{"generation": ["dye their hair"], "references": ["to say thanks to PersonX", "to thank PersonX", "to offer PersonX other products and services", "to cooperate with PersonX", "none"], "input": {"head": "PersonX dyes PersonX's hair pink", "relation": "oWant", "prompt": "PersonX dyes PersonX's hair pink. After, others will want to"}}
{"generation": ["know about it"], "references": ["to learn what they are about", "to do what they do", "none"], "input": {"head": "PersonX develops web presence", "relation": "oWant", "prompt": "PersonX develops web presence. After, others will want to"}}
{"generation": ["join the war"], "references": ["none"], "input": {"head": "PersonX loses PersonX's ___ in the war", "relation": "oWant", "prompt": "PersonX loses PersonX's ___ in the war. After, others will want to"}}
{"generation": ["do the same"], "references": ["He holds his bloody nose.", "He runs away.", "to yell at PersonX", "to hit Person X", "to yell", "to run away from PersonX"], "input": {"head": "PersonX twists PersonY's arm", "relation": "oWant", "prompt": "PersonX twists PersonY's arm. After, others will want to"}}
{"generation": ["spend their summer with PersonX"], "references": ["none"], "input": {"head": "PersonX spends PersonX's summer", "relation": "oWant", "prompt": "PersonX spends PersonX's summer. After, others will want to"}}
{"generation": ["use it"], "references": ["none"], "input": {"head": "PersonX writes ___ using", "relation": "oWant", "prompt": "PersonX writes ___ using. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none", "call emergency services", "come to person x aid"], "input": {"head": "PersonX screams bloody murder", "relation": "oWant", "prompt": "PersonX screams bloody murder. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to check him out", "none", "to consult"], "input": {"head": "PersonX goes to a doctor 's appointment", "relation": "oWant", "prompt": "PersonX goes to a doctor 's appointment. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to go visit PersonX", "to sleep", "pick up phone", "answer phone call"], "input": {"head": "PersonX calls PersonY this morning", "relation": "oWant", "prompt": "PersonX calls PersonY this morning. After, others will want to"}}
{"generation": ["join"], "references": ["to be admitted to the er", "to say thank you to PersonX", "to get better", "to get treated", "none"], "input": {"head": "PersonX takes ___ to the er", "relation": "oWant", "prompt": "PersonX takes ___ to the er. After, others will want to"}}
{"generation": ["be friends with him"], "references": ["show enemity", "try to know the reason", "to still be friends", "to work things out", "none"], "input": {"head": "PersonX stops being friends", "relation": "oWant", "prompt": "PersonX stops being friends. After, others will want to"}}
{"generation": ["join in"], "references": ["none"], "input": {"head": "PersonX does some yard work", "relation": "oWant", "prompt": "PersonX does some yard work. After, others will want to"}}
{"generation": ["order from the restaurant"], "references": ["to serve the customer", "to receive a tip", "deliver his pizza", "none", "take another order"], "input": {"head": "PersonX orders ___ from the restaurant", "relation": "oWant", "prompt": "PersonX orders ___ from the restaurant. After, others will want to"}}
{"generation": ["go to the library to study"], "references": ["none"], "input": {"head": "PersonX goes to the library to study", "relation": "oWant", "prompt": "PersonX goes to the library to study. After, others will want to"}}
{"generation": ["know what you think of the game"], "references": ["to ignore her", "to pay no mind", "none"], "input": {"head": "PersonX attention whores", "relation": "oWant", "prompt": "PersonX attention whores. After, others will want to"}}
{"generation": ["join the agent"], "references": ["to get work", "To succeed at a high level", "to pay their agent for it", "To get a good deal"], "input": {"head": "PersonX becomes PersonY agent", "relation": "oWant", "prompt": "PersonX becomes PersonY agent. After, others will want to"}}
{"generation": ["use it"], "references": ["to help carry it into work building", "none", "to help take it out of personX's car"], "input": {"head": "PersonX gets it to work", "relation": "oWant", "prompt": "PersonX gets it to work. After, others will want to"}}
{"generation": ["know about it"], "references": ["to accompany him", "none", "to support hiom"], "input": {"head": "PersonX lives side by side", "relation": "oWant", "prompt": "PersonX lives side by side. After, others will want to"}}
{"generation": ["know what it means to them"], "references": ["to hang out with x", "to tell x about it", "to feel loved", "none", "to enjoy the attention"], "input": {"head": "PersonX means ___ to people", "relation": "oWant", "prompt": "PersonX means ___ to people. After, others will want to"}}
{"generation": ["be like him"], "references": ["none"], "input": {"head": "PersonX reaches PersonX's potential", "relation": "oWant", "prompt": "PersonX reaches PersonX's potential. After, others will want to"}}
{"generation": ["talk to PersonX"], "references": ["Call Person X", "talk", "leave class", "Stay friend with Person X", "talk with PersonX", "avoid PersonX", "make plans"], "input": {"head": "PersonX talks to PersonY again", "relation": "oWant", "prompt": "PersonX talks to PersonY again. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX renews within days", "relation": "oWant", "prompt": "PersonX renews within days. After, others will want to"}}
{"generation": ["use the printer's ___"], "references": ["none"], "input": {"head": "PersonX learns the printer 's ___", "relation": "oWant", "prompt": "PersonX learns the printer 's ___. After, others will want to"}}
{"generation": ["know what happened"], "references": ["him to finish the project", "none", "to extract more work from him"], "input": {"head": "PersonX misses ___ at work", "relation": "oWant", "prompt": "PersonX misses ___ at work. After, others will want to"}}
{"generation": ["know what you're doing"], "references": ["none"], "input": {"head": "PersonX comes into PersonX's own", "relation": "oWant", "prompt": "PersonX comes into PersonX's own. After, others will want to"}}
{"generation": ["use the wallet"], "references": ["find wallet", "none", "put up a reward"], "input": {"head": "PersonX loses PersonY's wallet", "relation": "oWant", "prompt": "PersonX loses PersonY's wallet. After, others will want to"}}
{"generation": ["be friends with PersonX"], "references": ["fight", "get angry", "to convince x to reconsider", "to apologize to x"], "input": {"head": "PersonX stops being friends with PersonY", "relation": "oWant", "prompt": "PersonX stops being friends with PersonY. After, others will want to"}}
{"generation": ["use it"], "references": ["to do it also", "to see what they do", "none"], "input": {"head": "PersonX finds every ___", "relation": "oWant", "prompt": "PersonX finds every ___. After, others will want to"}}
{"generation": ["learn how to play the guitar"], "references": ["none"], "input": {"head": "PersonX wants to learn how to play the guitar", "relation": "oWant", "prompt": "PersonX wants to learn how to play the guitar. After, others will want to"}}
{"generation": ["be friends with PersonX"], "references": ["to be married to PersonX", "to move in with PersonX", "none"], "input": {"head": "PersonX adores PersonY", "relation": "oWant", "prompt": "PersonX adores PersonY. After, others will want to"}}
{"generation": ["do the same"], "references": ["to make PersonX feel good", "to relax", "to relieve pressure", "to bond with PersonX"], "input": {"head": "PersonX arches PersonY back", "relation": "oWant", "prompt": "PersonX arches PersonY back. After, others will want to"}}
{"generation": ["join in"], "references": ["none"], "input": {"head": "PersonX chokes the chicken", "relation": "oWant", "prompt": "PersonX chokes the chicken. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to say yes", "to ask a question also", "to answer", "to decline the request"], "input": {"head": "PersonX asks PersonX's grandmother", "relation": "oWant", "prompt": "PersonX asks PersonX's grandmother. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to yell at Person X", "not let x get to them", "to push Person X", "get back at x", "none"], "input": {"head": "PersonX sets PersonY off", "relation": "oWant", "prompt": "PersonX sets PersonY off. After, others will want to"}}
{"generation": ["know what happened"], "references": ["buy another", "ask for it back", "PersonY to leave their stuff alone", "to get their hat back", "their hat back", "to offer their opinion"], "input": {"head": "PersonX puts on PersonY's hat", "relation": "oWant", "prompt": "PersonX puts on PersonY's hat. After, others will want to"}}
{"generation": ["do the same"], "references": ["to give PersonX a hi five", "to listen to PersonX", "to hug PersonX", "to protest", "to accept what PersonX is doing", "to look at PersonX"], "input": {"head": "PersonX puts ___ on PersonY's shoulders", "relation": "oWant", "prompt": "PersonX puts ___ on PersonY's shoulders. After, others will want to"}}
{"generation": ["know about her"], "references": ["Observe the thing being shown to them", "none", "Try to understand what is being shown"], "input": {"head": "PersonX shows PersonX's mother", "relation": "oWant", "prompt": "PersonX shows PersonX's mother. After, others will want to"}}
{"generation": ["use ___"], "references": ["none", "to learn more from the sources", "to look at his work"], "input": {"head": "PersonX links together ___", "relation": "oWant", "prompt": "PersonX links together ___. After, others will want to"}}
{"generation": ["eat it"], "references": ["none"], "input": {"head": "PersonX puts bread in the toaster", "relation": "oWant", "prompt": "PersonX puts bread in the toaster. After, others will want to"}}
{"generation": ["use the same method"], "references": ["the kids want to play", "to ask questions about the lesson", "to go outside and play", "the kids want to relax"], "input": {"head": "PersonX gives the children ___", "relation": "oWant", "prompt": "PersonX gives the children ___. After, others will want to"}}
{"generation": ["know who PersonX is"], "references": ["to see a movie", "to go on a date", "avoid personX", "Give personX their name", "talk to personX"], "input": {"head": "PersonX gives PersonY PersonX's name", "relation": "oWant", "prompt": "PersonX gives PersonY PersonX's name. After, others will want to"}}
{"generation": ["know what happened"], "references": ["To celebrate the promotion", "none", "To have dinner together"], "input": {"head": "PersonX gets ___ at work", "relation": "oWant", "prompt": "PersonX gets ___ at work. After, others will want to"}}
{"generation": ["know what's going on"], "references": ["to be cared for", "to hope for the best", "to succumb to PersonX", "to stay asleep", "more from life", "to push PersonX away"], "input": {"head": "PersonX feels ___ inside PersonY", "relation": "oWant", "prompt": "PersonX feels ___ inside PersonY. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to stop having to tote personx around everyday", "none", "personx to get his own car"], "input": {"head": "PersonX rides ___ every day", "relation": "oWant", "prompt": "PersonX rides ___ every day. After, others will want to"}}
{"generation": ["know if she is a man or a woman"], "references": ["none"], "input": {"head": "PersonX looks like a woman", "relation": "oWant", "prompt": "PersonX looks like a woman. After, others will want to"}}
{"generation": ["know who the father is"], "references": ["they want to tell PersonX to look for a job", "their son to look up to them", "to send PersonX to school", "to keep an eye on their son"], "input": {"head": "PersonX belongs to PersonX's father", "relation": "oWant", "prompt": "PersonX belongs to PersonX's father. After, others will want to"}}
{"generation": ["know what the ___"], "references": ["to vote", "to have equal rights"], "input": {"head": "PersonX grants women the ___", "relation": "oWant", "prompt": "PersonX grants women the ___. After, others will want to"}}
{"generation": ["join the conversation"], "references": ["to get through the event", "to stop being told what to do", "to think for themselves more", "to listen to PersonX", "to be mad at PersonX", "to show autonomy", "to understand"], "input": {"head": "PersonX tells PersonY to say", "relation": "oWant", "prompt": "PersonX tells PersonY to say. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX pulls ___ out of the water", "relation": "oWant", "prompt": "PersonX pulls ___ out of the water. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX makes ___ that day", "relation": "oWant", "prompt": "PersonX makes ___ that day. After, others will want to"}}
{"generation": ["fix it"], "references": ["none"], "input": {"head": "PersonX must fix manually", "relation": "oWant", "prompt": "PersonX must fix manually. After, others will want to"}}
{"generation": ["know what you think"], "references": ["FEELS HAPPY", "to relax for a while", "to be happy too", "HAVE FUN", "none"], "input": {"head": "PersonX is pretty happy", "relation": "oWant", "prompt": "PersonX is pretty happy. After, others will want to"}}
{"generation": ["know how to do the same"], "references": ["none", "to grade the test", "to give out results"], "input": {"head": "PersonX finishes PersonX's test", "relation": "oWant", "prompt": "PersonX finishes PersonX's test. After, others will want to"}}
{"generation": ["pay more"], "references": ["none"], "input": {"head": "PersonX pays ___ at the rate", "relation": "oWant", "prompt": "PersonX pays ___ at the rate. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX waits all day", "relation": "oWant", "prompt": "PersonX waits all day. After, others will want to"}}
{"generation": ["hire him"], "references": ["none", "To get a job done", "to help X out"], "input": {"head": "PersonX does odd jobs", "relation": "oWant", "prompt": "PersonX does odd jobs. After, others will want to"}}
{"generation": ["know what to do"], "references": ["to tell all their friends about their present", "to try on their new coat", "to have the stuff", "to take the thing", "none"], "input": {"head": "PersonX gives bob", "relation": "oWant", "prompt": "PersonX gives bob. After, others will want to"}}
{"generation": ["learn to cook"], "references": ["none", "To eat the food", "Compliment the cook"], "input": {"head": "PersonX wants to learn to cook", "relation": "oWant", "prompt": "PersonX wants to learn to cook. After, others will want to"}}
{"generation": ["know how to get to PersonX"], "references": ["to put more efforts", "none", "to get better than him"], "input": {"head": "PersonX achieves PersonY level", "relation": "oWant", "prompt": "PersonX achieves PersonY level. After, others will want to"}}
{"generation": ["set their own cap"], "references": ["to start a new life", "none", "to marry him"], "input": {"head": "PersonX sets PersonX's cap at ___", "relation": "oWant", "prompt": "PersonX sets PersonX's cap at ___. After, others will want to"}}
{"generation": ["know what to do"], "references": ["shake hands", "say you are welcome", "to listen to comments", "to object to comments"], "input": {"head": "PersonX thanks ___ for PersonY's comments", "relation": "oWant", "prompt": "PersonX thanks ___ for PersonY's comments. After, others will want to"}}
{"generation": ["know how to make PersonX"], "references": ["to watch tv together", "to get out of bed", "to express gratitude", "to play a board game", "to go outside"], "input": {"head": "PersonX makes PersonY well", "relation": "oWant", "prompt": "PersonX makes PersonY well. After, others will want to"}}
{"generation": ["join the party"], "references": ["to look around", "to enjoy party", "to go back home", "to stay home", "to avoid PersonX"], "input": {"head": "PersonX drags PersonY along", "relation": "oWant", "prompt": "PersonX drags PersonY along. After, others will want to"}}
{"generation": ["use it"], "references": ["none"], "input": {"head": "PersonX desperately needed ___", "relation": "oWant", "prompt": "PersonX desperately needed ___. After, others will want to"}}
{"generation": ["go to the beach"], "references": ["none"], "input": {"head": "PersonX is hot and humid", "relation": "oWant", "prompt": "PersonX is hot and humid. After, others will want to"}}
{"generation": ["know what he did after college"], "references": ["to help Person X study.", "to help Person X pay.", "to help Person X move."], "input": {"head": "PersonX attends college", "relation": "oWant", "prompt": "PersonX attends college. After, others will want to"}}
{"generation": ["know what happened to PersonX"], "references": ["none"], "input": {"head": "PersonX changes PersonX's lives", "relation": "oWant", "prompt": "PersonX changes PersonX's lives. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to make plans", "to make plans for later", "to chat", "to do something fun"], "input": {"head": "PersonX calls PersonY at work", "relation": "oWant", "prompt": "PersonX calls PersonY at work. After, others will want to"}}
{"generation": ["use it"], "references": ["none"], "input": {"head": "PersonX does n't want to waste it", "relation": "oWant", "prompt": "PersonX does n't want to waste it. After, others will want to"}}
{"generation": ["follow suit"], "references": ["they see what he does", "they support him in his efforts"], "input": {"head": "PersonX takes a stand", "relation": "oWant", "prompt": "PersonX takes a stand. After, others will want to"}}
{"generation": ["know what the ___ is"], "references": ["to aid him in it", "to support him", "to help him win", "to go secret against person X", "to retaliate person X", "none"], "input": {"head": "PersonX puts PersonY's ___ in execution", "relation": "oWant", "prompt": "PersonX puts PersonY's ___ in execution. After, others will want to"}}
{"generation": ["join"], "references": ["to celebrate", "apply for the job", "to get the chance", "none", "send a complaint"], "input": {"head": "PersonX watches for PersonY opportunity", "relation": "oWant", "prompt": "PersonX watches for PersonY opportunity. After, others will want to"}}
{"generation": ["take over"], "references": ["none"], "input": {"head": "PersonX puts out to pasture", "relation": "oWant", "prompt": "PersonX puts out to pasture. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to say something funny", "for them to stop", "to laugh", "to leave"], "input": {"head": "PersonX stares back at PersonY", "relation": "oWant", "prompt": "PersonX stares back at PersonY. After, others will want to"}}
{"generation": ["join the group"], "references": ["see where he was looking", "they find one themself", "none"], "input": {"head": "PersonX finds another", "relation": "oWant", "prompt": "PersonX finds another. After, others will want to"}}
{"generation": ["know what they should order"], "references": ["none"], "input": {"head": "PersonX orders delivery food", "relation": "oWant", "prompt": "PersonX orders delivery food. After, others will want to"}}
{"generation": ["know what you think"], "references": ["none"], "input": {"head": "PersonX studies as much", "relation": "oWant", "prompt": "PersonX studies as much. After, others will want to"}}
{"generation": ["help"], "references": ["none"], "input": {"head": "PersonX gets frustrated", "relation": "oWant", "prompt": "PersonX gets frustrated. After, others will want to"}}
{"generation": ["go to the post office"], "references": ["none"], "input": {"head": "PersonX goes to the post office", "relation": "oWant", "prompt": "PersonX goes to the post office. After, others will want to"}}
{"generation": ["know how to set PersonX up"], "references": ["to thank PersonX", "get the reward", "Meet the new person", "enjoy it", "Ask for their number", "to meet PersonZ"], "input": {"head": "PersonX sets PersonY up", "relation": "oWant", "prompt": "PersonX sets PersonY up. After, others will want to"}}
{"generation": ["pump their own gas"], "references": ["to greet X with  kiss (Y).", "none", "to yell at X for being late (boss at work)."], "input": {"head": "PersonX pumps PersonX's gas", "relation": "oWant", "prompt": "PersonX pumps PersonX's gas. After, others will want to"}}
{"generation": ["talk to PersonX"], "references": ["to help him", "to respond verbally.", "walk away.", "to serve him", "none"], "input": {"head": "PersonX holds PersonY's attention", "relation": "oWant", "prompt": "PersonX holds PersonY's attention. After, others will want to"}}
{"generation": ["be with PersonX"], "references": ["to spend time with PersonX", "to share conversation with PersonX", "to stay with PersonX", "to go to an event with PersonX"], "input": {"head": "PersonX enjoys PersonY's company", "relation": "oWant", "prompt": "PersonX enjoys PersonY's company. After, others will want to"}}
{"generation": ["help him"], "references": ["to comfort him", "none", "to help him"], "input": {"head": "PersonX becomes scared", "relation": "oWant", "prompt": "PersonX becomes scared. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX puts PersonX's phone away", "relation": "oWant", "prompt": "PersonX puts PersonX's phone away. After, others will want to"}}
{"generation": ["catch the bus too"], "references": ["none"], "input": {"head": "PersonX catches PersonX's bus", "relation": "oWant", "prompt": "PersonX catches PersonX's bus. After, others will want to"}}
{"generation": ["take care of PersonX"], "references": ["to be cared for", "to thank", "totake medicine", "to have someone else take care of them", "to be independent again", "to let PersonX go"], "input": {"head": "PersonX has to take care of PersonY", "relation": "oWant", "prompt": "PersonX has to take care of PersonY. After, others will want to"}}
{"generation": ["join in"], "references": ["eventually go to sleep", "to be generous", "to sleep", "thank them for their help", "to study for the test", "to pass the class"], "input": {"head": "PersonX helps PersonY stay awake", "relation": "oWant", "prompt": "PersonX helps PersonY stay awake. After, others will want to"}}
{"generation": ["use the same one"], "references": ["none"], "input": {"head": "PersonX chooses one 's ___", "relation": "oWant", "prompt": "PersonX chooses one 's ___. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX loves the cake", "relation": "oWant", "prompt": "PersonX loves the cake. After, others will want to"}}
{"generation": ["know what he wants"], "references": ["none"], "input": {"head": "PersonX wants a car", "relation": "oWant", "prompt": "PersonX wants a car. After, others will want to"}}
{"generation": ["help"], "references": ["thank PersonX", "none", "accept the help"], "input": {"head": "PersonX draws ___ to the need", "relation": "oWant", "prompt": "PersonX draws ___ to the need. After, others will want to"}}
{"generation": ["know what the dates are for the next year"], "references": ["to go on another date", "none", "to call PersonX"], "input": {"head": "PersonX dates for years", "relation": "oWant", "prompt": "PersonX dates for years. After, others will want to"}}
{"generation": ["use PersonX"], "references": ["none", "to listen to PersonX", "to follow PersonX's orders"], "input": {"head": "PersonX retains PersonX's position", "relation": "oWant", "prompt": "PersonX retains PersonX's position. After, others will want to"}}
{"generation": ["see PersonX"], "references": ["not to cry", "to thank PersonX for being considerate", "to call PersonX later and tell them that they made it to their destination", "to enjoy these last moments"], "input": {"head": "PersonX sees PersonY away", "relation": "oWant", "prompt": "PersonX sees PersonY away. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX sits together", "relation": "oWant", "prompt": "PersonX sits together. After, others will want to"}}
{"generation": ["help"], "references": ["none"], "input": {"head": "PersonX wants ___ very badly", "relation": "oWant", "prompt": "PersonX wants ___ very badly. After, others will want to"}}
{"generation": ["know what is the reason for this"], "references": ["tells them if that was a good explanation", "to part ways", "talks to person x", "to keep explaining to PersonX", "none"], "input": {"head": "PersonX finds PersonY explanation", "relation": "oWant", "prompt": "PersonX finds PersonY explanation. After, others will want to"}}
{"generation": ["know what you're doing"], "references": ["none"], "input": {"head": "PersonX gets more exercise", "relation": "oWant", "prompt": "PersonX gets more exercise. After, others will want to"}}
{"generation": ["call ___"], "references": ["to have a conversation", "to hang up", "to speak", "to leave a message"], "input": {"head": "PersonX gets a call ___", "relation": "oWant", "prompt": "PersonX gets a call ___. After, others will want to"}}
{"generation": ["know how to do the same"], "references": ["none"], "input": {"head": "PersonX practices hard every day", "relation": "oWant", "prompt": "PersonX practices hard every day. After, others will want to"}}
{"generation": ["know what he's doing there"], "references": ["none", "to talk about it.", "to ask questions."], "input": {"head": "PersonX looks like a tourist", "relation": "oWant", "prompt": "PersonX looks like a tourist. After, others will want to"}}
{"generation": ["attack PersonX"], "references": ["tell guard to ignore person x and ask person y next time", "tell person x not to make decisions about person y's guard", "tell person x he did well", "none"], "input": {"head": "PersonX lets PersonY's guard", "relation": "oWant", "prompt": "PersonX lets PersonY's guard. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to work", "to coordinate with PersonX", "none"], "input": {"head": "PersonX enters PersonX's office", "relation": "oWant", "prompt": "PersonX enters PersonX's office. After, others will want to"}}
{"generation": ["know what happened"], "references": ["diistance themselves from person X", "to desicredt them in return", "to maintain credibility", "file a police report on person X", "none"], "input": {"head": "PersonX brings the ___ into disrepute", "relation": "oWant", "prompt": "PersonX brings the ___ into disrepute. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX gets messy", "relation": "oWant", "prompt": "PersonX gets messy. After, others will want to"}}
{"generation": ["know what the nature is"], "references": ["to understand what PersonX is saying", "none", "to listen to PersonX"], "input": {"head": "PersonX throws ___ on the nature", "relation": "oWant", "prompt": "PersonX throws ___ on the nature. After, others will want to"}}
{"generation": ["join"], "references": ["to repay the favor", "to talk with him", "to say thank you", "none", "to spend time with him"], "input": {"head": "PersonX opens doors", "relation": "oWant", "prompt": "PersonX opens doors. After, others will want to"}}
{"generation": ["help"], "references": ["none"], "input": {"head": "PersonX is covered in mud", "relation": "oWant", "prompt": "PersonX is covered in mud. After, others will want to"}}
{"generation": ["add their own"], "references": ["none"], "input": {"head": "PersonX broadens PersonX's ___ to include", "relation": "oWant", "prompt": "PersonX broadens PersonX's ___ to include. After, others will want to"}}
{"generation": ["buy it"], "references": ["none"], "input": {"head": "PersonX buys a parrot", "relation": "oWant", "prompt": "PersonX buys a parrot. After, others will want to"}}
{"generation": ["know how to handle ___"], "references": ["none"], "input": {"head": "PersonX handles ___ well", "relation": "oWant", "prompt": "PersonX handles ___ well. After, others will want to"}}
{"generation": ["join"], "references": ["none", "to find someone else to idoliza", "to idolize PersonX"], "input": {"head": "PersonX becomes great", "relation": "oWant", "prompt": "PersonX becomes great. After, others will want to"}}
{"generation": ["buy PersonX's one"], "references": ["Receive money", "to thank him", "thank them", "Transfer item", "to try it out", "to use it"], "input": {"head": "PersonX buys PersonY's one", "relation": "oWant", "prompt": "PersonX buys PersonY's one. After, others will want to"}}
{"generation": ["know who the father is"], "references": ["Explain why he was gone.", "to get to know PersonX", "Assure Person x that he is ok.", "to explain to PersonX"], "input": {"head": "PersonX finds PersonX's father", "relation": "oWant", "prompt": "PersonX finds PersonX's father. After, others will want to"}}
{"generation": ["know how to do the same"], "references": ["none"], "input": {"head": "PersonX finishes the test", "relation": "oWant", "prompt": "PersonX finishes the test. After, others will want to"}}
{"generation": ["join the party"], "references": ["none"], "input": {"head": "PersonX sneaks around", "relation": "oWant", "prompt": "PersonX sneaks around. After, others will want to"}}
{"generation": ["join the group"], "references": ["shake hands", "none", "congratulate"], "input": {"head": "PersonX takes the offer", "relation": "oWant", "prompt": "PersonX takes the offer. After, others will want to"}}
{"generation": ["watch it too"], "references": ["none"], "input": {"head": "PersonX is watching a scary movie", "relation": "oWant", "prompt": "PersonX is watching a scary movie. After, others will want to"}}
{"generation": ["join the party"], "references": ["to make more money", "to help things out", "to do their job good as well", "to find a new job", "none"], "input": {"head": "PersonX consolidates PersonX's position", "relation": "oWant", "prompt": "PersonX consolidates PersonX's position. After, others will want to"}}
{"generation": ["know what the ___"], "references": ["none"], "input": {"head": "PersonX describes every ___", "relation": "oWant", "prompt": "PersonX describes every ___. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to interact with PersonX", "to ignore PersonX", "to know why person x cares about whats going on", "to know how much person x knows", "none"], "input": {"head": "PersonX sees what was going on", "relation": "oWant", "prompt": "PersonX sees what was going on. After, others will want to"}}
{"generation": ["know what he's wearing"], "references": ["to help PersonX get ready", "to hurry PersonX along"], "input": {"head": "PersonX gets dressed for school", "relation": "oWant", "prompt": "PersonX gets dressed for school. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX gives a small smile", "relation": "oWant", "prompt": "PersonX gives a small smile. After, others will want to"}}
{"generation": ["join the party"], "references": ["none"], "input": {"head": "PersonX continues driving", "relation": "oWant", "prompt": "PersonX continues driving. After, others will want to"}}
{"generation": ["give PersonX more money"], "references": ["to go shopping.", "to use it wisely", "to take care of themself", "to put their money in the piggy bank.", "to spend money", "to go shopping"], "input": {"head": "PersonX gives PersonY an allowance", "relation": "oWant", "prompt": "PersonX gives PersonY an allowance. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX takes ___ in stride", "relation": "oWant", "prompt": "PersonX takes ___ in stride. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX is getting ready", "relation": "oWant", "prompt": "PersonX is getting ready. After, others will want to"}}
{"generation": ["join the party"], "references": ["to relax", "to express their feelings", "to scream", "be there and appriciate x company.", "thank personX", "watch a movie for a distraction"], "input": {"head": "PersonX soothes PersonY", "relation": "oWant", "prompt": "PersonX soothes PersonY. After, others will want to"}}
{"generation": ["know what it is"], "references": ["none"], "input": {"head": "PersonX notices a strange smell", "relation": "oWant", "prompt": "PersonX notices a strange smell. After, others will want to"}}
{"generation": ["know what happened to the person"], "references": ["none"], "input": {"head": "PersonX gets ___ , though", "relation": "oWant", "prompt": "PersonX gets ___ , though. After, others will want to"}}
{"generation": ["do the same"], "references": ["to justify their own", "to prove them wrong", "to punish them", "none", "to argue"], "input": {"head": "PersonX justifies PersonX's actions", "relation": "oWant", "prompt": "PersonX justifies PersonX's actions. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to get dressed", "to say thank you"], "input": {"head": "PersonX hangs PersonY's clothes", "relation": "oWant", "prompt": "PersonX hangs PersonY's clothes. After, others will want to"}}
{"generation": ["eat it too"], "references": ["none"], "input": {"head": "PersonX eats it quickly", "relation": "oWant", "prompt": "PersonX eats it quickly. After, others will want to"}}
{"generation": ["know what happened"], "references": ["none"], "input": {"head": "PersonX takes ___ out for a ride", "relation": "oWant", "prompt": "PersonX takes ___ out for a ride. After, others will want to"}}
{"generation": ["join"], "references": ["none"], "input": {"head": "PersonX is on vacation in mexico", "relation": "oWant", "prompt": "PersonX is on vacation in mexico. After, others will want to"}}
{"generation": ["save PersonX, and PersonX will want to"], "references": ["to enjoy having a fresh start.", "to thank PersonX."], "input": {"head": "PersonX saves PersonX's ___ from PersonY's sins", "relation": "oWant", "prompt": "PersonX saves PersonX's ___ from PersonY's sins. After, others will want to"}}
{"generation": ["join the party"], "references": ["none"], "input": {"head": "PersonX leaves PersonY's ___ alone", "relation": "oWant", "prompt": "PersonX leaves PersonY's ___ alone. After, others will want to"}}
{"generation": ["know what it is"], "references": ["none"], "input": {"head": "PersonX finds it anywhere", "relation": "oWant", "prompt": "PersonX finds it anywhere. After, others will want to"}}
{"generation": ["join the party"], "references": ["to get the message", "to reschedule the activity", "to make other plans", "to find somebody else to do something with", "none"], "input": {"head": "PersonX has to cancel PersonX's plans", "relation": "oWant", "prompt": "PersonX has to cancel PersonX's plans. After, others will want to"}}
{"generation": ["know who the father is"], "references": ["PersonY wants to meet their father", "father tells PersonX they don't have a child called PersonY", "to help him", "to thank him for his service", "to go with person X", "to thank person X"], "input": {"head": "PersonX finds PersonY's father", "relation": "oWant", "prompt": "PersonX finds PersonY's father. After, others will want to"}}
{"generation": ["help him"], "references": ["none"], "input": {"head": "PersonX falls ill", "relation": "oWant", "prompt": "PersonX falls ill. After, others will want to"}}
{"generation": ["change"], "references": ["be independent", "tell X thank you", "to yell at X", "exhibit autonomy"], "input": {"head": "PersonX makes PersonY change", "relation": "oWant", "prompt": "PersonX makes PersonY change. After, others will want to"}}
{"generation": ["join the movement"], "references": ["none"], "input": {"head": "PersonX takes PersonX's stand", "relation": "oWant", "prompt": "PersonX takes PersonX's stand. After, others will want to"}}
{"generation": ["know what happened"], "references": ["to reject Person X's advances", "to enjoy the day", "to avoid Person X.", "to have fun", "none"], "input": {"head": "PersonX sees PersonX's crush", "relation": "oWant", "prompt": "PersonX sees PersonX's crush. After, others will want to"}}
{"generation": ["know what happened"], "references": ["drive home", "take a ride with person X", "get in car", "to go out with person X"], "input": {"head": "PersonX walks PersonY to PersonX's car", "relation": "oWant", "prompt": "PersonX walks PersonY to PersonX's car. After, others will want to"}}
{"generation": ["call PersonX"], "references": ["to talk to PersonX", "to find new friends"], "input": {"head": "PersonX stops calling PersonY", "relation": "oWant", "prompt": "PersonX stops calling PersonY. After, others will want to"}}
{"generation": ["know what kind of fish he likes"], "references": ["none"], "input": {"head": "PersonX likes fish", "relation": "oWant", "prompt": "PersonX likes fish. After, others will want to"}}
{"generation": ["see it"], "references": ["none"], "input": {"head": "PersonX improves PersonX's appearance", "relation": "oWant", "prompt": "PersonX improves PersonX's appearance. After, others will want to"}}
{"generation": ["know what he does for a living"], "references": ["none"], "input": {"head": "PersonX makes cakes", "relation": "oWant", "prompt": "PersonX makes cakes. After, others will want to"}}
{"generation": ["read it too"], "references": ["none"], "input": {"head": "PersonX decides to read a book", "relation": "oWant", "prompt": "PersonX decides to read a book. After, others will want to"}}
{"generation": ["know what the PersonX is"], "references": ["none"], "input": {"head": "PersonX derives PersonX's name", "relation": "oWant", "prompt": "PersonX derives PersonX's name. After, others will want to"}}
{"generation": ["know what's going on"], "references": ["to be left alone", "to talk to PersonX", "talk", "to wonder why PersonX is looking at them like that", "to stare back", "to find out what is going on"], "input": {"head": "PersonX looks at PersonY like that", "relation": "oWant", "prompt": "PersonX looks at PersonY like that. After, others will want to"}}
{"generation": ["know what it is"], "references": ["none"], "input": {"head": "PersonX gives it PersonX's name", "relation": "oWant", "prompt": "PersonX gives it PersonX's name. After, others will want to"}}
{"generation": ["talk to PersonX"], "references": ["to be welcoming", "to tell PersonX the seat is taken", "to converse", "leave", "to move", "to stand up and walk away"], "input": {"head": "PersonX sits down next to PersonY", "relation": "oWant", "prompt": "PersonX sits down next to PersonY. After, others will want to"}}
{"generation": ["know who PersonX is"], "references": ["to think of PersonX", "to be acknowledged", "none", "to wonder why PersonX is avoiding them", "to understand"], "input": {"head": "PersonX denies PersonY's existence", "relation": "oWant", "prompt": "PersonX denies PersonY's existence. After, others will want to"}}
